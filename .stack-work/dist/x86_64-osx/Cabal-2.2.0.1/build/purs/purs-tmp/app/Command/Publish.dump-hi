
==================== FINAL INTERFACE ====================
2018-11-30 20:48:47.199141 UTC

interface main:Command.Publish 8043
  interface hash: e5ac76667b58e5b01754e26c51d9d2a8
  ABI hash: b0118b03e223c1d85b4bd1eff175c0ba
  export-list hash: 3d1f5a545546f1320ea5298629b02a55
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6e0e2f1331cf6f0f4d57650b25f4ff17
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Command.Publish.command
module dependencies:
package dependencies: Cabal-2.2.0.1 Glob-0.9.2 aeson-1.3.1.1
                      aeson-better-errors-0.9.1.0 ansi-terminal-0.8.0.4
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 file-embed-0.0.10.1 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      lifted-base-0.2.3.12 microlens-0.4.9.1 microlens-ghc-0.4.9
                      microlens-mtl-0.1.11.1 microlens-platform-0.3.10
                      microlens-th-0.4.2.1 monad-control-1.0.2.3 mtl-2.2.2
                      optparse-applicative-0.14.2.0 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      process-1.6.3.0 protolude-0.2.2 purescript-0.12.1 random-1.1
                      safe-0.3.17 scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3
                      stm-2.4.5.0 stringsearch-0.3.6.6 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show colour-2.3.4:Data.Colour
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: Cabal-2.2.0.1:Distribution.CabalSpecVersion
                         Cabal-2.2.0.1:Distribution.Compat.Semigroup
                         Cabal-2.2.0.1:Distribution.Parsec.Common
                         Cabal-2.2.0.1:Distribution.SPDX.License
                         Cabal-2.2.0.1:Distribution.SPDX.LicenseExceptionId
                         Cabal-2.2.0.1:Distribution.SPDX.LicenseExpression
                         Cabal-2.2.0.1:Distribution.SPDX.LicenseId
                         Cabal-2.2.0.1:Distribution.SPDX.LicenseReference
                         aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1:Control.Monad.Logger
                         purescript-0.12.1:Language.PureScript.AST.Declarations
                         purescript-0.12.1:Language.PureScript.AST.Operators
                         purescript-0.12.1:Language.PureScript.AST.SourcePos
                         purescript-0.12.1:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.1:Language.PureScript.Docs.Types
                         purescript-0.12.1:Language.PureScript.Environment
                         purescript-0.12.1:Language.PureScript.Kinds
                         purescript-0.12.1:Language.PureScript.Label
                         purescript-0.12.1:Language.PureScript.Make.Monad
                         purescript-0.12.1:Language.PureScript.Names
                         purescript-0.12.1:Language.PureScript.PSString
                         purescript-0.12.1:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  base-4.11.1.0:Control.Monad.IO.Class 96109c36cb3c919872278540487fa39e
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO ce09fff7d191d14067bddc2efd9b53a4
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy.Char8 5c0364969ac6eb9d0c5aa887f86b8c66
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  optparse-applicative-0.14.2.0:Options.Applicative d95e0b32490502bba50f41d6948c00e0
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Builder c6546faa9e09bef2ac2df9eff4a77f61
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Extra b48c7bfd920b8a9e933e034981589447
import  -/  optparse-applicative-0.14.2.0:Options.Applicative.Types 7d35983d2990cf2ee861dc28ddfea4a2
import  -/  purescript-0.12.1:Language.PureScript.Publish 7f9a8efa8b7da2b9e6a9e1f513691a7d
import  -/  purescript-0.12.1:Language.PureScript.Publish.ErrorsWarnings 4023aa29c27481d4884110bdf92187be
import  -/  time-1.8.0.2:Data.Time.Clock 38823c785626821df1f9ec84dba1c4d7
import  -/  time-1.8.0.2:Data.Time.Clock.POSIX 99d43d3f2db488fcbee82dc4781c8d1c
a065ec525233ee78f32d0ff2b5f533d4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Command.Publish.$trModule3
                   Command.Publish.$trModule1) -}
75592a4ed3638a2bf4737ed3dd4f830c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Command.Publish.$trModule2) -}
15e5a05e67dd4de1cfb7782cb658b00d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Command.Publish"#) -}
678285ea95915658e64c3012df1c98d9
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Command.Publish.$trModule4) -}
dbf65f8abd0d0f512427ba37ac65b3a5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
7656c3c163bae28687466c550bea561a
  command :: Options.Applicative.Types.Parser (GHC.Types.IO ())
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Types.IO ())
                   @ GHC.Types.Bool
                   Command.Publish.command12
                   Command.Publish.command1) -}
3a2cde1d32489e795abfd84bba0228ae
  command1 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   (Options.Applicative.Extra.helper @ GHC.Types.Bool)
                   Command.Publish.command2) -}
308c08d03a8971d6fc4f8e5795a131a2
  command10 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Command.Publish.command11) -}
a26af6f1fff7b455d264503ae56126d3
  command11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dry-run"#) -}
4af03217a651bfac2140ad0ec146788d
  command12 ::
    Options.Applicative.Types.Parser
      (GHC.Types.Bool -> GHC.Types.IO ())
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Types.Bool -> GHC.Types.IO ())
                   @ GHC.IO.FilePath
                   Command.Publish.command24
                   Command.Publish.command13) -}
49314162c1df3e75cdd7b4da96554590
  command13 :: Options.Applicative.Types.Parser GHC.IO.FilePath
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.IO.FilePath
                   Command.Publish.command14
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.IO.FilePath)) -}
dc91001b0b560a5df6df0d3171630355
  command14 :: Options.Applicative.Types.Parser GHC.IO.FilePath
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.IO.FilePath
                   Command.Publish.command15) -}
495c520541e6dd379b2e7ea21a8ce0c8
  command15 :: Options.Applicative.Types.Option GHC.IO.FilePath
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.IO.FilePath
                   Command.Publish.command19
                   Command.Publish.command16) -}
f8b70794cf5a3ddb7a3f1ed8202b4fba
  command16 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Command.Publish.command_lvl1
                   Command.Publish.command_var
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
2b01d17143f0a8d92349ba8d2c758b3c
  command17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FILE"#) -}
b53602062c5e433eab037a7af190c745
  command18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("The resolutions file"#) -}
2c8b24a9e9a54a59598c56b6168b5f7e
  command19 :: Options.Applicative.Types.OptReader GHC.IO.FilePath
  {- Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptReader
                   @ GHC.IO.FilePath
                   Command.Publish.command21
                   Command.Publish.command20
                   Options.Applicative.Types.ExpectsArgError) -}
65e626d709575536dad086dde32379de
  command2 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Command.Publish.command3
                   Options.Applicative.Builder.switch1) -}
e65d834c556e25bf8d7a526f9626a57f
  command20 :: Options.Applicative.Types.CReader GHC.IO.FilePath
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.IO.FilePath
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   ((<GHC.Base.String>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <[GHC.Base.String]>_R)) ; Sym (Options.Applicative.Types.N:Completer[0]))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.IO.FilePath)
                     `cast`
                   ((<GHC.Base.String>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      Options.Applicative.Types.ParseError
                                      GHC.IO.FilePath>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                     <Options.Applicative.Types.ParseError>_N
                                                                     <Data.Functor.Identity.Identity>_R
                                                                     <GHC.IO.FilePath>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Base.String>_R
                                                                                                       <Control.Monad.Trans.Except.Except
                                                                                                          Options.Applicative.Types.ParseError>_R
                                                                                                       <GHC.IO.FilePath>_N) ; Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.IO.FilePath>_N))) -}
2d6e47749e64a5a62ad3fc58e2f7cedf
  command21 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Command.Publish.command_n1
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
0a997c997bd8dfc9f4963c94d6d85af4
  command22 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Command.Publish.command23) -}
4eb0f72b785452782166f205fd02f060
  command23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("resolutions"#) -}
edafdb9495b6ab54ce64fac409c0176b
  command24 ::
    Options.Applicative.Types.Parser
      (GHC.IO.FilePath -> GHC.Types.Bool -> GHC.Types.IO ())
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.IO.FilePath
                   @ (GHC.IO.FilePath -> GHC.Types.Bool -> GHC.Types.IO ())
                   Command.Publish.command34
                     `cast`
                   (<GHC.IO.FilePath>_R
                    ->_R <GHC.IO.FilePath>_R
                    ->_R <GHC.Types.Bool>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Command.Publish.command25) -}
32084306dc8a0a5398799c85fde2b405
  command25 :: Options.Applicative.Types.Parser GHC.IO.FilePath
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.IO.FilePath
                   Command.Publish.command26
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.IO.FilePath)) -}
8900ef622094e47172b35f47de0e8172
  command26 :: Options.Applicative.Types.Parser GHC.IO.FilePath
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.IO.FilePath
                   Command.Publish.command27) -}
da142e8d31330fe3b3c9d04f388da501
  command27 :: Options.Applicative.Types.Option GHC.IO.FilePath
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.IO.FilePath
                   Command.Publish.command30
                   Command.Publish.command28) -}
8e18d5b46accc64df5da24a7b6b793f7
  command28 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Command.Publish.command_lvl2
                   Command.Publish.command_var
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
a18ad5020f5106c2bbb28c0b08e3b9b5
  command29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("The package manifest file"#) -}
9485cdca3384230bbe889cce6be8236b
  command3 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Command.Publish.command4
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
24986f56ae94873f030201d50d0ab26d
  command30 :: Options.Applicative.Types.OptReader GHC.IO.FilePath
  {- Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptReader
                   @ GHC.IO.FilePath
                   Command.Publish.command31
                   Command.Publish.command20
                   Options.Applicative.Types.ExpectsArgError) -}
4cc4d25eed471f5b5eaf04e2afcae7d6
  command31 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Command.Publish.command_n2
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
f5b89c51109b825ccfc588b3d5af350f
  command32 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Command.Publish.command33) -}
292ee2b6ff6d733dbae845bf850a775b
  command33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("manifest"#) -}
5b7cd51cb07710870d2f4a1dbc8fb1d2
  command34 ::
    GHC.IO.FilePath
    -> GHC.IO.FilePath
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,U><S,1*U><S,U>,
     Unfolding: (\ (manifestFile :: GHC.IO.FilePath)
                   (resolutionsFile :: GHC.IO.FilePath)
                   (isDryRun :: GHC.Types.Bool)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case isDryRun of wild {
                   GHC.Types.False
                   -> case Language.PureScript.Publish.unsafePreparePackage1
                             manifestFile
                             resolutionsFile
                             Language.PureScript.Publish.defaultPublishOptions
                             eta of ds1 { (#,#) ipv ipv1 ->
                      case Data.ByteString.Lazy.appendFile2
                             GHC.IO.Handle.FD.stdout
                             (Data.ByteString.Builder.toLazyByteString
                                (Data.Aeson.Encoding.Builder.encodeToBuilder
                                   (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoJSON
                                      @ Language.PureScript.Docs.Types.NotYetKnown
                                      Language.PureScript.Docs.Types.$fToJSONNotYetKnown
                                      ipv1)))
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Data.ByteString.Lazy.appendFile2
                        GHC.IO.Handle.FD.stdout
                        Data.ByteString.Lazy.Char8.hPutStrLn2
                        ipv2 } }
                   GHC.Types.True
                   -> case Language.PureScript.Publish.unsafePreparePackage1
                             manifestFile
                             resolutionsFile
                             Command.Publish.dryRunOptions
                             eta of ds1 { (#,#) ipv ipv1 ->
                      GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Command.Publish.command35
                        GHC.Types.True
                        ipv } }) -}
2e2cdcb6f9dc3d82257e1afe505990ce
  command35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Command.Publish.command36) -}
1182e7d32067a8a0493a1b75f38ee1c7
  command36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Dry run completed, no errors."#) -}
b87d68e445b4bb2340fb1ab887357076
  command37 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Language.PureScript.Publish.ErrorsWarnings.PackageError
            ((),
             [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    Data.Either.Right
                      @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                      @ ((), [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
                      (GHC.Tuple.(),
                       GHC.Types.:
                         @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning
                         Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree_Warn
                         (GHC.Types.[]
                            @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning)) #)) -}
a328a574a593142293f471afb6f7f38b
  command38 ::
    Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Language.PureScript.Publish.ErrorsWarnings.PackageError
            (Data.Time.Clock.Internal.UTCTime.UTCTime,
             [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) #)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Data.Text.Internal.Text)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ (Data.Either.Either
                             GHC.IO.Exception.IOException
                             Data.Time.Clock.Internal.UTCTime.UTCTime)
                        @ GHC.Exception.SomeException
                        Command.Publish.command39
                        (Language.PureScript.Publish.$fMonadIOPrepareM2
                           @ Data.Time.Clock.Internal.UTCTime.UTCTime)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left x
                   -> (# ipv,
                         Data.Either.Left
                           @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                           @ (Data.Time.Clock.Internal.UTCTime.UTCTime,
                              [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
                           (Language.PureScript.Publish.ErrorsWarnings.OtherError
                              (Language.PureScript.Publish.ErrorsWarnings.IOExceptionThrown
                                 x)) #)
                   Data.Either.Right y
                   -> (# ipv,
                         Data.Either.Right
                           @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                           @ (Data.Time.Clock.Internal.UTCTime.UTCTime,
                              [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
                           (y,
                            GHC.Types.[]
                              @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning) #) } }) -}
f917786724462afee892f57f1f0dc310
  command39 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.IO.Exception.IOException
            Data.Time.Clock.Internal.UTCTime.UTCTime #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.Time.Clock.Internal.CTimeval.getCTimeval1
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Data.Time.Clock.Internal.CTimeval.MkCTimeval ds ds2 ->
                 (# ipv,
                    Data.Either.Right
                      @ GHC.IO.Exception.IOException
                      @ Data.Time.Clock.Internal.UTCTime.UTCTime
                      (case ds
                              `cast`
                            (Foreign.C.Types.N:CLong[0]) of dt { GHC.Int.I64# dt1 ->
                       case ds2
                              `cast`
                            (Foreign.C.Types.N:CLong[0]) of wild1 { GHC.Int.I64# x# ->
                       case Data.Time.Clock.System.$wsystemToUTCTime
                              dt1
                              (GHC.Prim.narrow32Word#
                                 (GHC.Prim.timesWord#
                                    (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# x#))
                                    1000##)) of ww3 { (#,#) ww4 ww5 ->
                       Data.Time.Clock.Internal.UTCTime.UTCTime ww4 ww5 } } }) #) } }) -}
a62d0bc1f8911d4ec92e9f87c5e02312
  command4 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Command.Publish.command5) -}
abf1acfeb06de5e423939fbb08799758
  command40 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Language.PureScript.Publish.ErrorsWarnings.PackageError
            ((Data.Text.Internal.Text, Data.Version.Version),
             [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, Command.Publish.command41 #)) -}
f06655874fe2e6924a462bd7a85d3ccd
  command41 ::
    Data.Either.Either
      Language.PureScript.Publish.ErrorsWarnings.PackageError
      ((Data.Text.Internal.Text, Data.Version.Version),
       [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                   @ ((Data.Text.Internal.Text, Data.Version.Version),
                      [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
                   Command.Publish.command42) -}
aa13686d60299302d7acee877dbdeedb
  command42 ::
    ((Data.Text.Internal.Text, Data.Version.Version),
     [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
  {- Strictness: m,
     Unfolding: ((Command.Publish.command43,
                  GHC.Types.[]
                    @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning)) -}
eff2d389b5bfce03cec64a20b190250d
  command43 :: (Data.Text.Internal.Text, Data.Version.Version)
  {- Strictness: m,
     Unfolding: ((Command.Publish.command49,
                  Command.Publish.command44)) -}
a75ac702c37faf07da16b381b9cea988
  command44 :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Command.Publish.command45
                   (GHC.Types.[] @ GHC.Base.String)) -}
8d74febf6bcbd2a0db3e8f20fe442e46
  command45 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Command.Publish.command48
                   Command.Publish.command46) -}
82d0851efc3cc339787142a699b9b5a2
  command46 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Command.Publish.command48
                   Command.Publish.command47) -}
a206a6269f48fd47b33b4129c4fa3c25
  command47 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Command.Publish.command48
                   (GHC.Types.[] @ GHC.Types.Int)) -}
283efaa3cfd451a809dfda96ba52e77f
  command48 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
542e3cc3219ac15f04fd93c6b06d7b2f
  command49 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Command.Publish.command50) -}
06b78d1b427771adea78934dfc65d8df
  command5 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Command.Publish.command8
                   Command.Publish.command6) -}
9d13f3f7eb62e8b48d716ed62fc5a710
  command50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("0.0.0"#) -}
40561d5d76fd4e2e0d4e6278a0531129
  command6 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Command.Publish.command_lvl
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)
                   (GHC.Base.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
dd6bd147fce6fa115ed3467eab16cda6
  command7 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Produce no output, and don't require a tagged version to be checked out."#) -}
e605e288c21f67ecdd0de4abf011ae59
  command8 :: Options.Applicative.Types.OptReader GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Command.Publish.command9
                   GHC.Types.True) -}
5c1f8d759cb31ade0a03288fefcd2876
  command9 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Command.Publish.command_n
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
d9d02f51cabbb1be070da1b501f49773
  command_lvl ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Command.Publish.command7)) -}
382d72f26767665e37da0cc26e59326e
  command_lvl1 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Command.Publish.command18)) -}
b5ea116568bbc28221bc135c23312924
  command_lvl2 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Command.Publish.command29)) -}
f938a8145e046105123ac7975c0f9b17
  command_n :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong
                   Command.Publish.command10) -}
81cd2f2b1ef50e08d6a565cfec4a7a42
  command_n1 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong
                   Command.Publish.command22) -}
05f57451913d9212d4ad4f5c9bc36c94
  command_n2 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong
                   Command.Publish.command32) -}
5c91dba7c96a40212f97dbc75c5849e7
  command_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Command.Publish.command17) -}
3ad14455c3619c181e3756fc4dd21a01
  dryRunOptions :: Language.PureScript.Publish.PublishOptions
  {- Strictness: m,
     Unfolding: (Language.PureScript.Publish.PublishOptions
                   Command.Publish.command40
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Data.Either.Either
                                Language.PureScript.Publish.ErrorsWarnings.PackageError
                                ((Data.Text.Internal.Text, Data.Version.Version),
                                 [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])>_R) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                              <Language.PureScript.Publish.ErrorsWarnings.PackageError>_N
                                                                                                              <GHC.Types.IO>_R
                                                                                                              <((Data.Text.Internal.Text,
                                                                                                                 Data.Version.Version),
                                                                                                                [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])>_N) ; (Sym (Control.Monad.Trans.Writer.Strict.N:WriterT[0]
                                                                                                                                                                                             <[Language.PureScript.Publish.ErrorsWarnings.PackageWarning]>_N
                                                                                                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                                                Language.PureScript.Publish.ErrorsWarnings.PackageError
                                                                                                                                                                                                GHC.Types.IO>_R
                                                                                                                                                                                             <(Data.Text.Internal.Text,
                                                                                                                                                                                               Data.Version.Version)>_N) ; Sym (Language.PureScript.Publish.N:PrepareM[0]) <(Data.Text.Internal.Text,
                                                                                                                                                                                                                                                                             Data.Version.Version)>_N)))
                   Command.Publish.command38
                     `cast`
                   (<Data.Text.Internal.Text>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Language.PureScript.Publish.ErrorsWarnings.PackageError
                                     (Data.Time.Clock.Internal.UTCTime.UTCTime,
                                      [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])>_R) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                   <Language.PureScript.Publish.ErrorsWarnings.PackageError>_N
                                                                                                                   <GHC.Types.IO>_R
                                                                                                                   <(Data.Time.Clock.Internal.UTCTime.UTCTime,
                                                                                                                     [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])>_N) ; (Sym (Control.Monad.Trans.Writer.Strict.N:WriterT[0]
                                                                                                                                                                                                  <[Language.PureScript.Publish.ErrorsWarnings.PackageWarning]>_N
                                                                                                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                                                     Language.PureScript.Publish.ErrorsWarnings.PackageError
                                                                                                                                                                                                     GHC.Types.IO>_R
                                                                                                                                                                                                  <Data.Time.Clock.Internal.UTCTime.UTCTime>_N) ; Sym (Language.PureScript.Publish.N:PrepareM[0]) <Data.Time.Clock.Internal.UTCTime.UTCTime>_N)))
                   Command.Publish.command37
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Data.Either.Either
                                Language.PureScript.Publish.ErrorsWarnings.PackageError
                                ((),
                                 [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])>_R) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                              <Language.PureScript.Publish.ErrorsWarnings.PackageError>_N
                                                                                                              <GHC.Types.IO>_R
                                                                                                              <((),
                                                                                                                [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])>_N) ; (Sym (Control.Monad.Trans.Writer.Strict.N:WriterT[0]
                                                                                                                                                                                             <[Language.PureScript.Publish.ErrorsWarnings.PackageWarning]>_N
                                                                                                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                                                Language.PureScript.Publish.ErrorsWarnings.PackageError
                                                                                                                                                                                                GHC.Types.IO>_R
                                                                                                                                                                                             <()>_N) ; Sym (Language.PureScript.Publish.N:PrepareM[0]) <()>_N)))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

