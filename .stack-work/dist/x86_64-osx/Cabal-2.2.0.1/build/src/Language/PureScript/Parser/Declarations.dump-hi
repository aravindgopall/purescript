
==================== FINAL INTERFACE ====================
2019-01-24 14:15:57.494687 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Parser.Declarations 8043
  interface hash: 8e54fa63dfb394e339d52e00470d0d53
  ABI hash: 4331277871d8b757c9139b8595a399c8
  export-list hash: 54b8d0a9818800e0c1d95af2b8a40ca4
  orphan hash: b096f25a3e5f1bcd685949786735193c
  flag hash: af801e39deabea4814ba66209bc490c9
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Parser.Declarations.parseBinder
  Language.PureScript.Parser.Declarations.parseBinderNoParens
  Language.PureScript.Parser.Declarations.parseDeclaration
  Language.PureScript.Parser.Declarations.parseDeclarationRef
  Language.PureScript.Parser.Declarations.parseGuard
  Language.PureScript.Parser.Declarations.parseImportDeclaration'
  Language.PureScript.Parser.Declarations.parseLocalDeclaration
  Language.PureScript.Parser.Declarations.parseModule
  Language.PureScript.Parser.Declarations.parseModuleDeclaration
  Language.PureScript.Parser.Declarations.parseModuleFromFile
  Language.PureScript.Parser.Declarations.parseModulesFromFiles
  Language.PureScript.Parser.Declarations.parseValue
  Language.PureScript.Parser.Declarations.toPositionedError
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      parallel-3.2.1.1 parsec-3.1.13.0 pattern-arrows-0.0.2
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0
                      syb-0.7 tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Applicative 55d9b3a7491623b0362290e162d67308
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Set 7d3c64a641be4cacbcd8119445bab919
import  -/  containers-0.5.11.0:Data.Set.Internal 93fa3ef95853aa2a7aadf32d693bd451
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  parallel-3.2.1.1:Control.Parallel.Strategies c4ad57b4c83509e5393e66a9499d773c
import  -/  parsec-3.1.13.0:Text.Parsec 963cbe7b4116cef91451434dc005a011
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator 86d872425bd48a2d67c0d1ce1a8ccc8b
import  -/  parsec-3.1.13.0:Text.Parsec.Error 5c35aa426bd1cd52bcab90d9a1e3ce4c
import  -/  parsec-3.1.13.0:Text.Parsec.Expr 6898ea405cda9f4ced72197883fcde5c
import  -/  parsec-3.1.13.0:Text.Parsec.Pos 85d30a347a2120f1b5f286869826a471
import  -/  parsec-3.1.13.0:Text.Parsec.Prim 4e0ad30f54008188b8c54f509e1a8ed9
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.List 3a80368167450d7a4360ebf1ea443345
import  -/  Language.PureScript.AST e89b59f8e201961eafd3ff905a683659
  exports: be73d3bb7d4ebe5df082453f6d572075
import  -/  Language.PureScript.AST.Binders 482af52ec934a93b1ca6ec424fbe30f2
  BinaryNoParensBinder fa245b4b20e4d00bda41b59e19ae05a3
  Binder c96edaac3b5fcb24a174f6f4b3f084d4
  ConstructorBinder 82c410a4d9e21c325ba3e1527c50daff
  LiteralBinder 0a5559e7d3aabf0cf9c897b797edff85
  NamedBinder 0800b3be0f9ce7a64f901e627e87a982
  NullBinder d9d32ade0d56992460bb4b700e4464a4
  OpBinder a4e859ef3c8b2681b04a2dfae6eb0fb8
  ParensInBinder 5997f08e343521a086fe234687cfa21a
  PositionedBinder a6b770e5a8f88247c6ef23a04722a775
  TypedBinder 69e3490135b9eb76e3f2c68250002721
  VarBinder 2e20c3df0430901107dc9b8bd4a6015c
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  Abs dae9a514c0c54a50406a57cd533f800a
  Accessor 75238d8cd32188d181bffb473f6c4802
  Ado aa51ec093a5d30de9008b28e35a2b3e8
  AnonymousArgument 1ad1b3db7194ff91451b9c62133033f7
  App ae4e12e545757da5fb62189548835120
  AssocList bf5966f84a9fd3e8e225cc99068a5a6b
  BinaryNoParens fcc835654893b3cf82da9962f92ae61e
  BoundValueDeclaration c15036e292c80286a90dbb25f336202d
  Branch d787000b149f61b309db177cce643145
  Case dbf8d0b5ac1a603149b8bb1459575de0
  CaseAlternative 8464f1c9f0c33f15833817399a071704
  CaseAlternative e92f6ee78a22c0eadc3566d7d1f48d5b
  ConditionGuard de13c04599b5971ac3f21a1186c6e658
  Constructor ea2b7d92995197a177f6abf42269c377
  DataDeclaration 2fcba6ad709595ed3c4d0926de54bc2c
  Declaration e92f6ee78a22c0eadc3566d7d1f48d5b
  DeclarationRef 1ef988d2f8db98f35f578bde9282f468
  DerivedInstance 049e605b376a0b07eb640a4746618932
  Do 61408a6943b45292f7b373e76e9ffa63
  DoNotationBind 3860cb3df901dc1a4468bed348d53a88
  DoNotationElement e92f6ee78a22c0eadc3566d7d1f48d5b
  DoNotationLet cb7748a003aec3a844b46797cc9f3089
  DoNotationValue 8d573316807fe6334d3059181f3f010a
  ErrorMessage b0470a74191782e72607e7c5b87318de
  ErrorMessage 7268a73b9f5bbe5a70110aa90f7e1194
  ErrorParsingModule 86b45a047817a32fc34ea35c834adb0d
  Explicit 0e7d786f7f26f8b40dc941854a989937
  ExplicitInstance 7626e63238a07a99c1bae428b77d3f66
  Expr e92f6ee78a22c0eadc3566d7d1f48d5b
  ExternDataDeclaration 45e3d2e61e8f85403449183876d3af2f
  ExternDeclaration 180e172298441327dfef1022795a10e0
  ExternKindDeclaration 88852d174ecb6f9a3f22350e4bed5723
  FixityDeclaration 95c5fd24977a7e9400ec16a2317bcd12
  FromLet bc7f79cdfc21eeb3e926d750f1216f83
  FromWhere 57f175353ef14f2790049c689ea914b0
  Guard e92f6ee78a22c0eadc3566d7d1f48d5b
  GuardedExpr 811952f37a620b8d78cc4a6176d99a2c
  Hiding 14af127ef57cd3e7808a207407b44158
  Hole 65afb0f996a13cb636ce84111153af7c
  IfThenElse 8071f8c4795174e5283a3ecdaa8b3c8f
  Implicit 3dec7010cde86de5e211cd1c4e2e7a9d
  ImportDeclaration b98a8b3e9f19a9a91825a99d72954601
  ImportDeclarationType ee54accdb974d8b355eb58984489a7af
  KindRef fdcf7f61e078f63d583e2e92289fb303
  Leaf a3cc7dfc810d7c4443ac2eb4be143512
  Let 5843430a3e31a1977aadcfb94efa8312
  Literal bdcf4b137a448fe7c2ed57fe33a72cd3
  MkUnguarded d9deae30ea78016a4bdb453d9978bfa3
  Module 305128e30e200d34d712365aa2d509df
  Module 3342e00ee072addfd009ee61e87fb865
  ModuleRef 2ff9e8ed233e41ffb08c38dcae5865c0
  NewtypeInstance 43b0450709caa9cc5a685085197cb773
  ObjectUpdateNested fdcbd615f1a1d120ea9765eaceb58198
  Op bbe2a0a58ceeace944ccf429f680f6bc
  Parens ce804ea11612979be1464b51c74c24ab
  PathNode 0a046fc00d6584c1eeaef0123d3be18e
  PathTree 9e677c667044da338e6138c022cc791b
  PathTree 0a046fc00d6584c1eeaef0123d3be18e
  PatternGuard a27d707167917ad112543851031e65f9
  PositionedDoNotationElement dae30f378bb2ebb85464560daefe1b0b
  PositionedValue b90293950702fd6b659d7cd86d309f72
  TypeClassDeclaration 19936abcaf3693a6825ccbc13b2590dc
  TypeClassRef 0dfae6fa12be94e312c419132246a1f3
  TypeDeclaration 28394461dbd073cca9cdbd263dbb4335
  TypeDeclarationData 3e894c7cbf790244173310e6e620d669
  TypeFixity 422dbbc62f61e8d72aabe0ec3c32e2e8
  TypeInstanceBody e92f6ee78a22c0eadc3566d7d1f48d5b
  TypeInstanceDeclaration 46d66658dd5a30ba03e36fc960162f20
  TypeOpRef cd0b4bf0e37e512f28be11229ab2e497
  TypeRef 7b2aa9fe81ad40f64c659855da835def
  TypeSynonymDeclaration 1cfe9af195a40456074b96ff0ca4519c
  TypedValue 0acc3ace791a36484dcda3706df33cef
  UnaryMinus 00e8f54110f0049331236b115b108a07
  ValueDecl 97b38919d86cd9182cb8d86b6f4ae734
  ValueFixity 9e475bb09c95e859fc062456332129d5
  ValueOpRef 08efa0d335ba46b69b381a343c739614
  ValueRef 78dee2d86cdf935e8811ecdd18c169d3
  Var 5fd1e80d993ab2f76a4e002bbbfc9990
import  -/  Language.PureScript.AST.Literals da2ec269f063125450b272321f85468a
  ArrayLiteral 7cbd15adda8a5ed2a81035be22e2eae2
  BooleanLiteral 98d9c7b89f9a5dcc4796fae1c45898e6
  CharLiteral 463423afe7528a93062eb5622a63a8e9
  Literal 4b6b35be8d89b746a77fcd3d0c0a71d4
  NumericLiteral 660c8129bba11812cfd17a4819557d36
  ObjectLiteral d17d3a090fe8a89f303c679b0a417ae9
  StringLiteral 8514cef90500430ad3602ee97b69b883
import  -/  Language.PureScript.AST.Operators 615a873c5f62908f354b9d4840cbeb63
  Associativity 228a0ef1b3774b11d1a92fae92fb43a0
  Fixity 141f87a59136c90c1be577c19942dfd4
  Fixity 228a0ef1b3774b11d1a92fae92fb43a0
  Infix acee26fe4e59790dddcfdcb22d39c630
  Infixl 7a053ccfe48a809d0f2fd5ed84616765
  Infixr bbdac94db5d55a0387eb84cc7a57bedf
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceAnn f5708ed135df009dfa0254486771ef74
  SourceSpan 153dcf157f0acf76a2cdcf153aac30d3
import  -/  Language.PureScript.Environment 467b25d81b890e1aaabe28d0f09d192d
  exports: a0cb6cb8c78c56365f58c9f88d1fe000
  Data 91308ce2b2a3063225e4488a3df159f8
  FunctionalDependency fdda36e4e3ca0bf8ea7e193459ee342a
  Newtype 429106735f422306de0d5ec4acbf7fb1
  Public 599cf7bfef97fea0107da5ef3bf1cbf8
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  exports: 8e61484c4664eceb943d9fc4820c721b
  MultipleErrors e10d32697d8bc85ed39c4a4d256bc383
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  parU ba83f09a68cd72d36addca6319b4b6e0
  positionedError 294ba93655a5845067da4cbeb75d1347
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  exports: fe71635ad7964c0d620fb0685614a050
  SourceKind 4cdf50d4b2444221832ca704f3a0c468
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  Ident 71f167265716f619863a793fa311e198
  Ident bad3562aa6138b6192713ac281080869
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  getQual fd365f85b7d21d7f6d9822dd71085ff1
import  -/  Language.PureScript.PSString 482bcd39d274b3e3efbde5749bd9d797
  exports: dedd5d31dc509736134f041863efd1d4
  PSString 96ffea2472d48cda76cc39d47ab7bb82
  mkString a727d038908a3b0e30ed0d1d71565e4b
import  -/  Language.PureScript.Parser.Common d20a7af8a890a4e56d3068b2fdbe8def
  exports: d3c94bc3b21495d0d5e265869136cfdc
  buildPostfixParser 0028a0425b67ec725fd838daa9893fd2
  dataConstructorName 8e54fd0d7db06a38f6099219b412c1ab
  indented 220f6fa1c62819e97598e6353a4b65e1
  kindName bbed90a701b4e22259fa4ef795a896a3
  mark 83d35623fe4be371bfcc0211f3ba9f7c
  moduleName a83926d1edbe8e436623c0a918e65628
  parseIdent 6a6e6dc3aa2d481c9710a1965b07c4fa
  parseLabel 43be08075001e75d4ae738ed6bf8164a
  parseOperator f5962e1a380a460d4b830d99b141a9dd
  parseQualified b47db6f48fd0bee3e9e160f31046eb17
  properName 63562594bd59f85cfa83885dc7f1b0dd
  readComments e2dc65750bc1cc3664308377b00ccabd
  runTokenParser 9dae932fdac5969d57d0bce79e0d461b
  same 568fb570455053ebd4f0317b8229f51c
  toSourcePos 44fc0f937b14652cbd83de755ae4c717
  typeName 380540cd608e01be72e14a2ed47ee295
  withSourceAnnF 40307b0e4ea19d81c349792c48a8f907
  withSourceSpan 400076cd3e88a80ac3e6c4190539d64b
  withSourceSpan' b6db8cc4ce577974b82c682cee81e08e
  withSourceSpanF 8db3c867b926face9075b4326b48effc
import  -/  Language.PureScript.Parser.Kinds b635ea75e7ff86a085a7ead0c499a648
  exports: 60a7198377e8b96092dd1c3f0ccdca52
  parseKind 285d5ef86de850b9cc8389a55b3214f8
import  -/  Language.PureScript.Parser.Lexer ea857194274ee8b3812ad62bbb2c9ed1
  exports: ca7efc854dfe3379de291b0f8c8d7ea0
  TokenParser 6e8d7b68c7546ba407a16e8526c7556f
  at 4583bf023837ea7f761b9fd5a1e6fb6a
  braces 2aef1f8effaa82424b998862c34e06ab
  charLiteral 5a592564852c039d596e33d11ef78a9e
  colon 0f0cb61fe317b60daa06f8f230f69470
  comma 52ff63f9da68caea93f8dbe50c070988
  commaSep eb2688c2d4650f36f9e2956a5175779a
  commaSep1 370ade44ebf28ca0ea4e39090759c92d
  dot e34ec3ff7d1c1f0364c0678896f18f4d
  doubleColon 05b6cfb8f46b56e88737d68e35a22068
  equals 35eb066ad0b667ec5a0ef3672c1f5c35
  holeLit d128f2ea8cc360ec08b3ecb90951500a
  identifier 694a9255e1b6cb3d8c5e23ccd5c0704b
  larrow bda6cd537e95497467b620a84d8684a4
  lex 2288b6151bebf7b01b4d73039b433c5f
  lfatArrow 6add5a6ecd453b66182c8f1fcb016cd2
  lname e6d2248b6cef9835fc21ed990a9a9f5a
  lname' 7a4cb2585f8ce0816fb7104b2c5cbbda
  natural 12b58cf860886eed904b838d83bc4667
  number fcb4800a1d23aa2f7711b8499f312aca
  parens 537455fc7f82a6049320a8434f7b3d11
  pipe 54b83fcd00e53bf35b33618e963bdab7
  rarrow b1890175eb712a279e1082f12de6600e
  reserved ec1bcb71bd3278035364d5b23f87537a
  rfatArrow ed0b513d8da554887e6e09347f94d534
  squares acecedad9206ee0b0b93a3769b02859a
  stringLiteral 07d9c3a7dcb697ede90a3401e8d445d0
  symbol' df4ff0c7873c69ba6cef310524845e94
  tick c831d224c40a1a9f24679a2d19fa416a
  underscore 92d06e5c179717e78ed1fbf4834f5cc5
import  -/  Language.PureScript.Parser.Types cbcf6c1c4dcb74cf974e558488459059
  exports: ec48e706caa8fb986c4981bbde27ac14
  noForAll 0135d2b07448cbca4f5c5078665886c1
  noWildcards 0125083fcb8746e529bba809628880d8
  parsePolyType 10b8dbaa1e3772f2899b31ce5b79c951
  parseTypeAtom 354bd435b91c701558451c65d0b9878a
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  exports: 229bb7528146da886cffbefad5822e19
  Constraint a0b1e737f9fdb5b2f711c97dd5895f69
  SourceConstraint b73f205dd83ce498c3119d8c9316f0c6
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
244d4e68f7f3e9b49ddbf51951c0196d
  $s$fEqQualified ::
    GHC.Classes.Eq
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName))
                  (Language.PureScript.Names.$fEqQualified_$c==
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fEqProperName
                        @ 'Language.PureScript.Names.ClassName))
                  Language.PureScript.Parser.Declarations.$s$fEqQualified_$s$fEqQualified_$c/= -}
c51eec54e91b76002bc6dff13244e110
  $s$fEqQualified_$s$fEqQualified_$c/= ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U,U,U))><S(SL),1*U(1*U,1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Names.Qualified
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName))
                   (y2 :: Language.PureScript.Names.Qualified
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)) ->
                 case Language.PureScript.Names.$fEqQualified_$c==
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ClassName)
                        (Language.PureScript.Names.$fEqProperName
                           @ 'Language.PureScript.Names.ClassName)
                        x1
                        y2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
92e3430c4b6c7f31207c5695b55dfb2b
  $s$fOrdQualified ::
    GHC.Classes.Ord
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName))
                  Language.PureScript.Parser.Declarations.$s$fEqQualified
                  (Language.PureScript.Names.$fOrdQualified_$ccompare
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fOrdProperName
                        @ 'Language.PureScript.Names.ClassName))
                  (Language.PureScript.Names.$fOrdQualified_$c<
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fOrdProperName
                        @ 'Language.PureScript.Names.ClassName))
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (b :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          b
                          a1 of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (b :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   Language.PureScript.Names.$fOrdQualified_$c<
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fOrdProperName
                        @ 'Language.PureScript.Names.ClassName)
                     b
                     a1)
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (b :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          a1
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (y2 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          y2
                          x1 of wild {
                     GHC.Types.False -> y2 GHC.Types.True -> x1 })
                  (\ (x1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (y2 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          y2
                          x1 of wild {
                     GHC.Types.False -> x1 GHC.Types.True -> y2 }) -}
b36827d4d943b429e15ff2ff38d1e9d6
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (Language.PureScript.Parser.Declarations.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons
                     @ tok) -}
9bd5b47d04c1dcdf9c7e55ec4cec6ad5
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Base.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Base.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R)) }) -}
f5db5f903b79fb5784517396d470c174
  $sinsert_$sgo3 ::
    Language.PureScript.PSString.PSString
    -> Language.PureScript.PSString.PSString
    -> Data.Set.Internal.Set Language.PureScript.PSString.PSString
    -> Data.Set.Internal.Set Language.PureScript.PSString.PSString
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
eed865e4dc51997f6ddbda401f278e43
  $smember_go3 ::
    Language.PureScript.PSString.PSString
    -> Data.Set.Internal.Set Language.PureScript.PSString.PSString
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
9f02fff5c609d720d5b7f8653725dfbd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Parser.Declarations.$trModule3
                   Language.PureScript.Parser.Declarations.$trModule1) -}
9c27cdae25555078616e6cfe90355196
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Parser.Declarations.$trModule2) -}
5d597d7a1b67a45c3b75b235791882c1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Parser.Declarations"#) -}
d6bdf5acdb7e59f3bfe899cd2c4fdce8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Parser.Declarations.$trModule4) -}
d8437376285ae5504b66f864edba6403
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
a4d1739ab2032a1253b20cbd7b66f2e0
  $wk ::
    (Language.PureScript.AST.Declarations.TypeInstanceBody
     -> Language.PureScript.AST.Declarations.Declaration)
    -> forall b1.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> (Language.PureScript.AST.Declarations.Declaration
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Language.PureScript.AST.Declarations.Declaration
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,C(U)><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0] -}
f02b009fc611f90350fdcf7f8106bd2b
  $wm1 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: Language.PureScript.AST.Declarations.Declaration
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.TypeInstanceBody
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ (Language.PureScript.AST.Declarations.TypeInstanceBody
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ (Language.PureScript.AST.Declarations.TypeInstanceBody
                         -> Language.PureScript.AST.Declarations.Declaration))
                   Language.PureScript.Parser.Declarations.parseDeclaration25
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.TypeInstanceBody
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.TypeInstanceBody
                             -> Language.PureScript.AST.Declarations.Declaration)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.$wk
                      x1
                      @ b1
                      s2
                      w
                      w14
                      (\ (x2 :: Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w x2 s3 (Text.Parsec.Error.mergeError err err')))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.TypeInstanceBody
                             -> Language.PureScript.AST.Declarations.Declaration)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.$wk
                      x1
                      @ b1
                      s2
                      w
                      w14
                      (\ (x2 :: Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w15 x2 s3 (Text.Parsec.Error.mergeError err err')))
                   w16) -}
8c6f70000d92a6b4c57f8e0658961011
  $wp ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration33
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
1cb17d5aecb41d29c2580e950919c918
  $wp1 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration39
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
5a10a5565f1fb2ae8ec8edcb96fc0284
  $wp2 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration44
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
de5707fdecf9ddf442de0de3bf52a67a
  $wp3 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration56
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
819895aec252d277948a3b4be3f68ea2
  $wp4 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration58
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
76738e12c85f26b8dfbc2f3eaed66e66
  $wp5 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration60
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
6222b83f3310d2c67e8fa0135282a76c
  $wp6 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration63
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
8b9632b3dacb50b187d49eae80532958
  $wparseDataDeclaration ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
d54d0df7ed8b208227c9d92b33d552fd
  $wparseDeclarationRef ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
7ec5da6d4b71b896aaf17fa18cdc8c23
  $wparseImportDeclaration' ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourcePos
    -> Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
9038095702bdcbac4fe671a8638b7d8d
  $wparseModule ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Module
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
c9818ee405ae623641c104a6e720b54e
  $wparseModuleDeclaration ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourcePos
    -> Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <S,U><L,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0] -}
77f8c553b0d100a633e70bf96fc0063d
  $wparseModuleFromFile ::
    (k -> GHC.IO.FilePath)
    -> k
    -> Data.Text.Internal.Text
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         (k, Language.PureScript.AST.Declarations.Module)
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ @ k4
                   (w :: k4 -> GHC.IO.FilePath)
                   (ww :: k4)
                   (ww1 :: Data.Text.Internal.Text) ->
                 let {
                   filename :: GHC.IO.FilePath = w ww
                 } in
                 case (Text.Parsec.Prim.runPT
                         @ Data.Text.Internal.Text
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ [Language.PureScript.Parser.Lexer.PositionedToken]
                         Language.PureScript.Parser.Lexer.$s$fStreamTextmChar0
                         (Language.PureScript.Parser.Lexer.lex1 @ ())
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <Data.Text.Internal.Text>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[Language.PureScript.Parser.Lexer.PositionedToken]>_R))
                         GHC.Tuple.()
                         filename
                         ww1)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError
                              [Language.PureScript.Parser.Lexer.PositionedToken]>_R) of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Text.Parsec.Error.ParseError
                        @ (k4, Language.PureScript.AST.Declarations.Module)
                        x1
                   Data.Either.Right y2
                   -> case (Text.Parsec.Prim.runPT
                              @ [Language.PureScript.Parser.Lexer.PositionedToken]
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Parser.Lexer.PositionedToken
                              @ Language.PureScript.Parser.State.ParseState
                              @ Language.PureScript.AST.Declarations.Module
                              (Language.PureScript.Parser.Common.$s$fStream[]mtok
                                 @ Language.PureScript.Parser.Lexer.PositionedToken)
                              Language.PureScript.Parser.Declarations.parseModule1
                                `cast`
                              (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                        <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                                        <Language.PureScript.Parser.State.ParseState>_R
                                        <Data.Functor.Identity.Identity>_R
                                        <Language.PureScript.AST.Declarations.Module>_R))
                              Language.PureScript.Parser.Common.runTokenParser2
                              filename
                              (Language.PureScript.Parser.Lexer.updatePositions y2))
                             `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   Text.Parsec.Error.ParseError
                                   Language.PureScript.AST.Declarations.Module>_R) of wild1 {
                        Data.Either.Left l
                        -> Data.Either.Left
                             @ Text.Parsec.Error.ParseError
                             @ (k4, Language.PureScript.AST.Declarations.Module)
                             l
                        Data.Either.Right r
                        -> Data.Either.Right
                             @ Text.Parsec.Error.ParseError
                             @ (k4, Language.PureScript.AST.Declarations.Module)
                             (ww, r) } }) -}
10e5cc27077c2410dbac6a709df0bb49
  $wparseTypeClassDeclaration ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U(U))><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
7053e3781c5d06197492a79a9e38ed0c
  $wparseTypeSynonymDeclaration ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,U>,
     Inline: [0] -}
22ed9395d829b2ab848106e09954787e
  $wparseValueDeclaration ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourcePos
    -> Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,1*C1(U)>,
     Inline: [0] -}
05cb42ee95a00eb1f8726941623c5051
  $wtoPositionedError ::
    Text.Parsec.Error.ParseError
    -> (# [Language.PureScript.AST.Declarations.ErrorMessageHint],
          Language.PureScript.AST.Declarations.SimpleErrorMessage #)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U(U,U,U),U)>,
     Inline: [0],
     Unfolding: (\ (w :: Text.Parsec.Error.ParseError) ->
                 let {
                   pos :: Text.Parsec.Pos.SourcePos
                   = case w of wild { Text.Parsec.Error.ParseError pos1 _msgs ->
                     pos1 }
                 } in
                 let {
                   start :: Text.Parsec.Pos.Line
                   = case pos of wild { Text.Parsec.Pos.SourcePos _name dt8 dt9 ->
                     GHC.Types.I# dt8 }
                 } in
                 let {
                   start1 :: Text.Parsec.Pos.Column
                   = case pos of wild { Text.Parsec.Pos.SourcePos _name dt8 dt9 ->
                     GHC.Types.I# dt9 }
                 } in
                 let {
                   start2 :: Language.PureScript.AST.SourcePos.SourcePos
                   = Language.PureScript.AST.SourcePos.SourcePos start start1
                 } in
                 (# GHC.Types.:
                      @ Language.PureScript.AST.Declarations.ErrorMessageHint
                      (Language.PureScript.AST.Declarations.PositionedError
                         (GHC.Base.:|
                            @ Language.PureScript.AST.SourcePos.SourceSpan
                            (Language.PureScript.AST.SourcePos.SourceSpan
                               (case w of wild { Text.Parsec.Error.ParseError pos1 _msgs ->
                                case pos1 of wild1 { Text.Parsec.Pos.SourcePos name dt8 dt9 ->
                                name } })
                               start2
                               start2)
                            (GHC.Types.[] @ Language.PureScript.AST.SourcePos.SourceSpan)))
                      (GHC.Types.[]
                         @ Language.PureScript.AST.Declarations.ErrorMessageHint),
                    Language.PureScript.AST.Declarations.ErrorParsingModule w #)) -}
5d0197898d7c248d7cbbd5b0d92fbc61
  parseBinder ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Binders.Binder
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseBinder1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Binders.Binder>_R)) -}
aef3bc70b0c814d4aeb3ad9df94f940e
  parseBinder1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5 -}
97788f2ddc2937fd41f4b546d1050eb1
  parseBinderNoParens ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Binders.Binder
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseBinderNoParens1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Binders.Binder>_R)) -}
60e5224a961fc0df848c3a8ae44a0deb
  parseBinderNoParens1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5 -}
13508eb374f76c19b420f5bc305cfedf
  parseDeclaration ::
    Language.PureScript.Parser.Lexer.TokenParser
      [Language.PureScript.AST.Declarations.Declaration]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseDeclaration1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <[Language.PureScript.AST.Declarations.Declaration]>_R)) -}
b78ae0a507ca23161d8ecac7f3f1c94e
  parseDeclaration1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta18 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                   (eta19 :: [Language.PureScript.AST.Declarations.Declaration]
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta20 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta21 :: [Language.PureScript.AST.Declarations.Declaration]
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta22 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ [Language.PureScript.AST.Declarations.Declaration]
                   Language.PureScript.Parser.Declarations.parseDeclaration4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration2
                   @ b
                   eta18
                   eta19
                   eta20
                   eta21
                   eta22) -}
6a4ba5828f535edcd006473c026658cd
  parseDeclaration10 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration38
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration11) -}
7b30f65ea8647653e9a33404eb460a95
  parseDeclaration11 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration32
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration12) -}
62abef5b64f0cc7f1fe2061e7fd9aa60
  parseDeclaration12 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration19
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration13) -}
da627675d5a5d9ae33b8202c09c3e766
  parseDeclaration13 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration14
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   (GHC.Types.[]
                      @ (Text.Parsec.Prim.ParsecT
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState
                           Data.Functor.Identity.Identity
                           [Language.PureScript.AST.Declarations.Declaration]))) -}
e9b8adfc64a0aa41ffd6c66ee9249711
  parseDeclaration14 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Language.PureScript.AST.Declarations.Declaration
                   Language.PureScript.Parser.Declarations.parseDeclaration16
                   Language.PureScript.Parser.Declarations.parseDeclaration15
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    cok
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   cerr
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    eok
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   eerr) -}
5031fb350d46c1f85a6ad9a2d4c41860
  parseDeclaration15 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
6100689c2d7e2509860a86f5991ab2d8
  parseDeclaration16 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration17) -}
af3ce2d22e0ec8d22d21ac79c9fada4d
  parseDeclaration17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration18) -}
c47fe3e24c7c8ab66e0a4d74e19d654f
  parseDeclaration18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("derive"#) -}
d6ab59d3da7d99e4b2f519658571439a
  parseDeclaration19 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Parser.Lexer.PositionedToken
                   @ Language.PureScript.Parser.State.ParseState
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration24
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration21
                   @ b1
                   s1
                   (\ (x1 :: [Language.PureScript.AST.Declarations.Declaration])
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration20
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: [Language.PureScript.AST.Declarations.Declaration])
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: [Language.PureScript.AST.Declarations.Declaration])
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration20
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: [Language.PureScript.AST.Declarations.Declaration])
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
28ef8b16559b7da92b79968621f7c6e2
  parseDeclaration2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.PureScript.Parser.Declarations.parseDeclaration_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
4dc076cf47a04706cd5d89e9ec18adc2
  parseDeclaration20 ::
    [Language.PureScript.AST.Declarations.Declaration]
    -> forall b1.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ([Language.PureScript.AST.Declarations.Declaration]
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ([Language.PureScript.AST.Declarations.Declaration]
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
ca64cff08bd31af6adc57cf9b2d9b513
  parseDeclaration21 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration22) -}
01b81c260ceca83f9108be68a4e1485f
  parseDeclaration22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration23) -}
a973625b9688bdd3e68d40f19127b64a
  parseDeclaration23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
3f5cb8a69eace516de8dd5d9f999f097
  parseDeclaration24 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wm1
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
e5c6e907bdb758c5b25d5fdf815e1507
  parseDeclaration25 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.AST.SourcePos.SourceAnn
                      -> Language.PureScript.AST.Declarations.TypeInstanceBody
                      -> Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration29
                   Language.PureScript.Parser.Declarations.parseDeclaration26
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.TypeInstanceBody
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
0d43293917a55a6054ab8089ed2ff8d5
  parseDeclaration26 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.TypeInstanceBody
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.TypeInstanceBody
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.Ident
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration28
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.Ident>_R))
                   Language.PureScript.Parser.Lexer.doubleColon
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration27
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.TypeInstanceBody
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration27
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.TypeInstanceBody
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
201cf7edd0d010584e83aa386dc3c7c5
  parseDeclaration27 ::
    Language.PureScript.Names.Ident
    -> forall b.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.TypeInstanceBody
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.TypeInstanceBody
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
40076c3a7a339acf6e61eb7966681e7d
  parseDeclaration28 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.Names.Ident
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.Names.Ident
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.Ident
                   @ ()
                   Language.PureScript.Parser.Common.parseIdent1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.Ident>_R))
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
f2674255403b12458c39271544a1934e
  parseDeclaration29 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration30) -}
f5ba71b3bf60a6ad1cd00b09f205d257
  parseDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("declaration"#) -}
963c96a79a69f34ab3042b897973dcd3
  parseDeclaration30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration31) -}
221f28aed30bbe01a8c8a48bed410954
  parseDeclaration31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("instance"#) -}
503b299df376012a5d1efacc109dc5cd
  parseDeclaration32 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
4bf53e3a1f6db6f5ae02705e3a472c55
  parseDeclaration33 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.AST.SourcePos.SourceAnn
                      -> Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration35
                   Language.PureScript.Parser.Declarations.parseDeclaration34
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
3281a91f539de98d65fc6838e4b16afd
  parseDeclaration34 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U(U))><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.$wparseTypeClassDeclaration
                   @ b1
                   w
                   w14
                   w15
                   w17) -}
262c217162610ef4a6fd9d58ab4680f7
  parseDeclaration35 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration36) -}
3e5fa1936d6d88be14f5cf7795ae5472
  parseDeclaration36 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration37) -}
f8fa42cc7c1b6d0eb137817f384b8120
  parseDeclaration37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("class"#) -}
416637a69803380cf035922e609ea5b4
  parseDeclaration38 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp1
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
385c30521e401d6a653cfd076f1a31f9
  parseDeclaration39 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fAlternativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Operators.Precedence
                   @ Language.PureScript.AST.Operators.Fixity
                   Language.PureScript.Parser.Declarations.parseDeclaration42
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Operators.Precedence
                              -> Language.PureScript.AST.Operators.Fixity>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration41
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.AST.Operators.Fixity)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration40
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Language.PureScript.AST.Operators.Fixity)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration40
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
f96b9dc50927fba2e9d0925e0b97151e
  parseDeclaration4 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U(U,U,U)><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.choice2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ [Language.PureScript.AST.Declarations.Declaration]
                   Language.PureScript.Parser.Declarations.parseDeclaration5
                   @ b
                   w14
                   w15
                   w16
                   w17
                   w18) -}
f86ce0f636b37629a48dddc90623cd22
  parseDeclaration40 ::
    Language.PureScript.AST.Operators.Fixity
    -> forall b1.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
fb01ebc5521f5340a974a6d1c9deec5d
  parseDeclaration41 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ GHC.Integer.Type.Integer
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Lexer.natural1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Integer.Type.Integer>_R))) -}
b274ba7398b6a01c14bf2e105b8ad594
  parseDeclaration42 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.Operators.Precedence
         -> Language.PureScript.AST.Operators.Fixity)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.Operators.Precedence
         -> Language.PureScript.AST.Operators.Fixity)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7caa0c8b30567018913a02b56f16c68e
  parseDeclaration43 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp2
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
4c229e16328ea7dbdd759fe66f9e7f4f
  parseDeclaration44 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.AST.SourcePos.SourceAnn
                      -> Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration46
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration45
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
9b7243578b6013125a1661ab62e399be
  parseDeclaration45 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7aac50ead86b1e70daa797b309e61dab
  parseDeclaration46 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration47
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
78bb1c9a8c58e7300bffc43a746833d8
  parseDeclaration47 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration51
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration48) -}
b1b76f081c788a33a2c8c7c0b78b0371
  parseDeclaration48 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration49) -}
f640c9a4e5070b78248dc13bba03784b
  parseDeclaration49 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration50) -}
330b92be1ea2b7e92aed53a233e789c6
  parseDeclaration5 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration62
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration6) -}
888cb29172920c588e3a062914b0b4cf
  parseDeclaration50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("import"#) -}
8d2329ec6decb2eeb1742b6e343732f3
  parseDeclaration51 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration52
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
24628b714851d7d40c770b05e3f45260
  parseDeclaration52 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration53) -}
df050ef69e345d0ccac00c3653c47a69
  parseDeclaration53 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration54) -}
8e709fcfd45e011c8a8dbc68f020fa22
  parseDeclaration54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("foreign"#) -}
15a416ae0fc6025940fffc9034da9800
  parseDeclaration55 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp3
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
90b677d6e20a38590959ed8bacc1edff
  parseDeclaration56 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSS),1*U(1*U,U,U)><L,C(C1(C1(U)))><L,U><L,A><L,1*C1(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Parser.Declarations.$wparseValueDeclaration
                   @ b1
                   ww1
                   ww2
                   ww3
                   w14
                   w15
                   w17 }) -}
974c446b58db93596d4ff340dbfd2af9
  parseDeclaration57 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp4
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
1eae0ba01134da0d785d9f2b32c38357
  parseDeclaration58 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,A><L,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.$wparseTypeSynonymDeclaration
                   @ b1
                   w
                   w14
                   w15
                   w17) -}
f743373f45216874a4b5ae9a64747748
  parseDeclaration59 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp5
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
fbd9860393d8a2004f1706b535f7ac56
  parseDeclaration6 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration59
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration7) -}
76d4ee041f7ecd96a2dd6fba0eda6849
  parseDeclaration60 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.Ident
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration28
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.Ident>_R))
                   Language.PureScript.Parser.Lexer.doubleColon
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration61
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   eerr
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration61
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
742a915eb266879ac6b3b4d2cd3b8480
  parseDeclaration61 ::
    Language.PureScript.Names.Ident
    -> forall b.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ (name :: Language.PureScript.Names.Ident)
                   @ b
                   (eta18 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                   (eta19 :: (Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration)
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta20 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta21 :: (Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration)
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta22 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ (Language.PureScript.Types.Type
                        Language.PureScript.AST.SourcePos.SourceAnn)
                   Language.PureScript.Parser.Types.parsePolyType_p
                   Language.PureScript.Parser.Types.parsePolyType2
                   @ b
                   eta18
                   (\ (x1 :: Language.PureScript.Types.SourceType)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                      (err :: Text.Parsec.Error.ParseError) ->
                    eta19
                      (\ (sa :: Language.PureScript.AST.SourcePos.SourceAnn) ->
                       case sa of dt8 { (,) ipv ipv1 ->
                       case name of dt9 { DEFAULT ->
                       case x1 of dt10 { DEFAULT ->
                       Language.PureScript.AST.Declarations.TypeDeclaration
                         dt8
                         dt9
                         dt10 } } })
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta20
                   (\ (x1 :: Language.PureScript.Types.SourceType)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta21
                      (\ (sa :: Language.PureScript.AST.SourcePos.SourceAnn) ->
                       case sa of dt8 { (,) ipv ipv1 ->
                       case name of dt9 { DEFAULT ->
                       case x1 of dt10 { DEFAULT ->
                       Language.PureScript.AST.Declarations.TypeDeclaration
                         dt8
                         dt9
                         dt10 } } })
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta22) -}
461e1f1ab8c0a238af7a8d31ea32508b
  parseDeclaration62 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp6
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
77807ad758ee89561cb867b68659a05a
  parseDeclaration63 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.$wparseDataDeclaration
                   @ b1
                   w
                   w14
                   w15
                   w17) -}
2d9f88bc86e476853e7709dadd54706e
  parseDeclaration7 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration57
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration8) -}
420e5ddcda41269f5425017e0cd50254
  parseDeclaration8 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration55
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration9) -}
a76affb5f16defdcacd056c92cabe8d5
  parseDeclaration9 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration43
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration10) -}
1a2f69808ffce2d881b504ff367f6050
  parseDeclarationRef ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.DeclarationRef
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseDeclarationRef1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.DeclarationRef>_R)) -}
d4731535e7b8c28a70e2b662f2c54218
  parseDeclarationRef1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: Language.PureScript.AST.Declarations.DeclarationRef
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Language.PureScript.AST.Declarations.DeclarationRef
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wparseDeclarationRef
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
c0814f37abafabfed781d430c650dd83
  parseDeclaration_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration3) -}
5732fd6481dbdac9cc77c200f99e2781
  parseGuard ::
    Language.PureScript.Parser.Lexer.TokenParser
      [Language.PureScript.AST.Declarations.Guard]
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseGuard1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <[Language.PureScript.AST.Declarations.Guard]>_R)) -}
56b9d36fb6a9db4e3296fb405e193f9a
  parseGuard1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [Language.PureScript.AST.Declarations.Guard]
                   Language.PureScript.Parser.Declarations.parseGuard4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseGuard2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Guard]>_R))) -}
9adf3465f57778251a649759c42f2d13
  parseGuard2 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: [Language.PureScript.AST.Declarations.Guard]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: [Language.PureScript.AST.Declarations.Guard]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Parser.Lexer.PositionedToken
                   @ Language.PureScript.Parser.State.ParseState
                   @ Language.PureScript.AST.Declarations.Guard
                   @ ()
                   Language.PureScript.Parser.Declarations.parseGuard3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Guard>_R))
                   Language.PureScript.Parser.Lexer.comma
                   @ b
                   w14
                   w15
                   w16
                   w17
                   w18) -}
a6e2f6b1034706a849555926520e78fd
  parseGuard3 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Guard
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Guard
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1b3973b4d2c914a7e2c8c6bd82c369df
  parseGuard4 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Lexer.pipe
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
8a7d826550f35590da48cf6298c1b535
  parseImportDeclaration' ::
    Language.PureScript.Parser.Lexer.TokenParser
      (Language.PureScript.Names.ModuleName,
       Language.PureScript.AST.Declarations.ImportDeclarationType,
       GHC.Base.Maybe Language.PureScript.Names.ModuleName)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseImportDeclaration'1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <(Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)>_R)) -}
283eca9eb0cacd8a767f4ff4a3fd79be
  parseImportDeclaration'1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      Language.PureScript.AST.Declarations.ImportDeclarationType,
                      GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   Language.PureScript.Parser.Declarations.parseDeclaration48
                   Language.PureScript.Parser.Declarations.parseImportDeclaration'2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               Language.PureScript.AST.Declarations.ImportDeclarationType,
                               GHC.Base.Maybe Language.PureScript.Names.ModuleName)>_R))) -}
d7945047df303660c3d350836966a519
  parseImportDeclaration'2 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      Language.PureScript.AST.Declarations.ImportDeclarationType,
                      GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseImportDeclaration'3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               Language.PureScript.AST.Declarations.ImportDeclarationType,
                               GHC.Base.Maybe Language.PureScript.Names.ModuleName)>_R))) -}
85ab4ec62bcff886294f655a3deec736
  parseImportDeclaration'3 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSS),1*U(U,U,U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Parser.Declarations.$wparseImportDeclaration'
                   @ b1
                   ww1
                   ww2
                   ww3
                   w14
                   w15
                   w17 }) -}
0f46ea01e88d1e3ad6a0929a0e360c59
  parseLocalDeclaration ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.Declaration
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseLocalDeclaration1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.Declaration>_R)) -}
c89838eebe6bf319781103684185f7c7
  parseLocalDeclaration1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta18 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                   (eta19 :: Language.PureScript.AST.Declarations.Declaration
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta20 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta21 :: Language.PureScript.AST.Declarations.Declaration
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta22 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Declarations.Declaration
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration2
                   @ b
                   eta18
                   eta19
                   eta20
                   eta21
                   eta22) -}
11f2d1e9b1597831b30867e941354cc4
  parseLocalDeclaration10 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (([Language.PureScript.AST.Binders.Binder]
         -> Language.PureScript.Parser.Lexer.TokenParser
              (Language.PureScript.AST.SourcePos.SourceAnn
               -> Language.PureScript.AST.Declarations.Declaration))
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([Language.PureScript.AST.Binders.Binder]
         -> Language.PureScript.Parser.Lexer.TokenParser
              (Language.PureScript.AST.SourcePos.SourceAnn
               -> Language.PureScript.AST.Declarations.Declaration))
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: ([Language.PureScript.AST.Binders.Binder]
                            -> Language.PureScript.Parser.Lexer.TokenParser
                                 (Language.PureScript.AST.SourcePos.SourceAnn
                                  -> Language.PureScript.AST.Declarations.Declaration))
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: ([Language.PureScript.AST.Binders.Binder]
                            -> Language.PureScript.Parser.Lexer.TokenParser
                                 (Language.PureScript.AST.SourcePos.SourceAnn
                                  -> Language.PureScript.AST.Declarations.Declaration))
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.parseBinder1
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.AST.Binders.Binder) ->
                    cok
                      (Language.PureScript.Parser.Declarations.parseLocalDeclaration_go
                         x1))
                   cerr
                   (\ (x1 :: Language.PureScript.AST.Binders.Binder) ->
                    eok
                      (Language.PureScript.Parser.Declarations.parseLocalDeclaration_go
                         x1))
                   eerr) -}
b718df86d1d936974c0eb74cf4fe3084
  parseLocalDeclaration11 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration60
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
14a165f57d58d563c6644ab639b7ea41
  parseLocalDeclaration2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
26a53b26fd0e67db6d2dcd3711f01bed
  parseLocalDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("local declaration"#) -}
64af7ba9deaf2fd6ad2ae32b86e9b5dc
  parseLocalDeclaration4 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U(U,U,U)><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.choice2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Declarations.Declaration
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration5
                   @ b
                   w14
                   w15
                   w16
                   w17
                   w18) -}
3bee127055f6928dc9bd569fe58227f7
  parseLocalDeclaration5 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       Language.PureScript.AST.Declarations.Declaration]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration11
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration6) -}
97dbca46b9aa9b8398684d52a8a1afd1
  parseLocalDeclaration6 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       Language.PureScript.AST.Declarations.Declaration]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   (GHC.Types.[]
                      @ (Text.Parsec.Prim.ParsecT
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState
                           Data.Functor.Identity.Identity
                           Language.PureScript.AST.Declarations.Declaration))) -}
552d1439b511227de3b11622c1a5b5b1
  parseLocalDeclaration7 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
c734b1ecbd099702457e6ba43cc8657d
  parseLocalDeclaration8 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fAlternativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ [Language.PureScript.AST.Binders.Binder]
                   @ (Language.PureScript.Parser.Lexer.TokenParser
                        (Language.PureScript.AST.SourcePos.SourceAnn
                         -> Language.PureScript.AST.Declarations.Declaration))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration10
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Binders.Binder]
                              -> Language.PureScript.Parser.Lexer.TokenParser
                                   (Language.PureScript.AST.SourcePos.SourceAnn
                                    -> Language.PureScript.AST.Declarations.Declaration)>_R))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Binders.Binder]>_R))
                   @ b1
                   s1
                   (\ (x1 :: Text.Parsec.Prim.ParsecT
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState
                               Data.Functor.Identity.Identity
                               (Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration))
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    x1
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                         <Language.PureScript.Parser.State.ParseState>_R
                         <Data.Functor.Identity.Identity>_R
                         <Language.PureScript.AST.SourcePos.SourceAnn
                          -> Language.PureScript.AST.Declarations.Declaration>_R)
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)
                         (err' :: Text.Parsec.Error.ParseError) ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Text.Parsec.Prim.ParsecT
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState
                               Data.Functor.Identity.Identity
                               (Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration))
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    x1
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                         <Language.PureScript.Parser.State.ParseState>_R
                         <Data.Functor.Identity.Identity>_R
                         <Language.PureScript.AST.SourcePos.SourceAnn
                          -> Language.PureScript.AST.Declarations.Declaration>_R)
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)
                         (err' :: Text.Parsec.Error.ParseError) ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
efdf7f58d12524838e4200b7206733f8
  parseLocalDeclaration9 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Binders.Binder]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Binders.Binder]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: [Language.PureScript.AST.Binders.Binder]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: [Language.PureScript.AST.Binders.Binder]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wmany
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Binders.Binder
                   Language.PureScript.Parser.Declarations.parseBinderNoParens1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Binders.Binder>_R))
                   @ b
                   w14
                   w15
                   w16
                   w17) -}
bb71b6fe36f3842dc1dd9eb29cf631f4
  parseLocalDeclaration_go ::
    Language.PureScript.AST.Binders.Binder
    -> [Language.PureScript.AST.Binders.Binder]
    -> Language.PureScript.Parser.Lexer.TokenParser
         (Language.PureScript.AST.SourcePos.SourceAnn
          -> Language.PureScript.AST.Declarations.Declaration)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
3846c63d1ffc9e1393e7156f20148562
  parseLocalDeclaration_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration3) -}
fc8506de0469e25061ee5096591098a6
  parseModule ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.Module
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(1*U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseModule1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.Module>_R)) -}
fd9783711b2f0eca12ac8e911a8712e3
  parseModule1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Module
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Module
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(1*U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: Language.PureScript.AST.Declarations.Module
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Language.PureScript.AST.Declarations.Module
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wparseModule
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w17 } }) -}
d38e908e035bf3d799f24593f1ed81c3
  parseModuleDeclaration ::
    Language.PureScript.Parser.Lexer.TokenParser
      (Language.PureScript.Names.ModuleName,
       GHC.Base.Maybe
         [Language.PureScript.AST.Declarations.DeclarationRef])
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseModuleDeclaration1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <(Language.PureScript.Names.ModuleName,
                            GHC.Base.Maybe
                              [Language.PureScript.AST.Declarations.DeclarationRef])>_R)) -}
a0bc25bd129aad22bb9497bab00addb9
  parseModuleDeclaration1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      GHC.Base.Maybe
                        [Language.PureScript.AST.Declarations.DeclarationRef])
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration4
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               GHC.Base.Maybe
                                 [Language.PureScript.AST.Declarations.DeclarationRef])>_R))) -}
08875cf6f71878575c8111e014ed90f3
  parseModuleDeclaration2 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      GHC.Base.Maybe
                        [Language.PureScript.AST.Declarations.DeclarationRef])
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               GHC.Base.Maybe
                                 [Language.PureScript.AST.Declarations.DeclarationRef])>_R))) -}
f8f7c9aa3ad31d312b212fa6704e633e
  parseModuleDeclaration3 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSS),1*U(U,U,U)><L,U><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.Names.ModuleName,
                            GHC.Base.Maybe
                              [Language.PureScript.AST.Declarations.DeclarationRef])
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.Names.ModuleName,
                            GHC.Base.Maybe
                              [Language.PureScript.AST.Declarations.DeclarationRef])
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Parser.Declarations.$wparseModuleDeclaration
                   @ b1
                   ww1
                   ww2
                   ww3
                   w14
                   w15
                   w17 }) -}
252f1df9129cec7e804e69500a6d8289
  parseModuleDeclaration4 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration5) -}
ef8f3cf4f3a96869055d486c9922de83
  parseModuleDeclaration5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration6) -}
0d0caa7cf343eb4e7c6f35f879ab57b1
  parseModuleDeclaration6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("module"#) -}
a5e431f010c7cf005e06404183762fa6
  parseModuleFromFile ::
    (k -> GHC.IO.FilePath)
    -> (k, Data.Text.Internal.Text)
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         (k, Language.PureScript.AST.Declarations.Module)
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ k4
                   (w :: k4 -> GHC.IO.FilePath)
                   (w14 :: (k4, Data.Text.Internal.Text)) ->
                 case w14 of ww { (,) ww1 ww2 ->
                 Language.PureScript.Parser.Declarations.$wparseModuleFromFile
                   @ k4
                   w
                   ww1
                   ww2 }) -}
f849ead8a3b408b8a391e7de4f708aa4
  parseModulesFromFiles ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    (k -> GHC.IO.FilePath)
    -> [(k, Data.Text.Internal.Text)]
    -> m [(k, Language.PureScript.AST.Declarations.Module)]
  {- Arity: 3,
     Strictness: <S(S(LC(C(S))LLL)LL),U(U(U(U(C(C1(U)),A),C(U),A,C(C1(C1(U))),A,A),C(C1(U)),A,C(U),A),C(U),C(C1(U)))><L,C(U)><L,1*U>,
     Unfolding: (\ @ m :: * -> *
                   @ k4
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      Language.PureScript.Errors.MultipleErrors m)
                   (eta18 :: k4 -> GHC.IO.FilePath)
                   (eta19 :: [(k4, Data.Text.Internal.Text)]) ->
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.Error.Class.$p1MonadError
                       @ Language.PureScript.Errors.MultipleErrors
                       @ m
                       $dMonadError
                 } in
                 Language.PureScript.Errors.parU
                   @ m
                   @ (Data.Either.Either
                        Text.Parsec.Error.ParseError
                        (k4, Language.PureScript.AST.Declarations.Module))
                   @ (k4, Language.PureScript.AST.Declarations.Module)
                   $dMonadError
                   (let {
                      xs :: [Data.Either.Either
                               Text.Parsec.Error.ParseError
                               (k4, Language.PureScript.AST.Declarations.Module)]
                      = GHC.Base.map
                          @ (k4, Data.Text.Internal.Text)
                          @ (Data.Either.Either
                               Text.Parsec.Error.ParseError
                               (k4, Language.PureScript.AST.Declarations.Module))
                          (Language.PureScript.Parser.Declarations.parseModuleFromFile
                             @ k4
                             eta18)
                          eta19
                    } in
                    case Control.Parallel.Strategies.parList1
                           @ (Data.Either.Either
                                Text.Parsec.Error.ParseError
                                (k4, Language.PureScript.AST.Declarations.Module))
                           xs of x1 { DEFAULT ->
                    case (GHC.Magic.lazy
                            @ (Control.Parallel.Strategies.Eval
                                 [Data.Either.Either
                                    Text.Parsec.Error.ParseError
                                    (k4, Language.PureScript.AST.Declarations.Module)])
                            (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, xs #))
                              `cast`
                            (Sym (Control.Parallel.Strategies.N:Eval[0]
                                      <[Data.Either.Either
                                          Text.Parsec.Error.ParseError
                                          (k4, Language.PureScript.AST.Declarations.Module)]>_R)))
                           `cast`
                         (Control.Parallel.Strategies.N:Eval[0]
                              <[Data.Either.Either
                                  Text.Parsec.Error.ParseError
                                  (k4, Language.PureScript.AST.Declarations.Module)]>_R)
                           GHC.Prim.realWorld# of ds { (#,#) ipv ipv1 ->
                    ipv1 } })
                   (\ (ds1 :: Data.Either.Either
                                Text.Parsec.Error.ParseError
                                (k4, Language.PureScript.AST.Declarations.Module)) ->
                    case ds1 of wild {
                      Data.Either.Left x1
                      -> Control.Monad.Error.Class.throwError
                           @ Language.PureScript.Errors.MultipleErrors
                           @ m
                           $dMonadError
                           @ (k4, Language.PureScript.AST.Declarations.Module)
                           (GHC.Types.:
                              @ Language.PureScript.AST.Declarations.ErrorMessage
                              (case Language.PureScript.Parser.Declarations.$wtoPositionedError
                                      x1 of ww { (#,#) ww1 ww2 ->
                               Language.PureScript.AST.Declarations.ErrorMessage ww1 ww2 })
                              (GHC.Types.[] @ Language.PureScript.AST.Declarations.ErrorMessage))
                             `cast`
                           (Sym (Language.PureScript.Errors.N:MultipleErrors[0]))
                      Data.Either.Right y2
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (k4, Language.PureScript.AST.Declarations.Module)
                           y2 })) -}
69b68d24a2d6c004825e1478337b57de
  parseValue ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.Expr
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseValue1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.Expr>_R)) -}
1c376f8b2dc143cd831b241bd56f45de
  parseValue1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Expr
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Expr
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
c8dd5bf67db305236521a3f81e384d2f
  toPositionedError ::
    Text.Parsec.Error.ParseError
    -> Language.PureScript.AST.Declarations.ErrorMessage
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U(U,U,U),U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Text.Parsec.Error.ParseError) ->
                 case Language.PureScript.Parser.Declarations.$wtoPositionedError
                        w of ww { (#,#) ww1 ww2 ->
                 Language.PureScript.AST.Declarations.ErrorMessage ww1 ww2 }) -}
"SPEC/Language.PureScript.Parser.Declarations $fEqQualified @ (ProperName
                                                                'ClassName)" [orphan] forall (v :: GHC.Classes.Eq
                                                                                                                                                                               (Language.PureScript.Names.ProperName
                                                                                                                                                                                  'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fEqQualified @ (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ClassName)
                                          v
  = Language.PureScript.Parser.Declarations.$s$fEqQualified
"SPEC/Language.PureScript.Parser.Declarations $fEqQualified_$c/= @ (ProperName
                                                                     'ClassName)" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                                                                                                                            (Language.PureScript.Names.ProperName
                                                                                                                                                                                               'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fEqQualified_$c/= @ (Language.PureScript.Names.ProperName
                                                    'Language.PureScript.Names.ClassName)
                                               $dEq
  = Language.PureScript.Parser.Declarations.$s$fEqQualified_$s$fEqQualified_$c/=
"SPEC/Language.PureScript.Parser.Declarations $fOrdQualified @ (ProperName
                                                                 'ClassName)" [orphan] forall (v :: GHC.Classes.Ord
                                                                                                                                                                                 (Language.PureScript.Names.ProperName
                                                                                                                                                                                    'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fOrdQualified @ (Language.PureScript.Names.ProperName
                                                'Language.PureScript.Names.ClassName)
                                           v
  = Language.PureScript.Parser.Declarations.$s$fOrdQualified
"SPEC/Language.PureScript.Parser.Declarations $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                                                           (v :: GHC.Base.Monad
                                                                                                   Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = Language.PureScript.Parser.Declarations.$s$fStream[]mtok @ tok
"SPEC/Language.PureScript.Parser.Declarations $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                                                    ($dMonad :: GHC.Base.Monad
                                                                                                                  Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Language.PureScript.Parser.Declarations.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons
      @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

