
==================== FINAL INTERFACE ====================
2018-11-30 20:47:44.402165 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Parser.Declarations 8043
  interface hash: 0a0505b513e54583e049e88c27b52d22
  ABI hash: daa54c419c9085317ab3aee8fcf82eb2
  export-list hash: 8faed9c261210df111336f7d448e8368
  orphan hash: e8b570c54e9099d73fd35fd2a1f03041
  flag hash: af801e39deabea4814ba66209bc490c9
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Parser.Declarations.parseBinder
  Language.PureScript.Parser.Declarations.parseBinderNoParens
  Language.PureScript.Parser.Declarations.parseDeclaration
  Language.PureScript.Parser.Declarations.parseDeclarationRef
  Language.PureScript.Parser.Declarations.parseGuard
  Language.PureScript.Parser.Declarations.parseImportDeclaration'
  Language.PureScript.Parser.Declarations.parseLocalDeclaration
  Language.PureScript.Parser.Declarations.parseModule
  Language.PureScript.Parser.Declarations.parseModuleDeclaration
  Language.PureScript.Parser.Declarations.parseModuleFromFile
  Language.PureScript.Parser.Declarations.parseModulesFromFiles
  Language.PureScript.Parser.Declarations.parseValue
  Language.PureScript.Parser.Declarations.toPositionedError
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 boxes-0.1.5 bytestring-0.10.8.2 colour-2.3.4
                      containers-0.5.11.0 deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2
                      ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 mtl-2.2.2 parallel-3.2.1.1
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Applicative 55d9b3a7491623b0362290e162d67308
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Set 7d3c64a641be4cacbcd8119445bab919
import  -/  containers-0.5.11.0:Data.Set.Internal 93fa3ef95853aa2a7aadf32d693bd451
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  parallel-3.2.1.1:Control.Parallel.Strategies c4ad57b4c83509e5393e66a9499d773c
import  -/  parsec-3.1.13.0:Text.Parsec 963cbe7b4116cef91451434dc005a011
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator 86d872425bd48a2d67c0d1ce1a8ccc8b
import  -/  parsec-3.1.13.0:Text.Parsec.Error 5c35aa426bd1cd52bcab90d9a1e3ce4c
import  -/  parsec-3.1.13.0:Text.Parsec.Expr 6898ea405cda9f4ced72197883fcde5c
import  -/  parsec-3.1.13.0:Text.Parsec.Pos 85d30a347a2120f1b5f286869826a471
import  -/  parsec-3.1.13.0:Text.Parsec.Prim 4e0ad30f54008188b8c54f509e1a8ed9
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.List 3a80368167450d7a4360ebf1ea443345
import  -/  Language.PureScript.AST 7ed0e74bfed5b6489b8a5eabab5c0241
  exports: 0d53d92339536cd6d8d7dcfcad8e7c7e
import  -/  Language.PureScript.AST.Binders 9d60985147b34b89300370e810fed430
  BinaryNoParensBinder 0a9649b4372c6e05d173870dfa1006fa
  Binder 50aa153193e190eabd8ac7530e604f9c
  ConstructorBinder a80ed0550c5d3abdd1e6249cec7ebb29
  LiteralBinder fb24b5107abb72eda0b4f926a357d676
  NamedBinder b48e1eb9e717d35392ab81ba6112a0c5
  NullBinder d74abae0f95c6b96e50712c73008469c
  OpBinder 8c4232ee53e2707d427c05940eb3b3a1
  ParensInBinder d5e3e2b30a59f234cee3c52dcb18b9a6
  PositionedBinder 882f8081b0418fe44d4a7e237a20b9bb
  TypedBinder f780e44b8446316aee6b532b3afc4341
  VarBinder 2a223807b33e6f190799aea12e8ed5d7
import  -/  Language.PureScript.AST.Declarations 568e046fbf27b243bfc96f09017d4782
  Abs d07c7c6c44b48a3411184d34629a601e
  Accessor efce1a21efe3a6d2f322942575a5ad70
  Ado 37d00c1fafdcb3ef01dc19068c5ac23a
  AnonymousArgument 00cfc7b8f07b27936a2121d4b1833126
  App 60282620a1433a146ffafd0d8773af87
  AssocList 39fcde5015a592f021697e813166a819
  BinaryNoParens 74f8609dfb4850c239012b6c7f3f2502
  BoundValueDeclaration 2a1064417e2b13bd8230beec138bd3f3
  Branch 4e0ab8be808547ff6ab7f7473734521d
  Case 26360a43049b71a59ced6dc5180ab8d3
  CaseAlternative 53d0b5fb91e3184ce5b575a7cf70b18d
  CaseAlternative b31d94d0c7b90700d40f9ba6ec420e41
  ConditionGuard 2db62e1fae4ae7a464999119c33e7329
  Constructor bb7c3f03ee8743dfc68d80ee99f8c1e3
  DataDeclaration db5935397ffc86d7f21188808af5170e
  Declaration b31d94d0c7b90700d40f9ba6ec420e41
  DeclarationRef 9de74e8b46bfd07e044a72617cc5da5c
  DerivedInstance 75fe0998f1f44a98f35c594b934817d5
  Do b8fad0bebe96a0626d89acbd41a552b3
  DoNotationBind fec991d5ab40627d0cce74b30ebfede6
  DoNotationElement b31d94d0c7b90700d40f9ba6ec420e41
  DoNotationLet 6feff6a200614ac607daa94006ad3ed5
  DoNotationValue cc0f2bc0eef838fad83abc6d1864b17c
  ErrorMessage bc889ae8d74a01dbbd95e220faa4631d
  ErrorMessage cebd18718f7c34278cac50a2f0ab0386
  ErrorParsingModule 17f7ea545193606e314be46edd7a48ba
  Explicit b1c38eaf46155af7f2da52da8f5861c4
  ExplicitInstance 566045ea839404c561f5bf2109dbe534
  Expr b31d94d0c7b90700d40f9ba6ec420e41
  ExternDataDeclaration 55a53b09584ed2ea4b573ea27aa0f4e4
  ExternDeclaration 4969f865c6e08f5324b31f68ef85d043
  ExternKindDeclaration fdf7ad04c416fe681db015f254431a3c
  FixityDeclaration ae83bbbeb0bf1b73467c4234bd14b77f
  FromLet 90dae67e7b749d252ac78837cb39cc5c
  FromWhere c84b3c6b3ef5e335709e19ad3dacaa71
  Guard b31d94d0c7b90700d40f9ba6ec420e41
  GuardedExpr 27042b32d879f10c681888a144cccbf4
  Hiding 8116598858a7036038611cde115d4da3
  Hole e9e194ceaad4c99fef537ec8e2bb0f3e
  IfThenElse 861db5e7c442fcad4ef6b09852058a52
  Implicit 850358a1da5071d49098050ad7d1227d
  ImportDeclaration 0c2bc2f3ca892343473f34859c93a6e3
  ImportDeclarationType f900e8c96b49d573d3e54286bc8fd980
  KindRef 8245863d9321690e594853e7ff0fdb63
  Leaf 9a42cb9f6c50a64f9ad877bf952e0413
  Let 1e154f741d98347f87a436fe079b9677
  Literal 25fe050a9db328cb74b9c2f7e7994889
  MkUnguarded b86897bed7e8aa9bc4f5498c0c74ad91
  Module b9e5d519f3251f7053b581e4ecd9e6bf
  Module 7cf4b96f7d4b51b446726a099ab87bb6
  ModuleRef 9bebdcb4233f1d570107d6e7f75034d7
  NewtypeInstance eefeabcd731381919d00bd863d5e75f0
  ObjectUpdateNested f0f594d942338e4c5632d561472ff5f5
  Op 4d49590d9b87d07686937c6859e5ae47
  Parens d8b532f50bb6822d72d510f7cf291c86
  PathNode 927a4a1acceccbe5ab77b4ee8603376a
  PathTree 1ec618e92677df1c0945827efcbe201c
  PathTree 927a4a1acceccbe5ab77b4ee8603376a
  PatternGuard 8f00c4347b1f607cbe6ab09d14685d9d
  PositionedDoNotationElement c12364668936cfdcd1fd6a9966e8f1cd
  PositionedValue ce9f35ccf631ea46c29b12e823f5cdda
  TypeClassDeclaration d4771a111b012cbefca253f911afd776
  TypeClassRef 93a0e32770563d43fa3f04289a54725f
  TypeDeclaration a12f822b0dbc597658a7d1e27db5ac22
  TypeDeclarationData 99fd3317c24e020d90e98686ac5a9cec
  TypeFixity 64291ec6ff5adfe62c3609f4ee3518e7
  TypeInstanceBody b31d94d0c7b90700d40f9ba6ec420e41
  TypeInstanceDeclaration c99b2ac93a5feb1209c747921a9e548b
  TypeOpRef 9ae3d7bbee64a9887c8d95defd65b0b0
  TypeRef f23e4bfa1c94ce55e9357e5fb97176c4
  TypeSynonymDeclaration b022b78d38da14b3619ada244eaf9299
  TypedValue d9e4565826b9abbfd5d9b0aba42f2e58
  UnaryMinus a219b7d00bf9c8706678ac90686eba33
  ValueDecl ccaaa682babb730c1361bddf2c5eee25
  ValueFixity 521665e029a7bb45169e478d9aced723
  ValueOpRef 340c88beba94c802cc00b112ca1ce8ae
  ValueRef 984b564c7d121e5297a91fc424d0970b
  Var 0202d242cce06e67fa6944b3c05a8982
import  -/  Language.PureScript.AST.Literals 3440d35205601002007fae6139f2b416
  ArrayLiteral 5b23e15244983cff3a7817389b5e2212
  BooleanLiteral 242415ff3d034091eec7910a2e553d43
  CharLiteral 7acabe059e85dca07eb45a9c79e63a50
  Literal 9e9b6c02bfac90a56d53685e90c059b8
  NumericLiteral 9e8d18add8f8b3f13014ed6441c4254a
  ObjectLiteral 6a79fd56232b94e65385c3eab269a6a5
  StringLiteral 7a0f920d0282cd028b99b76b270f4906
import  -/  Language.PureScript.AST.Operators be736e316462ef3abce53315e7361a17
  Associativity 17f2097426b72eb751701f86cd97792c
  Fixity b54dc78c2a40564b4aeb547cc4004cc2
  Fixity 17f2097426b72eb751701f86cd97792c
  Infix 48da7304e58a5ef64ef55f219a639205
  Infixl c355232652b8d07dc6f4cc3d968cd69f
  Infixr e374de6c2504281f30a71346ea589bed
import  -/  Language.PureScript.AST.SourcePos b3f67f807f2dce79528bbb15bd9c7104
  SourceAnn cab2aecd85882b7f3973d54e49bcad4f
  SourceSpan 80f1a6322ef7d45c295094f0b69c34ea
import  -/  Language.PureScript.Environment 31667499b7017b19998bb405474fbe93
  exports: 56b1ef0ac6132b4c113ce26a807dcfb6
  Data cb40e4d87c0c91534ef77768d4034ea2
  FunctionalDependency bfd9854bb96fc57917c12b6d3dc6067a
  Newtype 1b0bdbba0a24544cb0a1769af0f376e7
  Public 167adf8dc42c910fd600ab439657b017
import  -/  Language.PureScript.Errors 15d6eb6b2d4d480750061a0585d4e64c
  exports: 142ea650dec62642d1cff09ef1eee74e
  MultipleErrors f5c9696f41d58d6dc3fa501d3874e5a8
  MultipleErrors ad1de73a1d5a6b0ccd9657dedebc94f3
  parU da72186e6c92f529dd0bd0ac4699ef1e
  positionedError d8ca57e35818a7e93c5200eeb190e167
import  -/  Language.PureScript.Kinds bf1fc2fd18b06658330fcf93fe50e737
  exports: 2c2448e43e622d2466a59b9cd8f4db91
  Kind 3e1e213eb647453235d33b0d1b36ec59
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  exports: f7f3503d20957194bda83c16bb5f1288
  ClassName e69348bcf8c43a2174540a1d5983bfaa
  Ident 0ccd7f2221de64569e50634367691253
  Ident ab98a56ffa88760dad1380079e8ee35a
  ModuleName 5a70062bbdf29e6dc659ad8bf5326b50
  ProperName 29f101e190cc99df85623423972e606f
  Qualified d600a7f01c8203cf5504999de99c923c
  Qualified 5a70062bbdf29e6dc659ad8bf5326b50
import  -/  Language.PureScript.PSString 29492f728997dffadb84d1bf161f2ce4
  exports: 41608caf7cc5b51f34de641c9952ab6d
  PSString 0c2d9eac7fc8cff2b3ca27abf6053439
  mkString 59c5695c0c0978fcb9d0a00f0304b905
import  -/  Language.PureScript.Parser.Common cd9daf83419acf425eed3583730b480a
  exports: 46bd02a8c6d64be727c6d765fa3bb721
  buildPostfixParser 0bd2e87c8916f4bf57e37d9b9eed33c4
  dataConstructorName c673423726cdeac709a9b8a94b91d2d5
  indented bc6c10485ef3bfbad029ca5a263a854b
  kindName 85c59bdb688906d737599621e944754c
  mark 2ad046408a3c133048b49f3cd5cd27f0
  moduleName a4b3dc7f1f6a0f3f18a171cce5dad912
  parseIdent 955eb3247a0ae016694c4b540be1ad3c
  parseLabel 5d5f0c60f50fdd7734a4bd8d2727fe88
  parseOperator 0f9ad6f2b0ed49a70d76eb8788742d31
  parseQualified ac9710478dd7246a70e7f3c6aa1c0eda
  properName 0e6e637731d45ae3c8a5e4efcad68e14
  readComments 4f4d95fb63de1698482287acd63d2ead
  runTokenParser 22c139ae6db58097fa5b3743e91aefec
  same f899cc54828f4d66d21063bc6fd9a8de
  toSourcePos 71cf21379f9fd1b46ee2659589f2b56e
  typeName ae3f3b3362cf8cb09f694b81d7def8b1
  withSourceAnnF 84117a8980c6ce2bda979df2553ad121
  withSourceSpan c64753ccc1f09925712afdb91cea8bb9
  withSourceSpan' aa5f8079b29a1c75acc68e838ced81c3
  withSourceSpanF b4f5349a85067feb202053d8eb0a2e4a
import  -/  Language.PureScript.Parser.Kinds 2fcc087f8cc2cd5e46d0be39dad8d447
  exports: ba6aa7a1497db23f7cfdff00d0cc23c1
  parseKind 9c499990453aee5e8555ac7989adf1fb
import  -/  Language.PureScript.Parser.Lexer db153cafc807e1fa539fece18593da12
  exports: 698a81285a16040f24e674c5083daf63
  TokenParser 187b24d9915c74f6cd19336cd3ce961b
  at 275a946428a4a6aa71a319f60d570be8
  braces b26ec2b99dfa76b3b95a07e0b9efe061
  charLiteral 9895db113a76865049e7e79ad83bb873
  colon b143968510ff6fbe8b56445c23e770f1
  comma 791c67369d64a7957db4c9296a5f4536
  commaSep d353b58fd203544763c113c2ba09a113
  commaSep1 b322b1c526c474b09842312f0b11d610
  dot fe83d7033cfab2127f9b28818ba3c35a
  doubleColon 294dc4fa850a55a85acd8909ea86e45d
  equals 2988535b336fd44374b9bedc6c505004
  holeLit a9347910938bbb19fa2d464a536314c4
  identifier 71517dd1b5165f695e88eab2aaf7b72d
  larrow eb0d6bbf837ccfe9a289c159d851c717
  lex 8cc273ef9ffe00ce51529fc0c7f44874
  lfatArrow da33b36664b93f644a6dff765dae264b
  lname 6e1d4b4ef234a78f7b87fd5f992b70f0
  lname' ddbc74234ff5893caea93ffd0d384ff0
  natural cc2f624eb796f5bf7f8c3ba013e49aa2
  number d88b152b54a60439c2dc595cbdb56e8d
  parens cf084ae74dc27c8c9070bf462d824e6e
  pipe 5b3096c272c057a0a415cb07ea4ab678
  rarrow 6ff8539bff2e21d2fc59f86fe8f0d442
  reserved 01d5938beb4343cb6453f0c465ad02c7
  rfatArrow 5ab8ee2cfbcabb5bfd66b2533861e390
  squares f06e23d6a1ec5d566668267ec2acb8b1
  stringLiteral 5b013bddd8e088b3207ee7aa6d991705
  symbol' d1fd86a62b72396f3e5973cba6978c34
  tick c48b67402017ba67b1ca2142f31e7279
  underscore 69c9526f4aba04813bc9cc79358acdd6
import  -/  Language.PureScript.Parser.Types 0003ea2e7708083e46a73a3f8d83c4fd
  exports: 5c797e54649989cbb48b10f7461b61ad
  noForAll 1c5e1a5ae8ab4669f0836ff93dec02f8
  noWildcards b1d8af495c321030b7104d298e53f6ee
  parsePolyType abc9c75a45c53b843ec77bfafacecd6c
  parseTypeAtom 0ca7414db2665d9b56e9030b5aba633e
import  -/  Language.PureScript.Types 74562e642f5297557b3a23aac7819ad1
  exports: ae97bc75fcebc59f59c970736847a827
  Constraint 07ef72cbe41926551b2da51008274cd5
  Constraint 93223f8afa90d0facc05a03f863dc72d
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
e28d06c22da86b2b29172ee9c88ef0ff
  $s$fEqQualified ::
    GHC.Classes.Eq
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName))
                  (Language.PureScript.Names.$fEqQualified_$c==
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fEqProperName
                        @ 'Language.PureScript.Names.ClassName))
                  Language.PureScript.Parser.Declarations.$s$fEqQualified_$s$fEqQualified_$c/= -}
d84b403d4c3d31cf5daf1f96030f0076
  $s$fEqQualified_$s$fEqQualified_$c/= ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U,U,U))><S(SL),1*U(1*U,1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Names.Qualified
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName))
                   (y2 :: Language.PureScript.Names.Qualified
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)) ->
                 case Language.PureScript.Names.$fEqQualified_$c==
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ClassName)
                        (Language.PureScript.Names.$fEqProperName
                           @ 'Language.PureScript.Names.ClassName)
                        x1
                        y2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
560ce2eb64a4eb98bd25397e60dd9b91
  $s$fOrdQualified ::
    GHC.Classes.Ord
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName))
                  Language.PureScript.Parser.Declarations.$s$fEqQualified
                  (Language.PureScript.Names.$fOrdQualified_$ccompare
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fOrdProperName
                        @ 'Language.PureScript.Names.ClassName))
                  (Language.PureScript.Names.$fOrdQualified_$c<
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fOrdProperName
                        @ 'Language.PureScript.Names.ClassName))
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (b :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          b
                          a1 of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (b :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   Language.PureScript.Names.$fOrdQualified_$c<
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fOrdProperName
                        @ 'Language.PureScript.Names.ClassName)
                     b
                     a1)
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (b :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          a1
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (y2 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          y2
                          x1 of wild {
                     GHC.Types.False -> y2 GHC.Types.True -> x1 })
                  (\ (x1 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                     (y2 :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName)) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          (Language.PureScript.Names.$fOrdProperName
                             @ 'Language.PureScript.Names.ClassName)
                          y2
                          x1 of wild {
                     GHC.Types.False -> x1 GHC.Types.True -> y2 }) -}
c76a4abd7688dc24fb447c35af9756df
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (Language.PureScript.Parser.Declarations.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons
                     @ tok) -}
98e6afa49ad82554d0437c60f0f9ae30
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Base.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Base.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R)) }) -}
8e1c9fa034fcea64457920f392d1e0c1
  $sinsert_$sgo3 ::
    Language.PureScript.PSString.PSString
    -> Language.PureScript.PSString.PSString
    -> Data.Set.Internal.Set Language.PureScript.PSString.PSString
    -> Data.Set.Internal.Set Language.PureScript.PSString.PSString
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
f08cac050647fdcdd9a2127d83f0c4c8
  $smember_go3 ::
    Language.PureScript.PSString.PSString
    -> Data.Set.Internal.Set Language.PureScript.PSString.PSString
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
ec73ae6fff1a31de56763f7d0bc99612
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Parser.Declarations.$trModule3
                   Language.PureScript.Parser.Declarations.$trModule1) -}
221bdba1edcfbd48163648f0f6b06cd3
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Parser.Declarations.$trModule2) -}
5f99f564302c142142c6ce94c473ddaa
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Parser.Declarations"#) -}
dc13229e3620e7da78ea7c595b205e79
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Parser.Declarations.$trModule4) -}
e8ea22886d5b6777ae6761acfea231e1
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
ace8270c2823a7792862e6b2bd996702
  $wk ::
    (Language.PureScript.AST.Declarations.TypeInstanceBody
     -> Language.PureScript.AST.Declarations.Declaration)
    -> forall b1.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> (Language.PureScript.AST.Declarations.Declaration
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Language.PureScript.AST.Declarations.Declaration
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,C(U)><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0] -}
ecbf0eeed14d61f7dcc158dcddd35338
  $wm1 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: Language.PureScript.AST.Declarations.Declaration
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.TypeInstanceBody
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ (Language.PureScript.AST.Declarations.TypeInstanceBody
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ (Language.PureScript.AST.Declarations.TypeInstanceBody
                         -> Language.PureScript.AST.Declarations.Declaration))
                   Language.PureScript.Parser.Declarations.parseDeclaration25
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.TypeInstanceBody
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.TypeInstanceBody
                             -> Language.PureScript.AST.Declarations.Declaration)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.$wk
                      x1
                      @ b1
                      s2
                      w
                      w14
                      (\ (x2 :: Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w x2 s3 (Text.Parsec.Error.mergeError err err')))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.TypeInstanceBody
                             -> Language.PureScript.AST.Declarations.Declaration)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.$wk
                      x1
                      @ b1
                      s2
                      w
                      w14
                      (\ (x2 :: Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w15 x2 s3 (Text.Parsec.Error.mergeError err err')))
                   w16) -}
600d7b62e34d602419674974c69f8dcc
  $wp ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration33
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
48779b4619c60c397400af7b94870b94
  $wp1 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration39
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
e43230bc1eaf3ea5c7b0aa5ad8f69415
  $wp2 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration44
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
d900957cfe19012a38eb5b400e8a54ff
  $wp3 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration56
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
2e59e9d5ca224b04a7a40326a75c3df8
  $wp4 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration58
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
18d493c48ea20192c11b738341d51cd1
  $wp5 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration60
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
ea4d4faa8ce6499f36136fd60d918b87
  $wp6 ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [Language.PureScript.Parser.Lexer.PositionedToken])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Language.PureScript.Parser.State.ParseState)
                   (w :: [Language.PureScript.AST.Declarations.Declaration]
                         -> Text.Parsec.Prim.State
                              [Language.PureScript.Parser.Lexer.PositionedToken]
                              Language.PureScript.Parser.State.ParseState
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w14 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration63
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   (Text.Parsec.Prim.State
                      @ [Language.PureScript.Parser.Lexer.PositionedToken]
                      @ Language.PureScript.Parser.State.ParseState
                      ww
                      (Text.Parsec.Pos.SourcePos ww1 ww2 ww3)
                      ww4)
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w14
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    w15
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   w16) -}
378856e7b7e83ef8f9d1f9d865bbad63
  $wparseDataDeclaration ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
f4ae3e30687bdff869243451d30cc584
  $wparseDeclarationRef ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 9,
     Strictness: <S,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
0823d7faa6557a3ddd46718c49f259ee
  $wparseImportDeclaration' ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourcePos
    -> Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
6980ed5e3154a845522ac2ae535ce543
  $wparseModule ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Module
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
413e267d1a9998cf896617a94e0d4517
  $wparseModuleDeclaration ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourcePos
    -> Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <S,U><L,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0] -}
ee7cf9e5c39e6dbefc50fed9e4ba89d5
  $wparseModuleFromFile ::
    (k -> GHC.IO.FilePath)
    -> k
    -> Data.Text.Internal.Text
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         (k, Language.PureScript.AST.Declarations.Module)
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ @ k3
                   (w :: k3 -> GHC.IO.FilePath)
                   (ww :: k3)
                   (ww1 :: Data.Text.Internal.Text) ->
                 let {
                   filename :: GHC.IO.FilePath = w ww
                 } in
                 case (Text.Parsec.Prim.runPT
                         @ Data.Text.Internal.Text
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ [Language.PureScript.Parser.Lexer.PositionedToken]
                         Language.PureScript.Parser.Lexer.$s$fStreamTextmChar0
                         (Language.PureScript.Parser.Lexer.lex1 @ ())
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <Data.Text.Internal.Text>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[Language.PureScript.Parser.Lexer.PositionedToken]>_R))
                         GHC.Tuple.()
                         filename
                         ww1)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError
                              [Language.PureScript.Parser.Lexer.PositionedToken]>_R) of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Text.Parsec.Error.ParseError
                        @ (k3, Language.PureScript.AST.Declarations.Module)
                        x1
                   Data.Either.Right y2
                   -> case (Text.Parsec.Prim.runPT
                              @ [Language.PureScript.Parser.Lexer.PositionedToken]
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Parser.Lexer.PositionedToken
                              @ Language.PureScript.Parser.State.ParseState
                              @ Language.PureScript.AST.Declarations.Module
                              (Language.PureScript.Parser.Common.$s$fStream[]mtok
                                 @ Language.PureScript.Parser.Lexer.PositionedToken)
                              Language.PureScript.Parser.Declarations.parseModule1
                                `cast`
                              (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                        <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                                        <Language.PureScript.Parser.State.ParseState>_R
                                        <Data.Functor.Identity.Identity>_R
                                        <Language.PureScript.AST.Declarations.Module>_R))
                              Language.PureScript.Parser.Common.runTokenParser2
                              filename
                              (Language.PureScript.Parser.Lexer.updatePositions y2))
                             `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   Text.Parsec.Error.ParseError
                                   Language.PureScript.AST.Declarations.Module>_R) of wild1 {
                        Data.Either.Left l
                        -> Data.Either.Left
                             @ Text.Parsec.Error.ParseError
                             @ (k3, Language.PureScript.AST.Declarations.Module)
                             l
                        Data.Either.Right r
                        -> Data.Either.Right
                             @ Text.Parsec.Error.ParseError
                             @ (k3, Language.PureScript.AST.Declarations.Module)
                             (ww, r) } }) -}
2592b41e9446b9c73d9f2f414c258bb6
  $wparseTypeClassDeclaration ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U(U))><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
8d3ca3084222fecff7bfb95849486913
  $wparseTypeSynonymDeclaration ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,U>,
     Inline: [0] -}
225c7889d88b95f8a8df004dfb96a34d
  $wparseValueDeclaration ::
    [Language.PureScript.Parser.Lexer.PositionedToken]
    -> Text.Parsec.Pos.SourcePos
    -> Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,1*C1(U)>,
     Inline: [0] -}
f6bfff74fd455a6b5de0c288953b60aa
  $wtoPositionedError ::
    Text.Parsec.Error.ParseError
    -> (# [Language.PureScript.AST.Declarations.ErrorMessageHint],
          Language.PureScript.AST.Declarations.SimpleErrorMessage #)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U(U,U,U),U)>,
     Inline: [0],
     Unfolding: (\ (w :: Text.Parsec.Error.ParseError) ->
                 let {
                   pos :: Text.Parsec.Pos.SourcePos
                   = case w of wild { Text.Parsec.Error.ParseError pos1 _msgs ->
                     pos1 }
                 } in
                 let {
                   start :: Text.Parsec.Pos.Line
                   = case pos of wild { Text.Parsec.Pos.SourcePos _name dt8 dt9 ->
                     GHC.Types.I# dt8 }
                 } in
                 let {
                   start1 :: Text.Parsec.Pos.Column
                   = case pos of wild { Text.Parsec.Pos.SourcePos _name dt8 dt9 ->
                     GHC.Types.I# dt9 }
                 } in
                 let {
                   start2 :: Language.PureScript.AST.SourcePos.SourcePos
                   = Language.PureScript.AST.SourcePos.SourcePos start start1
                 } in
                 (# GHC.Types.:
                      @ Language.PureScript.AST.Declarations.ErrorMessageHint
                      (Language.PureScript.AST.Declarations.PositionedError
                         (GHC.Base.:|
                            @ Language.PureScript.AST.SourcePos.SourceSpan
                            (Language.PureScript.AST.SourcePos.SourceSpan
                               (case w of wild { Text.Parsec.Error.ParseError pos1 _msgs ->
                                case pos1 of wild1 { Text.Parsec.Pos.SourcePos name dt8 dt9 ->
                                name } })
                               start2
                               start2)
                            (GHC.Types.[] @ Language.PureScript.AST.SourcePos.SourceSpan)))
                      (GHC.Types.[]
                         @ Language.PureScript.AST.Declarations.ErrorMessageHint),
                    Language.PureScript.AST.Declarations.ErrorParsingModule w #)) -}
f127c2ed93af728c15859f7ab7b85f57
  parseBinder ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Binders.Binder
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseBinder1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Binders.Binder>_R)) -}
baa75af71814a6e63463b38dabb3f374
  parseBinder1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5 -}
1a3bff440b5b75f6790eab9123d0c037
  parseBinderNoParens ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Binders.Binder
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseBinderNoParens1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Binders.Binder>_R)) -}
bb9e38e21d22f36002b8c57f9739fc31
  parseBinderNoParens1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Binders.Binder
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5 -}
94d04bc8f4adac26438632bb58babfaa
  parseDeclaration ::
    Language.PureScript.Parser.Lexer.TokenParser
      [Language.PureScript.AST.Declarations.Declaration]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseDeclaration1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <[Language.PureScript.AST.Declarations.Declaration]>_R)) -}
064fd94f2b37ec0167dbc52c34566d77
  parseDeclaration1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta18 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                   (eta19 :: [Language.PureScript.AST.Declarations.Declaration]
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta20 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta21 :: [Language.PureScript.AST.Declarations.Declaration]
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta22 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ [Language.PureScript.AST.Declarations.Declaration]
                   Language.PureScript.Parser.Declarations.parseDeclaration4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration2
                   @ b
                   eta18
                   eta19
                   eta20
                   eta21
                   eta22) -}
e8434d9fe996e4bdb0c1ccc08923c730
  parseDeclaration10 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration38
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration11) -}
e0ea0cfb2a0fdd161168fe559c917fb2
  parseDeclaration11 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration32
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration12) -}
45fd76b4f83c266ce6b415d493873b90
  parseDeclaration12 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration19
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration13) -}
b8570f603c44093d537244186d30232e
  parseDeclaration13 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration14
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   (GHC.Types.[]
                      @ (Text.Parsec.Prim.ParsecT
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState
                           Data.Functor.Identity.Identity
                           [Language.PureScript.AST.Declarations.Declaration]))) -}
1b1c00edb31f89b028ecf42476b8b9ad
  parseDeclaration14 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Language.PureScript.AST.Declarations.Declaration
                   Language.PureScript.Parser.Declarations.parseDeclaration16
                   Language.PureScript.Parser.Declarations.parseDeclaration15
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    cok
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   cerr
                   (\ (x1 :: Language.PureScript.AST.Declarations.Declaration) ->
                    eok
                      (GHC.Base.$fApplicative[]_$cpure
                         @ Language.PureScript.AST.Declarations.Declaration
                         x1))
                   eerr) -}
9ceb30c3e7d249cf4516bfadda27c6f8
  parseDeclaration15 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
ec6a5ab04a95d38d22651cde136f0cd6
  parseDeclaration16 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration17) -}
1434e660132e77c2667f0153683f3a58
  parseDeclaration17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration18) -}
088ec37c7a6681d2ad14adaff1be7f5b
  parseDeclaration18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("derive"#) -}
b6b85c8e83ac2aee6906b67ddc2a40c4
  parseDeclaration19 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Parser.Lexer.PositionedToken
                   @ Language.PureScript.Parser.State.ParseState
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration24
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration21
                   @ b1
                   s1
                   (\ (x1 :: [Language.PureScript.AST.Declarations.Declaration])
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration20
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: [Language.PureScript.AST.Declarations.Declaration])
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: [Language.PureScript.AST.Declarations.Declaration])
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration20
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: [Language.PureScript.AST.Declarations.Declaration])
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
19cffbc32c3a2eaa59b794da5347614b
  parseDeclaration2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.PureScript.Parser.Declarations.parseDeclaration_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
bd069867e33c9e152fc8d62bdd5c544e
  parseDeclaration20 ::
    [Language.PureScript.AST.Declarations.Declaration]
    -> forall b1.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ([Language.PureScript.AST.Declarations.Declaration]
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ([Language.PureScript.AST.Declarations.Declaration]
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
c7d2ecd7406c012cfd7b1a563c9405c1
  parseDeclaration21 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration22) -}
375d2ca3079bd73a9282adde4fae9557
  parseDeclaration22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration23) -}
6040f46ccf968913ab416dd508ee4441
  parseDeclaration23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
14ca9ec83baf52bc7268692d5fcdab9e
  parseDeclaration24 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wm1
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
68fb98e5f6a25c43dd6f73f7e2ba486b
  parseDeclaration25 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.AST.SourcePos.SourceAnn
                      -> Language.PureScript.AST.Declarations.TypeInstanceBody
                      -> Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration29
                   Language.PureScript.Parser.Declarations.parseDeclaration26
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.TypeInstanceBody
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
8cbac76d0cc13c28e4abe49e11799b5b
  parseDeclaration26 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.TypeInstanceBody
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.TypeInstanceBody
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.TypeInstanceBody
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.Ident
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration28
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.Ident>_R))
                   Language.PureScript.Parser.Lexer.doubleColon
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration27
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.TypeInstanceBody
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration27
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.TypeInstanceBody
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
457e72881edc075bec51b4aca75c6cc5
  parseDeclaration27 ::
    Language.PureScript.Names.Ident
    -> forall b.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.TypeInstanceBody
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.TypeInstanceBody
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
18246ef31c8af88c082bafb0715d6e7a
  parseDeclaration28 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.Names.Ident
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.Names.Ident
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.Ident
                   @ ()
                   Language.PureScript.Parser.Common.parseIdent1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.Ident>_R))
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
c41b24b2cdfa3c7f36f6762c84ecfe47
  parseDeclaration29 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration30) -}
82e6e591a88f838b839d55e9ddfab624
  parseDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("declaration"#) -}
ccded0f2655a317faf23d232aa6363ee
  parseDeclaration30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration31) -}
bb67b8b9c36a1b3adc758524f491e907
  parseDeclaration31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("instance"#) -}
6e533be67229d21503e20cbbc4aa0f01
  parseDeclaration32 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
de8926abf6fd31bef065aa068aa5b664
  parseDeclaration33 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.AST.SourcePos.SourceAnn
                      -> Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration35
                   Language.PureScript.Parser.Declarations.parseDeclaration34
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
bd1823d641455a01fd6dd9e91d3ea90d
  parseDeclaration34 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U(U))><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.$wparseTypeClassDeclaration
                   @ b1
                   w
                   w14
                   w15
                   w17) -}
aaa1711e5e3fecb358599976d815ec65
  parseDeclaration35 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration36) -}
2f86442b30557d9845ba84d34a6cdd4a
  parseDeclaration36 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration37) -}
c5b12f4c1231084304f1652a8dd8c8ec
  parseDeclaration37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("class"#) -}
f07d9ac05d3d30c74e335959577ab39b
  parseDeclaration38 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp1
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
be10d8d2e085eabe3a593e51d394c8e1
  parseDeclaration39 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fAlternativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Operators.Precedence
                   @ Language.PureScript.AST.Operators.Fixity
                   Language.PureScript.Parser.Declarations.parseDeclaration42
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Operators.Precedence
                              -> Language.PureScript.AST.Operators.Fixity>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration41
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Integer.Type.Integer>_R))
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.AST.Operators.Fixity)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration40
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Language.PureScript.AST.Operators.Fixity)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration40
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
6bb59882b9358c857d6e6602ced0a88d
  parseDeclaration4 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U(U,U,U)><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.choice2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ [Language.PureScript.AST.Declarations.Declaration]
                   Language.PureScript.Parser.Declarations.parseDeclaration5
                   @ b
                   w14
                   w15
                   w16
                   w17
                   w18) -}
fe8038eeaa96b20895012687b92dac64
  parseDeclaration40 ::
    Language.PureScript.AST.Operators.Fixity
    -> forall b1.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
26d7e1285843722b82c962dd90e5e4dc
  parseDeclaration41 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ GHC.Integer.Type.Integer
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Lexer.natural1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Integer.Type.Integer>_R))) -}
b22d8395da27e66a12a577ae15dc26f3
  parseDeclaration42 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.Operators.Precedence
         -> Language.PureScript.AST.Operators.Fixity)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.Operators.Precedence
         -> Language.PureScript.AST.Operators.Fixity)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
8e79bc2f0fe1b5dc6cd4bde43ac68ead
  parseDeclaration43 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp2
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
87547ee48c8b7cbb96e7ff386b981442
  parseDeclaration44 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.AST.SourcePos.SourceAnn
                      -> Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration46
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration45
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
12928a3b90cb605e7b76dff856a8dc45
  parseDeclaration45 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)> -}
e0dd7c9304d1ac5ed5da64f6b874b350
  parseDeclaration46 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration47
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
19fa57d90f6d2577a8ef986c50d5d99d
  parseDeclaration47 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration51
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration48) -}
18095101b329849752334e687b7859a8
  parseDeclaration48 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration49) -}
65acc65e274507038b6ee97f2bd4af90
  parseDeclaration49 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration50) -}
a95d7c89e5d86cb7f9a3a7f35d9e35f3
  parseDeclaration5 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration62
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration6) -}
f7804631b15c69e29f6f381912f0484c
  parseDeclaration50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("import"#) -}
c253c30c661a2174969ea87d0fb76512
  parseDeclaration51 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration52
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
ab735f74376fe1de808c0d9e69e2d3ad
  parseDeclaration52 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseDeclaration53) -}
7f971efa848cc781be360eb1b28ae24c
  parseDeclaration53 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration54) -}
611e306c2fdcb7b70228d56d69d71c0d
  parseDeclaration54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("foreign"#) -}
3c38a22211cd168ac3cb557f7d860438
  parseDeclaration55 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp3
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
502d41c487e6c3e00c2cd18e609c52a5
  parseDeclaration56 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSS),1*U(1*U,U,U)><L,C(C1(C1(U)))><L,U><L,A><L,1*C1(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Parser.Declarations.$wparseValueDeclaration
                   @ b1
                   ww1
                   ww2
                   ww3
                   w14
                   w15
                   w17 }) -}
d76c50318793a74f380bf3463540113e
  parseDeclaration57 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp4
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
52e57c65cd27f6ade2c5bc3b18e224c1
  parseDeclaration58 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,A><L,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.$wparseTypeSynonymDeclaration
                   @ b1
                   w
                   w14
                   w15
                   w17) -}
8c63a14387ed4bf779f0012161e9052e
  parseDeclaration59 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp5
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
de82c37b03ba9d4da77d887b792804e7
  parseDeclaration6 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration59
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration7) -}
7aec0e6d0ab8b35aa89fa7bbdcb18fd4
  parseDeclaration60 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.Ident
                   @ ()
                   Language.PureScript.Parser.Declarations.parseDeclaration28
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.Ident>_R))
                   Language.PureScript.Parser.Lexer.doubleColon
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration61
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   eerr
                   (\ (x1 :: Language.PureScript.Names.Ident)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Language.PureScript.Parser.Declarations.parseDeclaration61
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
3d5971070c257f7412ff0b9c112aa321
  parseDeclaration61 ::
    Language.PureScript.Names.Ident
    -> forall b.
       Text.Parsec.Prim.State
         [Language.PureScript.Parser.Lexer.PositionedToken]
         Language.PureScript.Parser.State.ParseState
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((Language.PureScript.AST.SourcePos.SourceAnn
            -> Language.PureScript.AST.Declarations.Declaration)
           -> Text.Parsec.Prim.State
                [Language.PureScript.Parser.Lexer.PositionedToken]
                Language.PureScript.Parser.State.ParseState
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ (name :: Language.PureScript.Names.Ident)
                   @ b
                   (eta18 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                   (eta19 :: (Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration)
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta20 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta21 :: (Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration)
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta22 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Types.Type
                   Language.PureScript.Parser.Types.parsePolyType_p
                   Language.PureScript.Parser.Types.parsePolyType2
                   @ b
                   eta18
                   (\ (x1 :: Language.PureScript.Types.Type)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                      (err :: Text.Parsec.Error.ParseError) ->
                    eta19
                      (\ (sa :: Language.PureScript.AST.SourcePos.SourceAnn) ->
                       case sa of dt8 { (,) ipv ipv1 ->
                       case name of dt9 { DEFAULT ->
                       case x1 of dt10 { DEFAULT ->
                       Language.PureScript.AST.Declarations.TypeDeclaration
                         dt8
                         dt9
                         dt10 } } })
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta20
                   (\ (x1 :: Language.PureScript.Types.Type)
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta21
                      (\ (sa :: Language.PureScript.AST.SourcePos.SourceAnn) ->
                       case sa of dt8 { (,) ipv ipv1 ->
                       case name of dt9 { DEFAULT ->
                       case x1 of dt10 { DEFAULT ->
                       Language.PureScript.AST.Declarations.TypeDeclaration
                         dt8
                         dt9
                         dt10 } } })
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta22) -}
0a7c5c9f61734f84e28b7cbe4f24f295
  parseDeclaration62 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Declaration]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: [Language.PureScript.AST.Declarations.Declaration]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wp6
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
f98eb137e899c1156fdfe0131ac28d17
  parseDeclaration63 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.$wparseDataDeclaration
                   @ b1
                   w
                   w14
                   w15
                   w17) -}
a8a7103966835788c012c4844b1e70ef
  parseDeclaration7 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration57
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration8) -}
4b39432452b96067458febb1bedaca33
  parseDeclaration8 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration55
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration9) -}
a2c522cc98c98f47761e1c1ffdb2213f
  parseDeclaration9 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       [Language.PureScript.AST.Declarations.Declaration]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        [Language.PureScript.AST.Declarations.Declaration])
                   Language.PureScript.Parser.Declarations.parseDeclaration43
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Declaration]>_R))
                   Language.PureScript.Parser.Declarations.parseDeclaration10) -}
0e1ab7fe0ead77e7d84afaa1370fd62c
  parseDeclarationRef ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.DeclarationRef
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseDeclarationRef1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.DeclarationRef>_R)) -}
ca7d3d0c43ff3b5a8194316f5797798b
  parseDeclarationRef1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.DeclarationRef
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: Language.PureScript.AST.Declarations.DeclarationRef
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Language.PureScript.AST.Declarations.DeclarationRef
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wparseDeclarationRef
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w16
                   w17 } }) -}
fd73e8d67257d3ca13e2760e4928e57b
  parseDeclaration_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Parser.Declarations.parseDeclaration3) -}
7d8e0441b3e99c3e3dde3e9e8415a21d
  parseGuard ::
    Language.PureScript.Parser.Lexer.TokenParser
      [Language.PureScript.AST.Declarations.Guard]
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseGuard1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <[Language.PureScript.AST.Declarations.Guard]>_R)) -}
b23abe0143e42372605508576f6f85ef
  parseGuard1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [Language.PureScript.AST.Declarations.Guard]
                   Language.PureScript.Parser.Declarations.parseGuard4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseGuard2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Declarations.Guard]>_R))) -}
11b91ef2089f1b90e4b90751e0b60371
  parseGuard2 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Declarations.Guard]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: [Language.PureScript.AST.Declarations.Guard]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: [Language.PureScript.AST.Declarations.Guard]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Parser.Lexer.PositionedToken
                   @ Language.PureScript.Parser.State.ParseState
                   @ Language.PureScript.AST.Declarations.Guard
                   @ ()
                   Language.PureScript.Parser.Declarations.parseGuard3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Guard>_R))
                   Language.PureScript.Parser.Lexer.comma
                   @ b
                   w14
                   w15
                   w16
                   w17
                   w18) -}
fe1dc4ec7726dad38b221f0ba2a1dc98
  parseGuard3 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Guard
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Guard
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)> -}
03e0b9c9520ec5d45648fca1499cbda0
  parseGuard4 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   Language.PureScript.Parser.Lexer.pipe
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
fea0e58110d6854e5602b763985f4906
  parseImportDeclaration' ::
    Language.PureScript.Parser.Lexer.TokenParser
      (Language.PureScript.Names.ModuleName,
       Language.PureScript.AST.Declarations.ImportDeclarationType,
       GHC.Base.Maybe Language.PureScript.Names.ModuleName)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseImportDeclaration'1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <(Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)>_R)) -}
d2f43720d1cc7fe370cf6349afe865b3
  parseImportDeclaration'1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      Language.PureScript.AST.Declarations.ImportDeclarationType,
                      GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   Language.PureScript.Parser.Declarations.parseDeclaration48
                   Language.PureScript.Parser.Declarations.parseImportDeclaration'2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               Language.PureScript.AST.Declarations.ImportDeclarationType,
                               GHC.Base.Maybe Language.PureScript.Names.ModuleName)>_R))) -}
12d44ded42f3f683a2e3a01a10c8bb93
  parseImportDeclaration'2 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      Language.PureScript.AST.Declarations.ImportDeclarationType,
                      GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseImportDeclaration'3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               Language.PureScript.AST.Declarations.ImportDeclarationType,
                               GHC.Base.Maybe Language.PureScript.Names.ModuleName)>_R))) -}
c0a75b2d4ecc3871fb307e12891a8ef7
  parseImportDeclaration'3 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         Language.PureScript.AST.Declarations.ImportDeclarationType,
         GHC.Base.Maybe Language.PureScript.Names.ModuleName)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSS),1*U(U,U,U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Parser.Declarations.$wparseImportDeclaration'
                   @ b1
                   ww1
                   ww2
                   ww3
                   w14
                   w15
                   w17 }) -}
80545d237df288c4263ec19f6fef72f5
  parseLocalDeclaration ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.Declaration
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseLocalDeclaration1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.Declaration>_R)) -}
75f02a0c3768a90d656af7512f958223
  parseLocalDeclaration1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta18 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)
                   (eta19 :: Language.PureScript.AST.Declarations.Declaration
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta20 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta21 :: Language.PureScript.AST.Declarations.Declaration
                             -> Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b)
                   (eta22 :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Declarations.Declaration
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration2
                   @ b
                   eta18
                   eta19
                   eta20
                   eta21
                   eta22) -}
f4f078c3d9858894b9542fd61581b6f4
  parseLocalDeclaration10 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (([Language.PureScript.AST.Binders.Binder]
         -> Language.PureScript.Parser.Lexer.TokenParser
              (Language.PureScript.AST.SourcePos.SourceAnn
               -> Language.PureScript.AST.Declarations.Declaration))
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([Language.PureScript.AST.Binders.Binder]
         -> Language.PureScript.Parser.Lexer.TokenParser
              (Language.PureScript.AST.SourcePos.SourceAnn
               -> Language.PureScript.AST.Declarations.Declaration))
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: ([Language.PureScript.AST.Binders.Binder]
                            -> Language.PureScript.Parser.Lexer.TokenParser
                                 (Language.PureScript.AST.SourcePos.SourceAnn
                                  -> Language.PureScript.AST.Declarations.Declaration))
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: ([Language.PureScript.AST.Binders.Binder]
                            -> Language.PureScript.Parser.Lexer.TokenParser
                                 (Language.PureScript.AST.SourcePos.SourceAnn
                                  -> Language.PureScript.AST.Declarations.Declaration))
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Language.PureScript.Parser.Declarations.parseBinder1
                   @ b1
                   s1
                   (\ (x1 :: Language.PureScript.AST.Binders.Binder) ->
                    cok
                      (Language.PureScript.Parser.Declarations.parseLocalDeclaration_go
                         x1))
                   cerr
                   (\ (x1 :: Language.PureScript.AST.Binders.Binder) ->
                    eok
                      (Language.PureScript.Parser.Declarations.parseLocalDeclaration_go
                         x1))
                   eerr) -}
306e7feca6df61bef87bf585a9a01bba
  parseLocalDeclaration11 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseDeclaration60
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
8975e0a9bc74fce5efa3b31512fdbae9
  parseLocalDeclaration2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
d3c0662f1f5b4268d42d883b9d8a5f07
  parseLocalDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("local declaration"#) -}
f31ef9dba961f42491a2334589d5c5b6
  parseLocalDeclaration4 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U(U,U,U)><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: Language.PureScript.AST.Declarations.Declaration
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.choice2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Declarations.Declaration
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration5
                   @ b
                   w14
                   w15
                   w16
                   w17
                   w18) -}
48b0f01a379ba25db488a5cf2eea2a3b
  parseLocalDeclaration5 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       Language.PureScript.AST.Declarations.Declaration]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration11
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration6) -}
fd107c31adbf0d61ce9d1bcd5d40d55a
  parseLocalDeclaration6 ::
    [Text.Parsec.Prim.ParsecT
       [Language.PureScript.Parser.Lexer.PositionedToken]
       Language.PureScript.Parser.State.ParseState
       Data.Functor.Identity.Identity
       Language.PureScript.AST.Declarations.Declaration]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Prim.ParsecT
                        [Language.PureScript.Parser.Lexer.PositionedToken]
                        Language.PureScript.Parser.State.ParseState
                        Data.Functor.Identity.Identity
                        Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Declaration>_R))
                   (GHC.Types.[]
                      @ (Text.Parsec.Prim.ParsecT
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState
                           Data.Functor.Identity.Identity
                           Language.PureScript.AST.Declarations.Declaration))) -}
a2995e5e210581f10626aa831be361fd
  parseLocalDeclaration7 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Declaration
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Language.PureScript.Parser.Common.withSourceAnnF3
                   @ ((Language.PureScript.AST.SourcePos.SourceSpan,
                       [Language.PureScript.Comments.Comment])
                      -> Language.PureScript.AST.Declarations.Declaration)
                   @ Language.PureScript.AST.Declarations.Declaration
                   @ Language.PureScript.Parser.State.ParseState
                   (Language.PureScript.Parser.Common.withSourceAnnF2
                      @ Language.PureScript.AST.Declarations.Declaration)
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.SourcePos.SourceAnn
                              -> Language.PureScript.AST.Declarations.Declaration>_R))) -}
dd8fc4a1473bc1f2ec99cd83ce3b4889
  parseLocalDeclaration8 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.AST.SourcePos.SourceAnn
         -> Language.PureScript.AST.Declarations.Declaration)
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State
                            [Language.PureScript.Parser.Lexer.PositionedToken]
                            Language.PureScript.Parser.State.ParseState)
                   (cok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (Language.PureScript.AST.SourcePos.SourceAnn
                            -> Language.PureScript.AST.Declarations.Declaration)
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fAlternativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ [Language.PureScript.AST.Binders.Binder]
                   @ (Language.PureScript.Parser.Lexer.TokenParser
                        (Language.PureScript.AST.SourcePos.SourceAnn
                         -> Language.PureScript.AST.Declarations.Declaration))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration10
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Binders.Binder]
                              -> Language.PureScript.Parser.Lexer.TokenParser
                                   (Language.PureScript.AST.SourcePos.SourceAnn
                                    -> Language.PureScript.AST.Declarations.Declaration)>_R))
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Language.PureScript.AST.Binders.Binder]>_R))
                   @ b1
                   s1
                   (\ (x1 :: Text.Parsec.Prim.ParsecT
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState
                               Data.Functor.Identity.Identity
                               (Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration))
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    x1
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                         <Language.PureScript.Parser.State.ParseState>_R
                         <Data.Functor.Identity.Identity>_R
                         <Language.PureScript.AST.SourcePos.SourceAnn
                          -> Language.PureScript.AST.Declarations.Declaration>_R)
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)
                         (err' :: Text.Parsec.Error.ParseError) ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Text.Parsec.Prim.ParsecT
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState
                               Data.Functor.Identity.Identity
                               (Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration))
                      (s2 :: Text.Parsec.Prim.State
                               [Language.PureScript.Parser.Lexer.PositionedToken]
                               Language.PureScript.Parser.State.ParseState)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    x1
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                         <Language.PureScript.Parser.State.ParseState>_R
                         <Data.Functor.Identity.Identity>_R
                         <Language.PureScript.AST.SourcePos.SourceAnn
                          -> Language.PureScript.AST.Declarations.Declaration>_R)
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Language.PureScript.AST.SourcePos.SourceAnn
                                -> Language.PureScript.AST.Declarations.Declaration)
                         (s3 :: Text.Parsec.Prim.State
                                  [Language.PureScript.Parser.Lexer.PositionedToken]
                                  Language.PureScript.Parser.State.ParseState)
                         (err' :: Text.Parsec.Error.ParseError) ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
7266e406c92df416da061759a41cdea8
  parseLocalDeclaration9 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ([Language.PureScript.AST.Binders.Binder]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Language.PureScript.AST.Binders.Binder]
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w14 :: Text.Parsec.Prim.State
                             [Language.PureScript.Parser.Lexer.PositionedToken]
                             Language.PureScript.Parser.State.ParseState)
                   (w15 :: [Language.PureScript.AST.Binders.Binder]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w16 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w17 :: [Language.PureScript.AST.Binders.Binder]
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (w18 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wmany
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Binders.Binder
                   Language.PureScript.Parser.Declarations.parseBinderNoParens1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Binders.Binder>_R))
                   @ b
                   w14
                   w15
                   w16
                   w17) -}
0f4415cd2ad727544e59fc4665d2050c
  parseLocalDeclaration_go ::
    Language.PureScript.AST.Binders.Binder
    -> [Language.PureScript.AST.Binders.Binder]
    -> Language.PureScript.Parser.Lexer.TokenParser
         (Language.PureScript.AST.SourcePos.SourceAnn
          -> Language.PureScript.AST.Declarations.Declaration)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
f0d88bafce03007d66f47f04eb96d52d
  parseLocalDeclaration_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Parser.Declarations.parseLocalDeclaration3) -}
e14bb98ce90ba24cbcfacb28393aeecb
  parseModule ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.Module
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(1*U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseModule1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.Module>_R)) -}
4361e8f9e773966ee31342bca190e2b3
  parseModule1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Module
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Language.PureScript.AST.Declarations.Module
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SS(LSS)S),1*U(1*U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: Language.PureScript.AST.Declarations.Module
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: Language.PureScript.AST.Declarations.Module
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Language.PureScript.Parser.Declarations.$wparseModule
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w14
                   w15
                   w17 } }) -}
27901071699f8e311dd48d3e7924e87f
  parseModuleDeclaration ::
    Language.PureScript.Parser.Lexer.TokenParser
      (Language.PureScript.Names.ModuleName,
       GHC.Base.Maybe
         [Language.PureScript.AST.Declarations.DeclarationRef])
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseModuleDeclaration1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <(Language.PureScript.Names.ModuleName,
                            GHC.Base.Maybe
                              [Language.PureScript.AST.Declarations.DeclarationRef])>_R)) -}
3fe0856d781a336c45d2fe5a5b3f9e88
  parseModuleDeclaration1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      GHC.Base.Maybe
                        [Language.PureScript.AST.Declarations.DeclarationRef])
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration4
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               GHC.Base.Maybe
                                 [Language.PureScript.AST.Declarations.DeclarationRef])>_R))) -}
de0a87afd37cca762c04e9b6541bfe8c
  parseModuleDeclaration2 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [Language.PureScript.Parser.Lexer.PositionedToken]
                   @ Language.PureScript.Parser.State.ParseState
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (Language.PureScript.Names.ModuleName,
                      GHC.Base.Maybe
                        [Language.PureScript.AST.Declarations.DeclarationRef])
                   (Language.PureScript.Parser.Common.indented1
                      @ [Language.PureScript.Parser.Lexer.PositionedToken])
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                             <Language.PureScript.Parser.State.ParseState>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Names.ModuleName,
                               GHC.Base.Maybe
                                 [Language.PureScript.AST.Declarations.DeclarationRef])>_R))) -}
f6a930c3c73068b21b9a405a8e9720a0
  parseModuleDeclaration3 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Language.PureScript.Names.ModuleName,
         GHC.Base.Maybe
           [Language.PureScript.AST.Declarations.DeclarationRef])
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSS),1*U(U,U,U)><L,U><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State
                           [Language.PureScript.Parser.Lexer.PositionedToken]
                           Language.PureScript.Parser.State.ParseState)
                   (w14 :: (Language.PureScript.Names.ModuleName,
                            GHC.Base.Maybe
                              [Language.PureScript.AST.Declarations.DeclarationRef])
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w15 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w16 :: (Language.PureScript.Names.ModuleName,
                            GHC.Base.Maybe
                              [Language.PureScript.AST.Declarations.DeclarationRef])
                           -> Text.Parsec.Prim.State
                                [Language.PureScript.Parser.Lexer.PositionedToken]
                                Language.PureScript.Parser.State.ParseState
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (w17 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Parser.Declarations.$wparseModuleDeclaration
                   @ b1
                   ww1
                   ww2
                   ww3
                   w14
                   w15
                   w17 }) -}
94aa570c0429e205864c002e19d2593e
  parseModuleDeclaration4 ::
    Language.PureScript.Parser.Lexer.TokenParser ()
  {- Unfolding: (Language.PureScript.Parser.Lexer.reserved
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration5) -}
b3a65f0c67e163939128ee9b07f07acf
  parseModuleDeclaration5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Parser.Declarations.parseModuleDeclaration6) -}
ea6fdcca99a00a24bac082270c9bab01
  parseModuleDeclaration6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("module"#) -}
307699faeffc033195a42b2ff5bc65d3
  parseModuleFromFile ::
    (k -> GHC.IO.FilePath)
    -> (k, Data.Text.Internal.Text)
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         (k, Language.PureScript.AST.Declarations.Module)
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ k3
                   (w :: k3 -> GHC.IO.FilePath)
                   (w14 :: (k3, Data.Text.Internal.Text)) ->
                 case w14 of ww { (,) ww1 ww2 ->
                 Language.PureScript.Parser.Declarations.$wparseModuleFromFile
                   @ k3
                   w
                   ww1
                   ww2 }) -}
403e045e2e60467afb2ade6a3ac38642
  parseModulesFromFiles ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    (k -> GHC.IO.FilePath)
    -> [(k, Data.Text.Internal.Text)]
    -> m [(k, Language.PureScript.AST.Declarations.Module)]
  {- Arity: 3,
     Strictness: <S(S(LC(C(S))LLL)LL),U(U(U(U(C(C1(U)),A),C(U),A,C(C1(C1(U))),A,A),C(C1(U)),A,C(U),A),C(U),C(C1(U)))><L,C(U)><L,1*U>,
     Unfolding: (\ @ m :: * -> *
                   @ k3
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      Language.PureScript.Errors.MultipleErrors m)
                   (eta18 :: k3 -> GHC.IO.FilePath)
                   (eta19 :: [(k3, Data.Text.Internal.Text)]) ->
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.Error.Class.$p1MonadError
                       @ Language.PureScript.Errors.MultipleErrors
                       @ m
                       $dMonadError
                 } in
                 Language.PureScript.Errors.parU
                   @ m
                   @ (Data.Either.Either
                        Text.Parsec.Error.ParseError
                        (k3, Language.PureScript.AST.Declarations.Module))
                   @ (k3, Language.PureScript.AST.Declarations.Module)
                   $dMonadError
                   (let {
                      xs :: [Data.Either.Either
                               Text.Parsec.Error.ParseError
                               (k3, Language.PureScript.AST.Declarations.Module)]
                      = GHC.Base.map
                          @ (k3, Data.Text.Internal.Text)
                          @ (Data.Either.Either
                               Text.Parsec.Error.ParseError
                               (k3, Language.PureScript.AST.Declarations.Module))
                          (Language.PureScript.Parser.Declarations.parseModuleFromFile
                             @ k3
                             eta18)
                          eta19
                    } in
                    case Control.Parallel.Strategies.parList1
                           @ (Data.Either.Either
                                Text.Parsec.Error.ParseError
                                (k3, Language.PureScript.AST.Declarations.Module))
                           xs of x1 { DEFAULT ->
                    case (GHC.Magic.lazy
                            @ (Control.Parallel.Strategies.Eval
                                 [Data.Either.Either
                                    Text.Parsec.Error.ParseError
                                    (k3, Language.PureScript.AST.Declarations.Module)])
                            (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, xs #))
                              `cast`
                            (Sym (Control.Parallel.Strategies.N:Eval[0]
                                      <[Data.Either.Either
                                          Text.Parsec.Error.ParseError
                                          (k3, Language.PureScript.AST.Declarations.Module)]>_R)))
                           `cast`
                         (Control.Parallel.Strategies.N:Eval[0]
                              <[Data.Either.Either
                                  Text.Parsec.Error.ParseError
                                  (k3, Language.PureScript.AST.Declarations.Module)]>_R)
                           GHC.Prim.realWorld# of ds { (#,#) ipv ipv1 ->
                    ipv1 } })
                   (\ (ds1 :: Data.Either.Either
                                Text.Parsec.Error.ParseError
                                (k3, Language.PureScript.AST.Declarations.Module)) ->
                    case ds1 of wild {
                      Data.Either.Left x1
                      -> Control.Monad.Error.Class.throwError
                           @ Language.PureScript.Errors.MultipleErrors
                           @ m
                           $dMonadError
                           @ (k3, Language.PureScript.AST.Declarations.Module)
                           (GHC.Types.:
                              @ Language.PureScript.AST.Declarations.ErrorMessage
                              (case Language.PureScript.Parser.Declarations.$wtoPositionedError
                                      x1 of ww { (#,#) ww1 ww2 ->
                               Language.PureScript.AST.Declarations.ErrorMessage ww1 ww2 })
                              (GHC.Types.[] @ Language.PureScript.AST.Declarations.ErrorMessage))
                             `cast`
                           (Sym (Language.PureScript.Errors.N:MultipleErrors[0]))
                      Data.Either.Right y2
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ (k3, Language.PureScript.AST.Declarations.Module)
                           y2 })) -}
4b010ea60e0bb288098254fb9e096aaa
  parseValue ::
    Language.PureScript.Parser.Lexer.TokenParser
      Language.PureScript.AST.Declarations.Expr
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Parser.Declarations.parseValue1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[Language.PureScript.Parser.Lexer.PositionedToken]>_R
                          <Language.PureScript.Parser.State.ParseState>_R
                          <Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Declarations.Expr>_R)) -}
7bb6efc7a70621fe2509a96c8c66df6d
  parseValue1 ::
    Text.Parsec.Prim.State
      [Language.PureScript.Parser.Lexer.PositionedToken]
      Language.PureScript.Parser.State.ParseState
    -> (Language.PureScript.AST.Declarations.Expr
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Language.PureScript.AST.Declarations.Expr
        -> Text.Parsec.Prim.State
             [Language.PureScript.Parser.Lexer.PositionedToken]
             Language.PureScript.Parser.State.ParseState
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
60bc256c19913918bf53c1f451249ca1
  toPositionedError ::
    Text.Parsec.Error.ParseError
    -> Language.PureScript.AST.Declarations.ErrorMessage
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U(U,U,U),U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Text.Parsec.Error.ParseError) ->
                 case Language.PureScript.Parser.Declarations.$wtoPositionedError
                        w of ww { (#,#) ww1 ww2 ->
                 Language.PureScript.AST.Declarations.ErrorMessage ww1 ww2 }) -}
"SPEC/Language.PureScript.Parser.Declarations $fEqQualified @ (ProperName
                                                                'ClassName)" [orphan] forall (v :: GHC.Classes.Eq
                                                                                                                                                                               (Language.PureScript.Names.ProperName
                                                                                                                                                                                  'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fEqQualified @ (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ClassName)
                                          v
  = Language.PureScript.Parser.Declarations.$s$fEqQualified
"SPEC/Language.PureScript.Parser.Declarations $fEqQualified_$c/= @ (ProperName
                                                                     'ClassName)" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                                                                                                                            (Language.PureScript.Names.ProperName
                                                                                                                                                                                               'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fEqQualified_$c/= @ (Language.PureScript.Names.ProperName
                                                    'Language.PureScript.Names.ClassName)
                                               $dEq
  = Language.PureScript.Parser.Declarations.$s$fEqQualified_$s$fEqQualified_$c/=
"SPEC/Language.PureScript.Parser.Declarations $fOrdQualified @ (ProperName
                                                                 'ClassName)" [orphan] forall (v :: GHC.Classes.Ord
                                                                                                                                                                                 (Language.PureScript.Names.ProperName
                                                                                                                                                                                    'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fOrdQualified @ (Language.PureScript.Names.ProperName
                                                'Language.PureScript.Names.ClassName)
                                           v
  = Language.PureScript.Parser.Declarations.$s$fOrdQualified
"SPEC/Language.PureScript.Parser.Declarations $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                                                           (v :: GHC.Base.Monad
                                                                                                   Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = Language.PureScript.Parser.Declarations.$s$fStream[]mtok @ tok
"SPEC/Language.PureScript.Parser.Declarations $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                                                    ($dMonad :: GHC.Base.Monad
                                                                                                                  Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Language.PureScript.Parser.Declarations.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons
      @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

