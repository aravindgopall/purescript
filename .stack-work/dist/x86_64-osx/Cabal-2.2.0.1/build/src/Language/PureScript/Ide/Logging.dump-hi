
==================== FINAL INTERFACE ====================
2018-11-30 20:48:13.103136 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Ide.Logging 8043
  interface hash: b95cea985c0597e296a3be55bccee230
  ABI hash: 502eef995fef3c7a1a41c5ba470e9af8
  export-list hash: f1c24abc44aee4849896dd66a00aa339
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2c479d38cdd04295a06ce5c00ce33b47
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Ide.Logging.displayTimeSpec
  Language.PureScript.Ide.Logging.labelTimespec
  Language.PureScript.Ide.Logging.logPerf
  Language.PureScript.Ide.Logging.runLogger
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Errors.JSON
                     Language.PureScript.Externs Language.PureScript.Ide.Types
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Linter Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      auto-update-0.1.4 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 boxes-0.1.5 bytestring-0.10.8.2 clock-0.7.2
                      colour-2.3.4 conduit-1.3.0.3 conduit-extra-1.3.0
                      containers-0.5.11.0 data-ordlist-0.4.7.0 deepseq-1.4.3.0
                      directory-1.3.1.5 dlist-0.8.0.4 easy-file-0.2.2 exceptions-0.10.0
                      fast-logger-2.4.11 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      lifted-base-0.2.3.12 microlens-0.4.9.1 microlens-ghc-0.4.9
                      microlens-mtl-0.1.11.1 microlens-platform-0.3.10
                      microlens-th-0.4.2.1 monad-control-1.0.2.3 monad-logger-0.3.28.5
                      monad-loops-0.4.3 mtl-2.2.2 old-locale-1.0.0.7 old-time-1.1.0.3
                      parallel-3.2.1.1 parsec-3.1.13.0 pattern-arrows-0.0.2
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      resourcet-1.2.1 safe-0.3.17 scientific-0.3.6.2 sourcemap-0.1.6
                      split-0.2.3.3 stm-2.4.5.0 stm-chans-3.0.0.4 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-time-0.3.8
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: unix-time-0.3.8:Data.UnixTime.Diff
         syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock
                         conduit-1.3.0.3:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.3:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Control.Monad.Logger
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Ide.Types
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Make.Monad
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Monad.IO.Class 96109c36cb3c919872278540487fa39e
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Text.Printf 115e6d1593f02cf01fd99a33fbd64b81
import  -/  clock-0.7.2:System.Clock cbce19563cf76d6cbba1941b319d19f8
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  monad-logger-0.3.28.5:Control.Monad.Logger ae6f9fbc4451af5ecbeab48dfdfd01ee
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  Language.PureScript.Ide.Types d9d9fd4c2b6a1fdeece731a5e8479937
  exports: dd47afbd66baea5bbcdd5e2641556a91
  IdeLogLevel f52b3bbb177ebfc52e267d9dd8a9eb78
  LogAll 9b963463dc6fd45e2a7c862e902dad60
  LogDebug 33a1a06ab4e722918a21b78a52b7582a
  LogDefault 6f6fa26cd1e6671c4100a83e6b06b706
  LogNone 84d49c71716edf9fb4826f1123ebaac4
  LogPerf 44443ae305f5f7fd33d4a7d9bc5e3543
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
cfeb3472a9efc382368308eae18de9d0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Ide.Logging.$trModule3
                   Language.PureScript.Ide.Logging.$trModule1) -}
ee71d3c3bb0af25fdb7ddf40f8d011b9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Logging.$trModule2) -}
cab903202e10982034db20ab38a2f9a9
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Ide.Logging"#) -}
a0b50c03048b43199ceeea5c424052e2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Logging.$trModule4) -}
ee5fb18e55e15e469dad669cecba48bb
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
038e722f1862fc48e28313cb177d300d
  $wlabelTimespec ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> System.Clock.TimeSpec
    -> Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><S,U><S,U><L,1*U(U,U)>,
     Inline: [0] -}
3b15a7b4e781397cc6eeb4d7e0fb0a26
  $wrunLogger ::
    Language.PureScript.Ide.Types.IdeLogLevel
    -> Control.Monad.Logger.LoggingT m a -> m a
  {- Arity: 2, Strictness: <L,U><C(S),1*C1(U)>, Inline: [0] -}
6effe2be22125576e87fd8b86be01d7d
  displayTimeSpec :: System.Clock.TimeSpec -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,1*U(U,U)> -}
dbda91f701cb116ec2f286d4db322f7d
  labelTimespec ::
    Data.Text.Internal.Text
    -> System.Clock.TimeSpec -> Data.Text.Internal.Text
  {- Arity: 2, Strictness: <S(SSS),1*U(U,U,U)><L,1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Text.Internal.Text) (w1 :: System.Clock.TimeSpec) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Language.PureScript.Ide.Logging.$wlabelTimespec
                   ww1
                   ww2
                   ww3
                   w1 }) -}
32b7bd06b53b47916f10ab4612b9fbbf
  logPerf ::
    (Control.Monad.IO.Class.MonadIO m,
     Control.Monad.Logger.MonadLogger m) =>
    (System.Clock.TimeSpec -> Data.Text.Internal.Text) -> m t -> m t
  {- Arity: 4,
     Strictness: <S(S(LC(C(S))LLL)L),U(1*U(1*U(A,C(U),A,A,A,A),C(C1(U)),C(C1(U)),A,A),1*C1(U))><L,U(A,C(C1(C1(C1(C1(U))))))><L,C(U)><L,U>,
     Unfolding: (\ @ m :: * -> *
                   @ t
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   ($dMonadLogger :: Control.Monad.Logger.MonadLogger m)
                   (eta :: System.Clock.TimeSpec -> Data.Text.Internal.Text)
                   (eta1 :: m t) ->
                 let {
                   lvl6 :: m System.Clock.TimeSpec
                   = Control.Monad.IO.Class.liftIO
                       @ m
                       $dMonadIO
                       @ System.Clock.TimeSpec
                       Language.PureScript.Ide.Logging.logPerf4
                         `cast`
                       (Sym (GHC.Types.N:IO[0] <System.Clock.TimeSpec>_R))
                 } in
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO
                 } in
                 let {
                   $dApplicative :: GHC.Base.Applicative m
                   = GHC.Base.$p1Monad @ m $dMonad
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ System.Clock.TimeSpec
                   @ t
                   lvl6
                   (\ (start :: System.Clock.TimeSpec) ->
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ t
                      @ t
                      eta1
                      (\ (result :: t) ->
                       let {
                         lvl7 :: m t = GHC.Base.pure @ m $dApplicative @ t result
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ System.Clock.TimeSpec
                         @ t
                         lvl6
                         (\ (end :: System.Clock.TimeSpec) ->
                          GHC.Base.>>
                            @ m
                            $dMonad
                            @ ()
                            @ t
                            (Control.Monad.Logger.monadLoggerLog
                               @ m
                               $dMonadLogger
                               @ Data.Text.Internal.Text
                               System.Log.FastLogger.LogStr.$fToLogStrText0_$ctoLogStr
                                 `cast`
                               (Sym (System.Log.FastLogger.LogStr.N:ToLogStr[0]
                                         <Data.Text.Internal.Text>_N))
                               Control.Monad.Logger.defaultLoc
                               Data.Text.Internal.empty_
                               Language.PureScript.Ide.Logging.logPerf1
                               (eta
                                  (case start of wild { System.Clock.TimeSpec dt dt1 ->
                                   case end of wild1 { System.Clock.TimeSpec dt2 dt3 ->
                                   let {
                                     ww2 :: GHC.Prim.Int# = GHC.Prim.-# dt1 dt3
                                   } in
                                   let {
                                     ww1 :: GHC.Prim.Int# = GHC.Prim.-# dt dt2
                                   } in
                                   let {
                                     $j :: System.Clock.TimeSpec <join 0> {- Strictness: m -}
                                     = case System.Clock.$fEqTimeSpec1 of ww3 { GHC.Int.I64# ww4 ->
                                       case GHC.Int.$w$cdivMod2 ww2 ww4 of ww5 { (#,#) ww6 ww7 ->
                                       case ww6 of wild2 { GHC.Int.I64# y# ->
                                       case ww7 of dt4 { GHC.Int.I64# dt5 ->
                                       case System.Clock.$w$cabs
                                              (GHC.Prim.+# ww1 y#)
                                              dt5 of ww11 { (#,#) ww12 ww13 ->
                                       System.Clock.TimeSpec ww12 ww13 } } } } }
                                   } in
                                   case GHC.Prim.<# ww2 0# of lwild {
                                     DEFAULT
                                     -> case System.Clock.$fEqTimeSpec1 of wild2 { GHC.Int.I64# y ->
                                        case GHC.Prim.>=# ww2 y of lwild1 {
                                          DEFAULT
                                          -> case System.Clock.$w$cabs
                                                    ww1
                                                    ww2 of ww3 { (#,#) ww4 ww5 ->
                                             System.Clock.TimeSpec ww4 ww5 }
                                          1# -> $j } }
                                     1# -> $j } } })))
                            lvl7)))) -}
83f602063c0ac2c0e3c6577903177259
  logPerf1 :: Control.Monad.Logger.LogLevel
  {- Strictness: m5,
     Unfolding: (Control.Monad.Logger.LevelOther
                   Language.PureScript.Ide.Logging.logPerf2) -}
9a437457406c6da31fc7de016337b89b
  logPerf2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Ide.Logging.logPerf3) -}
1032d858ef5efddc450a1ec16420188d
  logPerf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("perf"#) -}
853eab1e9ed553a56f02d573f8c18b23
  logPerf4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, System.Clock.TimeSpec #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        16#
                        8#
                        eta of ds3 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds4 { (#,#) ipv2 ipv3 ->
                 let {
                   ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 case {__pkg_ccall_GC clock-0.7.2 GHC.Prim.Int#
                                                  -> GHC.Prim.Addr#
                                                  -> GHC.Prim.State# GHC.Prim.RealWorld
                                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        0#
                        ptr
                        ipv2 of wild1 { Unit# ds5 ->
                 case GHC.Prim.readInt64OffAddr#
                        @ GHC.Prim.RealWorld
                        ptr
                        0#
                        ds5 of ds6 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt64OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ptr 8#)
                        0#
                        ipv4 of ds7 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.UnliftedRep
                        @ GHC.Prim.ByteArray#
                        ipv3
                        ipv6 of s4 { DEFAULT ->
                 (# s4, System.Clock.TimeSpec ipv5 ipv7 #) } } } } } }) -}
84c8023e8f27f863766ee07a8171d65f
  runLogger ::
    Control.Monad.IO.Class.MonadIO m =>
    Language.PureScript.Ide.Types.IdeLogLevel
    -> Control.Monad.Logger.LoggingT m a -> m a
  {- Arity: 3, Strictness: <L,A><L,U><C(S),1*C1(U)>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ @ m :: * -> *
                   @ a
                   (w :: Control.Monad.IO.Class.MonadIO m)
                   (w1 :: Language.PureScript.Ide.Types.IdeLogLevel)
                   (w2 :: Control.Monad.Logger.LoggingT m a) ->
                 Language.PureScript.Ide.Logging.$wrunLogger @ m @ a w1 w2) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

