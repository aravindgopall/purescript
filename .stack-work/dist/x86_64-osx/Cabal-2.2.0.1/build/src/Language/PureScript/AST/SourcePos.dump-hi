
==================== FINAL INTERFACE ====================
2019-01-24 14:13:34.730015 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos [family instance module] 8043
  interface hash: b37762f8264baaf7debf3735049b40c9
  ABI hash: 63acacac5b7be73d04e5be0047a9a89a
  export-list hash: a1e32a05596348684f99f9072c553e2b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c3db7f6c387ef27e8d7dd7e5d6bd8948
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.AST.SourcePos.NullSourceAnn
  Language.PureScript.AST.SourcePos.NullSourceSpan
  Language.PureScript.AST.SourcePos.displaySourcePos
  Language.PureScript.AST.SourcePos.displaySourcePosShort
  Language.PureScript.AST.SourcePos.displaySourceSpan
  Language.PureScript.AST.SourcePos.displayStartEndPos
  Language.PureScript.AST.SourcePos.displayStartEndPosShort
  Language.PureScript.AST.SourcePos.internalModuleSourceSpan
  Language.PureScript.AST.SourcePos.nonEmptySpan
  Language.PureScript.AST.SourcePos.nullSourceAnn
  Language.PureScript.AST.SourcePos.nullSourceSpan
  Language.PureScript.AST.SourcePos.widenSourceAnn
  Language.PureScript.AST.SourcePos.widenSourceSpan
  Language.PureScript.AST.SourcePos.SourceAnn
  Language.PureScript.AST.SourcePos.SourcePos{Language.PureScript.AST.SourcePos.SourcePos sourcePosColumn sourcePosLine}
  Language.PureScript.AST.SourcePos.SourceSpan{Language.PureScript.AST.SourcePos.SourceSpan spanEnd spanName spanStart}
module dependencies: Language.PureScript.Comments
package dependencies: aeson-1.3.1.1 array-0.5.2.0
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      pretty-1.1.3.6 primitive-0.6.3.0 random-1.1 scientific-0.3.6.2
                      tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  filepath-1.4.2:System.FilePath a538d436328dd004b88f7d29a8b244c0
import  -/  filepath-1.4.2:System.FilePath.Posix c021b7a40cfcdd9b08724b5bb7566b59
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Language.PureScript.Comments 1a682522a2f855328ca87bb68705794c
  exports: 9921c985b3279420b3b7a2b7ccc8b32e
  Comment 2e827a5b834f92cc9beef533348585fa
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
5fbb15836e08aab95aa1dd5ab8eeb65d
  $bNullSourceAnn :: Language.PureScript.AST.SourcePos.SourceAnn
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Language.PureScript.AST.SourcePos.$bNullSourceSpan,
                  GHC.Types.[] @ Language.PureScript.Comments.Comment)) -}
13ee7acdc08a94d22278847a0cfbc82d
  $bNullSourceSpan :: Language.PureScript.AST.SourcePos.SourceSpan
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.AST.SourcePos.SourceSpan
                   (GHC.Types.[] @ GHC.Types.Char)
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan1
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan1) -}
8a5abe6dfb23b667ea44b726bee01f19
  $bNullSourceSpan1 :: Language.PureScript.AST.SourcePos.SourcePos
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.AST.SourcePos.SourcePos
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan2
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan2) -}
178fb93648e988e9f87192f0a6811669
  $bNullSourceSpan2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fEqSourcePos ::
    GHC.Classes.Eq Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourcePos
                  Language.PureScript.AST.SourcePos.$fEqSourcePos_$c==
                  Language.PureScript.AST.SourcePos.$fEqSourcePos_$c/= -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fEqSourcePos_$c/= ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourcePos)
                   (y :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case x of wild { Language.PureScript.AST.SourcePos.SourcePos a1 a2 ->
                 case y of wild1 { Language.PureScript.AST.SourcePos.SourcePos b1 b2 ->
                 case GHC.Classes.eqInt a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.eqInt a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fEqSourcePos_$c== ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Language.PureScript.AST.SourcePos.$w$c==
                   ww4
                   ww2
                   ww9
                   ww7 } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fEqSourceSpan ::
    GHC.Classes.Eq Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourceSpan
                  Language.PureScript.AST.SourcePos.$fEqSourceSpan_$c==
                  Language.PureScript.AST.SourcePos.$fEqSourceSpan_$c/= -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fEqSourceSpan_$c/= ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (y :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case Language.PureScript.AST.SourcePos.$fEqSourceSpan_$c==
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fEqSourceSpan_$c== ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w1 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case w1 of ww4 { Language.PureScript.AST.SourcePos.SourceSpan ww5 ww6 ww7 ->
                 Language.PureScript.AST.SourcePos.$w$c==1
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourcePos ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourcePos
                  Language.PureScript.AST.SourcePos.$fFromJSONSourcePos_$cparseJSON
                  Language.PureScript.AST.SourcePos.$fFromJSONSourcePos_$cparseJSONList -}
8aa30f20bb29267000558a46ef260c4b
  $fFromJSONSourcePos1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
831ca319d02dc57b1d128e81bb7eeea2
  $fFromJSONSourcePos2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
5959701b9ea4fe937164f725a0dc49bf
  $fFromJSONSourcePos3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
82ee0b41c9b415346b2da29482b27d19
  $fFromJSONSourcePos4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at src/Language/PureScript/AST/SourcePos.hs:47:5-15"#) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourcePos_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (arr :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
                   = Data.Aeson.Types.FromJSON.$fFromJSON1IntMap_$cparseJSONList arr
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             Language.PureScript.AST.SourcePos.SourcePos f4 r) ->
                  let {
                    lvl25 :: f4 r
                    = kf
                        (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                        Language.PureScript.AST.SourcePos.$fFromJSONSourcePos_msg
                  } in
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a1 :: [GHC.Types.Int]) ->
                     case a1 of wild {
                       [] -> lvl25
                       : line ds
                       -> case ds of wild1 {
                            [] -> lvl25
                            : col ds1
                            -> case ds1 of wild2 {
                                 [] -> ks (Language.PureScript.AST.SourcePos.SourcePos line col)
                                 : ipv ipv1 -> lvl25 } } }))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Language.PureScript.AST.SourcePos.SourcePos>_R))) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourcePos_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.AST.SourcePos.SourcePos]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg3 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.AST.SourcePos.$fFromJSONSourcePos3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.AST.SourcePos.$fFromJSONSourcePos2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.AST.SourcePos.$fFromJSONSourcePos1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.AST.SourcePos.SourcePos] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg3)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.AST.SourcePos.SourcePos]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.AST.SourcePos.$fFromJSONSourcePos_go
                        0#
                        ($wgo 0#) } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourcePos_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.AST.SourcePos.SourcePos]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
4a64ea398511d28e67d37fbb0ec2b9c3
  $fFromJSONSourcePos_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.AST.SourcePos.$fFromJSONSourcePos4) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourceSpan ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourceSpan
                  Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan_$cparseJSON
                  Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan_$cparseJSONList -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourceSpan1 ::
    Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, Strictness: <L,U> -}
2114f2b5bab53b3d69e7013947896bec
  $fFromJSONSourceSpan2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan3) -}
74c8f57c96ce8b3c0529cff0d9fb0899
  $fFromJSONSourceSpan3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SourceSpan"#) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourceSpan_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.FromJSON.withObject
                   @ Language.PureScript.AST.SourcePos.SourceSpan
                   Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan2
                   Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan1) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourceSpan_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.AST.SourcePos.SourceSpan]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg3 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.AST.SourcePos.$fFromJSONSourcePos3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.AST.SourcePos.$fFromJSONSourcePos2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.AST.SourcePos.$fFromJSONSourcePos1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.AST.SourcePos.SourceSpan] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg3)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.AST.SourcePos.SourceSpan]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan_go
                        0#
                        ($wgo 0#) } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fFromJSONSourceSpan_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.AST.SourcePos.SourceSpan]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fGenericSourcePos ::
    GHC.Generics.Generic Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourcePos
                  Language.PureScript.AST.SourcePos.$fGenericSourcePos1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.AST.SourcePos.SourcePos>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "SourcePos"
                                     "Language.PureScript.AST.SourcePos"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "SourcePos" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "sourcePosLine")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "sourcePosColumn")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Types.Int))>_R) ; Sub (Sym (Language.PureScript.AST.SourcePos.Rep_SourcePos[0]))) <x>_N)
                  Language.PureScript.AST.SourcePos.$fGenericSourcePos_$cto -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fGenericSourcePos1 ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "SourcePos" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "sourcePosLine")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "sourcePosColumn")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case x1 of wild { Language.PureScript.AST.SourcePos.SourcePos g1 g2 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "sourcePosLine")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "sourcePosColumn")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Types.Int>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "sourcePosLine")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R GHC.Types.Int>_R) <x>_N)
                    g2
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Types.Int>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "sourcePosColumn")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "SourcePos" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "sourcePosLine")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "sourcePosColumn")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int)>_R) <x>_N) }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fGenericSourcePos_$cto ::
    GHC.Generics.Rep Language.PureScript.AST.SourcePos.SourcePos x
    -> Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.AST.SourcePos.SourcePos x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.AST.SourcePos.Rep_SourcePos[0]) ; (GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.D>_P
                                                                                        <'GHC.Generics.MetaData
                                                                                           "SourcePos"
                                                                                           "Language.PureScript.AST.SourcePos"
                                                                                           "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                           'GHC.Types.False>_P
                                                                                        <GHC.Generics.M1
                                                                                           GHC.Generics.C
                                                                                           ('GHC.Generics.MetaCons
                                                                                              "SourcePos"
                                                                                              'GHC.Generics.PrefixI
                                                                                              'GHC.Types.True)
                                                                                           (GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 ('GHC.Base.Just
                                                                                                    "sourcePosLine")
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 GHC.Types.Int)
                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                               GHC.Generics.S
                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                  ('GHC.Base.Just
                                                                                                                     "sourcePosColumn")
                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                               (GHC.Generics.K1
                                                                                                                  GHC.Generics.R
                                                                                                                  GHC.Types.Int))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                           <*>_N
                                                                                                                                           <GHC.Generics.C>_P
                                                                                                                                           <'GHC.Generics.MetaCons
                                                                                                                                              "SourcePos"
                                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                                              'GHC.Types.True>_P
                                                                                                                                           <GHC.Generics.M1
                                                                                                                                              GHC.Generics.S
                                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                    "sourcePosLine")
                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                              (GHC.Generics.K1
                                                                                                                                                 GHC.Generics.R
                                                                                                                                                 GHC.Types.Int)
                                                                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                               GHC.Generics.S
                                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                     "sourcePosColumn")
                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                               (GHC.Generics.K1
                                                                                                                                                                  GHC.Generics.R
                                                                                                                                                                  GHC.Types.Int)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Language.PureScript.AST.SourcePos.SourcePos
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "sourcePosLine")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds2
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "sourcePosColumn")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P) }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fGenericSourceSpan ::
    GHC.Generics.Generic Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourceSpan
                  Language.PureScript.AST.SourcePos.$fGenericSourceSpan1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.AST.SourcePos.SourceSpan>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "SourceSpan"
                                     "Language.PureScript.AST.SourcePos"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "SourceSpan" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "spanName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "spanStart")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Language.PureScript.AST.SourcePos.SourcePos)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "spanEnd")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.AST.SourcePos.SourcePos)))>_R) ; Sub (Sym (Language.PureScript.AST.SourcePos.Rep_SourceSpan[0]))) <x>_N)
                  Language.PureScript.AST.SourcePos.$fGenericSourceSpan_$cto -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fGenericSourceSpan1 ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "SourceSpan" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "spanName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "spanStart")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.AST.SourcePos.SourcePos)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "spanEnd")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Language.PureScript.AST.SourcePos.SourcePos)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case x1 of wild { Language.PureScript.AST.SourcePos.SourceSpan g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "spanName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "spanStart")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R Language.PureScript.AST.SourcePos.SourcePos)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "spanEnd")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             Language.PureScript.AST.SourcePos.SourcePos))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Base.String>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "spanName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R GHC.Base.String>_R) <x>_N)
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "spanStart")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Language.PureScript.AST.SourcePos.SourcePos))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "spanEnd")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Language.PureScript.AST.SourcePos.SourcePos))
                       @ x
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Language.PureScript.AST.SourcePos.SourcePos>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "spanStart")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Language.PureScript.AST.SourcePos.SourcePos>_R) <x>_N)
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Language.PureScript.AST.SourcePos.SourcePos>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "spanEnd")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Language.PureScript.AST.SourcePos.SourcePos>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "SourceSpan" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "spanName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "spanStart")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   Language.PureScript.AST.SourcePos.SourcePos)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "spanEnd")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Language.PureScript.AST.SourcePos.SourcePos))>_R) <x>_N) }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fGenericSourceSpan_$cto ::
    GHC.Generics.Rep Language.PureScript.AST.SourcePos.SourceSpan x
    -> Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.AST.SourcePos.SourceSpan x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.AST.SourcePos.Rep_SourceSpan[0]) ; (GHC.Generics.N:M1[0]
                                                                                         <*>_N
                                                                                         <GHC.Generics.D>_P
                                                                                         <'GHC.Generics.MetaData
                                                                                            "SourceSpan"
                                                                                            "Language.PureScript.AST.SourcePos"
                                                                                            "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                            'GHC.Types.False>_P
                                                                                         <GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "SourceSpan"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.True)
                                                                                            (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "spanName")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Base.String)
                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                 GHC.Generics.S
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Base.Just
                                                                                                                       "spanStart")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.K1
                                                                                                                    GHC.Generics.R
                                                                                                                    Language.PureScript.AST.SourcePos.SourcePos)
                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                  GHC.Generics.S
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Base.Just
                                                                                                                                        "spanEnd")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.K1
                                                                                                                                     GHC.Generics.R
                                                                                                                                     Language.PureScript.AST.SourcePos.SourcePos)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                             <*>_N
                                                                                                                                                                                             <GHC.Generics.C>_P
                                                                                                                                                                                             <'GHC.Generics.MetaCons
                                                                                                                                                                                                "SourceSpan"
                                                                                                                                                                                                'GHC.Generics.PrefixI
                                                                                                                                                                                                'GHC.Types.True>_P
                                                                                                                                                                                             <GHC.Generics.M1
                                                                                                                                                                                                GHC.Generics.S
                                                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                      "spanName")
                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                                                                   GHC.Generics.R
                                                                                                                                                                                                   GHC.Base.String)
                                                                                                                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                        "spanStart")
                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                                                                                     GHC.Generics.R
                                                                                                                                                                                                                     Language.PureScript.AST.SourcePos.SourcePos)
                                                                                                                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                   GHC.Generics.S
                                                                                                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                                         "spanEnd")
                                                                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                                                                                                      GHC.Generics.R
                                                                                                                                                                                                                                      Language.PureScript.AST.SourcePos.SourcePos))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Language.PureScript.AST.SourcePos.SourceSpan
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "spanName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Base.String>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <GHC.Base.String>_R
                                                                         <x>_P)
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "spanStart")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.AST.SourcePos.SourcePos>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                      <*>_N
                                                                                      <GHC.Generics.R>_P
                                                                                      <Language.PureScript.AST.SourcePos.SourcePos>_R
                                                                                      <x>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "spanEnd")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.AST.SourcePos.SourcePos>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                      <*>_N
                                                                                      <GHC.Generics.R>_P
                                                                                      <Language.PureScript.AST.SourcePos.SourcePos>_R
                                                                                      <x>_P) } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fNFDataSourcePos ::
    Control.DeepSeq.NFData Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*H)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.AST.SourcePos.$fNFDataSourcePos_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.AST.SourcePos.SourcePos>_N)) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fNFDataSourcePos_$crnf ::
    Language.PureScript.AST.SourcePos.SourcePos -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*H)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case x of wild { Language.PureScript.AST.SourcePos.SourcePos g1 g2 ->
                 case g1 of ds1 { GHC.Types.I# ipv ->
                 case g2 of ds2 { GHC.Types.I# ipv1 -> GHC.Tuple.() } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fNFDataSourceSpan ::
    Control.DeepSeq.NFData Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS(SS)S(SS)),1*U(1*U,1*U(1*H,1*H),1*U(1*H,1*H))>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.AST.SourcePos.$fNFDataSourceSpan_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.AST.SourcePos.SourceSpan>_N)) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fNFDataSourceSpan_$crnf ::
    Language.PureScript.AST.SourcePos.SourceSpan -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS(SS)S(SS)),1*U(1*U,1*U(1*H,1*H),1*U(1*H,1*H))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case ww2 of ww4 { Language.PureScript.AST.SourcePos.SourcePos ww5 ww6 ->
                 case ww5 of ww7 { GHC.Types.I# ipv ->
                 case ww6 of ww8 { GHC.Types.I# ipv1 ->
                 case ww3 of ww9 { Language.PureScript.AST.SourcePos.SourcePos ww10 ww11 ->
                 case ww10 of ww12 { GHC.Types.I# ipv2 ->
                 case ww11 of ww13 { GHC.Types.I# ipv3 ->
                 Language.PureScript.AST.SourcePos.$fNFDataSourceSpan_go
                   ww1 } } } } } } }) -}
8ad1d3ad3b1e5f6ecea8ac7d5325e47d
  $fNFDataSourceSpan_go :: [GHC.Types.Char] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos ::
    GHC.Classes.Ord Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourcePos
                  Language.PureScript.AST.SourcePos.$fEqSourcePos
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$ccompare
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$c<
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$c<=
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$c>
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$c>=
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$cmax
                  Language.PureScript.AST.SourcePos.$fOrdSourcePos_$cmin -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$c< ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Language.PureScript.AST.SourcePos.$w$c< ww4 ww2 ww9 ww7 } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$c<= ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Language.PureScript.AST.SourcePos.$w$c<=
                   ww4
                   ww2
                   ww9
                   ww7 } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$c> ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.AST.SourcePos.SourcePos)
                   (b :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 Language.PureScript.AST.SourcePos.$fOrdSourcePos_$c< b a) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$c>= ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Language.PureScript.AST.SourcePos.$w$c>=
                   ww4
                   ww2
                   ww9
                   ww7 } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$ccompare ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Language.PureScript.AST.SourcePos.$w$ccompare
                   ww4
                   ww2
                   ww9
                   ww7 } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$cmax ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(U(U),U(U))><S(S(S)L),1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case GHC.Prim.<# ww9 ww4 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww9 ww4 of lwild1 {
                        DEFAULT
                        -> Language.PureScript.AST.SourcePos.SourcePos
                             (GHC.Types.I# ww9)
                             ww7
                        1#
                        -> case ww7 of wild { GHC.Types.I# x ->
                           case ww2 of wild1 { GHC.Types.I# y ->
                           case GHC.Prim.<# x y of lwild2 {
                             DEFAULT
                             -> Language.PureScript.AST.SourcePos.SourcePos
                                  (GHC.Types.I# ww9)
                                  wild
                             1#
                             -> Language.PureScript.AST.SourcePos.SourcePos
                                  (GHC.Types.I# ww4)
                                  wild1 } } } }
                   1#
                   -> Language.PureScript.AST.SourcePos.SourcePos
                        (GHC.Types.I# ww4)
                        ww2 } } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourcePos_$cmin ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(U(U),U(U))><S(S(S)L),1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { Language.PureScript.AST.SourcePos.SourcePos ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case GHC.Prim.<# ww9 ww4 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww9 ww4 of lwild1 {
                        DEFAULT
                        -> Language.PureScript.AST.SourcePos.SourcePos
                             (GHC.Types.I# ww4)
                             ww2
                        1#
                        -> case ww7 of wild { GHC.Types.I# x ->
                           case ww2 of wild1 { GHC.Types.I# y ->
                           case GHC.Prim.<# x y of lwild2 {
                             DEFAULT
                             -> Language.PureScript.AST.SourcePos.SourcePos
                                  (GHC.Types.I# ww4)
                                  wild1
                             1#
                             -> Language.PureScript.AST.SourcePos.SourcePos
                                  (GHC.Types.I# ww9)
                                  wild } } } }
                   1#
                   -> Language.PureScript.AST.SourcePos.SourcePos
                        (GHC.Types.I# ww9)
                        ww7 } } } } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan ::
    GHC.Classes.Ord Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourceSpan
                  Language.PureScript.AST.SourcePos.$fEqSourceSpan
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$ccompare
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c<
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c<=
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c>
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c>=
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$cmax
                  Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$cmin -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$c< ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w1 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case w1 of ww4 { Language.PureScript.AST.SourcePos.SourceSpan ww5 ww6 ww7 ->
                 Language.PureScript.AST.SourcePos.$w$c<1
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$c<= ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (b :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$c> ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (b :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c< b a) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$c>= ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (b :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$ccompare ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w1 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case w1 of ww4 { Language.PureScript.AST.SourcePos.SourceSpan ww5 ww6 ww7 ->
                 Language.PureScript.AST.SourcePos.$w$ccompare1
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$cmax ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U(U),U(U)),U(U(U),U(U)))><S(SLL),1*U(U,U(U(U),U(U)),U(U(U),U(U)))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (y :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c<
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fOrdSourceSpan_$cmin ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U(U),U(U)),U(U(U),U(U)))><S(SLL),1*U(U,U(U(U),U(U)),U(U(U),U(U)))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (y :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case Language.PureScript.AST.SourcePos.$fOrdSourceSpan_$c<
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourcePos ::
    GHC.Show.Show Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourcePos
                  Language.PureScript.AST.SourcePos.$fShowSourcePos_$cshowsPrec
                  Language.PureScript.AST.SourcePos.$fShowSourcePos_$cshow
                  Language.PureScript.AST.SourcePos.$fShowSourcePos_$cshowList -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourcePos1 ::
    Language.PureScript.AST.SourcePos.SourcePos -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U),1*U(U))><L,U>,
     Unfolding: (\ (w :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 Language.PureScript.AST.SourcePos.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
6a49620f981ce322f97a4da746b67600
  $fShowSourcePos2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
25b6e2ef516fba62b2cf5ab883619222
  $fShowSourcePos3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sourcePosColumn = "#) -}
92826f74d4071657856fd4bbf345ea96
  $fShowSourcePos4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sourcePosLine = "#) -}
155923f6d1bc5184a72743292c829318
  $fShowSourcePos5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.AST.SourcePos.$fShowSourcePos6) -}
331ab245da8afecc9dedde673d6fe49a
  $fShowSourcePos6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SourcePos {"#) -}
319c7f27fe20390e19e9bd5a41aa6e02
  $fShowSourcePos7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.AST.SourcePos.$fShowSourcePos2) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourcePos_$cshow ::
    Language.PureScript.AST.SourcePos.SourcePos -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 Language.PureScript.AST.SourcePos.$w$cshow ww1 ww2 }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourcePos_$cshowList ::
    [Language.PureScript.AST.SourcePos.SourcePos] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.AST.SourcePos.SourcePos])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.AST.SourcePos.SourcePos
                   Language.PureScript.AST.SourcePos.$fShowSourcePos1
                   ls
                   s) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourcePos_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.AST.SourcePos.SourcePos -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U))><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.AST.SourcePos.SourcePos ww3 ww4 ->
                 Language.PureScript.AST.SourcePos.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   w2 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourceSpan ::
    GHC.Show.Show Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourceSpan
                  Language.PureScript.AST.SourcePos.$fShowSourceSpan_$cshowsPrec
                  Language.PureScript.AST.SourcePos.$fShowSourceSpan_$cshow
                  Language.PureScript.AST.SourcePos.$fShowSourceSpan_$cshowList -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourceSpan1 ::
    Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><L,U>,
     Unfolding: (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 Language.PureScript.AST.SourcePos.$w$cshowsPrec1
                   0#
                   ww1
                   ww2
                   ww3
                   w1 }) -}
3d1698fbf14525695e846dac88af5891
  $fShowSourceSpan2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("spanEnd = "#) -}
724cac1a3a8f72449c4fbc2e0685da6f
  $fShowSourceSpan3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("spanStart = "#) -}
4f10d5cc86c9dba1702d1626e4c74206
  $fShowSourceSpan4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("spanName = "#) -}
14ff2cd1af3a6a7166195c04004f2c9b
  $fShowSourceSpan5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SourceSpan {"#) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourceSpan_$cshow ::
    Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 Language.PureScript.AST.SourcePos.$fShowSourceSpan_$cshowsPrec
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourceSpan_$cshowList ::
    [Language.PureScript.AST.SourcePos.SourceSpan] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.AST.SourcePos.SourceSpan])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.AST.SourcePos.SourceSpan
                   Language.PureScript.AST.SourcePos.$fShowSourceSpan1
                   ls
                   s) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fShowSourceSpan_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.AST.SourcePos.SourceSpan ww3 ww4 ww5 ->
                 Language.PureScript.AST.SourcePos.$w$cshowsPrec1
                   ww1
                   ww3
                   ww4
                   ww5
                   w2 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourcePos ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.AST.SourcePos.SourcePos
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourcePos
                  Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoJSON
                  Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoEncoding
                  Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoJSONList
                  Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoEncodingList -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourcePos_$ctoEncoding ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoJSON x))
                  `cast`
                (<Language.PureScript.AST.SourcePos.SourcePos>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourcePos_$ctoEncodingList ::
    [Language.PureScript.AST.SourcePos.SourcePos]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.AST.SourcePos.SourcePos
                   Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoEncoding) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourcePos_$ctoJSON ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case Language.PureScript.AST.SourcePos.$w$ctoJSON
                        ww1
                        ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Array ww4 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourcePos_$ctoJSONList ::
    [Language.PureScript.AST.SourcePos.SourcePos]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.AST.SourcePos.SourcePos]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.AST.SourcePos.SourcePos
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.AST.SourcePos.SourcePos
                                     c
                                     Language.PureScript.AST.SourcePos.$fToJSONSourcePos_$ctoJSON)
                                  n1
                                  x)))))) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourceSpan ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.AST.SourcePos.SourceSpan
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.AST.SourcePos.SourceSpan
                  Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoJSON
                  Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoEncoding
                  Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoJSONList
                  Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoEncodingList -}
787fec9829aefd9981a6f03299ba4326
  $fToJSONSourceSpan1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("end"#) -}
d0128c174887c3220577750614d6b6b6
  $fToJSONSourceSpan2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("start"#) -}
2cee0c11133876eca2e7dde3bcde8cb7
  $fToJSONSourceSpan3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name"#) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourceSpan_$ctoEncoding ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoJSON x))
                  `cast`
                (<Language.PureScript.AST.SourcePos.SourceSpan>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourceSpan_$ctoEncodingList ::
    [Language.PureScript.AST.SourcePos.SourceSpan]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.AST.SourcePos.SourceSpan
                   Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoEncoding) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourceSpan_$ctoJSON ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>m1,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case Language.PureScript.AST.SourcePos.$w$ctoJSON1
                        ww1
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $fToJSONSourceSpan_$ctoJSONList ::
    [Language.PureScript.AST.SourcePos.SourceSpan]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.AST.SourcePos.SourceSpan]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.AST.SourcePos.SourceSpan
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.AST.SourcePos.SourceSpan
                                     c
                                     Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoJSON)
                                  n1
                                  x)))))) -}
83528616adde15d9fb0006ff8a62b1ca
  $fToJSONSourceSpan_key1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.AST.SourcePos.$fToJSONSourceSpan2) -}
fd25f89021d6ef5f5a85ebc161ef37e3
  $fToJSONSourceSpan_key2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.AST.SourcePos.$fToJSONSourceSpan1) -}
7e1dfec7e2db28c6f2b0266c95331355
  $fToJSONSourceSpan_key3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.AST.SourcePos.$fToJSONSourceSpan3) -}
ae92d55ade855fa50e41c643cd9e476c
  $mNullSourceAnn ::
    forall (rep :: GHC.Types.RuntimeRep) (r :: TYPE rep).
    Language.PureScript.AST.SourcePos.SourceAnn
    -> (GHC.Prim.Void# -> r) -> (GHC.Prim.Void# -> r) -> r
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(SLL)L),1*U(1*U(1*U,1*U(1*U(1*U),1*U(1*U)),1*U(1*U(1*U),1*U(1*U))),1*U)><L,1*C1(U)><L,1*C1(U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ rep :: GHC.Types.RuntimeRep
                   @ r :: TYPE rep
                   (w :: Language.PureScript.AST.SourcePos.SourceAnn)
                   (w1 :: GHC.Prim.Void# -> r)
                   (w2 :: GHC.Prim.Void# -> r) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Language.PureScript.AST.SourcePos.SourceSpan ww4 ww5 ww6 ->
                 Language.PureScript.AST.SourcePos.$w$mNullSourceAnn
                   @ rep
                   @ r
                   ww4
                   ww5
                   ww6
                   ww2
                   w1
                   w2 } }) -}
2ac434ab3ba1e60957a4c0604c903149
  $mNullSourceSpan ::
    forall (rep :: GHC.Types.RuntimeRep) (r :: TYPE rep).
    Language.PureScript.AST.SourcePos.SourceSpan
    -> (GHC.Prim.Void# -> r) -> (GHC.Prim.Void# -> r) -> r
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U(1*U),1*U(1*U)),1*U(1*U(1*U),1*U(1*U)))><L,1*C1(U)><L,1*C1(U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ rep :: GHC.Types.RuntimeRep
                   @ r :: TYPE rep
                   (w :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w1 :: GHC.Prim.Void# -> r)
                   (w2 :: GHC.Prim.Void# -> r) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 Language.PureScript.AST.SourcePos.$w$mNullSourceSpan
                   @ rep
                   @ r
                   ww1
                   ww2
                   ww3
                   w1
                   w2 }) -}
7d8a7c83d3a60ccc38a4982c7b1348e5
  $tc'SourcePos :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8647346627824447078##
                   15262304922176340362##
                   Language.PureScript.AST.SourcePos.$trModule
                   Language.PureScript.AST.SourcePos.$tc'SourcePos2
                   0#
                   Language.PureScript.AST.SourcePos.$tc'SourcePos1) -}
003db7c3ebe5654f72a368f51138daeb
  $tc'SourcePos1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
73feee112c71365e227b82d725abdb73
  $tc'SourcePos2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.AST.SourcePos.$tc'SourcePos3) -}
6dc8bbd10c489c1ba66f82e99e9af24c
  $tc'SourcePos3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SourcePos"#) -}
66cc95c3255f62c7f24a4f00fa7832b9
  $tc'SourceSpan :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9761540701718083234##
                   1709950798067175434##
                   Language.PureScript.AST.SourcePos.$trModule
                   Language.PureScript.AST.SourcePos.$tc'SourceSpan2
                   0#
                   Language.PureScript.AST.SourcePos.$tc'SourceSpan1) -}
8d980f1b90d004fa32b783d6d05b97d4
  $tc'SourceSpan1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
747bbe6103da270a78950396e723c6bf
  $tc'SourceSpan2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.AST.SourcePos.$tc'SourceSpan3) -}
73a90be3baa3f1847c68e182bcd4096d
  $tc'SourceSpan3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SourceSpan"#) -}
d689394097b7121086c54ffcb1f04ad3
  $tcSourcePos :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6264185026208528757##
                   4059916661335238619##
                   Language.PureScript.AST.SourcePos.$trModule
                   Language.PureScript.AST.SourcePos.$tcSourcePos1
                   0#
                   GHC.Types.krep$*) -}
5027a49ebd16579262b022f140475bb7
  $tcSourcePos1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.AST.SourcePos.$tcSourcePos2) -}
56528ba02621e5be4ae3c0bd7466cf16
  $tcSourcePos2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SourcePos"#) -}
5ef712e8898c141d0113d7567bd2151b
  $tcSourceSpan :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9651908237998006362##
                   4394222466373219998##
                   Language.PureScript.AST.SourcePos.$trModule
                   Language.PureScript.AST.SourcePos.$tcSourceSpan1
                   0#
                   GHC.Types.krep$*) -}
4fe94a1a60737625745b49fd4a7b9f7a
  $tcSourceSpan1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan3) -}
0ddf08ec16c0e60f46caf6e07a3fac4a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.AST.SourcePos.$trModule3
                   Language.PureScript.AST.SourcePos.$trModule1) -}
256338627ce9b3aca59f26ecf16d8e74
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.AST.SourcePos.$trModule2) -}
b5a3e0de1bb7d856897bb479f0627423
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.AST.SourcePos"#) -}
7d9db7357841e6807610f83a8f674e71
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.AST.SourcePos.$trModule4) -}
0fe3c6e2f93bca02387c13ddd0c3ef34
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
b60de92864750f0787de6d3fe7c48e92
  $w$c< ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.<# ww ww2 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww ww2 of lwild1 {
                        DEFAULT -> GHC.Types.False 1# -> GHC.Classes.ltInt ww1 ww3 }
                   1# -> GHC.Types.True }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $w$c<1 ::
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))><S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww5 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case GHC.Classes.$fOrd[]_$s$ccompare1 ww ww3 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case ww1 of wild1 { Language.PureScript.AST.SourcePos.SourcePos a1 a2 ->
                      case ww4 of wild2 { Language.PureScript.AST.SourcePos.SourcePos b1 b2 ->
                      case a1 of wild3 { GHC.Types.I# x# ->
                      case b1 of wild4 { GHC.Types.I# y# ->
                      case GHC.Prim.<# x# y# of lwild {
                        DEFAULT
                        -> case GHC.Prim.==# x# y# of lwild1 {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> case a2 of wild5 { GHC.Types.I# x#1 ->
                                case b2 of wild6 { GHC.Types.I# y#1 ->
                                case GHC.Prim.<# x#1 y#1 of lwild2 {
                                  DEFAULT
                                  -> case GHC.Prim.==# x#1 y#1 of lwild3 {
                                       DEFAULT -> GHC.Types.False
                                       1#
                                       -> Language.PureScript.AST.SourcePos.$fOrdSourcePos_$c<
                                            ww2
                                            ww5 }
                                  1# -> GHC.Types.True } } } }
                        1# -> GHC.Types.True } } } } }
                   GHC.Types.GT -> GHC.Types.False }) -}
ed4fa87638c7aa506d8b46b95eee9c8a
  $w$c<= ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.<# ww2 ww of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww2 ww of lwild1 {
                        DEFAULT -> GHC.Types.True
                        1#
                        -> case ww3 of wild { GHC.Types.I# x ->
                           case ww1 of wild1 { GHC.Types.I# y ->
                           case GHC.Prim.<# x y of lwild2 {
                             DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } } } }
                   1# -> GHC.Types.False }) -}
0f8f12bb2650ad0c704fa913fbb1faa1
  $w$c== ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.==# ww ww2 of lwild {
                   DEFAULT -> GHC.Types.False 1# -> GHC.Classes.eqInt ww1 ww3 }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $w$c==1 ::
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))><S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww5 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { Language.PureScript.AST.SourcePos.SourcePos a1 a2 ->
                      case ww4 of wild2 { Language.PureScript.AST.SourcePos.SourcePos b1 b2 ->
                      case a1 of wild3 { GHC.Types.I# x ->
                      case b1 of wild4 { GHC.Types.I# y ->
                      case GHC.Prim.==# x y of lwild {
                        DEFAULT -> GHC.Types.False
                        1#
                        -> case a2 of wild5 { GHC.Types.I# x1 ->
                           case b2 of wild6 { GHC.Types.I# y1 ->
                           case GHC.Prim.==# x1 y1 of lwild1 {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> Language.PureScript.AST.SourcePos.$fEqSourcePos_$c==
                                  ww2
                                  ww5 } } } } } } } } }) -}
ee91d6f13d997ab6cc32a84c33231c31
  $w$c>= ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.<# ww ww2 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww ww2 of lwild1 {
                        DEFAULT -> GHC.Types.True
                        1#
                        -> case ww1 of wild { GHC.Types.I# x ->
                           case ww3 of wild1 { GHC.Types.I# y ->
                           case GHC.Prim.<# x y of lwild2 {
                             DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } } } }
                   1# -> GHC.Types.False }) -}
5216509159fe742141f082fce83f3870
  $w$ccompare ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Prim.<# ww ww2 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww ww2 of lwild1 {
                        DEFAULT -> GHC.Types.GT 1# -> GHC.Classes.compareInt ww1 ww3 }
                   1# -> GHC.Types.LT }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $w$ccompare1 ::
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))><S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww5 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case GHC.Classes.$fOrd[]_$s$ccompare1 ww ww3 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> case ww1 of wild1 { Language.PureScript.AST.SourcePos.SourcePos a1 a2 ->
                      case ww4 of wild2 { Language.PureScript.AST.SourcePos.SourcePos b1 b2 ->
                      case a1 of wild3 { GHC.Types.I# x# ->
                      case b1 of wild4 { GHC.Types.I# y# ->
                      case GHC.Prim.<# x# y# of lwild {
                        DEFAULT
                        -> case GHC.Prim.==# x# y# of lwild1 {
                             DEFAULT -> GHC.Types.GT
                             1#
                             -> case a2 of wild5 { GHC.Types.I# x#1 ->
                                case b2 of wild6 { GHC.Types.I# y#1 ->
                                case GHC.Prim.<# x#1 y#1 of lwild2 {
                                  DEFAULT
                                  -> case GHC.Prim.==# x#1 y#1 of lwild3 {
                                       DEFAULT -> GHC.Types.GT
                                       1#
                                       -> Language.PureScript.AST.SourcePos.$fOrdSourcePos_$ccompare
                                            ww2
                                            ww5 }
                                  1# -> GHC.Types.LT } } } }
                        1# -> GHC.Types.LT } } } } }
                   GHC.Types.GT -> GHC.Types.GT }) -}
980ce2dc833002d62062f9d07892ea18
  $w$cshow :: GHC.Types.Int -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int) (ww1 :: GHC.Types.Int) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.AST.SourcePos.$fShowSourcePos5
                   (GHC.CString.unpackAppendCString#
                      Language.PureScript.AST.SourcePos.$fShowSourcePos4
                      (case ww of ww2 { GHC.Types.I# ww3 ->
                       case GHC.Show.$wshowSignedInt
                              0#
                              ww3
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Language.PureScript.AST.SourcePos.$fShowSourcePos3
                                    (case ww1 of ww5 { GHC.Types.I# ww6 ->
                                     case GHC.Show.$wshowSignedInt
                                            0#
                                            ww6
                                            Language.PureScript.AST.SourcePos.$fShowSourcePos7 of ww4 { (#,#) ww7 ww8 ->
                                     GHC.Types.:
                                       @ GHC.Types.Char
                                       ww7
                                       ww8 } }))) of ww4 { (#,#) ww5 ww6 ->
                       GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))) -}
7cafdc985644c4713b844efa6dc1a6ca
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Types.Int)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.AST.SourcePos.$fShowSourcePos5
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.AST.SourcePos.$fShowSourcePos4
                           (case ww1 of ww3 { GHC.Types.I# ww4 ->
                            case GHC.Show.$wshowSignedInt
                                   0#
                                   ww4
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Language.PureScript.AST.SourcePos.$fShowSourcePos3
                                         (case ww2 of ww5 { GHC.Types.I# ww6 ->
                                          case GHC.Show.$wshowSignedInt
                                                 0#
                                                 ww6
                                                 (GHC.CString.unpackAppendCString#
                                                    Language.PureScript.AST.SourcePos.$fShowSourcePos2
                                                    w) of ww7 { (#,#) ww8 ww9 ->
                                          GHC.Types.:
                                            @ GHC.Types.Char
                                            ww8
                                            ww9 } }))) of ww5 { (#,#) ww6 ww7 ->
                            GHC.Types.: @ GHC.Types.Char ww6 ww7 } }))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Language.PureScript.AST.SourcePos.$fShowSourcePos5
                           (GHC.CString.unpackAppendCString#
                              Language.PureScript.AST.SourcePos.$fShowSourcePos4
                              (case ww1 of ww3 { GHC.Types.I# ww4 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            Language.PureScript.AST.SourcePos.$fShowSourcePos3
                                            (case ww2 of ww5 { GHC.Types.I# ww6 ->
                                             case GHC.Show.$wshowSignedInt
                                                    0#
                                                    ww6
                                                    (GHC.CString.unpackAppendCString#
                                                       Language.PureScript.AST.SourcePos.$fShowSourcePos2
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.$fShow(,)2
                                                          w)) of ww7 { (#,#) ww8 ww9 ->
                                             GHC.Types.:
                                               @ GHC.Types.Char
                                               ww8
                                               ww9 } }))) of ww5 { (#,#) ww6 ww7 ->
                               GHC.Types.: @ GHC.Types.Char ww6 ww7 } }))) }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww3 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Language.PureScript.AST.SourcePos.$fShowSourceSpan5
                       (GHC.CString.unpackAppendCString#
                          Language.PureScript.AST.SourcePos.$fShowSourceSpan4
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)3
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Language.PureScript.AST.SourcePos.$fShowSourceSpan3
                                         (case ww2 of ww4 { Language.PureScript.AST.SourcePos.SourcePos ww5 ww6 ->
                                          Language.PureScript.AST.SourcePos.$w$cshowsPrec
                                            0#
                                            ww5
                                            ww6
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               GHC.Show.showCommaSpace1
                                               (GHC.CString.unpackAppendCString#
                                                  Language.PureScript.AST.SourcePos.$fShowSourceSpan2
                                                  (case ww3 of ww7 { Language.PureScript.AST.SourcePos.SourcePos ww8 ww9 ->
                                                   Language.PureScript.AST.SourcePos.$w$cshowsPrec
                                                     0#
                                                     ww8
                                                     ww9
                                                     (GHC.CString.unpackAppendCString#
                                                        Language.PureScript.AST.SourcePos.$fShowSourcePos2
                                                        x) }))) })))))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
07a604c97af61473e087ae7f163457dc
  $w$ctoJSON ::
    GHC.Types.Int
    -> GHC.Types.Int -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int) (ww1 :: GHC.Types.Int) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                1#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                ipv of ds1 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.copyMutableArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv1
                                0#
                                ipv3
                                0#
                                0#
                                ipv2 of s'# { DEFAULT ->
                         case GHC.Prim.writeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv3
                                0#
                                (case ww of wild { GHC.Types.I# i ->
                                 case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) } })
                                s'# of s'#1 { DEFAULT ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                2#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s'#1 of ds3 { (#,#) ipv4 ipv5 ->
                         case GHC.Prim.copyMutableArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv3
                                0#
                                ipv5
                                0#
                                1#
                                ipv4 of s'#2 { DEFAULT ->
                         case GHC.Prim.writeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv5
                                1#
                                (case ww1 of wild { GHC.Types.I# i ->
                                 case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) } })
                                s'#2 of s'#3 { DEFAULT ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv5
                                s'#3 of ds4 { (#,#) ipv6 ipv7 ->
                         (# ipv6
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              0#
                              2#
                              ipv7 #) } } } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  $w$ctoJSON1 ::
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3,
     Strictness: <S,1*U><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Language.PureScript.AST.SourcePos.$wouter
                           ipv1
                           4#
                           ww
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 case Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_key3 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww4
                        ww5
                        ww6
                        (Data.Aeson.Types.Internal.String dt)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                 case ww1 of ww7 { Language.PureScript.AST.SourcePos.SourcePos ww8 ww9 ->
                 case Language.PureScript.AST.SourcePos.$w$ctoJSON
                        ww8
                        ww9 of ww10 { Unit# ww11 ->
                 case Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_key1 of ww12 { Data.Text.Internal.Text ww13 ww14 ww15 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww13
                        ww14
                        ww15
                        (Data.Aeson.Types.Internal.Array ww11)
                        z23 of z2 { DEFAULT ->
                 case ww2 of ww16 { Language.PureScript.AST.SourcePos.SourcePos ww17 ww18 ->
                 case Language.PureScript.AST.SourcePos.$w$ctoJSON
                        ww17
                        ww18 of ww19 { Unit# ww20 ->
                 case Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_key2 of ww21 { Data.Text.Internal.Text ww22 ww23 ww24 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww22
                        ww23
                        ww24
                        (Data.Aeson.Types.Internal.Array ww20)
                        z2 of dt1 { DEFAULT ->
                 (# dt1 #) } } } } } } } } } } } }) -}
af05ebfda7dc335fb8dad888b3d59b11
  $w$mNullSourceAnn ::
    forall (rep :: GHC.Types.RuntimeRep) (r :: TYPE rep).
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> [Language.PureScript.Comments.Comment]
    -> (GHC.Prim.Void# -> r)
    -> (GHC.Prim.Void# -> r)
    -> r
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U(1*U),1*U(1*U))><L,1*U(1*U(1*U),1*U(1*U))><L,1*U><L,1*C1(U)><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ rep :: GHC.Types.RuntimeRep
                   @ r :: TYPE rep
                   (ww :: GHC.Base.String)
                   (ww1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww3 :: [Language.PureScript.Comments.Comment])
                   (w :: GHC.Prim.Void# -> r)
                   (w1 :: GHC.Prim.Void# -> r) ->
                 case ww of wild {
                   []
                   -> case ww1 of wild1 { Language.PureScript.AST.SourcePos.SourcePos ds ds1 ->
                      case ds of wild2 { GHC.Types.I# ds2 ->
                      case ds2 of ds3 {
                        DEFAULT -> w1 GHC.Prim.void#
                        0#
                        -> case ds1 of wild3 { GHC.Types.I# ds4 ->
                           case ds4 of ds5 {
                             DEFAULT -> w1 GHC.Prim.void#
                             0#
                             -> case ww2 of wild4 { Language.PureScript.AST.SourcePos.SourcePos ds6 ds7 ->
                                case ds6 of wild5 { GHC.Types.I# ds8 ->
                                case ds8 of ds9 {
                                  DEFAULT -> w1 GHC.Prim.void#
                                  0#
                                  -> case ds7 of wild6 { GHC.Types.I# ds10 ->
                                     case ds10 of ds11 {
                                       DEFAULT -> w1 GHC.Prim.void#
                                       0#
                                       -> case ww3 of wild7 {
                                            [] -> w GHC.Prim.void#
                                            : ipv ipv1 -> w1 GHC.Prim.void# } } } } } } } } } } }
                   : ipv ipv1 -> w1 GHC.Prim.void# }) -}
b1ae67f2dd4462ed81865575f2b9a8c7
  $w$mNullSourceSpan ::
    forall (rep :: GHC.Types.RuntimeRep) (r :: TYPE rep).
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> (GHC.Prim.Void# -> r)
    -> (GHC.Prim.Void# -> r)
    -> r
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U(1*U),1*U(1*U))><L,1*U(1*U(1*U),1*U(1*U))><L,1*C1(U)><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ rep :: GHC.Types.RuntimeRep
                   @ r :: TYPE rep
                   (ww :: GHC.Base.String)
                   (ww1 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (ww2 :: Language.PureScript.AST.SourcePos.SourcePos)
                   (w :: GHC.Prim.Void# -> r)
                   (w1 :: GHC.Prim.Void# -> r) ->
                 case ww of wild {
                   []
                   -> case ww1 of wild1 { Language.PureScript.AST.SourcePos.SourcePos ds ds1 ->
                      case ds of wild2 { GHC.Types.I# ds2 ->
                      case ds2 of ds3 {
                        DEFAULT -> w1 GHC.Prim.void#
                        0#
                        -> case ds1 of wild3 { GHC.Types.I# ds4 ->
                           case ds4 of ds5 {
                             DEFAULT -> w1 GHC.Prim.void#
                             0#
                             -> case ww2 of wild4 { Language.PureScript.AST.SourcePos.SourcePos ds6 ds7 ->
                                case ds6 of wild5 { GHC.Types.I# ds8 ->
                                case ds8 of ds9 {
                                  DEFAULT -> w1 GHC.Prim.void#
                                  0#
                                  -> case ds7 of wild6 { GHC.Types.I# ds10 ->
                                     case ds10 of ds11 {
                                       DEFAULT -> w1 GHC.Prim.void#
                                       0# -> w GHC.Prim.void# } } } } } } } } } }
                   : ipv ipv1 -> w1 GHC.Prim.void# }) -}
9e184c447d8e798d4539ff3758e8d381
  $wdisplaySourcePos ::
    GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
d54f57598ad32b3f8569d4122350e624
  $wdisplaySourcePosShort ::
    GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
82662e2958168b862a0b54ca79c2f566
  $wdisplaySourceSpan ::
    GHC.IO.FilePath
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Text.Internal.Text
  {- Arity: 6, Strictness: <S,U><S,U><S,U><S,U><S,U><S,U>,
     Inline: [0] -}
870f8fe30f84ddbd13b7e181399b9c14
  $wdisplayStartEndPos ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Text.Internal.Text
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,U>, Inline: [0] -}
108412fc18357bb60a74eeb4bd4750e6
  $wdisplayStartEndPosShort ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Text.Internal.Text
  {- Arity: 4, Strictness: <S,U><S,U><S,U><S,U>, Inline: [0] -}
ec53ea2aaeb5f2fe93e1b52f228f9c7e
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
9b3ea842d694d15fc4efd4f4eb56686a
  $wwidenSourceSpan ::
    GHC.Base.String
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourcePos
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,U(U(U),U(U))><L,U(U(U),U(U))><S,1*U(U,U(U(U),U(U)),U(U(U),U(U)))>m,
     Inline: [0] -}
5a0bced03127a02790cb165450e72c45
  pattern Language.PureScript.AST.SourcePos.NullSourceAnn :: Language.PureScript.AST.SourcePos.SourceAnn
fad53a2b37b7f02c9f2e1151d4bf9347
  pattern Language.PureScript.AST.SourcePos.NullSourceSpan :: Language.PureScript.AST.SourcePos.SourceSpan
1e0cf2bd3ea18f97a2ff152297f09219
  axiom Language.PureScript.AST.SourcePos.Rep_SourcePos::
      GHC.Generics.Rep Language.PureScript.AST.SourcePos.SourcePos
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "SourcePos"
               "Language.PureScript.AST.SourcePos"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "SourcePos" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "sourcePosLine")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "sourcePosColumn")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)))
1e0cf2bd3ea18f97a2ff152297f09219
  axiom Language.PureScript.AST.SourcePos.Rep_SourceSpan::
      GHC.Generics.Rep Language.PureScript.AST.SourcePos.SourceSpan
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "SourceSpan"
               "Language.PureScript.AST.SourcePos"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "SourceSpan" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "spanName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "spanStart")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Language.PureScript.AST.SourcePos.SourcePos)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "spanEnd")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Language.PureScript.AST.SourcePos.SourcePos))))
f5708ed135df009dfa0254486771ef74
  type SourceAnn =
    (Language.PureScript.AST.SourcePos.SourceSpan,
     [Language.PureScript.Comments.Comment])
1e0cf2bd3ea18f97a2ff152297f09219
  data SourcePos
    = SourcePos {sourcePosLine :: GHC.Types.Int,
                 sourcePosColumn :: GHC.Types.Int}
1e0cf2bd3ea18f97a2ff152297f09219
  data SourceSpan
    = SourceSpan {spanName :: GHC.Base.String,
                  spanStart :: Language.PureScript.AST.SourcePos.SourcePos,
                  spanEnd :: Language.PureScript.AST.SourcePos.SourcePos}
cf9281da6eff56b2fc110fdaa8187669
  displaySourcePos ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Language.PureScript.AST.SourcePos.$wdisplaySourcePos
                   ww4
                   ww6 } } }) -}
e883474c4872f3867ae5ba77c85e4e19
  displaySourcePosShort ::
    Language.PureScript.AST.SourcePos.SourcePos
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourcePos ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Language.PureScript.AST.SourcePos.$wdisplaySourcePosShort
                   ww4
                   ww6 } } }) -}
11d4c6c7c27182d917b65dca3e11c4bf
  displaySourceSpan ::
    GHC.IO.FilePath
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Data.Text.Internal.Text
  {- Arity: 2,
     Strictness: <S,U><S(SS(S(S)S(S))S(S(S)S(S))),1*U(U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.IO.FilePath)
                   (w1 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w1 of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case ww2 of ww4 { Language.PureScript.AST.SourcePos.SourcePos ww5 ww6 ->
                 case ww5 of ww7 { GHC.Types.I# ww8 ->
                 case ww6 of ww9 { GHC.Types.I# ww10 ->
                 case ww3 of ww11 { Language.PureScript.AST.SourcePos.SourcePos ww12 ww13 ->
                 case ww12 of ww14 { GHC.Types.I# ww15 ->
                 case ww13 of ww16 { GHC.Types.I# ww17 ->
                 Language.PureScript.AST.SourcePos.$wdisplaySourceSpan
                   w
                   ww1
                   ww8
                   ww10
                   ww15
                   ww17 } } } } } } }) -}
e5c46604f74bcadb3bc4a400eacda553
  displayStartEndPos ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Data.Text.Internal.Text
  {- Arity: 1,
     Strictness: <S(LS(S(S)S(S))S(S(S)S(S))),1*U(A,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case ww2 of ww4 { Language.PureScript.AST.SourcePos.SourcePos ww5 ww6 ->
                 case ww5 of ww7 { GHC.Types.I# ww8 ->
                 case ww6 of ww9 { GHC.Types.I# ww10 ->
                 case ww3 of ww11 { Language.PureScript.AST.SourcePos.SourcePos ww12 ww13 ->
                 case ww12 of ww14 { GHC.Types.I# ww15 ->
                 case ww13 of ww16 { GHC.Types.I# ww17 ->
                 Language.PureScript.AST.SourcePos.$wdisplayStartEndPos
                   ww8
                   ww10
                   ww15
                   ww17 } } } } } } }) -}
95a3d0cb80b7e85f6ff2d774252c312c
  displayStartEndPosShort ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Data.Text.Internal.Text
  {- Arity: 1,
     Strictness: <S(LS(S(S)S(S))S(S(S)S(S))),1*U(A,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 case ww2 of ww4 { Language.PureScript.AST.SourcePos.SourcePos ww5 ww6 ->
                 case ww5 of ww7 { GHC.Types.I# ww8 ->
                 case ww6 of ww9 { GHC.Types.I# ww10 ->
                 case ww3 of ww11 { Language.PureScript.AST.SourcePos.SourcePos ww12 ww13 ->
                 case ww12 of ww14 { GHC.Types.I# ww15 ->
                 case ww13 of ww16 { GHC.Types.I# ww17 ->
                 Language.PureScript.AST.SourcePos.$wdisplayStartEndPosShort
                   ww8
                   ww10
                   ww15
                   ww17 } } } } } } }) -}
f13de72620ea3980769d3252f1949a4a
  internalModuleSourceSpan ::
    GHC.Base.String -> Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (name :: GHC.Base.String) ->
                 Language.PureScript.AST.SourcePos.SourceSpan
                   name
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan1
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan1) -}
232f686ce9eaef22a6239187f1de0ae3
  nonEmptySpan ::
    Language.PureScript.AST.SourcePos.SourceAnn
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SLL)L),1*U(1*U(U,U(U(U),U(U)),U(U(U),U(U))),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])) ->
                 case ds of wild { (,) ds1 ds2 ->
                 Language.PureScript.AST.SourcePos.$mNullSourceSpan
                   @ 'GHC.Types.LiftedRep
                   @ (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)
                   ds1
                   Language.PureScript.AST.SourcePos.nonEmptySpan1
                   (\ (void :: GHC.Prim.Void#)[OneShot] ->
                    GHC.Base.Just
                      @ Language.PureScript.AST.SourcePos.SourceSpan
                      ds1) }) -}
b1c83d9b2405481a42474ae97cdba3c8
  nonEmptySpan1 ::
    GHC.Prim.Void#
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (void :: GHC.Prim.Void#) ->
                 GHC.Base.Nothing @ Language.PureScript.AST.SourcePos.SourceSpan) -}
f2dcb0c4d24a9cde0192cde9ecb60353
  nullSourceAnn :: Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m,
     Unfolding: (Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
d3ce9e45794cd4f5ddfad4b02b318f51
  nullSourceSpan :: Language.PureScript.AST.SourcePos.SourceSpan
  {- Strictness: m,
     Unfolding: (Language.PureScript.AST.SourcePos.$bNullSourceSpan) -}
1e0cf2bd3ea18f97a2ff152297f09219
  sourcePosColumn ::
    Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Int
  RecSel Left Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case ds of wild { Language.PureScript.AST.SourcePos.SourcePos ds1 ds2 ->
                 ds2 }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  sourcePosLine ::
    Language.PureScript.AST.SourcePos.SourcePos -> GHC.Types.Int
  RecSel Left Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.SourcePos.SourcePos) ->
                 case ds of wild { Language.PureScript.AST.SourcePos.SourcePos ds1 ds2 ->
                 ds1 }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  spanEnd ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourcePos
  RecSel Left Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case ds of wild { Language.PureScript.AST.SourcePos.SourceSpan ds1 ds2 ds3 ->
                 ds3 }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  spanName ::
    Language.PureScript.AST.SourcePos.SourceSpan -> GHC.Base.String
  RecSel Left Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case ds of wild { Language.PureScript.AST.SourcePos.SourceSpan ds1 ds2 ds3 ->
                 ds1 }) -}
1e0cf2bd3ea18f97a2ff152297f09219
  spanStart ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourcePos
  RecSel Left Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case ds of wild { Language.PureScript.AST.SourcePos.SourceSpan ds1 ds2 ds3 ->
                 ds2 }) -}
2e2c7096d7706bbf13b659eb261cbe79
  widenSourceAnn ::
    Language.PureScript.AST.SourcePos.SourceAnn
    -> Language.PureScript.AST.SourcePos.SourceAnn
    -> Language.PureScript.AST.SourcePos.SourceAnn
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U(U,U(U(U),U(U)),U(U(U),U(U))),A)><S,1*U(1*U(U,U(U(U),U(U)),U(U(U),U(U))),A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment]))
                   (ds1 :: (Language.PureScript.AST.SourcePos.SourceSpan,
                            [Language.PureScript.Comments.Comment])) ->
                 case ds of wild { (,) s1 ds2 ->
                 case ds1 of wild1 { (,) s2 ds3 ->
                 (Language.PureScript.AST.SourcePos.widenSourceSpan s1 s2,
                  GHC.Types.[] @ Language.PureScript.Comments.Comment) } }) -}
4b532ffaa51152e81f9e696cfeb2a4fc
  widenSourceSpan ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U(U),U(U)),U(U(U),U(U)))><S,1*U(U,U(U(U),U(U)),U(U(U),U(U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (w1 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                 case w of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                 Language.PureScript.AST.SourcePos.$wwidenSourceSpan
                   ww1
                   ww2
                   ww3
                   w1 }) -}
instance GHC.Classes.Eq [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fEqSourcePos
instance GHC.Classes.Eq [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fEqSourceSpan
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fFromJSONSourcePos
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan
instance GHC.Generics.Generic [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fGenericSourcePos
instance GHC.Generics.Generic [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fGenericSourceSpan
instance Control.DeepSeq.NFData [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fNFDataSourcePos
instance Control.DeepSeq.NFData [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fNFDataSourceSpan
instance GHC.Classes.Ord [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fOrdSourcePos
instance GHC.Classes.Ord [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fOrdSourceSpan
instance GHC.Show.Show [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fShowSourcePos
instance GHC.Show.Show [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fShowSourceSpan
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.$fToJSONSourcePos
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.$fToJSONSourceSpan
family instance GHC.Generics.Rep [Language.PureScript.AST.SourcePos.SourceSpan]
  = Language.PureScript.AST.SourcePos.Rep_SourceSpan
family instance GHC.Generics.Rep [Language.PureScript.AST.SourcePos.SourcePos]
  = Language.PureScript.AST.SourcePos.Rep_SourcePos
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

