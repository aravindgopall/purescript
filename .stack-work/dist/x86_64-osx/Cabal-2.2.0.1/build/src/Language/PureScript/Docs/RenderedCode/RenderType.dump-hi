
==================== FINAL INTERFACE ====================
2019-01-24 14:16:18.654881 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.RenderedCode.RenderType 8043
  interface hash: 5aad4c85fb64152e4a5eeef133408496
  ABI hash: 135e2d86e164296954db8f4fe3c60cd8
  export-list hash: b821819fbe8588714fe3851e0be32bc2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7ced076f4d50d6269ee035a1511c0060
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Docs.RenderedCode.RenderType.renderRow
  Language.PureScript.Docs.RenderedCode.RenderType.renderType
  Language.PureScript.Docs.RenderedCode.RenderType.renderType'
  Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom
  Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 microlens-0.4.9.1 microlens-ghc-0.4.9
                      microlens-mtl-0.1.11.1 microlens-platform-0.3.10
                      microlens-th-0.4.2.1 mtl-2.2.2 parsec-3.1.13.0 pattern-arrows-0.0.2
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0
                      syb-0.7 tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  pattern-arrows-0.0.2:Control.PatternArrows 90def053e91ab273d69e02942232cbc5
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Docs.RenderedCode.RenderKind ea767ede83f6ffb0772b1daae609b227
  exports: 0fe1b5428287724ba43a650982ec6665
  renderKind c21a33a96b6e6073c9bfe750f4fe955d
import  -/  Language.PureScript.Docs.RenderedCode.Types a63cc6a5cb22a8a549b2d76ebcbc879a
  exports: e93c760d312b3c7e461ee610e748ebba
  RenderedCode b76660a0424da31964a78f3df8712e5d
  keywordForall 018134480888568412524573f0b20b87
  sp 36a8eaafc38970ad0ba81b96ac1c8a6b
  syntax 56404943757616c81318673508c45bb1
  typeCtor ef3ec807a21424113cddfe0cdc6538b8
  typeOp 8cf44ddb463d30a57fb828a49ca0517f
  typeVar 7c8f1b67989521c64e611feb53a08c00
import  -/  Language.PureScript.Docs.Utils.MonoidExtras 65c3c5378ab060b062131525ba589039
  exports: fb843455bd7dfef0b5709000f4dd4cdc
  mintersperse ebfef99e90b055fb405c5b0989908293
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  exports: fe71635ad7964c0d620fb0685614a050
  Kind 5e0361ee324aa435f4976ea2eac1777d
import  -/  Language.PureScript.Label 366bbe6039761c79dbc09aaf87b5753e
  exports: 0a72b1b943ee66379d53382d0212ef7e
  Label 1525a534169f6ccc5a25699c70351352
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  coerceProperName 441cf2d4ab32b68a0b73ca234d2a628b
import  -/  Language.PureScript.PSString 482bcd39d274b3e3efbde5749bd9d797
  exports: dedd5d31dc509736134f041863efd1d4
  prettyPrintString b1dfb53e84049d1e3f6bb311f4e41690
import  -/  Language.PureScript.Pretty.Types 1303ea05006a6ec61edb2f109218248a
  exports: f7263952ce0ec10cb0b028bbb35f097c
  PPBinaryNoParensType 015012b4b4fd88282b2b85cd5f445669
  PPConstrainedType 96a6b8fa07ed4ec7ab850da9c6fddd70
  PPForAll 2e577c4e614800e7eb7bf28ea0420a0e
  PPFunction eb4100101202ef9b7e460febfe2761e8
  PPKindedType 738a7e3b996753ef2ca668d09e4b9e0d
  PPParensInType 420b00774221ca80835e5825d488d215
  PPRCons 37764178d95c50b41a91376fa15faf73
  PPREmpty ea9f8ce075c97087ae8e0f0aa498fa64
  PPRecord fc4a9691723f843b073ceec4452bd617
  PPTypeApp d849f0cf8d9466d6b2b52de82953aa86
  PPTypeConstructor 6b30c9c0eb8e1ba0932ffb325f6144cb
  PPTypeLevelString b8e62f795d35001245b1f66cd9de995e
  PPTypeOp 02e3b7ee2cd5c0b7323f865f7aa107c3
  PPTypeVar 48d8b944c9b6e2777570341d36492a56
  PPTypeWildcard a93451949663477bdd97f956a3b9254c
  PrettyPrintConstraint be5b96ca6a27eb1cc6a617fe5eeb0be5
  PrettyPrintType be5b96ca6a27eb1cc6a617fe5eeb0be5
  convertPrettyPrintType bb96aac0adb034b415969311e7320844
  prettyPrintLabel 11a28b259161844f1d8d17a50499925b
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  exports: 229bb7528146da886cffbefad5822e19
  Type d5fc19231e8a71936895da17eade4f5b
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
75917fcbbf0a751681791b4ce425a444
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Docs.RenderedCode.RenderType.$trModule3
                   Language.PureScript.Docs.RenderedCode.RenderType.$trModule1) -}
5ffb6587e1bd6f946b314830bef2343b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.RenderedCode.RenderType.$trModule2) -}
d37bf98f41161997a0ab6d60b091e19d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Docs.RenderedCode.RenderType"#) -}
f507b77126d45566294624ee83619484
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.RenderedCode.RenderType.$trModule4) -}
c5ec50a2fd7ddfb0b88af24515833e47
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
9c81248fc944d2b72666e841d6bc3cfc
  $wgo ::
    [(Language.PureScript.Label.Label,
      Language.PureScript.Pretty.Types.PrettyPrintType)]
    -> Language.PureScript.Pretty.Types.PrettyPrintType
    -> (# [(Language.PureScript.Label.Label,
            Language.PureScript.Pretty.Types.PrettyPrintType)],
          Language.PureScript.Pretty.Types.PrettyPrintType #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
ec0ac167d71f26705ee4dec3b07c2da5
  $wrenderLabel ::
    Language.PureScript.Label.Label
    -> Language.PureScript.Pretty.Types.PrettyPrintType
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Label.Label)
                   (ww30 :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 Language.PureScript.Docs.Utils.MonoidExtras.mintersperse_$smintersperse
                   @ Language.PureScript.Docs.RenderedCode.Types.RenderedCode
                   (GHC.Types.:
                      @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                      (Language.PureScript.Docs.RenderedCode.Types.Symbol
                         Language.PureScript.Docs.RenderedCode.Types.TypeLevel
                         (Language.PureScript.Pretty.Types.prettyPrintLabel ww)
                         Language.PureScript.Docs.RenderedCode.Types.NoLink)
                      (GHC.Types.[]
                         @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement))
                     `cast`
                   (Sym (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0]))
                   (GHC.Types.:
                      @ Language.PureScript.Docs.RenderedCode.Types.RenderedCode
                      Language.PureScript.Docs.RenderedCode.RenderType.renderRow4
                        `cast`
                      (Sym (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0]))
                      (GHC.Types.:
                         @ Language.PureScript.Docs.RenderedCode.Types.RenderedCode
                         (case (Language.PureScript.Docs.RenderedCode.RenderType.matchType
                                  `cast`
                                (Control.PatternArrows.N:Pattern[0]
                                     <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                                                                    <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                                       ()
                                                                                                                                                                       GHC.Base.Maybe>_R
                                                                                                                                                                    <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                                                                    <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                                  ww30)
                                 `cast`
                               (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <()>_N
                                    <GHC.Base.Maybe>_R
                                    <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                                 GHC.Tuple.() of wild {
                            GHC.Base.Nothing
                            -> Language.PureScript.Docs.RenderedCode.RenderType.renderRow_d
                            GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds1 -> a1 } })
                         (GHC.Types.[]
                            @ Language.PureScript.Docs.RenderedCode.Types.RenderedCode)))
                   Language.PureScript.Docs.RenderedCode.Types.alias5
                     `cast`
                   (Sym (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0]))
                   Language.PureScript.Docs.RenderedCode.Types.$fMonoidRenderedCode) -}
d82e4110d8981eb3ecf95192324fa70f
  matchType ::
    Control.PatternArrows.Pattern
      ()
      Language.PureScript.Pretty.Types.PrettyPrintType
      Language.PureScript.Docs.RenderedCode.Types.RenderedCode
0a833cdb6aea9e68d02a0434a7427f3a
  renderLabel ::
    (Language.PureScript.Label.Label,
     Language.PureScript.Pretty.Types.PrettyPrintType)
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Language.PureScript.Label.Label,
                          Language.PureScript.Pretty.Types.PrettyPrintType)) ->
                 case w of ww { (,) ww30 ww31 ->
                 Language.PureScript.Docs.RenderedCode.RenderType.$wrenderLabel
                   ww30
                   ww31 }) -}
a000e655a42ee4e4b57d478890c90181
  renderRow ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case Language.PureScript.Docs.RenderedCode.RenderType.$wgo
                        (GHC.Types.[]
                           @ (Language.PureScript.Label.Label,
                              Language.PureScript.Pretty.Types.PrettyPrintType))
                        x of ww { (#,#) ww30 ww31 ->
                 (GHC.Base.++
                    @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                    (Language.PureScript.Docs.Utils.MonoidExtras.mintersperse
                       @ Language.PureScript.Docs.RenderedCode.Types.RenderedCode
                       Language.PureScript.Docs.RenderedCode.Types.$fMonoidRenderedCode
                       Language.PureScript.Docs.RenderedCode.RenderType.renderRow8
                         `cast`
                       (Sym (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0]))
                       (GHC.Base.map
                          @ (Language.PureScript.Label.Label,
                             Language.PureScript.Pretty.Types.PrettyPrintType)
                          @ Language.PureScript.Docs.RenderedCode.Types.RenderedCode
                          Language.PureScript.Docs.RenderedCode.RenderType.renderLabel
                          ww30))
                      `cast`
                    (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0])
                    (case ww31 of wild {
                       DEFAULT
                       -> GHC.Types.:
                            @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                            Language.PureScript.Docs.RenderedCode.Types.Space
                            (GHC.Types.:
                               @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                               Language.PureScript.Docs.RenderedCode.RenderType.renderRow1
                               (GHC.Types.:
                                  @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                                  Language.PureScript.Docs.RenderedCode.Types.Space
                                  (case (Language.PureScript.Docs.RenderedCode.RenderType.matchType
                                           `cast`
                                         (Control.PatternArrows.N:Pattern[0]
                                              <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                                                ()
                                                                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                                                                             <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                                           wild)
                                          `cast`
                                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <()>_N
                                             <GHC.Base.Maybe>_R
                                             <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                                          GHC.Tuple.() of wild1 {
                                     GHC.Base.Nothing
                                     -> Language.PureScript.Docs.RenderedCode.RenderType.renderRow_d
                                          `cast`
                                        (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0])
                                     GHC.Base.Just x1
                                     -> case x1 of wild2 { (,) a1 ds1 ->
                                        a1
                                          `cast`
                                        (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0]) } })))
                       Language.PureScript.Pretty.Types.PPREmpty
                       -> GHC.Types.[]
                            @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement }))
                   `cast`
                 (Sym (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0])) }) -}
3fafd05637eb1fe7853b999afbcb3144
  renderRow1 ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Docs.RenderedCode.Types.Syntax
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow2) -}
77b0d60ce92bb5134cae830ec79be743
  renderRow10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow11) -}
22b7402cf43218c89318c52b59b36d03
  renderRow11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (","#) -}
03ba435440f083dab741b6a37d957240
  renderRow2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow3) -}
e9b0a320a30fb40d6ddcff10f4eee89c
  renderRow3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|"#) -}
1e337f632d549ede55c769be35d9b897
  renderRow4 ::
    [Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow5
                   (GHC.Types.[]
                      @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement)) -}
17f0c97e6b0eed70d9b76abc2a99b17b
  renderRow5 ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Docs.RenderedCode.Types.Syntax
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow6) -}
04938e68ea4974c3c8c5bfe8c75bd6bc
  renderRow6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow7) -}
b1462940e12d42497ddbfc4051b6f6cd
  renderRow7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("::"#) -}
2ca2033169603aaa0f76e164e7f5e319
  renderRow8 ::
    [Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow9
                   Language.PureScript.Docs.RenderedCode.Types.alias5) -}
9d71b0b88201bc6bd82395ea6c68a2bf
  renderRow9 ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Docs.RenderedCode.Types.Syntax
                   Language.PureScript.Docs.RenderedCode.RenderType.renderRow10) -}
4ea101cbab9443d665a4dad8dec9a994
  renderRow_d ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Strictness: x -}
cfdc8b51c99f166bbe136ef10f9f0f92
  renderType ::
    Language.PureScript.Types.Type a
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Docs.RenderedCode.RenderType.matchType
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                              ()
                                                                                                                                                              GHC.Base.Maybe>_R
                                                                                                                                                           <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                                                           <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N
                           <GHC.Base.Maybe>_R
                           <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Docs.RenderedCode.RenderType.renderRow_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds1 -> a1 } }) -}
3ad26825f4291a62a8b5e368f108306a
  renderType' ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case (Language.PureScript.Docs.RenderedCode.RenderType.matchType
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                              ()
                                                                                                                                                              GHC.Base.Maybe>_R
                                                                                                                                                           <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                                                           <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                         x)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N
                           <GHC.Base.Maybe>_R
                           <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Docs.RenderedCode.RenderType.renderRow_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds1 -> a1 } }) -}
adb17168dd9d13feb7cf7a6b92ec844e
  renderTypeAtom ::
    Language.PureScript.Types.Type a
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'
                   (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x)) -}
e8d43fc71faa7cf6320abaf73d5ac7a9
  renderTypeAtom' ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case (Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'8
                         x)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N
                           <GHC.Base.Maybe>_R
                           <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case (Language.PureScript.Docs.RenderedCode.RenderType.matchType
                              `cast`
                            (Control.PatternArrows.N:Pattern[0]
                                 <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                                                                <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                                   ()
                                                                                                                                                                   GHC.Base.Maybe>_R
                                                                                                                                                                <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                                                                <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                              x)
                             `cast`
                           (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <()>_N
                                <GHC.Base.Maybe>_R
                                <Language.PureScript.Docs.RenderedCode.Types.RenderedCode>_N)
                             GHC.Tuple.() of wild1 {
                        GHC.Base.Nothing
                        -> Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'_d
                        GHC.Base.Just a2
                        -> (GHC.Types.:
                              @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                              Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'5
                              (case a2 of wild2 { (,) a3 s' ->
                               GHC.Base.++
                                 @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                                 a3
                                   `cast`
                                 (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0])
                                 Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'1 }))
                             `cast`
                           (Sym (Language.PureScript.Docs.RenderedCode.Types.N:RenderedCode[0])) }
                   GHC.Base.Just ipv -> case ipv of wild1 { (,) a1 ds1 -> a1 } }) -}
a2b74f14fef7c53d7dce3cbe8101a417
  renderTypeAtom'1 ::
    [Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
                   Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'2
                   (GHC.Types.[]
                      @ Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement)) -}
f901d42505294418a4b91a2b5942cef1
  renderTypeAtom'2 ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Docs.RenderedCode.Types.Syntax
                   Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'3) -}
a03e9564b2b3c16c9572214aaeef2668
  renderTypeAtom'3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'4) -}
5ab576f63a1af63225c7c298fbfbc884
  renderTypeAtom'4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
acbdfb769d6c4adbc12a9c7b2c758b47
  renderTypeAtom'5 ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Docs.RenderedCode.Types.Syntax
                   Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'6) -}
c68b105b4ac8858600b6dec24c3d485e
  renderTypeAtom'6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.RenderedCode.RenderType.renderTypeAtom'7) -}
05cbd5d7020293f5814ec8af1986e65c
  renderTypeAtom'7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("("#) -}
74cfd9541b59cb43ddbcdfbeb4c82b0c
  renderTypeAtom'8 ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Control.Monad.Trans.State.Lazy.StateT
         ()
         GHC.Base.Maybe
         Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Arity: 1, Strictness: <L,1*U> -}
c333e65a2d9b78847650c1dc31a2fdc1
  renderTypeAtom'_d ::
    Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  {- Strictness: x -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

