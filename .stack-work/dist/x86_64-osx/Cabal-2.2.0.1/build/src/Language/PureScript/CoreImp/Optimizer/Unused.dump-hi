
==================== FINAL INTERFACE ====================
2018-11-30 19:28:23.990644 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.CoreImp.Optimizer.Unused 8043
  interface hash: d574b67652cd32d526584ef86d94e583
  ABI hash: 7bad22fcf813a228b3bc06cdb30e7836
  export-list hash: 286e74a3fdfa3048dec99dcb61f2932b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: bec0ba85914d2da9e0a4be22213f6c78
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.CoreImp.Optimizer.Unused.removeCodeAfterReturnStatements
  Language.PureScript.CoreImp.Optimizer.Unused.removeUndefinedApp
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Names Language.PureScript.PSString
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 mtl-2.2.2 parsec-3.1.13.0
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      scientific-0.3.6.2 sourcemap-0.1.6 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Language.PureScript.Constants d290cccb0db8657cab5f1253ab0da1ee
  exports: cd83a0f5b6591e5c66c598e34359260d
  undefined e59818a4be78c1acaccdcd57ca5c2293
import  -/  Language.PureScript.CoreImp.AST 66108f8b83c9a1c508a34f2e6114094e
  exports: 1da27be6d04935ab665d52ac441d8230
  AST 2d7016401e08dc68af93e9a4339f76ff
  App d468a52c8340e49be5e7e3a8742c9aaf
  Return cbec3880ff1a27efbadc035339cd78c6
  ReturnNoResult 7a6345f18069702a751ae53b0006882d
  Var c3d3709a7644965f92d8326eb3be56cf
  everywhere 8ce9417ee75b74710133c4483c16425a
import  -/  Language.PureScript.CoreImp.Optimizer.Common d1b700c07ed6677e35c7d0ef5c1d797a
  exports: 6b4d83e29381b01143d015e4188e1b4a
  removeFromBlock 281994b35a4fd4cb5eceb2b42d1e5d18
a32de31227b054113a1c8c6d75dd1bbf
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.CoreImp.Optimizer.Unused.$trModule3
                   Language.PureScript.CoreImp.Optimizer.Unused.$trModule1) -}
af9d4aec0dc3c4941bb35dcc9107b62d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.CoreImp.Optimizer.Unused.$trModule2) -}
7179ac90ffb8c38e02f0ff1ddd8595a8
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.CoreImp.Optimizer.Unused"#) -}
fc064eefde5464961a9841c6f56f9cda
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.CoreImp.Optimizer.Unused.$trModule4) -}
33d339cc396d87ce431aa00ae6d0cb40
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
1a88ea0121882712f895ae83bb866039
  removeCodeAfterReturnStatements ::
    Language.PureScript.CoreImp.AST.AST
    -> Language.PureScript.CoreImp.AST.AST
  {- Arity: 1,
     Unfolding: (Language.PureScript.CoreImp.AST.everywhere
                   Language.PureScript.CoreImp.Optimizer.Unused.removeCodeAfterReturnStatements1) -}
a59e4af5d7ff3ce3bf44d4b040737bda
  removeCodeAfterReturnStatements1 ::
    Language.PureScript.CoreImp.AST.AST
    -> Language.PureScript.CoreImp.AST.AST
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.CoreImp.AST.AST) ->
                 case ds of wild {
                   DEFAULT -> wild
                   Language.PureScript.CoreImp.AST.Block ss sts
                   -> Language.PureScript.CoreImp.AST.Block
                        ss
                        (let {
                           $j :: [Language.PureScript.CoreImp.AST.AST] <join 0>
                           = case GHC.List.$wbreak
                                    @ Language.PureScript.CoreImp.AST.AST
                                    Language.PureScript.CoreImp.Optimizer.Unused.removeCodeAfterReturnStatements_isReturn
                                    sts of ww { (#,#) ww1 ww2 ->
                             case ww2 of wild1 {
                               []
                               -> case Language.PureScript.CoreImp.Optimizer.Unused.removeCodeAfterReturnStatements2
                                  ret_ty [Language.PureScript.CoreImp.AST.AST]
                                  of {}
                               : ret ds1
                               -> GHC.Base.++
                                    @ Language.PureScript.CoreImp.AST.AST
                                    ww1
                                    (GHC.Types.:
                                       @ Language.PureScript.CoreImp.AST.AST
                                       ret
                                       (GHC.Types.[] @ Language.PureScript.CoreImp.AST.AST)) } }
                         } in
                         letrec {
                           go :: [Language.PureScript.CoreImp.AST.AST]
                                 -> [Language.PureScript.CoreImp.AST.AST]
                             <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                           = \ (ds1 :: [Language.PureScript.CoreImp.AST.AST]) ->
                             case ds1 of wild1 {
                               [] -> sts
                               : y ys
                               -> case y of wild2 {
                                    DEFAULT -> go ys
                                    Language.PureScript.CoreImp.AST.Return ds2 ds3 -> $j
                                    Language.PureScript.CoreImp.AST.ReturnNoResult ds2 -> $j } }
                         } in
                         go sts) }) -}
fc217676569f93ea7e4821d4c201fe99
  removeCodeAfterReturnStatements2 ::
    ([Language.PureScript.CoreImp.AST.AST],
     Language.PureScript.CoreImp.AST.AST)
  {- Strictness: x -}
9bde944df44bffa4043e0b7347a3b615
  removeCodeAfterReturnStatements_isReturn ::
    Language.PureScript.CoreImp.AST.AST -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.CoreImp.AST.AST) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.CoreImp.AST.Return ds1 ds2 -> GHC.Types.True
                   Language.PureScript.CoreImp.AST.ReturnNoResult ds1
                   -> GHC.Types.True }) -}
d9e9525727009fae72be2b3947d258ac
  removeUndefinedApp ::
    Language.PureScript.CoreImp.AST.AST
    -> Language.PureScript.CoreImp.AST.AST
  {- Arity: 1,
     Unfolding: (Language.PureScript.CoreImp.AST.everywhere
                   Language.PureScript.CoreImp.Optimizer.Unused.removeUndefinedApp_convert) -}
13606e8326278d61bf0f697d1c9907be
  removeUndefinedApp1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.undefined2) -}
9d3338001b6469b89dc7d42693133248
  removeUndefinedApp_convert ::
    Language.PureScript.CoreImp.AST.AST
    -> Language.PureScript.CoreImp.AST.AST
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.CoreImp.AST.AST) ->
                 case ds of wild {
                   DEFAULT -> wild
                   Language.PureScript.CoreImp.AST.App ss fn ds1
                   -> case ds1 of wild1 {
                        [] -> wild
                        : ds2 ds3
                        -> case ds2 of wild2 {
                             DEFAULT -> wild
                             Language.PureScript.CoreImp.AST.Var ds4 arg
                             -> case ds3 of wild3 {
                                  []
                                  -> case arg of wild4 { Data.Text.Internal.Text dt dt1 dt2 ->
                                     case Language.PureScript.CoreImp.Optimizer.Unused.removeUndefinedApp1 of wild5 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                                     case GHC.Prim.==# dt2 dt5 of lwild {
                                       DEFAULT -> wild
                                       1#
                                       -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.ByteArray#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Int# #)}
                                                 dt
                                                 (GHC.Prim.int2Word# dt1)
                                                 dt3
                                                 (GHC.Prim.int2Word# dt4)
                                                 (GHC.Prim.int2Word# dt2)
                                                 GHC.Prim.realWorld# of wild6 { (#,#) ds5 ds6 ->
                                          case GHC.Prim.narrow32Int# ds6 of wild7 {
                                            DEFAULT -> wild
                                            0#
                                            -> Language.PureScript.CoreImp.AST.App
                                                 ss
                                                 fn
                                                 (GHC.Types.[]
                                                    @ Language.PureScript.CoreImp.AST.AST) } } } } }
                                  : ipv ipv1 -> wild } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

