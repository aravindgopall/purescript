
==================== FINAL INTERFACE ====================
2019-01-24 14:13:31.234923 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label [family instance module] 8043
  interface hash: 8072c988dbf03921a1b7cc0d7a1a05d0
  ABI hash: 366bbe6039761c79dbc09aaf87b5753e
  export-list hash: 0a72b1b943ee66379d53382d0212ef7e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c44f56fa568975ec54fde669ad1add1f
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Label.Label{Language.PureScript.Label.Label runLabel}
module dependencies: Language.PureScript.PSString
package dependencies: aeson-1.3.1.1 array-0.5.2.0
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1 primitive-0.6.3.0
                      random-1.1 scientific-0.3.6.2 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 time-1.8.0.2
                      time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Encoding.Internal f04efae65181ca66f15bea14741e502d
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  base-4.11.1.0:Data.Monoid c40cd435d79b84293ce5503253ee6d44
import  -/  base-4.11.1.0:Data.String 1b97cff5f9627e73898d75997a9ccf7f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Language.PureScript.PSString 482bcd39d274b3e3efbde5749bd9d797
  exports: dedd5d31dc509736134f041863efd1d4
  PSString 96ffea2472d48cda76cc39d47ab7bb82
1525a534169f6ccc5a25699c70351352
  $fEqLabel :: GHC.Classes.Eq Language.PureScript.Label.Label
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.PSString.$fEqPSString1
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Bool>_R)
                  Language.PureScript.PSString.$fEqPSString_$s$fEq[]_$c/=
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Bool>_R) -}
1525a534169f6ccc5a25699c70351352
  $fFromJSONLabel ::
    Data.Aeson.Types.FromJSON.FromJSON Language.PureScript.Label.Label
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.PSString.$fFromJSONPSString_$cparseJSON
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           (Sym (Language.PureScript.Label.N:Label[0])))_R)
                  Language.PureScript.PSString.$fFromJSONPSString_$cparseJSONList
                    `cast`
                  (<Data.Aeson.Types.Internal.Value>_R
                   ->_R (Data.Aeson.Types.Internal.Parser
                           ([Sym (Language.PureScript.Label.N:Label[0])])_R)_R) -}
1525a534169f6ccc5a25699c70351352
  $fGenericLabel ::
    GHC.Generics.Generic Language.PureScript.Label.Label
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.Label.$fGenericLabel2
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Label.Label>_R
                   ->_R Language.PureScript.Label.N:Label[0] ; (Sym (GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <Language.PureScript.PSString.PSString>_R
                                                                         <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                            <*>_N
                                                                                            <GHC.Generics.S>_P
                                                                                            <'GHC.Generics.MetaSel
                                                                                               ('GHC.Base.Just
                                                                                                  "runLabel")
                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                               'GHC.Generics.DecidedLazy>_P
                                                                                            <GHC.Generics.K1
                                                                                               GHC.Generics.R
                                                                                               Language.PureScript.PSString.PSString>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                     <*>_N
                                                                                                                                                     <GHC.Generics.C>_P
                                                                                                                                                     <'GHC.Generics.MetaCons
                                                                                                                                                        "Label"
                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                        'GHC.Types.True>_P
                                                                                                                                                     <GHC.Generics.M1
                                                                                                                                                        GHC.Generics.S
                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                              "runLabel")
                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                        (GHC.Generics.K1
                                                                                                                                                           GHC.Generics.R
                                                                                                                                                           Language.PureScript.PSString.PSString)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                                  <*>_N
                                                                                                                                                                                                                  <GHC.Generics.D>_P
                                                                                                                                                                                                                  <'GHC.Generics.MetaData
                                                                                                                                                                                                                     "Label"
                                                                                                                                                                                                                     "Language.PureScript.Label"
                                                                                                                                                                                                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                                                                                                                                                     'GHC.Types.True>_P
                                                                                                                                                                                                                  <GHC.Generics.M1
                                                                                                                                                                                                                     GHC.Generics.C
                                                                                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                                                                                        "Label"
                                                                                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                                                                                        'GHC.Types.True)
                                                                                                                                                                                                                     (GHC.Generics.M1
                                                                                                                                                                                                                        GHC.Generics.S
                                                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                                                              "runLabel")
                                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                        (GHC.Generics.K1
                                                                                                                                                                                                                           GHC.Generics.R
                                                                                                                                                                                                                           Language.PureScript.PSString.PSString))>_R) ; Sub (Sym (Language.PureScript.Label.Rep_Label[0]))))) <x>_N))
                  Language.PureScript.Label.$fGenericLabel1
                    `cast`
                  (forall (x :: <*>_N).
                   <GHC.Generics.Rep Language.PureScript.Label.Label x>_R
                   ->_R (Sub (Language.PureScript.Label.Rep_Label[0]) ; (GHC.Generics.N:M1[0]
                                                                             <*>_N
                                                                             <GHC.Generics.D>_P
                                                                             <'GHC.Generics.MetaData
                                                                                "Label"
                                                                                "Language.PureScript.Label"
                                                                                "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                'GHC.Types.True>_P
                                                                             <GHC.Generics.M1
                                                                                GHC.Generics.C
                                                                                ('GHC.Generics.MetaCons
                                                                                   "Label"
                                                                                   'GHC.Generics.PrefixI
                                                                                   'GHC.Types.True)
                                                                                (GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "runLabel")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Language.PureScript.PSString.PSString))>_R ; (GHC.Generics.N:M1[0]
                                                                                                                                        <*>_N
                                                                                                                                        <GHC.Generics.C>_P
                                                                                                                                        <'GHC.Generics.MetaCons
                                                                                                                                           "Label"
                                                                                                                                           'GHC.Generics.PrefixI
                                                                                                                                           'GHC.Types.True>_P
                                                                                                                                        <GHC.Generics.M1
                                                                                                                                           GHC.Generics.S
                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                 "runLabel")
                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                           (GHC.Generics.K1
                                                                                                                                              GHC.Generics.R
                                                                                                                                              Language.PureScript.PSString.PSString)>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                              <*>_N
                                                                                                                                                                                              <GHC.Generics.S>_P
                                                                                                                                                                                              <'GHC.Generics.MetaSel
                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                    "runLabel")
                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                 'GHC.Generics.DecidedLazy>_P
                                                                                                                                                                                              <GHC.Generics.K1
                                                                                                                                                                                                 GHC.Generics.R
                                                                                                                                                                                                 Language.PureScript.PSString.PSString>_R))) <x>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                                                                                                                          <*>_N
                                                                                                                                                                                                                                                          <GHC.Generics.R>_P
                                                                                                                                                                                                                                                          <Language.PureScript.PSString.PSString>_R
                                                                                                                                                                                                                                                          <x>_P ; Sym (Language.PureScript.Label.N:Label[0]))) -}
1525a534169f6ccc5a25699c70351352
  $fGenericLabel1 ::
    GHC.Generics.Rep Language.PureScript.Label.Label x
    -> GHC.Generics.Rep Language.PureScript.Label.Label x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ x
                   (ds :: GHC.Generics.Rep Language.PureScript.Label.Label x) ->
                 ds) -}
1525a534169f6ccc5a25699c70351352
  $fGenericLabel2 ::
    Language.PureScript.Label.Label -> Language.PureScript.Label.Label
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (x1 :: Language.PureScript.Label.Label) -> x1) -}
1525a534169f6ccc5a25699c70351352
  $fIsStringLabel ::
    Data.String.IsString Language.PureScript.Label.Label
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.PSString.$fIsStringPSString1
                  `cast`
                ((<[GHC.Types.Char]>_R
                  ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0])) ; Sym (Data.String.N:IsString[0]) <Language.PureScript.Label.Label>_N) -}
1525a534169f6ccc5a25699c70351352
  $fMonoidLabel :: GHC.Base.Monoid Language.PureScript.Label.Label
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.Label.$fSemigroupLabel
                  (GHC.Types.[] @ GHC.Word.Word16)
                    `cast`
                  (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                  (GHC.Base.++ @ GHC.Word.Word16)
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                  (GHC.Base.$fMonoid[]_$cmconcat @ GHC.Word.Word16)
                    `cast`
                  (([Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0])])_R
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0])) -}
1525a534169f6ccc5a25699c70351352
  $fNFDataLabel ::
    Control.DeepSeq.NFData Language.PureScript.Label.Label
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.PSString.$fNFDataPSString_go
                  `cast`
                (((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                  ->_R <()>_R) ; Sym (Control.DeepSeq.N:NFData[0]
                                          <Language.PureScript.Label.Label>_N)) -}
1525a534169f6ccc5a25699c70351352
  $fOrdLabel :: GHC.Classes.Ord Language.PureScript.Label.Label
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.Label.$fEqLabel
                  Language.PureScript.PSString.$fOrdPSString7
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Ordering>_R)
                  Language.PureScript.PSString.$fOrdPSString6
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Bool>_R)
                  Language.PureScript.PSString.$fOrdPSString5
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Bool>_R)
                  Language.PureScript.PSString.$fOrdPSString4
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Bool>_R)
                  Language.PureScript.PSString.$fOrdPSString3
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R <GHC.Types.Bool>_R)
                  Language.PureScript.PSString.$fOrdPSString2
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                  Language.PureScript.PSString.$fOrdPSString1
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0])) -}
1525a534169f6ccc5a25699c70351352
  $fSemigroupLabel ::
    GHC.Base.Semigroup Language.PureScript.Label.Label
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  (GHC.Base.++ @ GHC.Word.Word16)
                    `cast`
                  ((Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                  (GHC.Base.$fSemigroup[]_$csconcat @ GHC.Word.Word16)
                    `cast`
                  ((GHC.Base.NonEmpty
                      (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0])))_R
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                  Language.PureScript.PSString.$fSemigroupPSString1
                    `cast`
                  (forall (b :: <*>_N).
                   <GHC.Real.Integral b>_R
                   ->_R <b>_R
                   ->_R (Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0]))
                   ->_R Sym (Language.PureScript.PSString.N:PSString[0]) ; Sym (Language.PureScript.Label.N:Label[0])) -}
1525a534169f6ccc5a25699c70351352
  $fShowLabel :: GHC.Show.Show Language.PureScript.Label.Label
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.Label.$fShowLabel_$cshowsPrec
                  Language.PureScript.Label.$fShowLabel_$cshow
                  Language.PureScript.Label.$fShowLabel_$cshowList -}
1525a534169f6ccc5a25699c70351352
  $fShowLabel1 :: Language.PureScript.Label.Label -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Label.Label)
                   (w1 :: GHC.Base.String) ->
                 Language.PureScript.Label.$w$cshowsPrec 0# w w1) -}
7a43202d666db51056a2668079d2d67e
  $fShowLabel2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
96ccb2b80dcdced70e311e50d62b6957
  $fShowLabel3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("runLabel = "#) -}
520470c775b6861ceb6702d88520e649
  $fShowLabel4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Label {"#) -}
bbef679d4c00b7cc2ac1c63cca7a4d6e
  $fShowLabel5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Label.$fShowLabel2) -}
1525a534169f6ccc5a25699c70351352
  $fShowLabel_$cshow ::
    Language.PureScript.Label.Label -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Label.Label) ->
                 GHC.CString.unpackAppendCString#
                   Language.PureScript.Label.$fShowLabel4
                   (GHC.CString.unpackAppendCString#
                      Language.PureScript.Label.$fShowLabel3
                      (GHC.Base.++_$s++
                         @ GHC.Types.Char
                         Language.PureScript.Label.$fShowLabel5
                         GHC.Show.$fShow(,)3
                         (GHC.Show.showLitString
                            (GHC.Base.map
                               @ (Data.Either.Either GHC.Word.Word16 GHC.Types.Char)
                               @ GHC.Types.Char
                               Language.PureScript.PSString.$fShowPSString2
                               (Language.PureScript.PSString.$fShowPSString_go
                                  x `cast`
                                  (Language.PureScript.Label.N:Label[0] ; Language.PureScript.PSString.N:PSString[0])))
                            GHC.Show.$fShow[]1)))) -}
1525a534169f6ccc5a25699c70351352
  $fShowLabel_$cshowList ::
    [Language.PureScript.Label.Label] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Label.Label])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Label.Label
                   Language.PureScript.Label.$fShowLabel1
                   ls
                   s) -}
1525a534169f6ccc5a25699c70351352
  $fShowLabel_$cshowsPrec ::
    GHC.Types.Int -> Language.PureScript.Label.Label -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Label.Label)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Label.$w$cshowsPrec ww1 w1 w2 }) -}
1525a534169f6ccc5a25699c70351352
  $fToJSONLabel ::
    Data.Aeson.Types.ToJSON.ToJSON Language.PureScript.Label.Label
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Label.Label
                  Language.PureScript.PSString.$fToJSONPSString_$ctoJSON
                    `cast`
                  (Sym (Language.PureScript.Label.N:Label[0])
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Language.PureScript.PSString.$fToJSONPSString_$ctoEncoding
                    `cast`
                  (Sym (Language.PureScript.Label.N:Label[0])
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R)
                  Language.PureScript.PSString.$fToJSONPSString_$ctoJSONList
                    `cast`
                  (([Sym (Language.PureScript.Label.N:Label[0])])_R
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Language.PureScript.PSString.$fToJSONPSString_$ctoEncodingList
                    `cast`
                  (([Sym (Language.PureScript.Label.N:Label[0])])_R
                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                           Data.Aeson.Types.Internal.Value>_R) -}
375a2b62a63fa71a4588c5162344c73a
  $tc'Label :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13630435308906727453##
                   8577833816137730546##
                   Language.PureScript.Label.$trModule
                   Language.PureScript.Label.$tc'Label2
                   0#
                   Language.PureScript.Label.$tc'Label1) -}
ca4ae0786539818cdfc18759e787d5eb
  $tc'Label1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f661fa64cd1914a8c88968e4bdd5a3f8
  $tc'Label2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Label.$tc'Label3) -}
80e2699738149d649d79917f581c2785
  $tc'Label3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Label"#) -}
72005ceb0b2beda5be66e4c1dae45c09
  $tcLabel :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5358159019266209271##
                   13068647193837144546##
                   Language.PureScript.Label.$trModule
                   Language.PureScript.Label.$tcLabel1
                   0#
                   GHC.Types.krep$*) -}
dec2072703aa168d13c2e20f57ea80b9
  $tcLabel1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Label.$tcLabel2) -}
076b411a18010a93f1e914ed45eebde8
  $tcLabel2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Label"#) -}
b2e214bd0b5b6df775bfb611889f6296
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Label.$trModule3
                   Language.PureScript.Label.$trModule1) -}
4f6302648589813e8a694902bdbb3a6a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Label.$trModule2) -}
487908d783710eeb07a33f8011114868
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Label"#) -}
74f3bb9e794d43095d3d74cecd6d94f1
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Label.$trModule4) -}
016e9945685a5d9c95388cdbacd2a446
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
1525a534169f6ccc5a25699c70351352
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Language.PureScript.Label.Label
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Label.Label)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Label.$fShowLabel4
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.Label.$fShowLabel3
                           (GHC.Base.++_$s++
                              @ GHC.Types.Char
                              (GHC.CString.unpackAppendCString#
                                 Language.PureScript.Label.$fShowLabel2
                                 w1)
                              GHC.Show.$fShow(,)3
                              (GHC.Show.showLitString
                                 (GHC.Base.map
                                    @ (Data.Either.Either GHC.Word.Word16 GHC.Types.Char)
                                    @ GHC.Types.Char
                                    Language.PureScript.PSString.$fShowPSString2
                                    (Language.PureScript.PSString.$fShowPSString_go
                                       w `cast`
                                       (Language.PureScript.Label.N:Label[0] ; Language.PureScript.PSString.N:PSString[0])))
                                 GHC.Show.$fShow[]1)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.Label.$fShowLabel4
                           (GHC.CString.unpackAppendCString#
                              Language.PureScript.Label.$fShowLabel3
                              (GHC.Base.++_$s++
                                 @ GHC.Types.Char
                                 (GHC.CString.unpackAppendCString#
                                    Language.PureScript.Label.$fShowLabel2
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))
                                 GHC.Show.$fShow(,)3
                                 (GHC.Show.showLitString
                                    (GHC.Base.map
                                       @ (Data.Either.Either GHC.Word.Word16 GHC.Types.Char)
                                       @ GHC.Types.Char
                                       Language.PureScript.PSString.$fShowPSString2
                                       (Language.PureScript.PSString.$fShowPSString_go
                                          w `cast`
                                          (Language.PureScript.Label.N:Label[0] ; Language.PureScript.PSString.N:PSString[0])))
                                    GHC.Show.$fShow[]1)))) }) -}
1525a534169f6ccc5a25699c70351352
  newtype Label
    = Label {runLabel :: Language.PureScript.PSString.PSString}
1525a534169f6ccc5a25699c70351352
  axiom Language.PureScript.Label.Rep_Label::
      GHC.Generics.Rep Language.PureScript.Label.Label
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Label"
               "Language.PureScript.Label"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.True)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Label" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "runLabel")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Language.PureScript.PSString.PSString)))
1525a534169f6ccc5a25699c70351352
  runLabel ::
    Language.PureScript.Label.Label
    -> Language.PureScript.PSString.PSString
  RecSel Left Language.PureScript.Label.Label
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Label.runLabel1
                  `cast`
                (<Language.PureScript.Label.Label>_R
                 ->_R Language.PureScript.Label.N:Label[0]) -}
1525a534169f6ccc5a25699c70351352
  runLabel1 ::
    Language.PureScript.Label.Label -> Language.PureScript.Label.Label
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Language.PureScript.Label.Label) -> ds) -}
instance GHC.Classes.Eq [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fEqLabel
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fFromJSONLabel
instance GHC.Generics.Generic [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fGenericLabel
instance Data.String.IsString [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fIsStringLabel
instance GHC.Base.Monoid [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fMonoidLabel
instance Control.DeepSeq.NFData [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fNFDataLabel
instance GHC.Classes.Ord [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fOrdLabel
instance GHC.Base.Semigroup [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fSemigroupLabel
instance GHC.Show.Show [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fShowLabel
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Label.Label]
  = Language.PureScript.Label.$fToJSONLabel
family instance GHC.Generics.Rep [Language.PureScript.Label.Label]
  = Language.PureScript.Label.Rep_Label
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

