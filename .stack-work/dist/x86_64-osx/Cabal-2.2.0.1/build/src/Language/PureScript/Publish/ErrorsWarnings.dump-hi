
==================== FINAL INTERFACE ====================
2019-01-24 14:17:12.937061 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Publish.ErrorsWarnings 8043
  interface hash: ba7e4b7f6626acce789b01565403e7c9
  ABI hash: 7d546205d690a0da40e24149d14f7d25
  export-list hash: 7579dc41fced80fecb7e0315ed8178db
  orphan hash: fdef02ed037b7adf01f7948319773e35
  flag hash: 83e6a75a98858846540bb03a2fd0f504
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Publish.ErrorsWarnings.printError
  Language.PureScript.Publish.ErrorsWarnings.printErrorToStdout
  Language.PureScript.Publish.ErrorsWarnings.printWarnings
  Language.PureScript.Publish.ErrorsWarnings.renderError
  Language.PureScript.Publish.ErrorsWarnings.renderWarnings
  Language.PureScript.Publish.ErrorsWarnings.InternalError{Language.PureScript.Publish.ErrorsWarnings.CouldntParseGitTagDate Language.PureScript.Publish.ErrorsWarnings.JSONError}
  Language.PureScript.Publish.ErrorsWarnings.JSONSource{Language.PureScript.Publish.ErrorsWarnings.FromFile Language.PureScript.Publish.ErrorsWarnings.FromResolutions}
  Language.PureScript.Publish.ErrorsWarnings.OtherError{Language.PureScript.Publish.ErrorsWarnings.IOExceptionThrown Language.PureScript.Publish.ErrorsWarnings.ProcessFailed}
  Language.PureScript.Publish.ErrorsWarnings.PackageError{Language.PureScript.Publish.ErrorsWarnings.InternalError Language.PureScript.Publish.ErrorsWarnings.OtherError Language.PureScript.Publish.ErrorsWarnings.UserError}
  Language.PureScript.Publish.ErrorsWarnings.PackageWarning{Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree_Warn Language.PureScript.Publish.ErrorsWarnings.MissingPath Language.PureScript.Publish.ErrorsWarnings.NoResolvedVersion Language.PureScript.Publish.ErrorsWarnings.UnacceptableVersion Language.PureScript.Publish.ErrorsWarnings.UndeclaredDependency}
  Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError{Language.PureScript.Publish.ErrorsWarnings.BadRepositoryType Language.PureScript.Publish.ErrorsWarnings.NotOnGithub Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldMissing}
  Language.PureScript.Publish.ErrorsWarnings.UserError{Language.PureScript.Publish.ErrorsWarnings.AmbiguousVersions Language.PureScript.Publish.ErrorsWarnings.BadRepositoryField Language.PureScript.Publish.ErrorsWarnings.CompileError Language.PureScript.Publish.ErrorsWarnings.CouldntDecodePackageManifest Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree Language.PureScript.Publish.ErrorsWarnings.InvalidLicense Language.PureScript.Publish.ErrorsWarnings.MissingDependencies Language.PureScript.Publish.ErrorsWarnings.NoLicenseSpecified Language.PureScript.Publish.ErrorsWarnings.PackageManifestNotFound Language.PureScript.Publish.ErrorsWarnings.ResolutionsFileNotFound Language.PureScript.Publish.ErrorsWarnings.TagMustBeCheckedOut}
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Docs.RenderedCode
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.RenderType
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Errors
                     Language.PureScript.Externs Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors ff0e80615ece0f0dd064c946f929132c
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors.Internal 066898b2dd92d5d1cfd1d0f21692c75d
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.List.NonEmpty 595ee3baddcadebc4831ea7541427984
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Monoid c40cd435d79b84293ce5503253ee6d44
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Semigroup.Internal 3e64145a879c21fc4c6fc83e5d8ca93b
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.IO.Exception acc060dca2e46d8b8275d06ee7d5d60d
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  bower-json-1.0.0.1:Web.Bower.PackageMeta 762fc9d54b3452d3ab89a9561af46cd3
import  -/  bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal 2e82adc50425e6a0d9ef6a12e29999f7
import  -/  boxes-0.1.5:Text.PrettyPrint.Boxes 49de0395c02f08dbf50ec04d019c04fb
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
import  -/  Language.PureScript.Docs.Types 8ff7c3b28d1548ecbdf2d5a573cc163d
  exports: b81c2b0b69c0f139e99069fb9794db69
  ManifestError 5e79e380ec99b3359162843125394c03
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  defaultPPEOptions 745195dd42b1496c9a7f7aafb0bc8f92
  prettyPrintMultipleErrorsBox 5908e95601a88eae4a405a6e316d3b2c
import  -/  Language.PureScript.Publish.BoxesHelpers 4e18ad11989646e9b2f4ca1d531fd7a2
  exports: 2f46a8c1612b5ed0ef7162a8f1eb8356
  bulletedList 2197037daf6bd2f82684bc3bf7fb68ae
  bulletedListT 7814663fe6f28418336374118c0e2e17
  indented b3e980baf231c5c17c72e959f6007ff7
  para 7049e9134f7f94b8530ba213501a5eaa
  printToStderr d3f260d990c83996e6a7710980834aee
  printToStdout f1888210d0b0f70389d402d3453e1e30
  spacer 75f0df82b6300c942b4642e06a73d97f
  successivelyIndented 830aaaf9172f055aaf729d7ed8fd8d6c
  vcat 45b08ffdb38641b7508d54a6c84ac32d
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
8b1283db8847aaa7572ab93e35a5efe4
  $fEqCollectedWarnings ::
    GHC.Classes.Eq
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$c==
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$c/= -}
8b1283db8847aaa7572ab93e35a5efe4
  $fEqCollectedWarnings_$c/= ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (y :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$c==
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fEqCollectedWarnings_$c== ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
4682267608d0c8bf42313ecd860caf7f
  $fEqCollectedWarnings_$s$fEq(,) ::
    GHC.Classes.Eq
      (Web.Bower.PackageMeta.Internal.PackageName,
       Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                     Data.Text.Internal.Text)
                  (GHC.Classes.$fEq(,)_$c==
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fEqPackageName
                     Data.Text.$fEqText)
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)_$c/= -}
d3aeb334d4cd3a2f240b06c6ece609d1
  $fEqCollectedWarnings_$s$fEq(,)_$c/= ::
    (Web.Bower.PackageMeta.Internal.PackageName,
     Data.Text.Internal.Text)
    -> (Web.Bower.PackageMeta.Internal.PackageName,
        Data.Text.Internal.Text)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U(U,U,U))><S(S(LLS)L),1*U(1*U(U,U,U),1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (Web.Bower.PackageMeta.Internal.PackageName,
                          Data.Text.Internal.Text))
                   (y :: (Web.Bower.PackageMeta.Internal.PackageName,
                          Data.Text.Internal.Text)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case a1
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Classes.eqInt
                        (GHC.Types.I# dt2)
                        (GHC.Types.I# dt5) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Int.eqInt32
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                             (GHC.Int.I32# 0#) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case a2 of wild7 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                           case b2 of wild8 { Data.Text.Internal.Text dt10 dt11 dt12 ->
                           case GHC.Classes.eqInt
                                  (GHC.Types.I# dt9)
                                  (GHC.Types.I# dt12) of wild9 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                       dt7
                                       (GHC.Prim.int2Word# dt8)
                                       dt10
                                       (GHC.Prim.int2Word# dt11)
                                       (GHC.Prim.int2Word# dt9)
                                       GHC.Prim.realWorld# of wild10 { (#,#) ds1 ds5 ->
                                case GHC.Int.eqInt32
                                       (GHC.Int.I32# (GHC.Prim.narrow32Int# ds5))
                                       (GHC.Int.I32# 0#) of wild11 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False } } } } } } } } } } } }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fMonoidCollectedWarnings ::
    GHC.Base.Monoid
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_$cmempty
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_$c<>
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_go -}
8b1283db8847aaa7572ab93e35a5efe4
  $fMonoidCollectedWarnings_$c<> ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)><S,1*U(1*U,1*U,1*U,1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   (GHC.Base.++ @ Web.Bower.PackageMeta.Internal.PackageName ww1 ww7)
                   (GHC.Base.++ @ Web.Bower.PackageMeta.Internal.PackageName ww2 ww8)
                   (GHC.Base.++
                      @ (Web.Bower.PackageMeta.Internal.PackageName,
                         Data.Text.Internal.Text)
                      ww3
                      ww9)
                   (GHC.Classes.||
                      ww4 `cast` (Data.Semigroup.Internal.N:Any[0])
                      ww10 `cast` (Data.Semigroup.Internal.N:Any[0]))
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Any[0]))
                   (GHC.Base.++
                      @ Web.Bower.PackageMeta.Internal.PackageName
                      ww5
                      ww11) } }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fMonoidCollectedWarnings_$cmempty ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   (GHC.Types.[] @ Web.Bower.PackageMeta.Internal.PackageName)
                   (GHC.Types.[] @ Web.Bower.PackageMeta.Internal.PackageName)
                   (GHC.Types.[]
                      @ (Web.Bower.PackageMeta.Internal.PackageName,
                         Data.Text.Internal.Text))
                   GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                   (GHC.Types.[] @ Web.Bower.PackageMeta.Internal.PackageName)) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fMonoidCollectedWarnings_go ::
    [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wgo
                        w of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings ::
    GHC.Classes.Ord
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$ccompare
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<=
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c>
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c>=
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$cmax
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$cmin -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$c< ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$c<
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$c<= ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (b :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$c> ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (b :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                   b
                   a) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$c>= ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (b :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$ccompare ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$ccompare
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$cmax ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(U,U,U,U,U)><S(SLLLL),1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (y :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fOrdCollectedWarnings_$cmin ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(U,U,U,U,U)><S(SLLLL),1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (y :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
3d3acfb0302a6742109af6aebd79dcd8
  $fOrdCollectedWarnings_$s$fOrd(,) ::
    GHC.Classes.Ord
      (Web.Bower.PackageMeta.Internal.PackageName,
       Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                     Data.Text.Internal.Text)
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (\ (a1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text))
                     (b1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fSemigroupCollectedWarnings ::
    GHC.Base.Semigroup
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_$c<>
                  Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings_$csconcat
                  Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings_$cstimes -}
8b1283db8847aaa7572ab93e35a5efe4
  $fSemigroupCollectedWarnings_$csconcat ::
    GHC.Base.NonEmpty
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U,U,U,U),1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.NonEmpty
                            Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { GHC.Base.:| a1 as ->
                 Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings_go
                   a1
                   as }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fSemigroupCollectedWarnings_$cstimes ::
    GHC.Real.Integral b =>
    b
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, Strictness: <L,U> -}
8b1283db8847aaa7572ab93e35a5efe4
  $fSemigroupCollectedWarnings_go ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)><S,1*U>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wgo1
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        w1 of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fShowCollectedWarnings ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshowList -}
8b1283db8847aaa7572ab93e35a5efe4
  $fShowCollectedWarnings1 ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w1 }) -}
204ce006131e8d1c73e7810f2bdeae7a
  $fShowCollectedWarnings2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fShowCollectedWarnings_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fShowCollectedWarnings_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings1
                   ls
                   s) -}
8b1283db8847aaa7572ab93e35a5efe4
  $fShowCollectedWarnings_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww3 ww4 ww5 ww6 ww7 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   w2 } }) -}
5e973a545718f4f3981022f329c601b7
  $fShowInternalError ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.InternalError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.InternalError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec1
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowList -}
5e973a545718f4f3981022f329c601b7
  $fShowInternalError1 ::
    Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec1 0# w) -}
7301bb180a0df31d111bbe1bb0c80b7f
  $fShowInternalError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CouldntParseGitTagDate "#) -}
9425b8325c85199ed7381ff32a5693d7
  $fShowInternalError3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
347e4eb17df672b18f383c004c7d2180
  $fShowInternalError4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError5) -}
0b9f13666172a969bbec181b2d002bef
  $fShowInternalError5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FromResolutions"#) -}
d6dfb2169c2090aa112d76566fc6be2e
  $fShowInternalError6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FromFile "#) -}
f27adc23a2410ce56c41431c829ca3d0
  $fShowInternalError7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("JSONError "#) -}
5e973a545718f4f3981022f329c601b7
  $fShowInternalError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec1
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5e973a545718f4f3981022f329c601b7
  $fShowInternalError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.InternalError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.InternalError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.InternalError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError1
                   ls
                   s) -}
fe013a3ebf7972bb8635382072bb8f65
  $fShowInternalError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.JSONSource
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Language.PureScript.Publish.ErrorsWarnings.JSONSource)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Language.PureScript.Publish.ErrorsWarnings.FromFile b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError6
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 eta)))
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError6
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            eta))))) } }
                   Language.PureScript.Publish.ErrorsWarnings.FromResolutions
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError4
                        eta }) -}
5e973a545718f4f3981022f329c601b7
  $fShowInternalError_$cshowsPrec1 ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec1
                   ww1
                   w1 }) -}
fe013a3ebf7972bb8635382072bb8f65
  $fShowJSONSource ::
    GHC.Show.Show Language.PureScript.Publish.ErrorsWarnings.JSONSource
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.JSONSource
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource_$cshowList -}
fe013a3ebf7972bb8635382072bb8f65
  $fShowJSONSource1 ::
    Language.PureScript.Publish.ErrorsWarnings.JSONSource
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
398b9680922f1df63258a1b23a43b16b
  $fShowJSONSource2 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fe013a3ebf7972bb8635382072bb8f65
  $fShowJSONSource_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.JSONSource
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.JSONSource) ->
                 case x of wild {
                   Language.PureScript.Publish.ErrorsWarnings.FromFile b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError6
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              b1
                              Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource2))
                   Language.PureScript.Publish.ErrorsWarnings.FromResolutions
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError4 }) -}
fe013a3ebf7972bb8635382072bb8f65
  $fShowJSONSource_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.JSONSource]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.JSONSource])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.JSONSource
                   Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource1
                   ls
                   s) -}
bad63923c98c3a650ad6daa5516c3f32
  $fShowOtherError ::
    GHC.Show.Show Language.PureScript.Publish.ErrorsWarnings.OtherError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.OtherError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshowList -}
bad63923c98c3a650ad6daa5516c3f32
  $fShowOtherError1 ::
    Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.OtherError)
                   (w1 :: GHC.Base.String) ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                   0#
                   w
                   w1) -}
bad63923c98c3a650ad6daa5516c3f32
  $fShowOtherError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.OtherError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
bad63923c98c3a650ad6daa5516c3f32
  $fShowOtherError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.OtherError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.OtherError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.OtherError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError1
                   ls
                   s) -}
bad63923c98c3a650ad6daa5516c3f32
  $fShowOtherError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.OtherError)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                   ww1
                   w1
                   w2 }) -}
4e47d9cd49beef62ae325c7b8025d205
  $fShowPackageError ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.PackageError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec2
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowList -}
4e47d9cd49beef62ae325c7b8025d205
  $fShowPackageError1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec3 0# w) -}
8e977c1f5d260611a9fd31fc510cee15
  $fShowPackageError10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DirtyWorkingTree"#) -}
d53358f951dce0a893aeadbf9f558b40
  $fShowPackageError11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CompileError "#) -}
5a82bcd2b42ffe2c28c98a8ed4c946a8
  $fShowPackageError12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError13) -}
69afa792ffbc85084c151d1042c791e6
  $fShowPackageError13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MissingDependencies "#) -}
4b9736fcdde47efa5a6be4af1eb789cb
  $fShowPackageError14 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError15) -}
8a666c9470898370cf680e5e8914765f
  $fShowPackageError15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError16) -}
f18f1568c25243dcb3ee1393712a9669
  $fShowPackageError16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidLicense"#) -}
34ae4e13321044aab0f842b9453a70eb
  $fShowPackageError17 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError18) -}
fab0355044317849ae4b8d524e526e77
  $fShowPackageError18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError19) -}
87a5fb28c425763ee645a0fdba2964d6
  $fShowPackageError19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NoLicenseSpecified"#) -}
7080b7437ec10af94eba045bc42e40ca
  $fShowPackageError2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError3) -}
3954d765ec7b47531af8381bee91cc5c
  $fShowPackageError20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError21) -}
cad88daa834192f5cf8e529e997a36f9
  $fShowPackageError21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BadRepositoryField "#) -}
d2689cdc21760ba7cd33f3d0daee2baa
  $fShowPackageError22 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError23) -}
2b0619390bd908c144190226397b0acc
  $fShowPackageError23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError24) -}
f64f00c063cf9e78b3a8004688ac730b
  $fShowPackageError24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NotOnGithub"#) -}
5a1951ba93ee2859139ee88a8e5831e4
  $fShowPackageError25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BadRepositoryType "#) -}
43cac1fed8cd8c679b03def1b7518201
  $fShowPackageError26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError27) -}
875eea67beb1f8e64036c96ab1167783
  $fShowPackageError27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RepositoryFieldMissing "#) -}
645f3efdf733113e3a4b7ba927ef1b55
  $fShowPackageError28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AmbiguousVersions "#) -}
6aa467a8d7e16c181585cb571b807683
  $fShowPackageError29 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError30) -}
4afd7ce97b0343b29815e59f399efad9
  $fShowPackageError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OtherError "#) -}
6829f812bd3ce4d1d5fa4996da4a44ff
  $fShowPackageError30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError31) -}
bf245ce43baa1b57e459bc27a68140a6
  $fShowPackageError31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TagMustBeCheckedOut"#) -}
61f892f261f71f8b1e6533a1cc4070d0
  $fShowPackageError32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError33) -}
b584ee5bdb72271285cecec27e05d203
  $fShowPackageError33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CouldntDecodePackageManifest "#) -}
564f90c788d2f5b2c901ec4de956a2bd
  $fShowPackageError34 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError35) -}
08f711b954f1a085d8f210989137562d
  $fShowPackageError35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError36) -}
626a0f07b973e93e11da3445aeb2cfe5
  $fShowPackageError36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ResolutionsFileNotFound"#) -}
1baf1982a4285c60244be540cddf57d4
  $fShowPackageError37 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError38) -}
e39f08fd47fa5c9a43beb289a58caf2b
  $fShowPackageError38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError39) -}
cfbaf5e523f8305da0ac0e171393747f
  $fShowPackageError39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageManifestNotFound"#) -}
0cd0929afcdd4185ce189132d16c90f4
  $fShowPackageError4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError5) -}
816ed0a31a3dbce68479cb1804385b4c
  $fShowPackageError5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InternalError "#) -}
75ae61becf8e7e7e7cca42eace0af52d
  $fShowPackageError6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError7) -}
ca5ba686a7401061ed37df1fa148c1d0
  $fShowPackageError7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UserError "#) -}
b557f460015ccdaaf4611bad52dee4a7
  $fShowPackageError8 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError9) -}
93dfeb34e17602cbef694796ce8d60c2
  $fShowPackageError9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError10) -}
4e47d9cd49beef62ae325c7b8025d205
  $fShowPackageError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
4e47d9cd49beef62ae325c7b8025d205
  $fShowPackageError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.PackageError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError1
                   ls
                   s) -}
d0118f6600c2f7f43b51a8353e7ee66e
  $fShowPackageError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.UserError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: Language.PureScript.Publish.ErrorsWarnings.UserError) ->
                 case ds1 of wild {
                   Language.PureScript.Publish.ErrorsWarnings.PackageManifestNotFound
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError37
                   Language.PureScript.Publish.ErrorsWarnings.ResolutionsFileNotFound
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError34
                   Language.PureScript.Publish.ErrorsWarnings.CouldntDecodePackageManifest b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Data.Aeson.BetterErrors.Internal.$w$cshowsPrec2
                            @ Web.Bower.PackageMeta.Internal.BowerError
                            Web.Bower.PackageMeta.Internal.$fShowBowerError
                            11#
                            b1
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError32
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError32
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.TagMustBeCheckedOut
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError29
                   Language.PureScript.Publish.ErrorsWarnings.AmbiguousVersions b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError28
                            (case b1 of wild2 {
                               [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 x1
                               : x2 xs
                               -> GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.showList__3
                                    (case x2 of ww { Data.Version.Version ww1 ww2 ->
                                     Data.Version.$w$cshowsPrec
                                       0#
                                       ww1
                                       ww2
                                       (let {
                                          lvl253 :: [GHC.Types.Char]
                                          = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 x1
                                        } in
                                        letrec {
                                          showl4 :: [Data.Version.Version] -> GHC.Base.String
                                            {- Arity: 1, Strictness: <S,1*U> -}
                                          = \ (ds2 :: [Data.Version.Version]) ->
                                            case ds2 of wild3 {
                                              [] -> lvl253
                                              : y ys
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   GHC.Show.showList__1
                                                   (case y of ww4 { Data.Version.Version ww5 ww6 ->
                                                    Data.Version.$w$cshowsPrec
                                                      0#
                                                      ww5
                                                      ww6
                                                      (showl4 ys) }) }
                                        } in
                                        showl4 xs) }) })
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1)) } }
                   Language.PureScript.Publish.ErrorsWarnings.BadRepositoryField b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec1
                            Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                            b1
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError20
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError20
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.NoLicenseSpecified
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError17
                   Language.PureScript.Publish.ErrorsWarnings.InvalidLicense
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError14
                   Language.PureScript.Publish.ErrorsWarnings.MissingDependencies b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { GHC.Base.:| ww3 ww4 ->
                          GHC.Show.$w$cshowsPrec7
                            @ Web.Bower.PackageMeta.Internal.PackageName
                            Web.Bower.PackageMeta.Internal.$fShowPackageName
                            11#
                            ww3
                            ww4 }
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError12
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError12
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.CompileError b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError11
                             (Language.PureScript.Errors.$w$cshowsPrec 11# b1 x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError11
                                (Language.PureScript.Errors.$w$cshowsPrec
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError8 }) -}
b1476c217e802dda1dbe0000a130da18
  $fShowPackageError_$cshowsPrec1 ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError) ->
                 case ds of wild {
                   Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldMissing b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Show.$fShowMaybe_$cshowsPrec
                            @ Data.Text.Internal.Text
                            Data.Text.Show.$fShowText
                            Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                            b1
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError26
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError26
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.BadRepositoryType b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError25
                             (case Data.Text.Show.$w$cshowsPrec b1 x1 of ww { (#,#) ww1 ww2 ->
                              GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError25
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           x1) of ww { (#,#) ww1 ww2 ->
                                 GHC.Types.: @ GHC.Types.Char ww1 ww2 })) } }
                   Language.PureScript.Publish.ErrorsWarnings.NotOnGithub
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError22 }) -}
4e47d9cd49beef62ae325c7b8025d205
  $fShowPackageError_$cshowsPrec2 ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec3
                   ww1
                   w1 }) -}
de5a6964f55844f07dde0054868445de
  $fShowPackageWarning ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.PackageWarning
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshowList -}
de5a6964f55844f07dde0054868445de
  $fShowPackageWarning1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageWarning
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
6ca5b49544f397f24453cfb2d40176d7
  $fShowPackageWarning2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MissingPath "#) -}
8536b4816f696e3cb70464bfc8aa999a
  $fShowPackageWarning3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning4) -}
7dfe3781ab32f449da548e582999e52b
  $fShowPackageWarning4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DirtyWorkingTree_Warn"#) -}
fdd0e8ed512421809d8d451cf9bb2c3d
  $fShowPackageWarning5 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3fffe75779d6c0c7e80acb71c8317439
  $fShowPackageWarning6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UnacceptableVersion "#) -}
3a456f5e0c7decb2daf1f245abec9b41
  $fShowPackageWarning7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UndeclaredDependency "#) -}
c7a541b6a1ab94887c6981a43fe2fd73
  $fShowPackageWarning8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NoResolvedVersion "#) -}
de5a6964f55844f07dde0054868445de
  $fShowPackageWarning_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.PackageWarning
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.PackageWarning) ->
                 case x of wild {
                   Language.PureScript.Publish.ErrorsWarnings.NoResolvedVersion b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning8
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Language.PureScript.Publish.ErrorsWarnings.UndeclaredDependency b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning7
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Language.PureScript.Publish.ErrorsWarnings.UnacceptableVersion b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning6
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)4
                           (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                              0#
                              ww1
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.showList__1
                                 (GHC.Show.$fShow(,)_$sgo1
                                    Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning5
                                    (\ (w2 :: GHC.Base.String)[OneShot] ->
                                     case Data.Text.Show.$w$cshowsPrec
                                            ww2
                                            w2 of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Types.: @ GHC.Types.Char ww5 ww6 })
                                    (GHC.Types.[] @ GHC.Show.ShowS)))) })
                   Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree_Warn
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning3
                   Language.PureScript.Publish.ErrorsWarnings.MissingPath b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning2
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
de5a6964f55844f07dde0054868445de
  $fShowPackageWarning_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning1
                   ls
                   s) -}
de5a6964f55844f07dde0054868445de
  $fShowPackageWarning_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.PackageWarning
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
b1476c217e802dda1dbe0000a130da18
  $fShowRepositoryFieldError ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec1
                  Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError_$cshowList -}
b1476c217e802dda1dbe0000a130da18
  $fShowRepositoryFieldError1 ::
    Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec1
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
b1476c217e802dda1dbe0000a130da18
  $fShowRepositoryFieldError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError) ->
                 case x of wild {
                   Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldMissing b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError26
                        (case b1 of wild1 {
                           GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                           GHC.Base.Just b2
                           -> GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   GHC.Show.$fShowMaybe1
                                   (case Data.Text.Show.$w$cshowsPrec
                                           b2
                                           Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning5 of ww { (#,#) ww1 ww2 ->
                                    GHC.Types.: @ GHC.Types.Char ww1 ww2 })) })
                   Language.PureScript.Publish.ErrorsWarnings.BadRepositoryType b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError25
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Language.PureScript.Publish.ErrorsWarnings.NotOnGithub
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError23 }) -}
b1476c217e802dda1dbe0000a130da18
  $fShowRepositoryFieldError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError1
                   ls
                   s) -}
d0118f6600c2f7f43b51a8353e7ee66e
  $fShowUserError ::
    GHC.Show.Show Language.PureScript.Publish.ErrorsWarnings.UserError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.UserError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowUserError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowUserError_$cshowList -}
d0118f6600c2f7f43b51a8353e7ee66e
  $fShowUserError1 ::
    Language.PureScript.Publish.ErrorsWarnings.UserError
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
d0118f6600c2f7f43b51a8353e7ee66e
  $fShowUserError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.UserError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
d0118f6600c2f7f43b51a8353e7ee66e
  $fShowUserError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.UserError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.UserError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.UserError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowUserError1
                   ls
                   s) -}
6ffe3b2e95b78d8799043844e9d9d84a
  $tc'AmbiguousVersions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   942944262714460169##
                   5941162637784704178##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'AmbiguousVersions2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'AmbiguousVersions1) -}
f7d7040fe398fe3f83e50807db1ade5f
  $tc'AmbiguousVersions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
590ebd7817e2dc108fe7b214d3bfa4d1
  $tc'AmbiguousVersions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'AmbiguousVersions3) -}
215e42eee226637d08cca5e841f55851
  $tc'AmbiguousVersions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AmbiguousVersions"#) -}
011f3e78dc43b9a5494dc567e6809fd3
  $tc'BadRepositoryField :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14501837683202364283##
                   12995877576746107151##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryField2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryField1) -}
ff6e82ab93a05930081659a7810296a2
  $tc'BadRepositoryField1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7978c63e7a05b1b006d4f745b04b130c
  $tc'BadRepositoryField2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryField3) -}
7446b0b98fec77ba3960d106a25af755
  $tc'BadRepositoryField3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BadRepositoryField"#) -}
c4fd57a1c3faaba3502bdc343335f5aa
  $tc'BadRepositoryType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13772447692600902828##
                   13863568050261958075##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryType2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryType1) -}
a477de24f9fc03f8c6ea5baf04034f57
  $tc'BadRepositoryType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
dc541ccb5e193abd1a5f9a1efe2965b1
  $tc'BadRepositoryType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryType3) -}
cc51137047d50392158dbf071310232f
  $tc'BadRepositoryType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BadRepositoryType"#) -}
636ff612ac5784ab656559dbd77a2bbc
  $tc'CollectedWarnings :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15512523076281024233##
                   3401021066792893457##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CollectedWarnings2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CollectedWarnings1) -}
dda46c191efed775ead4c7313735e965
  $tc'CollectedWarnings1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1c80c3b9af3b7fdc33045bdfd616181d
  $tc'CollectedWarnings2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CollectedWarnings3) -}
c8f82699339f9510a0b05b5f005ab3dd
  $tc'CollectedWarnings3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CollectedWarnings"#) -}
1c742eed46caaf2d66ee59f2a39aaca9
  $tc'CompileError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8251670220555265525##
                   13855382412547833705##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CompileError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CompileError1) -}
d7075de9ea17df8fb6911aa7966a2d04
  $tc'CompileError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4867dde4d6ea21e30faf0496b6cc2a59
  $tc'CompileError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CompileError3) -}
41ec206d863c16b29c32b23c39ef3bc9
  $tc'CompileError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CompileError"#) -}
1cc03f333f5b6584af11ee1bdc8073a0
  $tc'CouldntDecodePackageManifest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17413385938991016665##
                   17264790983161865933##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntDecodePackageManifest2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntDecodePackageManifest1) -}
3b3b2b7e9255a77ee33854d804ef8710
  $tc'CouldntDecodePackageManifest1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
92f9c2598ac0607770ee2b310c094aa7
  $tc'CouldntDecodePackageManifest2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntDecodePackageManifest3) -}
6fc3389848cd62f5c7076ad3d3d375b1
  $tc'CouldntDecodePackageManifest3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CouldntDecodePackageManifest"#) -}
f16a79f05c56a36e8d3a0db96a8e81dd
  $tc'CouldntParseGitTagDate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7306255026209201970##
                   2103678547768507138##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntParseGitTagDate2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntParseGitTagDate1) -}
1e2561bf47996f0bbf3a688acf657d63
  $tc'CouldntParseGitTagDate1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
607725c99b86ef339b8f898effd192c0
  $tc'CouldntParseGitTagDate2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntParseGitTagDate3) -}
768fead8a6df743be5496ff07f895d8c
  $tc'CouldntParseGitTagDate3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CouldntParseGitTagDate"#) -}
393378b0fd456ecd49854948604d6ebe
  $tc'DirtyWorkingTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   744000919211203105##
                   6952568784715235422##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
297af4ab95f9b8d0f10885427524a5c6
  $tc'DirtyWorkingTree1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
eb25a102bb39da512bc9ab8e68c735b7
  $tc'DirtyWorkingTree2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree3) -}
8285b7f4fabbbab2f0c8ebe3108f9f04
  $tc'DirtyWorkingTree3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DirtyWorkingTree"#) -}
f9db79dc42e0b84c1b46c681500f8d0f
  $tc'DirtyWorkingTree_Warn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7524757111122933489##
                   10272189274948687969##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree_Warn2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree_Warn1) -}
b19ec8b9877210e97f548a9042f901b9
  $tc'DirtyWorkingTree_Warn1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
d2bef4b2917d65b22086f510dd04e425
  $tc'DirtyWorkingTree_Warn2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree_Warn3) -}
93028841a2a02b927f6dd84135eb1178
  $tc'DirtyWorkingTree_Warn3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DirtyWorkingTree_Warn"#) -}
1c170ff7cc4479e749f7071d08aabba7
  $tc'FromFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5926500419030962628##
                   15326647219939798091##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromFile2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromFile1) -}
52dac7d394e022ec724a257b99523242
  $tc'FromFile1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
aa9e6f8b356d0d658ecbe811e821b9ac
  $tc'FromFile2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromFile3) -}
dc9377999a556148496f1e89ec0e4a66
  $tc'FromFile3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FromFile"#) -}
d25575d20e2770758daf679135b268d2
  $tc'FromResolutions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16075955329299445563##
                   13248584686243502839##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromResolutions2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromResolutions1) -}
4a7bf9709412a5b23ab19b640961a7a1
  $tc'FromResolutions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
45f11eb40ce2adc6caa892563983e4f6
  $tc'FromResolutions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromResolutions3) -}
d99e78e8b50ed482243eaacca959b6e7
  $tc'FromResolutions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FromResolutions"#) -}
1de58e3c6fc3d4150056bc0c493cc630
  $tc'IOExceptionThrown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12416643801709254199##
                   12129724743142899092##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'IOExceptionThrown2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'IOExceptionThrown1) -}
a41e9eab75c10e33e40fa80d0e8f6032
  $tc'IOExceptionThrown1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0415816653fabcda808863c095227d5e
  $tc'IOExceptionThrown2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'IOExceptionThrown3) -}
60d787dd2d645a86d4c3afe6a854530d
  $tc'IOExceptionThrown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'IOExceptionThrown"#) -}
989ee062c05e0bbd4735bf0ae1009ec5
  $tc'InternalError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6451457228285250163##
                   11886915154033527009##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InternalError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InternalError1) -}
89d66375a9e9659d76495312cc9b72a7
  $tc'InternalError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ba5fcfb92cf34c4de0ed8bf602a020ae
  $tc'InternalError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InternalError3) -}
6191743724de9ea8653e7196741d81de
  $tc'InternalError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InternalError"#) -}
9d803f21cfd362c3e3a2edc17538d935
  $tc'InvalidLicense :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16197345158876087687##
                   8634558536753797149##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InvalidLicense1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
e713f84d8892055f9bd9ee7a8f3cc62a
  $tc'InvalidLicense1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InvalidLicense2) -}
d6d64d1dc6659db27edc53e59d7f67bf
  $tc'InvalidLicense2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidLicense"#) -}
c3f43322f4c1e4d9feab9a5954d15824
  $tc'JSONError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14361392562568096988##
                   15660074921824408260##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'JSONError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'JSONError1) -}
9cf41e6eec0036b90ce2da1beca1ab46
  $tc'JSONError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0e3301d8fc94c7968d65141fd24dce5f
  $tc'JSONError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'JSONError3) -}
52b4f05c5aa6091be849572356e9850c
  $tc'JSONError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'JSONError"#) -}
f2000a769690cd79408a22577797d4b4
  $tc'MissingDependencies :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16030059099842645869##
                   11872978243265519213##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingDependencies2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingDependencies1) -}
3cf9008824b9442d3000ae1113acbd3c
  $tc'MissingDependencies1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f5b0878e7f5c152111bb185ac9631310
  $tc'MissingDependencies2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingDependencies3) -}
a9062ab00d588a01462f75a0ded47fdf
  $tc'MissingDependencies3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MissingDependencies"#) -}
e50d744c3ab63b3ec9bada773358d62c
  $tc'MissingPath :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18315808195340131373##
                   12972793014375937276##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath1) -}
5c69b4fbf4dacba4975e8d7339351503
  $tc'MissingPath1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bf9316ca0930adcb8fdd9b00e7791d04
  $tc'MissingPath2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath3) -}
022bb1cdd91ac3fb924ef80e93035cb6
  $tc'MissingPath3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MissingPath"#) -}
c69c241bfdf4e08cef4b400fdaf3c00a
  $tc'NoLicenseSpecified :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10105632141427560696##
                   5002849143455018146##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoLicenseSpecified1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
687bca2542a4be04f8d0a168b4143e69
  $tc'NoLicenseSpecified1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoLicenseSpecified2) -}
3fef87c9c2c2efb3cea20588e24bef76
  $tc'NoLicenseSpecified2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NoLicenseSpecified"#) -}
57d8e7acf7bd0160dcdb3dc61d1ebbd7
  $tc'NoResolvedVersion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10903200454481993337##
                   6116060229034314014##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoResolvedVersion1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath1) -}
92fb32bd61cf687cf911763e036ad3a4
  $tc'NoResolvedVersion1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoResolvedVersion2) -}
42222d36d763c9ddb5b6eb6548454c42
  $tc'NoResolvedVersion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NoResolvedVersion"#) -}
ef23ce569c28d0f948033cd4339e1946
  $tc'NotOnGithub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14168147038765463017##
                   4848222651109857371##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NotOnGithub2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NotOnGithub1) -}
5a19157b9d70084115a23ba868897d0b
  $tc'NotOnGithub1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
f6fc7c12b3b3bcea796f4f51ad842d9e
  $tc'NotOnGithub2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NotOnGithub3) -}
d7df9d66cc3679f6014d3101426b6235
  $tc'NotOnGithub3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NotOnGithub"#) -}
18e2e42eaca6c5e333683d3e56c30b6d
  $tc'OtherError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1447981349172856809##
                   15560685073011873657##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'OtherError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'OtherError1) -}
3a16c733914753e9ae394240f873cfb5
  $tc'OtherError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2d631235ce45005dbebe5504de82d8d9
  $tc'OtherError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'OtherError3) -}
6174f9853117a9a1d8936f62b10d40f2
  $tc'OtherError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'OtherError"#) -}
86a3eaa171dffbde41f2015ce66f9ba8
  $tc'PackageManifestNotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14928280568531230499##
                   662094332017845968##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'PackageManifestNotFound1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
784e33dd4c88c4354e77742705afba8e
  $tc'PackageManifestNotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'PackageManifestNotFound2) -}
07795a88d54a5ccb71d24fae97207e20
  $tc'PackageManifestNotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PackageManifestNotFound"#) -}
9bf9e0e6387a9a9c9be2694a4674a035
  $tc'ProcessFailed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3232343478435157592##
                   6767354280047800381##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ProcessFailed2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ProcessFailed1) -}
127fc4e57ff0deec0391c0148ce967d4
  $tc'ProcessFailed1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2f837c1fb4b5b1002799f7411708bbe4
  $tc'ProcessFailed2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ProcessFailed3) -}
1304260dd7518fea85176ac251117cab
  $tc'ProcessFailed3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProcessFailed"#) -}
c79e87ea5161eb25343656b4f62a11f5
  $tc'RepositoryFieldMissing :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5673287084764763417##
                   2702167580444023480##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'RepositoryFieldMissing2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'RepositoryFieldMissing1) -}
611b78947d249048af39ec0f3f942349
  $tc'RepositoryFieldMissing1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a0402cc55b90c00f95118548070459b2
  $tc'RepositoryFieldMissing2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'RepositoryFieldMissing3) -}
884e2ae6a7c17d2b464f869812587c6a
  $tc'RepositoryFieldMissing3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RepositoryFieldMissing"#) -}
53121073fb3ba9d5027727d4c5c53e81
  $tc'ResolutionsFileNotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3789345527066451560##
                   5240772026571038819##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ResolutionsFileNotFound1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
22376123555764281fe48de31050f94c
  $tc'ResolutionsFileNotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ResolutionsFileNotFound2) -}
a2b4bac4dbf396a1a83726abe5d29b7b
  $tc'ResolutionsFileNotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ResolutionsFileNotFound"#) -}
795ecc3ff57cee1d927cfc22520c675a
  $tc'TagMustBeCheckedOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13749380630164674033##
                   3332505178897341807##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'TagMustBeCheckedOut1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
33f5519a63ed67aca621537fd6133745
  $tc'TagMustBeCheckedOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'TagMustBeCheckedOut2) -}
6b60a56222f0a8fee6130208a617eb4b
  $tc'TagMustBeCheckedOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TagMustBeCheckedOut"#) -}
f036c539be73e9433d98c860502140de
  $tc'UnacceptableVersion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3546554109394514845##
                   13086264155536331855##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UnacceptableVersion2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UnacceptableVersion1) -}
f76f167504298eb3d876def2578c54db
  $tc'UnacceptableVersion1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b991e73b03e745a96fa4ebe9f93dd51d
  $tc'UnacceptableVersion2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UnacceptableVersion3) -}
07941139ed09e1e89f54421e03707762
  $tc'UnacceptableVersion3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UnacceptableVersion"#) -}
4eeeaa317d4e2f90f28d36c0ed7faade
  $tc'UndeclaredDependency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5320436146033959820##
                   13024959303858809501##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UndeclaredDependency1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath1) -}
55362c427854ed0f4929213ae68ecf24
  $tc'UndeclaredDependency1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UndeclaredDependency2) -}
26a52506b95f39ca0c5c7f551a17d0b1
  $tc'UndeclaredDependency2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UndeclaredDependency"#) -}
6a00e03050b0f4179adeccfbd1424b42
  $tc'UserError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10088978177214314467##
                   11277629264962797235##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UserError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UserError1) -}
835aac2e5c36ab47004453b38d53b82b
  $tc'UserError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
99462dba1b2951009b56787bcaed8ab5
  $tc'UserError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UserError3) -}
1271f33fe2cd65bb718274326de60d21
  $tc'UserError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UserError"#) -}
08f27071e1398396150a5fcbbcffa04a
  $tcCollectedWarnings :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16472499271086904173##
                   7182623610683641628##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcCollectedWarnings1
                   0#
                   GHC.Types.krep$*) -}
cd24ac414670d78e02245908874bcdb3
  $tcCollectedWarnings1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcCollectedWarnings2) -}
f558799f8ba1000ce8cae532e15c96d6
  $tcCollectedWarnings2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CollectedWarnings"#) -}
9e19cb46622599e0dc5b58e447631918
  $tcInternalError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8640501863334052935##
                   2782007689005807118##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcInternalError1
                   0#
                   GHC.Types.krep$*) -}
6f25a8b63048326ebc6ece407905d2fb
  $tcInternalError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcInternalError2) -}
83ee00b02d1038a3717701dda8db0160
  $tcInternalError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InternalError"#) -}
658df13f40c38aad679428985f70c1ae
  $tcJSONSource :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1940850279477666356##
                   16696984522932991311##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcJSONSource1
                   0#
                   GHC.Types.krep$*) -}
ec3af0fbb16cff30ee0992eb7fdac09b
  $tcJSONSource1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcJSONSource2) -}
6cec3e5ead8f070c0813f7b6fb6b3d74
  $tcJSONSource2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("JSONSource"#) -}
dd45ce5a574b414647e1d12fdf00d7e4
  $tcOtherError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3339037870880303581##
                   9302095992446075508##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcOtherError1
                   0#
                   GHC.Types.krep$*) -}
9fe80615734d294c4dddacd7db7b7a2f
  $tcOtherError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcOtherError2) -}
eed47f6ac86f96158acd92e2e9861d6e
  $tcOtherError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OtherError"#) -}
59779b0b5ed42773fa80ff772ebc9cf9
  $tcPackageError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15636717224671404884##
                   11445027176641718708##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageError1
                   0#
                   GHC.Types.krep$*) -}
b22c363d5508aa21465e3695fb3c51c4
  $tcPackageError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageError2) -}
fae80f147d6cb9dbe7808e3c0884145f
  $tcPackageError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageError"#) -}
3e99e17bb1437017792e7708e4a250ad
  $tcPackageWarning :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   772428299214017416##
                   6532477020904333762##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageWarning1
                   0#
                   GHC.Types.krep$*) -}
6bd9bc2c80a23df4d4ba7c3b1a789e27
  $tcPackageWarning1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageWarning2) -}
4b1457a7b78ca9738aed15ab9275e293
  $tcPackageWarning2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageWarning"#) -}
e258f0fdd47bf7f4c16dde20a41d5a5c
  $tcRepositoryFieldError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12988548437762197213##
                   8818470684358375329##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcRepositoryFieldError1
                   0#
                   GHC.Types.krep$*) -}
f016137d7eb1fface8152b7bc872e832
  $tcRepositoryFieldError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcRepositoryFieldError2) -}
7a3f60eae74b8b3a0df7e17f62123fcd
  $tcRepositoryFieldError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RepositoryFieldError"#) -}
d7eb4455a74e521437818d31e185c4e6
  $tcUserError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   695120845273282592##
                   13739208392181619776##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcUserError1
                   0#
                   GHC.Types.krep$*) -}
797abc2f8fea77038be3196629b25e7e
  $tcUserError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcUserError2) -}
a1fe8540b5c40c7f0f07154ecfd35db9
  $tcUserError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UserError"#) -}
0939b63cc770ae965f1c8bbbb097f847
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Publish.ErrorsWarnings.$trModule3
                   Language.PureScript.Publish.ErrorsWarnings.$trModule1) -}
3528abcb0043d75f3b0c4f7875c94bcd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$trModule2) -}
9e850ccbb36abd2487eb3b9155f03421
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Publish.ErrorsWarnings"#) -}
1a58738075e8a7495dc8f3c4eae15969
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$trModule4) -}
fba0985f168b62fc5761c22c74485029
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
988c97db2bd4bca5a1c56602a983a0ee
  $w$c< ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww1 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww2 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww3 :: Data.Semigroup.Internal.Any)
                   (ww4 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww5 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww6 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww7 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww8 :: Data.Semigroup.Internal.Any)
                   (ww9 :: [Web.Bower.PackageMeta.Internal.PackageName]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Web.Bower.PackageMeta.Internal.$fOrdPackageName
                        ww
                        ww5 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$ccompare
                             @ Web.Bower.PackageMeta.Internal.PackageName
                             Web.Bower.PackageMeta.Internal.$fOrdPackageName
                             ww1
                             ww6 of wild1 {
                        GHC.Types.LT -> GHC.Types.True
                        GHC.Types.EQ
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                                     Data.Text.Internal.Text)
                                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$s$fOrd(,)
                                  ww2
                                  ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> case ww3 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild3 {
                                  GHC.Types.False
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Classes.$fOrd[]_$ccompare
                                                 @ Web.Bower.PackageMeta.Internal.PackageName
                                                 Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                                 ww4
                                                 ww9 of wild5 {
                                            DEFAULT -> GHC.Types.False
                                            GHC.Types.LT -> GHC.Types.True }
                                       GHC.Types.True -> GHC.Types.True }
                                  GHC.Types.True
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Classes.$fOrd[]_$ccompare
                                                 @ Web.Bower.PackageMeta.Internal.PackageName
                                                 Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                                 ww4
                                                 ww9 of wild5 {
                                            DEFAULT -> GHC.Types.False
                                            GHC.Types.LT -> GHC.Types.True } } }
                             GHC.Types.GT -> GHC.Types.False }
                        GHC.Types.GT -> GHC.Types.False }
                   GHC.Types.GT -> GHC.Types.False }) -}
2d34cc7f94a42d46741e847ba820bdc9
  $w$c== ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww1 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww2 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww3 :: Data.Semigroup.Internal.Any)
                   (ww4 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww5 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww6 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww7 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww8 :: Data.Semigroup.Internal.Any)
                   (ww9 :: [Web.Bower.PackageMeta.Internal.PackageName]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Web.Bower.PackageMeta.Internal.$fEqPackageName
                        ww
                        ww5 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Web.Bower.PackageMeta.Internal.PackageName
                             Web.Bower.PackageMeta.Internal.$fEqPackageName
                             ww1
                             ww6 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                                     Data.Text.Internal.Text)
                                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)
                                  ww2
                                  ww7 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild3 {
                                  GHC.Types.False
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False
                                       -> GHC.Classes.$fEq[]_$c==
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fEqPackageName
                                            ww4
                                            ww9
                                       GHC.Types.True -> GHC.Types.False }
                                  GHC.Types.True
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.$fEq[]_$c==
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fEqPackageName
                                            ww4
                                            ww9 } } } } }) -}
a914b382a6a34834eeadd78df9123ea9
  $w$ccompare ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Types.Ordering
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww1 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww2 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww3 :: Data.Semigroup.Internal.Any)
                   (ww4 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww5 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww6 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww7 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww8 :: Data.Semigroup.Internal.Any)
                   (ww9 :: [Web.Bower.PackageMeta.Internal.PackageName]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Web.Bower.PackageMeta.Internal.$fOrdPackageName
                        ww
                        ww5 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$ccompare
                             @ Web.Bower.PackageMeta.Internal.PackageName
                             Web.Bower.PackageMeta.Internal.$fOrdPackageName
                             ww1
                             ww6 of wild1 {
                        GHC.Types.LT -> GHC.Types.LT
                        GHC.Types.EQ
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                                     Data.Text.Internal.Text)
                                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$s$fOrd(,)
                                  ww2
                                  ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case ww3 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild3 {
                                  GHC.Types.False
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False
                                       -> GHC.Classes.$fOrd[]_$ccompare
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                            ww4
                                            ww9
                                       GHC.Types.True -> GHC.Types.LT }
                                  GHC.Types.True
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False -> GHC.Types.GT
                                       GHC.Types.True
                                       -> GHC.Classes.$fOrd[]_$ccompare
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                            ww4
                                            ww9 } }
                             GHC.Types.GT -> GHC.Types.GT }
                        GHC.Types.GT -> GHC.Types.GT }
                   GHC.Types.GT -> GHC.Types.GT }) -}
d03cb4fac036b013668fda37c7fad7ee
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 7,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
5e973a545718f4f3981022f329c601b7
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 case w of wild {
                   Language.PureScript.Publish.ErrorsWarnings.JSONError b1 b2
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Data.Aeson.BetterErrors.Internal.$w$cshowsPrec2
                            @ Web.Bower.PackageMeta.Internal.BowerError
                            Web.Bower.PackageMeta.Internal.$fShowBowerError
                            11#
                            b2
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError7
                             (Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                                b1
                                (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError7
                                (Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                                   Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))))) }
                   Language.PureScript.Publish.ErrorsWarnings.CouldntParseGitTagDate b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError2
                             (case Data.Text.Show.$w$cshowsPrec b1 x of ww1 { (#,#) ww2 ww3 ->
                              GHC.Types.: @ GHC.Types.Char ww2 ww3 })
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError2
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           x) of ww1 { (#,#) ww2 ww3 ->
                                 GHC.Types.: @ GHC.Types.Char ww2 ww3 })) } }) -}
bad63923c98c3a650ad6daa5516c3f32
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
4e47d9cd49beef62ae325c7b8025d205
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 case w of wild {
                   Language.PureScript.Publish.ErrorsWarnings.UserError b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec
                            Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                            b1
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError6
                             (g x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError6
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   Language.PureScript.Publish.ErrorsWarnings.InternalError b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec1 11# b1
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError4
                             (g x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   Language.PureScript.Publish.ErrorsWarnings.OtherError b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError2
                             (Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                                11#
                                b1
                                x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError2
                                (Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) } }) -}
8b1283db8847aaa7572ab93e35a5efe4
  $wgo ::
    [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> (# [Web.Bower.PackageMeta.Internal.PackageName],
          [Web.Bower.PackageMeta.Internal.PackageName],
          [(Web.Bower.PackageMeta.Internal.PackageName,
            Data.Text.Internal.Text)],
          Data.Semigroup.Internal.Any,
          [Web.Bower.PackageMeta.Internal.PackageName] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
8b1283db8847aaa7572ab93e35a5efe4
  $wgo1 ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> (# [Web.Bower.PackageMeta.Internal.PackageName],
          [Web.Bower.PackageMeta.Internal.PackageName],
          [(Web.Bower.PackageMeta.Internal.PackageName,
            Data.Text.Internal.Text)],
          Data.Semigroup.Internal.Any,
          [Web.Bower.PackageMeta.Internal.PackageName] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>, Inline: [0] -}
460fbec7fb88cb53845a2b9418f373f4
  $wrenderError ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> (# GHC.Types.Int, GHC.Types.Int,
          Text.PrettyPrint.Boxes.Content #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
c5b85a17544bb57d4f73943cb242eade
  $wrenderWarnings ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> (# GHC.Types.Int, GHC.Types.Int,
          Text.PrettyPrint.Boxes.Content #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0] -}
8b1283db8847aaa7572ab93e35a5efe4
  data CollectedWarnings
    = CollectedWarnings {noResolvedVersions :: [Web.Bower.PackageMeta.Internal.PackageName],
                         undeclaredDependencies :: [Web.Bower.PackageMeta.Internal.PackageName],
                         unacceptableVersions :: [(Web.Bower.PackageMeta.Internal.PackageName,
                                                   Data.Text.Internal.Text)],
                         dirtyWorkingTree :: Data.Semigroup.Internal.Any,
                         missingPaths :: [Web.Bower.PackageMeta.Internal.PackageName]}
5e973a545718f4f3981022f329c601b7
  data InternalError
    = JSONError Language.PureScript.Publish.ErrorsWarnings.JSONSource
                (Data.Aeson.BetterErrors.Internal.ParseError
                   Language.PureScript.Docs.Types.ManifestError)
    | CouldntParseGitTagDate Data.Text.Internal.Text
fe013a3ebf7972bb8635382072bb8f65
  data JSONSource = FromFile GHC.IO.FilePath | FromResolutions
bad63923c98c3a650ad6daa5516c3f32
  data OtherError
    = ProcessFailed GHC.Base.String
                    [GHC.Base.String]
                    GHC.IO.Exception.IOException
    | IOExceptionThrown GHC.IO.Exception.IOException
4e47d9cd49beef62ae325c7b8025d205
  data PackageError
    = UserError Language.PureScript.Publish.ErrorsWarnings.UserError
    | InternalError Language.PureScript.Publish.ErrorsWarnings.InternalError
    | OtherError Language.PureScript.Publish.ErrorsWarnings.OtherError
de5a6964f55844f07dde0054868445de
  data PackageWarning
    = NoResolvedVersion Web.Bower.PackageMeta.Internal.PackageName
    | UndeclaredDependency Web.Bower.PackageMeta.Internal.PackageName
    | UnacceptableVersion (Web.Bower.PackageMeta.Internal.PackageName,
                           Data.Text.Internal.Text)
    | DirtyWorkingTree_Warn
    | MissingPath Web.Bower.PackageMeta.Internal.PackageName
b1476c217e802dda1dbe0000a130da18
  data RepositoryFieldError
    = RepositoryFieldMissing (GHC.Base.Maybe Data.Text.Internal.Text)
    | BadRepositoryType Data.Text.Internal.Text
    | NotOnGithub
d0118f6600c2f7f43b51a8353e7ee66e
  data UserError
    = PackageManifestNotFound
    | ResolutionsFileNotFound
    | CouldntDecodePackageManifest (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.ManifestError)
    | TagMustBeCheckedOut
    | AmbiguousVersions [Data.Version.Version]
    | BadRepositoryField Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    | NoLicenseSpecified
    | InvalidLicense
    | MissingDependencies (GHC.Base.NonEmpty
                             Web.Bower.PackageMeta.Internal.PackageName)
    | CompileError Language.PureScript.Errors.MultipleErrors
    | DirtyWorkingTree
8b1283db8847aaa7572ab93e35a5efe4
  dirtyWorkingTree ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Data.Semigroup.Internal.Any
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
8b1283db8847aaa7572ab93e35a5efe4
  missingPaths ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Web.Bower.PackageMeta.Internal.PackageName]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
8b1283db8847aaa7572ab93e35a5efe4
  noResolvedVersions ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Web.Bower.PackageMeta.Internal.PackageName]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
735ca3147c4b455e4c7351e72c979f5a
  printError ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Publish.ErrorsWarnings.printError1
                  `cast`
                (<Language.PureScript.Publish.ErrorsWarnings.PackageError>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b0430dac6fee4ffa2c901c1910a708da
  printError1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stderr
                   (case Language.PureScript.Publish.ErrorsWarnings.$wrenderError
                           x of ww { (#,,#) ww1 ww2 ww3 ->
                    Data.OldList.unlines
                      (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) })
                   GHC.Types.False) -}
38a6814e12bd24035d04f3f523bbb824
  printErrorToStdout ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Publish.ErrorsWarnings.printErrorToStdout1
                  `cast`
                (<Language.PureScript.Publish.ErrorsWarnings.PackageError>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
50c9288c3e3c16f41ecc96a2090ac0a2
  printErrorToStdout1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Language.PureScript.Publish.ErrorsWarnings.$wrenderError
                           x of ww { (#,,#) ww1 ww2 ww3 ->
                    Data.OldList.unlines
                      (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) })
                   GHC.Types.False) -}
e055a2eff3c4b003f5242b4151e19240
  printWarnings ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Publish.ErrorsWarnings.printWarnings1
                  `cast`
                (<[Language.PureScript.Publish.ErrorsWarnings.PackageWarning]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fbe7a97e8d8be2f5cc9be33eb66a2e20
  printWarnings1 ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stderr
                   (case Language.PureScript.Publish.ErrorsWarnings.$wrenderWarnings
                           x of ww { (#,,#) ww1 ww2 ww3 ->
                    Data.OldList.unlines
                      (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) })
                   GHC.Types.False) -}
e86f2d878027127f31eca08dad92be6c
  renderError ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wrenderError
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 }) -}
10936e1a9ae08eb25ed39d3b944e7463
  renderWarnings ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wrenderWarnings
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 }) -}
8b1283db8847aaa7572ab93e35a5efe4
  unacceptableVersions ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
8b1283db8847aaa7572ab93e35a5efe4
  undeclaredDependencies ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Web.Bower.PackageMeta.Internal.PackageName]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
instance GHC.Classes.Eq [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings
instance GHC.Base.Monoid [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings
instance GHC.Classes.Ord [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings
instance GHC.Base.Semigroup [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.InternalError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.JSONSource]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.OtherError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.PackageError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.UserError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowUserError
"SPEC/Language.PureScript.Publish.ErrorsWarnings $fEq(,) @ PackageName @ Text" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                                        Data.Text.Internal.Text)
                                                                                               (v :: GHC.Classes.Eq
                                                                                                       Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fEq(,) @ Web.Bower.PackageMeta.Internal.PackageName
                      @ Data.Text.Internal.Text
                      v
                      v1
  = Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)
"SPEC/Language.PureScript.Publish.ErrorsWarnings $fEq(,)_$c/= @ PackageName @ Text" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                Data.Text.Internal.Text)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fEq(,)_$c/= @ Web.Bower.PackageMeta.Internal.PackageName
                           @ Data.Text.Internal.Text
                           $dEq
                           $dEq1
  = Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)_$c/=
"SPEC/Language.PureScript.Publish.ErrorsWarnings $fOrd(,) @ PackageName @ Text" [orphan] forall (v1 :: GHC.Classes.Ord
                                                                                                         Data.Text.Internal.Text)
                                                                                                (v :: GHC.Classes.Ord
                                                                                                        Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fOrd(,) @ Web.Bower.PackageMeta.Internal.PackageName
                       @ Data.Text.Internal.Text
                       v
                       v1
  = Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$s$fOrd(,)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

