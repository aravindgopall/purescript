
==================== FINAL INTERFACE ====================
2018-11-30 20:48:16.26559 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Publish.ErrorsWarnings 8043
  interface hash: a741c2133f38c52b29051077fb71aad7
  ABI hash: 4023aa29c27481d4884110bdf92187be
  export-list hash: 31c297e21bb6fac61d66885ea232c963
  orphan hash: 818f7258b41848c4b09d703803889b72
  flag hash: 83e6a75a98858846540bb03a2fd0f504
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Publish.ErrorsWarnings.printError
  Language.PureScript.Publish.ErrorsWarnings.printErrorToStdout
  Language.PureScript.Publish.ErrorsWarnings.printWarnings
  Language.PureScript.Publish.ErrorsWarnings.renderError
  Language.PureScript.Publish.ErrorsWarnings.renderWarnings
  Language.PureScript.Publish.ErrorsWarnings.InternalError{Language.PureScript.Publish.ErrorsWarnings.CouldntParseGitTagDate Language.PureScript.Publish.ErrorsWarnings.JSONError}
  Language.PureScript.Publish.ErrorsWarnings.JSONSource{Language.PureScript.Publish.ErrorsWarnings.FromFile Language.PureScript.Publish.ErrorsWarnings.FromResolutions}
  Language.PureScript.Publish.ErrorsWarnings.OtherError{Language.PureScript.Publish.ErrorsWarnings.IOExceptionThrown Language.PureScript.Publish.ErrorsWarnings.ProcessFailed}
  Language.PureScript.Publish.ErrorsWarnings.PackageError{Language.PureScript.Publish.ErrorsWarnings.InternalError Language.PureScript.Publish.ErrorsWarnings.OtherError Language.PureScript.Publish.ErrorsWarnings.UserError}
  Language.PureScript.Publish.ErrorsWarnings.PackageWarning{Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree_Warn Language.PureScript.Publish.ErrorsWarnings.MissingPath Language.PureScript.Publish.ErrorsWarnings.NoResolvedVersion Language.PureScript.Publish.ErrorsWarnings.UnacceptableVersion Language.PureScript.Publish.ErrorsWarnings.UndeclaredDependency}
  Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError{Language.PureScript.Publish.ErrorsWarnings.BadRepositoryType Language.PureScript.Publish.ErrorsWarnings.NotOnGithub Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldMissing}
  Language.PureScript.Publish.ErrorsWarnings.UserError{Language.PureScript.Publish.ErrorsWarnings.AmbiguousVersions Language.PureScript.Publish.ErrorsWarnings.BadRepositoryField Language.PureScript.Publish.ErrorsWarnings.CompileError Language.PureScript.Publish.ErrorsWarnings.CouldntDecodePackageManifest Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree Language.PureScript.Publish.ErrorsWarnings.InvalidLicense Language.PureScript.Publish.ErrorsWarnings.MissingDependencies Language.PureScript.Publish.ErrorsWarnings.NoLicenseSpecified Language.PureScript.Publish.ErrorsWarnings.PackageManifestNotFound Language.PureScript.Publish.ErrorsWarnings.ResolutionsFileNotFound Language.PureScript.Publish.ErrorsWarnings.TagMustBeCheckedOut}
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Docs.RenderedCode
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.RenderType
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Errors
                     Language.PureScript.Externs Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Control.Monad.Logger
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Docs.Types
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Make.Monad
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors ff0e80615ece0f0dd064c946f929132c
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors.Internal 066898b2dd92d5d1cfd1d0f21692c75d
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.List.NonEmpty 595ee3baddcadebc4831ea7541427984
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Monoid c40cd435d79b84293ce5503253ee6d44
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Semigroup.Internal 3e64145a879c21fc4c6fc83e5d8ca93b
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.IO.Exception acc060dca2e46d8b8275d06ee7d5d60d
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  bower-json-1.0.0.1:Web.Bower.PackageMeta 762fc9d54b3452d3ab89a9561af46cd3
import  -/  bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal 2e82adc50425e6a0d9ef6a12e29999f7
import  -/  boxes-0.1.5:Text.PrettyPrint.Boxes 49de0395c02f08dbf50ec04d019c04fb
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Language.PureScript 055283757289375c92e0f1e11d744c0e
  exports: 01fc85db00ce4cf253ba5c16e07330e5
import  -/  Language.PureScript.Docs.Types f3dabfa61d83d3270ed9cf5a3f1e8614
  exports: 49d03c0d410b46f9a363053ec495bd39
  ManifestError a8ccfa1bdca7e352c2670454697bb27a
import  -/  Language.PureScript.Errors 15d6eb6b2d4d480750061a0585d4e64c
  MultipleErrors ad1de73a1d5a6b0ccd9657dedebc94f3
  defaultPPEOptions 21c4c963ab953c0b8bd75ee82fd5c9f2
  prettyPrintMultipleErrorsBox cd1fddd77889444534ebb9c90ece0343
import  -/  Language.PureScript.Publish.BoxesHelpers 9952777b94bb2206cc92c72df1505c35
  exports: f3b36e9133bcb8776cbc4bce82b32397
  bulletedList 686d5227b302ab9136f98472d8772153
  bulletedListT 1dc97baaf4578f6c927b0e5c25237dfc
  indented e4dc94d9fc2e61f790144b771ba45ba9
  para 415c6bcd626c680393a64155c98af8b2
  printToStderr 92874eb468e6aabf516fd8a3a63d45ce
  printToStdout 25653cad05d4a8921b10069502b4fe99
  spacer f2a1792edc5ba805f6ebf133b368b938
  successivelyIndented a326805778b984c8a9f4c8e43ea3dada
  vcat 9faa570a8a5b63ccdaf4dadf86e3dada
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
b2c9be44cff6145e3bca9302ebe71bac
  $fEqCollectedWarnings ::
    GHC.Classes.Eq
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$c==
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$c/= -}
b2c9be44cff6145e3bca9302ebe71bac
  $fEqCollectedWarnings_$c/= ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (y :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$c==
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fEqCollectedWarnings_$c== ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
096b19472a9f0c1d0835d90c8b3173cc
  $fEqCollectedWarnings_$s$fEq(,) ::
    GHC.Classes.Eq
      (Web.Bower.PackageMeta.Internal.PackageName,
       Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                     Data.Text.Internal.Text)
                  (GHC.Classes.$fEq(,)_$c==
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fEqPackageName
                     Data.Text.$fEqText)
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)_$c/= -}
139a29c06be4eebd1c15f1f4613bc5e6
  $fEqCollectedWarnings_$s$fEq(,)_$c/= ::
    (Web.Bower.PackageMeta.Internal.PackageName,
     Data.Text.Internal.Text)
    -> (Web.Bower.PackageMeta.Internal.PackageName,
        Data.Text.Internal.Text)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U(U,U,U))><S(S(LLS)L),1*U(1*U(U,U,U),1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (Web.Bower.PackageMeta.Internal.PackageName,
                          Data.Text.Internal.Text))
                   (y :: (Web.Bower.PackageMeta.Internal.PackageName,
                          Data.Text.Internal.Text)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case a1
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Classes.eqInt
                        (GHC.Types.I# dt2)
                        (GHC.Types.I# dt5) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Int.eqInt32
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                             (GHC.Int.I32# 0#) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case a2 of wild7 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                           case b2 of wild8 { Data.Text.Internal.Text dt10 dt11 dt12 ->
                           case GHC.Classes.eqInt
                                  (GHC.Types.I# dt9)
                                  (GHC.Types.I# dt12) of wild9 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                       dt7
                                       (GHC.Prim.int2Word# dt8)
                                       dt10
                                       (GHC.Prim.int2Word# dt11)
                                       (GHC.Prim.int2Word# dt9)
                                       GHC.Prim.realWorld# of wild10 { (#,#) ds1 ds5 ->
                                case GHC.Int.eqInt32
                                       (GHC.Int.I32# (GHC.Prim.narrow32Int# ds5))
                                       (GHC.Int.I32# 0#) of wild11 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False } } } } } } } } } } } }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fMonoidCollectedWarnings ::
    GHC.Base.Monoid
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_$cmempty
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_$c<>
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_go -}
b2c9be44cff6145e3bca9302ebe71bac
  $fMonoidCollectedWarnings_$c<> ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)><S,1*U(1*U,1*U,1*U,1*U,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   (GHC.Base.++ @ Web.Bower.PackageMeta.Internal.PackageName ww1 ww7)
                   (GHC.Base.++ @ Web.Bower.PackageMeta.Internal.PackageName ww2 ww8)
                   (GHC.Base.++
                      @ (Web.Bower.PackageMeta.Internal.PackageName,
                         Data.Text.Internal.Text)
                      ww3
                      ww9)
                   (GHC.Classes.||
                      ww4 `cast` (Data.Semigroup.Internal.N:Any[0])
                      ww10 `cast` (Data.Semigroup.Internal.N:Any[0]))
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Any[0]))
                   (GHC.Base.++
                      @ Web.Bower.PackageMeta.Internal.PackageName
                      ww5
                      ww11) } }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fMonoidCollectedWarnings_$cmempty ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   (GHC.Types.[] @ Web.Bower.PackageMeta.Internal.PackageName)
                   (GHC.Types.[] @ Web.Bower.PackageMeta.Internal.PackageName)
                   (GHC.Types.[]
                      @ (Web.Bower.PackageMeta.Internal.PackageName,
                         Data.Text.Internal.Text))
                   GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:Any[0]))
                   (GHC.Types.[] @ Web.Bower.PackageMeta.Internal.PackageName)) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fMonoidCollectedWarnings_go ::
    [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wgo
                        w of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings ::
    GHC.Classes.Ord
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$ccompare
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<=
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c>
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c>=
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$cmax
                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$cmin -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$c< ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$c<
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$c<= ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (b :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$c> ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (b :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                   b
                   a) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$c>= ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (b :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$ccompare ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$ccompare
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$cmax ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(U,U,U,U,U)><S(SLLLL),1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (y :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fOrdCollectedWarnings_$cmin ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(U,U,U,U,U)><S(SLLLL),1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (y :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$c<
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
979df5f52836ae776cffa55ef14f655e
  $fOrdCollectedWarnings_$s$fOrd(,) ::
    GHC.Classes.Ord
      (Web.Bower.PackageMeta.Internal.PackageName,
       Data.Text.Internal.Text)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                     Data.Text.Internal.Text)
                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (\ (a1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text))
                     (b1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Text.Internal.Text
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Text.$fOrdText) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fSemigroupCollectedWarnings ::
    GHC.Base.Semigroup
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings_$c<>
                  Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings_$csconcat
                  Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings_$cstimes -}
b2c9be44cff6145e3bca9302ebe71bac
  $fSemigroupCollectedWarnings_$csconcat ::
    GHC.Base.NonEmpty
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U,U,U,U),1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.NonEmpty
                            Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { GHC.Base.:| a1 as ->
                 Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings_go
                   a1
                   as }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fSemigroupCollectedWarnings_$cstimes ::
    GHC.Real.Integral b =>
    b
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, Strictness: <L,U> -}
b2c9be44cff6145e3bca9302ebe71bac
  $fSemigroupCollectedWarnings_go ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)><S,1*U>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wgo1
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        w1 of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11 } }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fShowCollectedWarnings ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                  Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshowList -}
b2c9be44cff6145e3bca9302ebe71bac
  $fShowCollectedWarnings1 ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w1 }) -}
9e0c5bea385256db384ac84b7baa5e0d
  $fShowCollectedWarnings2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fShowCollectedWarnings_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fShowCollectedWarnings_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings1
                   ls
                   s) -}
b2c9be44cff6145e3bca9302ebe71bac
  $fShowCollectedWarnings_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ww3 ww4 ww5 ww6 ww7 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   w2 } }) -}
9f2f45a8e213d1899c236c95177783af
  $fShowInternalError ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.InternalError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.InternalError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec1
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowList -}
9f2f45a8e213d1899c236c95177783af
  $fShowInternalError1 ::
    Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec1 0# w) -}
fed161bbf2b836af570119f8dd96ea7c
  $fShowInternalError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CouldntParseGitTagDate "#) -}
227cc36c16790e33f2fd0cd3691fd7ed
  $fShowInternalError3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
5bb08ae7bc48ebeaefd005457bf8fcda
  $fShowInternalError4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError5) -}
1a43787004507a7a7adb876fe1728039
  $fShowInternalError5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FromResolutions"#) -}
c18862249b6098ddcc895dacde7ec65a
  $fShowInternalError6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FromFile "#) -}
18ae17cabd9e3fe89d084ee3b9d400ec
  $fShowInternalError7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("JSONError "#) -}
9f2f45a8e213d1899c236c95177783af
  $fShowInternalError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec1
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9f2f45a8e213d1899c236c95177783af
  $fShowInternalError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.InternalError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.InternalError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.InternalError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError1
                   ls
                   s) -}
9ed6edf91be7379078f587ea97b952aa
  $fShowInternalError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.JSONSource
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Language.PureScript.Publish.ErrorsWarnings.JSONSource)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Language.PureScript.Publish.ErrorsWarnings.FromFile b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError6
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 eta)))
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError6
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            eta))))) } }
                   Language.PureScript.Publish.ErrorsWarnings.FromResolutions
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError4
                        eta }) -}
9f2f45a8e213d1899c236c95177783af
  $fShowInternalError_$cshowsPrec1 ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec1
                   ww1
                   w1 }) -}
9ed6edf91be7379078f587ea97b952aa
  $fShowJSONSource ::
    GHC.Show.Show Language.PureScript.Publish.ErrorsWarnings.JSONSource
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.JSONSource
                  Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource_$cshowList -}
9ed6edf91be7379078f587ea97b952aa
  $fShowJSONSource1 ::
    Language.PureScript.Publish.ErrorsWarnings.JSONSource
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
ccc13037a68746d085d61be996d67dc0
  $fShowJSONSource2 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9ed6edf91be7379078f587ea97b952aa
  $fShowJSONSource_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.JSONSource
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.JSONSource) ->
                 case x of wild {
                   Language.PureScript.Publish.ErrorsWarnings.FromFile b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError6
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              b1
                              Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource2))
                   Language.PureScript.Publish.ErrorsWarnings.FromResolutions
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError4 }) -}
9ed6edf91be7379078f587ea97b952aa
  $fShowJSONSource_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.JSONSource]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.JSONSource])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.JSONSource
                   Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource1
                   ls
                   s) -}
a03ba57b8ba8d954b9bffaa31c75a3b4
  $fShowOtherError ::
    GHC.Show.Show Language.PureScript.Publish.ErrorsWarnings.OtherError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.OtherError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshowList -}
a03ba57b8ba8d954b9bffaa31c75a3b4
  $fShowOtherError1 ::
    Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.OtherError)
                   (w1 :: GHC.Base.String) ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                   0#
                   w
                   w1) -}
a03ba57b8ba8d954b9bffaa31c75a3b4
  $fShowOtherError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Publish.ErrorsWarnings.OtherError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a03ba57b8ba8d954b9bffaa31c75a3b4
  $fShowOtherError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.OtherError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.OtherError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.OtherError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError1
                   ls
                   s) -}
a03ba57b8ba8d954b9bffaa31c75a3b4
  $fShowOtherError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.OtherError)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                   ww1
                   w1
                   w2 }) -}
c3ae6a50ef0d7cdceedca8b70b56988d
  $fShowPackageError ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.PackageError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec2
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowList -}
c3ae6a50ef0d7cdceedca8b70b56988d
  $fShowPackageError1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec3 0# w) -}
5a8336983b113a22724de163f3afdc5b
  $fShowPackageError10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DirtyWorkingTree"#) -}
e07f2a537a37afdc3c733e6abb618359
  $fShowPackageError11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CompileError "#) -}
3ee4e51dbd65225a3e297b16ed44eafe
  $fShowPackageError12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError13) -}
6d53b6cd1038e2ddf56b5ced907de3a9
  $fShowPackageError13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MissingDependencies "#) -}
76086c21f141b747bc8bd0d22a50a57e
  $fShowPackageError14 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError15) -}
cd72e8ad2b7499331ab5aa14bc70045d
  $fShowPackageError15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError16) -}
6b3cee5b3803ea6ecd6e37fbaa08096e
  $fShowPackageError16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidLicense"#) -}
8fdad3d07baf7887a2da776d2ea7889a
  $fShowPackageError17 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError18) -}
fe419867c41e14c3ef98b9ee34c11164
  $fShowPackageError18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError19) -}
0939eb86a4a751dc426fca9ef005c885
  $fShowPackageError19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NoLicenseSpecified"#) -}
e70fba59b9f09c33f400f729214e033f
  $fShowPackageError2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError3) -}
9f78d2cf99754513125a2f4b1834ed97
  $fShowPackageError20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError21) -}
a9b0c24650d764ba43b61775e6bff0b8
  $fShowPackageError21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BadRepositoryField "#) -}
a70343d437c35a0f0b0a17c68ef77a3b
  $fShowPackageError22 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError23) -}
fea2166fc1a05b045a35ca4fb67d1117
  $fShowPackageError23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError24) -}
6b20f5c2bfa0d736403ee4cfd63569b7
  $fShowPackageError24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NotOnGithub"#) -}
4b42301392c9b7e584fcc72710cd85b3
  $fShowPackageError25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BadRepositoryType "#) -}
9003a4137ca9cfccbdb06c83550ea0af
  $fShowPackageError26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError27) -}
dfd793bbf12fd87bd02b4f3bb2258fd0
  $fShowPackageError27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RepositoryFieldMissing "#) -}
ac1dfed6eb3322e934edfa9e81b51770
  $fShowPackageError28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AmbiguousVersions "#) -}
7e487c3c0c045c195b6c315d20421e53
  $fShowPackageError29 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError30) -}
53ed2cb6c2607f46bbff26f38be8088e
  $fShowPackageError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OtherError "#) -}
927730936994105b4c6ee5679d4000ef
  $fShowPackageError30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError31) -}
506b5adf732df18e1dddd8fcbd0d8dad
  $fShowPackageError31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TagMustBeCheckedOut"#) -}
ca598ab35fb6cfb30859a2c920f1b80a
  $fShowPackageError32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError33) -}
9fe5a3b9ecba9afd80562e18e1f07021
  $fShowPackageError33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CouldntDecodePackageManifest "#) -}
efc39654dcb431b31037461b3a211087
  $fShowPackageError34 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError35) -}
868cd1d94bc3654a3d37ad937e2604a5
  $fShowPackageError35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError36) -}
f59216231d9a0685b05e70f065c20273
  $fShowPackageError36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ResolutionsFileNotFound"#) -}
1cff36d3605f5239e7ec228476098c3a
  $fShowPackageError37 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError38) -}
ee5c6251c40f630c3c406886abf6f207
  $fShowPackageError38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError39) -}
24a0108cb7042b7f09167ec71be0f42b
  $fShowPackageError39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageManifestNotFound"#) -}
47dda639fd5da98f532502fb70d72de6
  $fShowPackageError4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError5) -}
b0f448d23c5855b491a3877199425208
  $fShowPackageError5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InternalError "#) -}
56e21525ba66579e68b95d43ef3c0a5f
  $fShowPackageError6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError7) -}
3869724c553bf09006eb26ce2510eea2
  $fShowPackageError7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UserError "#) -}
e5a6ec0fad45f06a1a484822a38aae0f
  $fShowPackageError8 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError9) -}
60bf9849c8d21c54f08375eb8ce840a7
  $fShowPackageError9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError10) -}
c3ae6a50ef0d7cdceedca8b70b56988d
  $fShowPackageError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
c3ae6a50ef0d7cdceedca8b70b56988d
  $fShowPackageError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.PackageError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.PackageError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError1
                   ls
                   s) -}
dc9821c099e0f6cb216d2fdbdaf2fabd
  $fShowPackageError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.UserError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: Language.PureScript.Publish.ErrorsWarnings.UserError) ->
                 case ds1 of wild {
                   Language.PureScript.Publish.ErrorsWarnings.PackageManifestNotFound
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError37
                   Language.PureScript.Publish.ErrorsWarnings.ResolutionsFileNotFound
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError34
                   Language.PureScript.Publish.ErrorsWarnings.CouldntDecodePackageManifest b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Data.Aeson.BetterErrors.Internal.$w$cshowsPrec2
                            @ Web.Bower.PackageMeta.Internal.BowerError
                            Web.Bower.PackageMeta.Internal.$fShowBowerError
                            11#
                            b1
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError32
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError32
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.TagMustBeCheckedOut
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError29
                   Language.PureScript.Publish.ErrorsWarnings.AmbiguousVersions b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError28
                            (case b1 of wild2 {
                               [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 x1
                               : x2 xs
                               -> GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.showList__3
                                    (case x2 of ww { Data.Version.Version ww1 ww2 ->
                                     Data.Version.$w$cshowsPrec
                                       0#
                                       ww1
                                       ww2
                                       (let {
                                          lvl253 :: [GHC.Types.Char]
                                          = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 x1
                                        } in
                                        letrec {
                                          showl4 :: [Data.Version.Version] -> GHC.Base.String
                                            {- Arity: 1, Strictness: <S,1*U> -}
                                          = \ (ds2 :: [Data.Version.Version]) ->
                                            case ds2 of wild3 {
                                              [] -> lvl253
                                              : y ys
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   GHC.Show.showList__1
                                                   (case y of ww4 { Data.Version.Version ww5 ww6 ->
                                                    Data.Version.$w$cshowsPrec
                                                      0#
                                                      ww5
                                                      ww6
                                                      (showl4 ys) }) }
                                        } in
                                        showl4 xs) }) })
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT -> p
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1)) } }
                   Language.PureScript.Publish.ErrorsWarnings.BadRepositoryField b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec1
                            Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                            b1
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError20
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError20
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.NoLicenseSpecified
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError17
                   Language.PureScript.Publish.ErrorsWarnings.InvalidLicense
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError14
                   Language.PureScript.Publish.ErrorsWarnings.MissingDependencies b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { GHC.Base.:| ww3 ww4 ->
                          GHC.Show.$w$cshowsPrec7
                            @ Web.Bower.PackageMeta.Internal.PackageName
                            Web.Bower.PackageMeta.Internal.$fShowPackageName
                            11#
                            ww3
                            ww4 }
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError12
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError12
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.CompileError b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError11
                             (Language.PureScript.Errors.$w$cshowsPrec 11# b1 x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError11
                                (Language.PureScript.Errors.$w$cshowsPrec
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError8 }) -}
e391891ab92004f02f31f68755814996
  $fShowPackageError_$cshowsPrec1 ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError) ->
                 case ds of wild {
                   Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldMissing b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Show.$fShowMaybe_$cshowsPrec
                            @ Data.Text.Internal.Text
                            Data.Text.Show.$fShowText
                            Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                            b1
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError26
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError26
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   Language.PureScript.Publish.ErrorsWarnings.BadRepositoryType b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError25
                             (case Data.Text.Show.$w$cshowsPrec b1 x1 of ww { (#,#) ww1 ww2 ->
                              GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError25
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           x1) of ww { (#,#) ww1 ww2 ->
                                 GHC.Types.: @ GHC.Types.Char ww1 ww2 })) } }
                   Language.PureScript.Publish.ErrorsWarnings.NotOnGithub
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError22 }) -}
c3ae6a50ef0d7cdceedca8b70b56988d
  $fShowPackageError_$cshowsPrec2 ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec3
                   ww1
                   w1 }) -}
e7661e9e973a95b6e75622ad011f440f
  $fShowPackageWarning ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.PackageWarning
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshowList -}
e7661e9e973a95b6e75622ad011f440f
  $fShowPackageWarning1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageWarning
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
017b0766267fd1aaaa382f01c74ff8c2
  $fShowPackageWarning2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MissingPath "#) -}
cc579f2292933cfc98235021222779ad
  $fShowPackageWarning3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning4) -}
008813f76b72d2d06ac6fd69c080a929
  $fShowPackageWarning4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DirtyWorkingTree_Warn"#) -}
f322e69b1c7249cfb3b6406ee1705c55
  $fShowPackageWarning5 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5d568ab03f533f344abee422cb796bf0
  $fShowPackageWarning6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UnacceptableVersion "#) -}
aa45209916d97981d8d05b1e701bb4f8
  $fShowPackageWarning7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UndeclaredDependency "#) -}
d022b4cd7e1cd7da5646a45a0c5d2b52
  $fShowPackageWarning8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NoResolvedVersion "#) -}
e7661e9e973a95b6e75622ad011f440f
  $fShowPackageWarning_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.PackageWarning
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.PackageWarning) ->
                 case x of wild {
                   Language.PureScript.Publish.ErrorsWarnings.NoResolvedVersion b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning8
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Language.PureScript.Publish.ErrorsWarnings.UndeclaredDependency b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning7
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Language.PureScript.Publish.ErrorsWarnings.UnacceptableVersion b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning6
                        (case b1 of ww { (,) ww1 ww2 ->
                         GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)4
                           (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                              0#
                              ww1
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.showList__1
                                 (GHC.Show.$fShow(,)_$sgo1
                                    Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning5
                                    (\ (w2 :: GHC.Base.String)[OneShot] ->
                                     case Data.Text.Show.$w$cshowsPrec
                                            ww2
                                            w2 of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Types.: @ GHC.Types.Char ww5 ww6 })
                                    (GHC.Types.[] @ GHC.Show.ShowS)))) })
                   Language.PureScript.Publish.ErrorsWarnings.DirtyWorkingTree_Warn
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning3
                   Language.PureScript.Publish.ErrorsWarnings.MissingPath b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning2
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
e7661e9e973a95b6e75622ad011f440f
  $fShowPackageWarning_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.PackageWarning])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.PackageWarning
                   Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning1
                   ls
                   s) -}
e7661e9e973a95b6e75622ad011f440f
  $fShowPackageWarning_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Publish.ErrorsWarnings.PackageWarning
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
e391891ab92004f02f31f68755814996
  $fShowRepositoryFieldError ::
    GHC.Show.Show
      Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec1
                  Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError_$cshowList -}
e391891ab92004f02f31f68755814996
  $fShowRepositoryFieldError1 ::
    Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec1
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
e391891ab92004f02f31f68755814996
  $fShowRepositoryFieldError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError) ->
                 case x of wild {
                   Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldMissing b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError26
                        (case b1 of wild1 {
                           GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                           GHC.Base.Just b2
                           -> GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   GHC.Show.$fShowMaybe1
                                   (case Data.Text.Show.$w$cshowsPrec
                                           b2
                                           Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning5 of ww { (#,#) ww1 ww2 ->
                                    GHC.Types.: @ GHC.Types.Char ww1 ww2 })) })
                   Language.PureScript.Publish.ErrorsWarnings.BadRepositoryType b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError25
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Language.PureScript.Publish.ErrorsWarnings.NotOnGithub
                   -> Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError23 }) -}
e391891ab92004f02f31f68755814996
  $fShowRepositoryFieldError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError1
                   ls
                   s) -}
dc9821c099e0f6cb216d2fdbdaf2fabd
  $fShowUserError ::
    GHC.Show.Show Language.PureScript.Publish.ErrorsWarnings.UserError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Publish.ErrorsWarnings.UserError
                  Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec
                  Language.PureScript.Publish.ErrorsWarnings.$fShowUserError_$cshow
                  Language.PureScript.Publish.ErrorsWarnings.$fShowUserError_$cshowList -}
dc9821c099e0f6cb216d2fdbdaf2fabd
  $fShowUserError1 ::
    Language.PureScript.Publish.ErrorsWarnings.UserError
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec
                   Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings2) -}
dc9821c099e0f6cb216d2fdbdaf2fabd
  $fShowUserError_$cshow ::
    Language.PureScript.Publish.ErrorsWarnings.UserError
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
dc9821c099e0f6cb216d2fdbdaf2fabd
  $fShowUserError_$cshowList ::
    [Language.PureScript.Publish.ErrorsWarnings.UserError]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Publish.ErrorsWarnings.UserError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Publish.ErrorsWarnings.UserError
                   Language.PureScript.Publish.ErrorsWarnings.$fShowUserError1
                   ls
                   s) -}
02ae9233d262aae3556ef12634ff9c88
  $tc'AmbiguousVersions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14929181700685422683##
                   5241425422805905541##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'AmbiguousVersions2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'AmbiguousVersions1) -}
f89d4e6e049fb93527d160026fa287fa
  $tc'AmbiguousVersions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
83df1b85cda87342246e42d5934b128e
  $tc'AmbiguousVersions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'AmbiguousVersions3) -}
9a28b0079a2d6ea94fe4a5f671c1c071
  $tc'AmbiguousVersions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AmbiguousVersions"#) -}
b8b1b488cdbf55a16907205cca0939e1
  $tc'BadRepositoryField :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4050772221854206892##
                   9352875596597403689##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryField2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryField1) -}
5188fd70a7baa694d75f5b0f5bcdc295
  $tc'BadRepositoryField1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fcc1edad5d6a497ca01b6126dc6c6ce7
  $tc'BadRepositoryField2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryField3) -}
46193ca3616c701e4846d0340d4748a1
  $tc'BadRepositoryField3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BadRepositoryField"#) -}
753ce690266abb3a5ef19d4ac116d229
  $tc'BadRepositoryType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13822805016230496308##
                   70253700698511994##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryType2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryType1) -}
e3cc74c10f96d81ec773434ee14a646e
  $tc'BadRepositoryType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
97fd33f7529b4f80a18ed7b7e0e5fd06
  $tc'BadRepositoryType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'BadRepositoryType3) -}
ef9fbbfe80b0c541d76f964d74a68466
  $tc'BadRepositoryType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BadRepositoryType"#) -}
f4f6d8c4525f5c8ec66161c51fcc7e49
  $tc'CollectedWarnings :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3874024382619126202##
                   7900009401193633896##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CollectedWarnings2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CollectedWarnings1) -}
b122979ac61bf17cba2215947be3f676
  $tc'CollectedWarnings1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bc3f5558bd1dd72c29326b12714786bd
  $tc'CollectedWarnings2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CollectedWarnings3) -}
965490f5285a77db29e7d74d4f67bdb2
  $tc'CollectedWarnings3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CollectedWarnings"#) -}
64578da6a26f1ce181abf714ccd64650
  $tc'CompileError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10836051720725662881##
                   16430118477174744717##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CompileError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CompileError1) -}
096df20b8aef3e94e14f3ee331200c02
  $tc'CompileError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b5b874fed1d0f74d9c8f08ebb47ef089
  $tc'CompileError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CompileError3) -}
183ca2186b6c8c463eba84ca14c4dc0f
  $tc'CompileError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CompileError"#) -}
bc8c59a9dc86e7ca3d9fc1ee466b7bc7
  $tc'CouldntDecodePackageManifest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10058226233537713915##
                   15698376336131987059##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntDecodePackageManifest2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntDecodePackageManifest1) -}
b5ce47d8e54fa9e1a62dcb3f63389635
  $tc'CouldntDecodePackageManifest1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9321f3011296dd58ed2531cdf44de482
  $tc'CouldntDecodePackageManifest2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntDecodePackageManifest3) -}
b854c2d2bc1f5f961227ca96d98b6ce9
  $tc'CouldntDecodePackageManifest3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CouldntDecodePackageManifest"#) -}
0d55914b61765a5e30d013cd97676b13
  $tc'CouldntParseGitTagDate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11090744197888253467##
                   10750221719863134730##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntParseGitTagDate2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntParseGitTagDate1) -}
6f29399659c44e0936187daef381dd0a
  $tc'CouldntParseGitTagDate1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5c9f02f78a8bf6f340998c4be6e2161f
  $tc'CouldntParseGitTagDate2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'CouldntParseGitTagDate3) -}
96473ce785850b6f20efc96e22deb0e3
  $tc'CouldntParseGitTagDate3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CouldntParseGitTagDate"#) -}
daffaaaf61d82d892ed35fdf6ef45e62
  $tc'DirtyWorkingTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4088886117070993931##
                   12861300801448374515##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
247aab0e4e2e4f654794f1bd63e49b95
  $tc'DirtyWorkingTree1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
d866f7ed5065d660145ff8fcb15c6abf
  $tc'DirtyWorkingTree2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree3) -}
e565446a0035db4f1da17dc10d5143de
  $tc'DirtyWorkingTree3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DirtyWorkingTree"#) -}
105ad0e215f39f59895004f1eea9f8f8
  $tc'DirtyWorkingTree_Warn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10130446109600342276##
                   4436747386729967049##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree_Warn2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree_Warn1) -}
1aae44255a8d69f71b4a77cde3ad3f47
  $tc'DirtyWorkingTree_Warn1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
ddd521c9637bc8da8ee31f967268f109
  $tc'DirtyWorkingTree_Warn2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree_Warn3) -}
c1ea16e28188e34517a6f2c4570e3516
  $tc'DirtyWorkingTree_Warn3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DirtyWorkingTree_Warn"#) -}
72f75adf71e7551e1f2df69043bafaa4
  $tc'FromFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4530006664266835599##
                   904781744805533787##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromFile2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromFile1) -}
364065fc21239a9c2eeba0905df6eb09
  $tc'FromFile1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
23829e2a30866a895fc8a827e0c8574d
  $tc'FromFile2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromFile3) -}
1604c36c01da74386d55e09c4534ec68
  $tc'FromFile3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FromFile"#) -}
117340132ea53a9e6b1fa91d2a6bd1f5
  $tc'FromResolutions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1306912109883161273##
                   348250580424095000##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromResolutions2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromResolutions1) -}
a0acb5903d13886f5f0e69a476b7daca
  $tc'FromResolutions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
1481fdc6f074e477a9c9902ddc113752
  $tc'FromResolutions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'FromResolutions3) -}
10953edfa626c8581e25975c366a252d
  $tc'FromResolutions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FromResolutions"#) -}
3732c440d5ec54e9296ae9852ccd682f
  $tc'IOExceptionThrown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5714079708502149875##
                   12353651405094905437##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'IOExceptionThrown2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'IOExceptionThrown1) -}
75a626b5a59cd6a7343160cc1def7aa0
  $tc'IOExceptionThrown1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7a365e7ee98ad2585b91abe8408e2019
  $tc'IOExceptionThrown2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'IOExceptionThrown3) -}
437d8d8983c056a38499cd30996c51b8
  $tc'IOExceptionThrown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'IOExceptionThrown"#) -}
d4965e9ce507068b86ac280741d10e72
  $tc'InternalError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11107819334365877325##
                   7559031454595982648##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InternalError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InternalError1) -}
824874d58dc70e27d5c61eddbb529e38
  $tc'InternalError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1da161a3cef22ad49ab466898b034008
  $tc'InternalError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InternalError3) -}
eb7e7e0002c5a25940d340e9d2b95f5d
  $tc'InternalError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InternalError"#) -}
c4620134683669dffa3aa3f4c3d4bc30
  $tc'InvalidLicense :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   910427722596708037##
                   12961812890612769737##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InvalidLicense1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
d1aa86e690379105d601432540a30435
  $tc'InvalidLicense1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'InvalidLicense2) -}
441a3b98ac04b51bce154005525cd6dd
  $tc'InvalidLicense2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidLicense"#) -}
8a4cf02e47e81cf11847f72f30c6d7b4
  $tc'JSONError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8124270685787673334##
                   5619073690559497403##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'JSONError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'JSONError1) -}
73be97a1f050a052de1f371d06c0c240
  $tc'JSONError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c424588f0a6b039cb1e607fbde869e80
  $tc'JSONError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'JSONError3) -}
e6f4e1ecf28777e5f47ba143dc6562a3
  $tc'JSONError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'JSONError"#) -}
20622db32b9e9e49956555c0d0e02a0f
  $tc'MissingDependencies :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   468202409418549550##
                   17203672803533887481##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingDependencies2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingDependencies1) -}
46aa06d9ba9661e818b6c341e9771dda
  $tc'MissingDependencies1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f19ed04a025ab4698fd092b402d0ac47
  $tc'MissingDependencies2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingDependencies3) -}
0be1e219b13d4c955a860ac05201023b
  $tc'MissingDependencies3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MissingDependencies"#) -}
065e11b1bb25ebb4950a3c80cca4295c
  $tc'MissingPath :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16483217239891305215##
                   1329529616394464095##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath1) -}
a0880871f1f2b69a1b2befbb3a47d834
  $tc'MissingPath1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
28f38e8f73adbbafdf8627afaae3bfee
  $tc'MissingPath2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath3) -}
a1e8667c5aa6099becb7866cadc61b13
  $tc'MissingPath3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MissingPath"#) -}
822d39786ba5aeb70ab8d6b77e08eb63
  $tc'NoLicenseSpecified :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   909810819364639996##
                   14247428486872653687##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoLicenseSpecified1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
6c7c767f394447978f3f8a12eb3a5a63
  $tc'NoLicenseSpecified1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoLicenseSpecified2) -}
4ad3f9325b368873440231a171b1afd3
  $tc'NoLicenseSpecified2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NoLicenseSpecified"#) -}
807927cf0846f867586dde2f6142c3df
  $tc'NoResolvedVersion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15468765001770571099##
                   5817793501505529352##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoResolvedVersion1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath1) -}
19f9c76456d86d36077c04ccb0469dcc
  $tc'NoResolvedVersion1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NoResolvedVersion2) -}
40adaa27f9243ec74d2f318cc984a848
  $tc'NoResolvedVersion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NoResolvedVersion"#) -}
d2da156572e6fc5f477e50ee0c39ffc1
  $tc'NotOnGithub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15867167121117795390##
                   10366604710807766394##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NotOnGithub2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NotOnGithub1) -}
1b19f3accfbc368d720a37a9eefabee9
  $tc'NotOnGithub1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
d83b3867fcb32e504ffbdd660f280477
  $tc'NotOnGithub2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'NotOnGithub3) -}
62a5ef0dd0401a534c283497f17d6932
  $tc'NotOnGithub3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NotOnGithub"#) -}
d3e39d5e71904ad66749a65a4634e311
  $tc'OtherError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2474152290012020127##
                   14173262039202473185##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'OtherError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'OtherError1) -}
c45ba707b899d32e5a28ac2d6f449f69
  $tc'OtherError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
659049bc820c6ca2a10ca860e18e5720
  $tc'OtherError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'OtherError3) -}
48836bdf9e05d933e4129072414bbd8b
  $tc'OtherError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'OtherError"#) -}
3223a9fe363aad20dd85d1f9f58ce48a
  $tc'PackageManifestNotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15808113500328749282##
                   10603497557888751298##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'PackageManifestNotFound1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
51c3356a8c9b17fe2817080c05163bc8
  $tc'PackageManifestNotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'PackageManifestNotFound2) -}
eb8c4ebfa591744ea517f4118a080de1
  $tc'PackageManifestNotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PackageManifestNotFound"#) -}
7a833b406403ab157c7c85b93b9ff7cf
  $tc'ProcessFailed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3968841458142322688##
                   565283590894932560##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ProcessFailed2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ProcessFailed1) -}
17d9c6fc52b7ad9a9fe082a3724a5ff1
  $tc'ProcessFailed1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e8fd08e9182d646c99352ca5056477fe
  $tc'ProcessFailed2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ProcessFailed3) -}
718efe4a54226086ad49df43259b22c7
  $tc'ProcessFailed3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProcessFailed"#) -}
4cbe617e52674da11e15360216c8b13b
  $tc'RepositoryFieldMissing :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6172002970333839407##
                   843031106874911624##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'RepositoryFieldMissing2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'RepositoryFieldMissing1) -}
596982021bc9ac536d288c3a00f5336f
  $tc'RepositoryFieldMissing1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3341eacec13c5528e0b908c92428e397
  $tc'RepositoryFieldMissing2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'RepositoryFieldMissing3) -}
18291a623608e8637edaf478b6321284
  $tc'RepositoryFieldMissing3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RepositoryFieldMissing"#) -}
be40b388e0fa3b84dbfbad0e70efdeb6
  $tc'ResolutionsFileNotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15456012634740942628##
                   15506514556128669541##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ResolutionsFileNotFound1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
80d2c772a8022b20545edb73d7f4773d
  $tc'ResolutionsFileNotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'ResolutionsFileNotFound2) -}
154332cedaf4edb5ff2a030ae1f0e1fd
  $tc'ResolutionsFileNotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ResolutionsFileNotFound"#) -}
fe729e8906d8dbec1e453d96798d399c
  $tc'TagMustBeCheckedOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8527774029909063524##
                   10858253359730708277##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'TagMustBeCheckedOut1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'DirtyWorkingTree1) -}
e80ddf473c9d72f04bff40f2bc290ba8
  $tc'TagMustBeCheckedOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'TagMustBeCheckedOut2) -}
9d2e2cec5beb5937789178b1f917f934
  $tc'TagMustBeCheckedOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TagMustBeCheckedOut"#) -}
620ebfec28f18baad708bd685e0d65d5
  $tc'UnacceptableVersion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4078973883077931077##
                   4734690557258099483##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UnacceptableVersion2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UnacceptableVersion1) -}
e6831a4d760380e2a43942a42b755d45
  $tc'UnacceptableVersion1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
30c2c3e00ed9ff5bad4eb6e927ced943
  $tc'UnacceptableVersion2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UnacceptableVersion3) -}
43c2ff113108e918b4c0e7a28a0f528c
  $tc'UnacceptableVersion3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UnacceptableVersion"#) -}
9b938c45dc17a371dc4c2e11d72f3974
  $tc'UndeclaredDependency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4328788869177846845##
                   2753588831695775213##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UndeclaredDependency1
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'MissingPath1) -}
958a2f38aa2d7b662f8e96092b92e279
  $tc'UndeclaredDependency1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UndeclaredDependency2) -}
43aa2dadbc5dd6973757c99699841169
  $tc'UndeclaredDependency2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UndeclaredDependency"#) -}
9fa6c936acf178971bdb65ad5b7424f6
  $tc'UserError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11103576227102218712##
                   17396671970032955401##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UserError2
                   0#
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UserError1) -}
3b2c4ca61ff4a9fed9c1abd6e48709e2
  $tc'UserError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
34768bf94b19b9be6f08c978b33463ac
  $tc'UserError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tc'UserError3) -}
028779a7e8c0022364f04265fc41eb1d
  $tc'UserError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UserError"#) -}
b8cffae3e09328a5a189ec37743ee07e
  $tcCollectedWarnings :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2556383764784002923##
                   14963020966602408829##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcCollectedWarnings1
                   0#
                   GHC.Types.krep$*) -}
3815b090908bafa50a96865c0e50d0b8
  $tcCollectedWarnings1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcCollectedWarnings2) -}
6e09abaee2ff189a45c9a90ed27a534b
  $tcCollectedWarnings2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CollectedWarnings"#) -}
83868c1d8f3784a42561e1f3a152f5e0
  $tcInternalError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6763484917032043161##
                   8756666927800426334##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcInternalError1
                   0#
                   GHC.Types.krep$*) -}
791bd45f02b0553bf7e962ea86c2c2ef
  $tcInternalError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcInternalError2) -}
5dd0ac02a64929543d1a102f9b7e3a54
  $tcInternalError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InternalError"#) -}
80185de743c156ee38cd944d3b89fbb1
  $tcJSONSource :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4229925224812848481##
                   6279724066472524866##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcJSONSource1
                   0#
                   GHC.Types.krep$*) -}
dcb728802b05a1308898eaa3cae7fba3
  $tcJSONSource1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcJSONSource2) -}
ec5250c33d61bc7b9c5e8ca4df0cd70a
  $tcJSONSource2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("JSONSource"#) -}
59960f9609a312c4ff4b55168426a0ff
  $tcOtherError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8097976947663179847##
                   8118051778238822754##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcOtherError1
                   0#
                   GHC.Types.krep$*) -}
b089bf175fc21d05a70e8cfbc2cb87e1
  $tcOtherError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcOtherError2) -}
c32ca296a1c81040f5a43d3324ea32b8
  $tcOtherError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OtherError"#) -}
7df40c578e7e4ba9aec2adbdcadaeba6
  $tcPackageError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15577936917763757701##
                   10158757315479457721##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageError1
                   0#
                   GHC.Types.krep$*) -}
9143b5611611a87283ede1e4e36b3f0b
  $tcPackageError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageError2) -}
141fda162ff84314485887abc01bcd44
  $tcPackageError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageError"#) -}
0a427587f2f41d59d370e4f456dbc5d3
  $tcPackageWarning :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11849366259820749058##
                   5702751560134831126##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageWarning1
                   0#
                   GHC.Types.krep$*) -}
d787d74c81967bd38b1dc67042349fab
  $tcPackageWarning1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcPackageWarning2) -}
cccbfcc133053777c3b995d918776e92
  $tcPackageWarning2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageWarning"#) -}
dd14876ccdba5089e653557364176654
  $tcRepositoryFieldError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13404879767370188620##
                   11498356206202940824##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcRepositoryFieldError1
                   0#
                   GHC.Types.krep$*) -}
bde7b4fa02f7a7cd041692d867777d1e
  $tcRepositoryFieldError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcRepositoryFieldError2) -}
06f21733a1ebaf93ced237453bdcde7b
  $tcRepositoryFieldError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RepositoryFieldError"#) -}
141d47e13145e4cf0062173fb0f67121
  $tcUserError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16084403317937527111##
                   6317540858677307216##
                   Language.PureScript.Publish.ErrorsWarnings.$trModule
                   Language.PureScript.Publish.ErrorsWarnings.$tcUserError1
                   0#
                   GHC.Types.krep$*) -}
16b9fcff732074cfc00926417541b6bc
  $tcUserError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$tcUserError2) -}
babe1f64e29e52cbfb72350334412c03
  $tcUserError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UserError"#) -}
4adf77cf3c1a3d396873e3974514e61b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Publish.ErrorsWarnings.$trModule3
                   Language.PureScript.Publish.ErrorsWarnings.$trModule1) -}
fe33fda0c1471df01784396c45e15ec6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$trModule2) -}
94d496867ae189e2c21a56f9707c56aa
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Publish.ErrorsWarnings"#) -}
89675821c0b2e93e5734a52ee87bd2fc
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Publish.ErrorsWarnings.$trModule4) -}
c72acffa825a4c15e127b5e95e66212c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
222084e82989140b9bfc61690ad41e0c
  $w$c< ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww1 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww2 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww3 :: Data.Semigroup.Internal.Any)
                   (ww4 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww5 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww6 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww7 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww8 :: Data.Semigroup.Internal.Any)
                   (ww9 :: [Web.Bower.PackageMeta.Internal.PackageName]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Web.Bower.PackageMeta.Internal.$fOrdPackageName
                        ww
                        ww5 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$ccompare
                             @ Web.Bower.PackageMeta.Internal.PackageName
                             Web.Bower.PackageMeta.Internal.$fOrdPackageName
                             ww1
                             ww6 of wild1 {
                        GHC.Types.LT -> GHC.Types.True
                        GHC.Types.EQ
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                                     Data.Text.Internal.Text)
                                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$s$fOrd(,)
                                  ww2
                                  ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> case ww3 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild3 {
                                  GHC.Types.False
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Classes.$fOrd[]_$ccompare
                                                 @ Web.Bower.PackageMeta.Internal.PackageName
                                                 Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                                 ww4
                                                 ww9 of wild5 {
                                            DEFAULT -> GHC.Types.False
                                            GHC.Types.LT -> GHC.Types.True }
                                       GHC.Types.True -> GHC.Types.True }
                                  GHC.Types.True
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Classes.$fOrd[]_$ccompare
                                                 @ Web.Bower.PackageMeta.Internal.PackageName
                                                 Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                                 ww4
                                                 ww9 of wild5 {
                                            DEFAULT -> GHC.Types.False
                                            GHC.Types.LT -> GHC.Types.True } } }
                             GHC.Types.GT -> GHC.Types.False }
                        GHC.Types.GT -> GHC.Types.False }
                   GHC.Types.GT -> GHC.Types.False }) -}
72b91479faea78ebeeb55a5bd97f7ea0
  $w$c== ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww1 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww2 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww3 :: Data.Semigroup.Internal.Any)
                   (ww4 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww5 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww6 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww7 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww8 :: Data.Semigroup.Internal.Any)
                   (ww9 :: [Web.Bower.PackageMeta.Internal.PackageName]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Web.Bower.PackageMeta.Internal.$fEqPackageName
                        ww
                        ww5 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Web.Bower.PackageMeta.Internal.PackageName
                             Web.Bower.PackageMeta.Internal.$fEqPackageName
                             ww1
                             ww6 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                                     Data.Text.Internal.Text)
                                  Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)
                                  ww2
                                  ww7 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild3 {
                                  GHC.Types.False
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False
                                       -> GHC.Classes.$fEq[]_$c==
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fEqPackageName
                                            ww4
                                            ww9
                                       GHC.Types.True -> GHC.Types.False }
                                  GHC.Types.True
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.$fEq[]_$c==
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fEqPackageName
                                            ww4
                                            ww9 } } } } }) -}
14e89a53e967d83f5dfc4db4f6e720b3
  $w$ccompare ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Types.Ordering
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww1 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww2 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww3 :: Data.Semigroup.Internal.Any)
                   (ww4 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww5 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww6 :: [Web.Bower.PackageMeta.Internal.PackageName])
                   (ww7 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Text.Internal.Text)])
                   (ww8 :: Data.Semigroup.Internal.Any)
                   (ww9 :: [Web.Bower.PackageMeta.Internal.PackageName]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Web.Bower.PackageMeta.Internal.$fOrdPackageName
                        ww
                        ww5 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$ccompare
                             @ Web.Bower.PackageMeta.Internal.PackageName
                             Web.Bower.PackageMeta.Internal.$fOrdPackageName
                             ww1
                             ww6 of wild1 {
                        GHC.Types.LT -> GHC.Types.LT
                        GHC.Types.EQ
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                                     Data.Text.Internal.Text)
                                  Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$s$fOrd(,)
                                  ww2
                                  ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case ww3 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild3 {
                                  GHC.Types.False
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False
                                       -> GHC.Classes.$fOrd[]_$ccompare
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                            ww4
                                            ww9
                                       GHC.Types.True -> GHC.Types.LT }
                                  GHC.Types.True
                                  -> case ww8 `cast` (Data.Semigroup.Internal.N:Any[0]) of wild4 {
                                       GHC.Types.False -> GHC.Types.GT
                                       GHC.Types.True
                                       -> GHC.Classes.$fOrd[]_$ccompare
                                            @ Web.Bower.PackageMeta.Internal.PackageName
                                            Web.Bower.PackageMeta.Internal.$fOrdPackageName
                                            ww4
                                            ww9 } }
                             GHC.Types.GT -> GHC.Types.GT }
                        GHC.Types.GT -> GHC.Types.GT }
                   GHC.Types.GT -> GHC.Types.GT }) -}
ad34ed78fdbc940ecec5737fef487d27
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 7,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
9f2f45a8e213d1899c236c95177783af
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Language.PureScript.Publish.ErrorsWarnings.InternalError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Publish.ErrorsWarnings.InternalError) ->
                 case w of wild {
                   Language.PureScript.Publish.ErrorsWarnings.JSONError b1 b2
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Data.Aeson.BetterErrors.Internal.$w$cshowsPrec2
                            @ Web.Bower.PackageMeta.Internal.BowerError
                            Web.Bower.PackageMeta.Internal.$fShowBowerError
                            11#
                            b2
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError7
                             (Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                                b1
                                (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError7
                                (Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError_$cshowsPrec
                                   Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))))) }
                   Language.PureScript.Publish.ErrorsWarnings.CouldntParseGitTagDate b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError2
                             (case Data.Text.Show.$w$cshowsPrec b1 x of ww1 { (#,#) ww2 ww3 ->
                              GHC.Types.: @ GHC.Types.Char ww2 ww3 })
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError2
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           x) of ww1 { (#,#) ww2 ww3 ->
                                 GHC.Types.: @ GHC.Types.Char ww2 ww3 })) } }) -}
a03ba57b8ba8d954b9bffaa31c75a3b4
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Language.PureScript.Publish.ErrorsWarnings.OtherError
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
c3ae6a50ef0d7cdceedca8b70b56988d
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 case w of wild {
                   Language.PureScript.Publish.ErrorsWarnings.UserError b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError_$cshowsPrec
                            Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError3
                            b1
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError6
                             (g x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError6
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   Language.PureScript.Publish.ErrorsWarnings.InternalError b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec1 11# b1
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError4
                             (g x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   Language.PureScript.Publish.ErrorsWarnings.OtherError b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError2
                             (Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                                11#
                                b1
                                x)
                        1#
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError2
                                (Language.PureScript.Publish.ErrorsWarnings.$w$cshowsPrec2
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) } }) -}
b2c9be44cff6145e3bca9302ebe71bac
  $wgo ::
    [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> (# [Web.Bower.PackageMeta.Internal.PackageName],
          [Web.Bower.PackageMeta.Internal.PackageName],
          [(Web.Bower.PackageMeta.Internal.PackageName,
            Data.Text.Internal.Text)],
          Data.Semigroup.Internal.Any,
          [Web.Bower.PackageMeta.Internal.PackageName] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
b2c9be44cff6145e3bca9302ebe71bac
  $wgo1 ::
    [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
    -> Data.Semigroup.Internal.Any
    -> [Web.Bower.PackageMeta.Internal.PackageName]
    -> [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
    -> (# [Web.Bower.PackageMeta.Internal.PackageName],
          [Web.Bower.PackageMeta.Internal.PackageName],
          [(Web.Bower.PackageMeta.Internal.PackageName,
            Data.Text.Internal.Text)],
          Data.Semigroup.Internal.Any,
          [Web.Bower.PackageMeta.Internal.PackageName] #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>, Inline: [0] -}
c56bf3dc3859084fa8079cf05f4742d8
  $wrenderError ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> (# GHC.Types.Int, GHC.Types.Int,
          Text.PrettyPrint.Boxes.Content #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
38c606e351f016bd17469b8b7989a940
  $wrenderWarnings ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> (# GHC.Types.Int, GHC.Types.Int,
          Text.PrettyPrint.Boxes.Content #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0] -}
b2c9be44cff6145e3bca9302ebe71bac
  data CollectedWarnings
    = CollectedWarnings {noResolvedVersions :: [Web.Bower.PackageMeta.Internal.PackageName],
                         undeclaredDependencies :: [Web.Bower.PackageMeta.Internal.PackageName],
                         unacceptableVersions :: [(Web.Bower.PackageMeta.Internal.PackageName,
                                                   Data.Text.Internal.Text)],
                         dirtyWorkingTree :: Data.Semigroup.Internal.Any,
                         missingPaths :: [Web.Bower.PackageMeta.Internal.PackageName]}
9f2f45a8e213d1899c236c95177783af
  data InternalError
    = JSONError Language.PureScript.Publish.ErrorsWarnings.JSONSource
                (Data.Aeson.BetterErrors.Internal.ParseError
                   Language.PureScript.Docs.Types.ManifestError)
    | CouldntParseGitTagDate Data.Text.Internal.Text
9ed6edf91be7379078f587ea97b952aa
  data JSONSource = FromFile GHC.IO.FilePath | FromResolutions
a03ba57b8ba8d954b9bffaa31c75a3b4
  data OtherError
    = ProcessFailed GHC.Base.String
                    [GHC.Base.String]
                    GHC.IO.Exception.IOException
    | IOExceptionThrown GHC.IO.Exception.IOException
c3ae6a50ef0d7cdceedca8b70b56988d
  data PackageError
    = UserError Language.PureScript.Publish.ErrorsWarnings.UserError
    | InternalError Language.PureScript.Publish.ErrorsWarnings.InternalError
    | OtherError Language.PureScript.Publish.ErrorsWarnings.OtherError
e7661e9e973a95b6e75622ad011f440f
  data PackageWarning
    = NoResolvedVersion Web.Bower.PackageMeta.Internal.PackageName
    | UndeclaredDependency Web.Bower.PackageMeta.Internal.PackageName
    | UnacceptableVersion (Web.Bower.PackageMeta.Internal.PackageName,
                           Data.Text.Internal.Text)
    | DirtyWorkingTree_Warn
    | MissingPath Web.Bower.PackageMeta.Internal.PackageName
e391891ab92004f02f31f68755814996
  data RepositoryFieldError
    = RepositoryFieldMissing (GHC.Base.Maybe Data.Text.Internal.Text)
    | BadRepositoryType Data.Text.Internal.Text
    | NotOnGithub
dc9821c099e0f6cb216d2fdbdaf2fabd
  data UserError
    = PackageManifestNotFound
    | ResolutionsFileNotFound
    | CouldntDecodePackageManifest (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.ManifestError)
    | TagMustBeCheckedOut
    | AmbiguousVersions [Data.Version.Version]
    | BadRepositoryField Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError
    | NoLicenseSpecified
    | InvalidLicense
    | MissingDependencies (GHC.Base.NonEmpty
                             Web.Bower.PackageMeta.Internal.PackageName)
    | CompileError Language.PureScript.Errors.MultipleErrors
    | DirtyWorkingTree
b2c9be44cff6145e3bca9302ebe71bac
  dirtyWorkingTree ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> Data.Semigroup.Internal.Any
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
b2c9be44cff6145e3bca9302ebe71bac
  missingPaths ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Web.Bower.PackageMeta.Internal.PackageName]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
b2c9be44cff6145e3bca9302ebe71bac
  noResolvedVersions ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Web.Bower.PackageMeta.Internal.PackageName]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
824d421bd98ce18320bbdcaee9d1153a
  printError ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Publish.ErrorsWarnings.printError1
                  `cast`
                (<Language.PureScript.Publish.ErrorsWarnings.PackageError>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
462f3e452202aa74c3972a21a22b7cdd
  printError1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stderr
                   (case Language.PureScript.Publish.ErrorsWarnings.$wrenderError
                           x of ww { (#,,#) ww1 ww2 ww3 ->
                    Data.OldList.unlines
                      (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) })
                   GHC.Types.False) -}
08db8bc355b0b55129ed75e0a421138b
  printErrorToStdout ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Publish.ErrorsWarnings.printErrorToStdout1
                  `cast`
                (<Language.PureScript.Publish.ErrorsWarnings.PackageError>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
97959ae748239fa91c34b6053b0d2a70
  printErrorToStdout1 ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Language.PureScript.Publish.ErrorsWarnings.$wrenderError
                           x of ww { (#,,#) ww1 ww2 ww3 ->
                    Data.OldList.unlines
                      (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) })
                   GHC.Types.False) -}
4287250db485365e151c03eb818afffc
  printWarnings ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Publish.ErrorsWarnings.printWarnings1
                  `cast`
                (<[Language.PureScript.Publish.ErrorsWarnings.PackageWarning]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1b7fdea0123873ee7f8d1d7e49a09e88
  printWarnings1 ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stderr
                   (case Language.PureScript.Publish.ErrorsWarnings.$wrenderWarnings
                           x of ww { (#,,#) ww1 ww2 ww3 ->
                    Data.OldList.unlines
                      (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) })
                   GHC.Types.False) -}
d32612cb3dfd1bade53edbc16f93d5d0
  renderError ::
    Language.PureScript.Publish.ErrorsWarnings.PackageError
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Publish.ErrorsWarnings.PackageError) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wrenderError
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 }) -}
ec6aeb426fb75deb0227da082a93245c
  renderWarnings ::
    [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]) ->
                 case Language.PureScript.Publish.ErrorsWarnings.$wrenderWarnings
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 }) -}
b2c9be44cff6145e3bca9302ebe71bac
  unacceptableVersions ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Text.Internal.Text)]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
b2c9be44cff6145e3bca9302ebe71bac
  undeclaredDependencies ::
    Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
    -> [Web.Bower.PackageMeta.Internal.PackageName]
  RecSel Left Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings) ->
                 case ds of wild { Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
instance GHC.Classes.Eq [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings
instance GHC.Base.Monoid [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fMonoidCollectedWarnings
instance GHC.Classes.Ord [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings
instance GHC.Base.Semigroup [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fSemigroupCollectedWarnings
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.CollectedWarnings]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowCollectedWarnings
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.InternalError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowInternalError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.JSONSource]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowJSONSource
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.OtherError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowOtherError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.PackageError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.PackageWarning]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowPackageWarning
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.RepositoryFieldError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowRepositoryFieldError
instance GHC.Show.Show [Language.PureScript.Publish.ErrorsWarnings.UserError]
  = Language.PureScript.Publish.ErrorsWarnings.$fShowUserError
"SPEC/Language.PureScript.Publish.ErrorsWarnings $fEq(,) @ PackageName @ Text" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                                        Data.Text.Internal.Text)
                                                                                               (v :: GHC.Classes.Eq
                                                                                                       Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fEq(,) @ Web.Bower.PackageMeta.Internal.PackageName
                      @ Data.Text.Internal.Text
                      v
                      v1
  = Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)
"SPEC/Language.PureScript.Publish.ErrorsWarnings $fEq(,)_$c/= @ PackageName @ Text" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                Data.Text.Internal.Text)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fEq(,)_$c/= @ Web.Bower.PackageMeta.Internal.PackageName
                           @ Data.Text.Internal.Text
                           $dEq
                           $dEq1
  = Language.PureScript.Publish.ErrorsWarnings.$fEqCollectedWarnings_$s$fEq(,)_$c/=
"SPEC/Language.PureScript.Publish.ErrorsWarnings $fOrd(,) @ PackageName @ Text" [orphan] forall (v1 :: GHC.Classes.Ord
                                                                                                         Data.Text.Internal.Text)
                                                                                                (v :: GHC.Classes.Ord
                                                                                                        Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fOrd(,) @ Web.Bower.PackageMeta.Internal.PackageName
                       @ Data.Text.Internal.Text
                       v
                       v1
  = Language.PureScript.Publish.ErrorsWarnings.$fOrdCollectedWarnings_$s$fOrd(,)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

