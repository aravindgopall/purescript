
==================== FINAL INTERFACE ====================
2019-01-24 14:17:34.459205 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Interactive.Module 8043
  interface hash: 24e579641cdcc454f6ddd57132bb802a
  ABI hash: 44280dc546abaf03982cd8659476d9a6
  export-list hash: 70a4d9d8e8aeb772f099eb710fa6d4a0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6b91193d6f95e3c74259a28b4bb30bdf
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Interactive.Module.createTemporaryModule
  Language.PureScript.Interactive.Module.createTemporaryModuleForImports
  Language.PureScript.Interactive.Module.createTemporaryModuleForKind
  Language.PureScript.Interactive.Module.importDecl
  Language.PureScript.Interactive.Module.indexFile
  Language.PureScript.Interactive.Module.internalSpan
  Language.PureScript.Interactive.Module.loadAllModules
  Language.PureScript.Interactive.Module.loadModule
  Language.PureScript.Interactive.Module.modulesDir
  Language.PureScript.Interactive.Module.supportModuleIsDefined
  Language.PureScript.Interactive.Module.supportModuleName
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Externs
                     Language.PureScript.Interactive.Types Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript System.IO.UTF8
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 stringsearch-0.3.6.6
                      syb-0.7 tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 transformers-base-0.4.5.2 unix-2.7.2.2
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  directory-1.3.1.5:System.Directory bc76216f25ffcaf1c91b529f41ea3bf7
import  -/  directory-1.3.1.5:System.Directory.Internal.Common 88eeec2dd4e3d7d63bc24c2d657e6981
import  -/  filepath-1.4.2:System.FilePath a538d436328dd004b88f7d29a8b244c0
import  -/  filepath-1.4.2:System.FilePath.Posix c021b7a40cfcdd9b08724b5bb7566b59
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  App ae4e12e545757da5fb62189548835120
  Declaration e92f6ee78a22c0eadc3566d7d1f48d5b
  Expr e92f6ee78a22c0eadc3566d7d1f48d5b
  Implicit 3dec7010cde86de5e211cd1c4e2e7a9d
  ImportDeclaration b98a8b3e9f19a9a91825a99d72954601
  MkUnguarded d9deae30ea78016a4bdb453d9978bfa3
  Module 305128e30e200d34d712365aa2d509df
  Module 3342e00ee072addfd009ee61e87fb865
  TypeDeclaration 28394461dbd073cca9cdbd263dbb4335
  TypeDeclarationData 3e894c7cbf790244173310e6e620d669
  TypeSynonymDeclaration 1cfe9af195a40456074b96ff0ca4519c
  ValueDecl 97b38919d86cd9182cb8d86b6f4ae734
  Var 5fd1e80d993ab2f76a4e002bbbfc9990
  getModuleName 7aa2ed3fa39338f5edb2f1938e29c924
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
  internalModuleSourceSpan f13de72620ea3980769d3252f1949a4a
import  -/  Language.PureScript.Environment 467b25d81b890e1aaabe28d0f09d192d
  Public 599cf7bfef97fea0107da5ef3bf1cbf8
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  defaultPPEOptions 745195dd42b1496c9a7f7aafb0bc8f92
  ppeRelativeDirectory e4d7a637be529184ef49fa954b2afc7b
  prettyPrintMultipleErrors 4a620ac5870775a2503b24ddb7e2c4dd
import  -/  Language.PureScript.Interactive.Types 4e19f70dd31c7d7b6ef50a08ad8425bf
  exports: 1b53f4922e79c9de65e5100c6fc4ac8b
  ImportedModule 7c1a00256946ded4523271f31684d76d
  PSCiState 876224c4cea1642e91e4ad0b6a812184
  initialInteractivePrint 5eb1f06d06b2a08b69655916b0e838e5
  psciImportedModules 25bdeac3e73ad8d16c1f9f21e6844d71
  psciInteractivePrint ff19227c389605ef5776b3ed2ffce59b
  psciLetBindings a1d865b43424ff6cd93e21313f9fa73b
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  Ident 71f167265716f619863a793fa311e198
  ModuleName e77bf9e056798332a9668212060e8e06
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  ProperName f69d3801241fcb4773f1284cd28f2dee
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  moduleNameFromString 58dbc4d6b97c8eb6012ccda72d203acf
import  -/  Language.PureScript.Parser.Declarations 4331277871d8b757c9139b8595a399c8
  parseModulesFromFiles f849ead8a3b408b8a391e7de4f708aa4
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  SourceType 0ac818517c14fedd280ef5885ae0cdc3
  srcTypeApp 12cd55eb1b1b79c16fa2d346fb7f9cdb
  srcTypeConstructor bb445f2f58f3f299e4deae81f6001187
  srcTypeWildcard d5e96751593dc932fef2dc04f6b7082b
import  -/  System.IO.UTF8 1b807f4ae9bb108bad12de3c7965d740
  exports: b890695f59b7cd7dc0fa832606deb354
  readUTF8FileT c9d7b500c7ee522d2a9d4fdf08b8faca
600ea968b2c3fa8aaa92c32592639102
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Interactive.Module.$trModule3
                   Language.PureScript.Interactive.Module.$trModule1) -}
55d37d9ee3a0c06eea1c77812be5a7b1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Interactive.Module.$trModule2) -}
a845d23d76b94e7ea1a53500ce144f4f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Interactive.Module"#) -}
74b93605ddf9b52e5747d5d1849ff5af
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Interactive.Module.$trModule4) -}
6a2ddff3e500d8ff62ee982e64d717ce
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
0ff2ecbac89c44fae1e34772d711b285
  $wcreateTemporaryModule ::
    GHC.Types.Bool
    -> Language.PureScript.Interactive.Types.PSCiState
    -> Language.PureScript.AST.Declarations.Expr
    -> (# Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment],
          Language.PureScript.Names.ModuleName,
          [Language.PureScript.AST.Declarations.Declaration],
          GHC.Base.Maybe
            [Language.PureScript.AST.Declarations.DeclarationRef] #)
  {- Arity: 3,
     Strictness: <L,1*U><L,U(1*U,1*U,A,U(1*U,1*U),A,A)><L,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Bool)
                   (w1 :: Language.PureScript.Interactive.Types.PSCiState)
                   (w2 :: Language.PureScript.AST.Declarations.Expr) ->
                 (# Language.PureScript.Interactive.Module.internalSpan,
                    GHC.Types.[] @ Language.PureScript.Comments.Comment,
                    Language.PureScript.Interactive.Module.createTemporaryModule25
                      `cast`
                    (Sym (Language.PureScript.Names.N:ModuleName[0])),
                    let {
                      z :: [Language.PureScript.AST.Declarations.Declaration]
                      = case w1 of wild { Language.PureScript.Interactive.Types.PSCiState ds1 x ds2 ds3 ds4 ds5 ->
                        GHC.Base.++
                          @ Language.PureScript.AST.Declarations.Declaration
                          x
                          (case w of wild1 {
                             GHC.Types.False
                             -> GHC.Types.:
                                  @ Language.PureScript.AST.Declarations.Declaration
                                  (Language.PureScript.AST.Declarations.ValueDeclaration
                                     Language.PureScript.Interactive.Module.createTemporaryModule24
                                     Language.PureScript.Interactive.Module.createTemporaryModule9
                                     Language.PureScript.Environment.Public
                                     (GHC.Types.[] @ Language.PureScript.AST.Binders.Binder)
                                     (GHC.Types.:
                                        @ Language.PureScript.AST.Declarations.GuardedExpr
                                        (Language.PureScript.AST.Declarations.GuardedExpr
                                           (GHC.Types.[]
                                              @ Language.PureScript.AST.Declarations.Guard)
                                           w2)
                                        (GHC.Types.[]
                                           @ Language.PureScript.AST.Declarations.GuardedExpr)))
                                  (GHC.Types.[] @ Language.PureScript.AST.Declarations.Declaration)
                             GHC.Types.True
                             -> GHC.Types.:
                                  @ Language.PureScript.AST.Declarations.Declaration
                                  (Language.PureScript.AST.Declarations.ValueDeclaration
                                     Language.PureScript.Interactive.Module.createTemporaryModule24
                                     Language.PureScript.Interactive.Module.createTemporaryModule9
                                     Language.PureScript.Environment.Public
                                     (GHC.Types.[] @ Language.PureScript.AST.Binders.Binder)
                                     (GHC.Types.:
                                        @ Language.PureScript.AST.Declarations.GuardedExpr
                                        (Language.PureScript.AST.Declarations.GuardedExpr
                                           (GHC.Types.[]
                                              @ Language.PureScript.AST.Declarations.Guard)
                                           w2)
                                        (GHC.Types.[]
                                           @ Language.PureScript.AST.Declarations.GuardedExpr)))
                                  (GHC.Types.:
                                     @ Language.PureScript.AST.Declarations.Declaration
                                     Language.PureScript.Interactive.Module.createTemporaryModule19
                                     (GHC.Types.:
                                        @ Language.PureScript.AST.Declarations.Declaration
                                        (Language.PureScript.AST.Declarations.ValueDeclaration
                                           Language.PureScript.Interactive.Module.createTemporaryModule24
                                           Language.PureScript.Interactive.Module.createTemporaryModule16
                                           Language.PureScript.Environment.Public
                                           (GHC.Types.[] @ Language.PureScript.AST.Binders.Binder)
                                           (GHC.Types.:
                                              @ Language.PureScript.AST.Declarations.GuardedExpr
                                              (Language.PureScript.AST.Declarations.GuardedExpr
                                                 (GHC.Types.[]
                                                    @ Language.PureScript.AST.Declarations.Guard)
                                                 (Language.PureScript.AST.Declarations.App
                                                    (Language.PureScript.AST.Declarations.Var
                                                       Language.PureScript.Interactive.Module.internalSpan
                                                       (Language.PureScript.Names.Qualified
                                                          @ Language.PureScript.Names.Ident
                                                          Language.PureScript.Interactive.Module.createTemporaryModule12
                                                          (case ds3 of wild2 { (,) ds7 y -> y })))
                                                    Language.PureScript.Interactive.Module.createTemporaryModule7))
                                              (GHC.Types.[]
                                                 @ Language.PureScript.AST.Declarations.GuardedExpr)))
                                        (GHC.Types.[]
                                           @ Language.PureScript.AST.Declarations.Declaration))) }) }
                    } in
                    letrec {
                      go :: [(Language.PureScript.Names.ModuleName,
                              Language.PureScript.AST.Declarations.ImportDeclarationType,
                              GHC.Base.Maybe Language.PureScript.Names.ModuleName)]
                            -> [Language.PureScript.AST.Declarations.Declaration]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds :: [(Language.PureScript.Names.ModuleName,
                                   Language.PureScript.AST.Declarations.ImportDeclarationType,
                                   GHC.Base.Maybe Language.PureScript.Names.ModuleName)]) ->
                        case ds of wild {
                          [] -> z
                          : y ys
                          -> GHC.Types.:
                               @ Language.PureScript.AST.Declarations.Declaration
                               (case y of wild1 { (,,) mn declType asQ ->
                                Language.PureScript.AST.Declarations.ImportDeclaration
                                  Language.PureScript.Interactive.Module.createTemporaryModule24
                                  mn
                                  declType
                                  asQ })
                               (go ys) }
                    } in
                    let {
                      $sgo :: Language.PureScript.Names.ModuleName
                              -> Language.PureScript.AST.Declarations.ImportDeclarationType
                              -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
                              -> [(Language.PureScript.Names.ModuleName,
                                   Language.PureScript.AST.Declarations.ImportDeclarationType,
                                   GHC.Base.Maybe Language.PureScript.Names.ModuleName)]
                              -> [Language.PureScript.AST.Declarations.Declaration]
                        {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U> -}
                      = \ (sc :: Language.PureScript.Names.ModuleName)
                          (sc1 :: Language.PureScript.AST.Declarations.ImportDeclarationType)
                          (sc2 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                          (sc3 :: [(Language.PureScript.Names.ModuleName,
                                    Language.PureScript.AST.Declarations.ImportDeclarationType,
                                    GHC.Base.Maybe Language.PureScript.Names.ModuleName)]) ->
                        GHC.Types.:
                          @ Language.PureScript.AST.Declarations.Declaration
                          (Language.PureScript.AST.Declarations.ImportDeclaration
                             Language.PureScript.Interactive.Module.createTemporaryModule24
                             sc
                             sc1
                             sc2)
                          (go sc3)
                    } in
                    $sgo
                      Language.PureScript.Interactive.Module.createTemporaryModule5
                        `cast`
                      (Sym (Language.PureScript.Names.N:ModuleName[0]))
                      Language.PureScript.AST.Declarations.Implicit
                      Language.PureScript.Interactive.Module.createTemporaryModule1
                      (GHC.Types.:
                         @ (Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                         (case w1 of wild { Language.PureScript.Interactive.Types.PSCiState ds1 ds2 ds3 x ds4 ds5 ->
                          case x of wild1 { (,) x1 ds7 -> x1 } },
                          Language.PureScript.AST.Declarations.Implicit,
                          Language.PureScript.Interactive.Module.createTemporaryModule12)
                         (case w1 of wild { Language.PureScript.Interactive.Types.PSCiState x ds1 ds2 ds3 ds4 ds5 ->
                          x })),
                    GHC.Base.Nothing
                      @ [Language.PureScript.AST.Declarations.DeclarationRef] #)) -}
9f2d025790ab0f5a83a3c06ee2b5efa0
  createTemporaryModule ::
    GHC.Types.Bool
    -> Language.PureScript.Interactive.Types.PSCiState
    -> Language.PureScript.AST.Declarations.Expr
    -> Language.PureScript.AST.Declarations.Module
  {- Arity: 3, Strictness: <L,1*U><L,U(U,U,A,U(U,U),A,A)><L,U>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Bool)
                   (w1 :: Language.PureScript.Interactive.Types.PSCiState)
                   (w2 :: Language.PureScript.AST.Declarations.Expr) ->
                 case Language.PureScript.Interactive.Module.$wcreateTemporaryModule
                        w
                        w1
                        w2 of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.AST.Declarations.Module
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
2dfd4d29e86d0823fb5c59e34ecd8a83
  createTemporaryModule1 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Interactive.Module.createTemporaryModule2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
0342daaa9216114bebb48f63a3e4bb98
  createTemporaryModule10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModule11) -}
1081768723127663a36a309113631d0e
  createTemporaryModule11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
cd106779e259ffcbf3b13975dbdb41f4
  createTemporaryModule12 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Interactive.Module.createTemporaryModule13
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
6dbb52ce5a7eab802b4f3662cd895314
  createTemporaryModule13 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Interactive.Module.createTemporaryModule14
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
29ff3ab3393d496c8555fe0a28a70aa4
  createTemporaryModule14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModule15) -}
45e21ad64267a6aa02f34e4ce219dd8b
  createTemporaryModule15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("$Support"#) -}
22e41c3e9f498c0d74028c4b04ed84fd
  createTemporaryModule16 :: Language.PureScript.Names.Ident
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Names.Ident
                   Language.PureScript.Interactive.Module.createTemporaryModule17) -}
bae1e8f56182919312f874f6aebf18ad
  createTemporaryModule17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModule18) -}
d4bc2bf4320fb81d406cbfc0ecdec618
  createTemporaryModule18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("$main"#) -}
c60769edf7dea8532f2b5b677500e84c
  createTemporaryModule19 ::
    Language.PureScript.AST.Declarations.Declaration
  {- Strictness: m4,
     Unfolding: (Language.PureScript.AST.Declarations.TypeDeclaration
                   Language.PureScript.Interactive.Module.createTemporaryModule24
                   Language.PureScript.Interactive.Module.createTemporaryModule16
                   Language.PureScript.Interactive.Module.createTemporaryModule20) -}
77c676391a64654d16aef40461ab3ee8
  createTemporaryModule2 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Interactive.Module.createTemporaryModule3
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
3df69ecf77b7f3a1bd0455c2d28c76e5
  createTemporaryModule20 :: Language.PureScript.Types.SourceType
  {- Strictness: m7,
     Unfolding: (Language.PureScript.Types.TypeApp
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Interactive.Module.createTemporaryModule21
                   Language.PureScript.Types.srcTypeWildcard) -}
675666d4e7c28b090c2cb1cbc593ecf9
  createTemporaryModule21 ::
    Language.PureScript.Types.Type
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Interactive.Module.createTemporaryModule22) -}
ebc5b8b2bb897c4d84f67dc885f6232d
  createTemporaryModule22 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Interactive.Module.createTemporaryModule1
                   Language.PureScript.Interactive.Module.createTemporaryModule23
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
c92ddaabdf56b06a250b9d1080199f87
  createTemporaryModule23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModule6) -}
32e6100efcd419e19abb3df90c7254dc
  createTemporaryModule24 ::
    (Language.PureScript.AST.SourcePos.SourceSpan,
     [Language.PureScript.Comments.Comment])
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Interactive.Module.internalSpan,
                  GHC.Types.[] @ Language.PureScript.Comments.Comment)) -}
268b513e308dd915e96a38db4d46301c
  createTemporaryModule25 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Interactive.Module.createTemporaryModule26
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
b44aae2e9fbd669a509d3003012f4a9a
  createTemporaryModule26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModule27) -}
3178bc32b7f0c45ac1d5c21f54c20698
  createTemporaryModule27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("$PSCI"#) -}
b65441cfd73113898db3376b365e187a
  createTemporaryModule3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModule4) -}
0f843f60d9a6a82647ab62d9fee06f88
  createTemporaryModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("$Effect"#) -}
3bbc7dd54579ab49c4a8b301cb2fb873
  createTemporaryModule5 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        Language.PureScript.Interactive.Module.createTemporaryModule6 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Language.PureScript.Names.$wsplitProperNames
                   @ 'Language.PureScript.Names.Namespace
                   ww1
                   ww2
                   ww3 }) -}
5a52ad94f4f8220464fab7defd47a333
  createTemporaryModule6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Effect"#) -}
9fff8ecc9f7f8a53fccebc6abb12076f
  createTemporaryModule7 :: Language.PureScript.AST.Declarations.Expr
  {- Strictness: m10,
     Unfolding: (Language.PureScript.AST.Declarations.Var
                   Language.PureScript.Interactive.Module.internalSpan
                   Language.PureScript.Interactive.Module.createTemporaryModule8) -}
67e974c1a8c772c98c8e64154b749b1a
  createTemporaryModule8 ::
    Language.PureScript.Names.Qualified Language.PureScript.Names.Ident
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ Language.PureScript.Names.Ident
                   (GHC.Base.Nothing @ Language.PureScript.Names.ModuleName)
                   Language.PureScript.Interactive.Module.createTemporaryModule9) -}
b35afa9a563025900840f2449c1852bb
  createTemporaryModule9 :: Language.PureScript.Names.Ident
  {- Strictness: m1,
     Unfolding: (Language.PureScript.Names.Ident
                   Language.PureScript.Interactive.Module.createTemporaryModule10) -}
5da729d0aac61e1dd2840bfe2bb30268
  createTemporaryModuleForImports ::
    Language.PureScript.Interactive.Types.PSCiState
    -> Language.PureScript.AST.Declarations.Module
  {- Arity: 1, Strictness: <L,1*U(1*U,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (st :: Language.PureScript.Interactive.Types.PSCiState) ->
                 Language.PureScript.AST.Declarations.Module
                   Language.PureScript.Interactive.Module.internalSpan
                   (GHC.Types.[] @ Language.PureScript.Comments.Comment)
                   Language.PureScript.Interactive.Module.createTemporaryModule25
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))
                   (case st of wild { Language.PureScript.Interactive.Types.PSCiState x ds1 ds2 ds3 ds4 ds5 ->
                    GHC.Base.build
                      @ Language.PureScript.AST.Declarations.Declaration
                      (\ @ b1
                         (c :: Language.PureScript.AST.Declarations.Declaration
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ (Language.PureScript.Names.ModuleName,
                            Language.PureScript.AST.Declarations.ImportDeclarationType,
                            GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                         @ b1
                         (GHC.Base.mapFB
                            @ Language.PureScript.AST.Declarations.Declaration
                            @ b1
                            @ (Language.PureScript.Names.ModuleName,
                               Language.PureScript.AST.Declarations.ImportDeclarationType,
                               GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                            c
                            Language.PureScript.Interactive.Module.importDecl)
                         n
                         x) })
                   (GHC.Base.Nothing
                      @ [Language.PureScript.AST.Declarations.DeclarationRef])) -}
d688879c19f90d3a9aa0c4f4cff0f2b0
  createTemporaryModuleForKind ::
    Language.PureScript.Interactive.Types.PSCiState
    -> Language.PureScript.Types.SourceType
    -> Language.PureScript.AST.Declarations.Module
  {- Arity: 2, Strictness: <L,1*U(1*U,1*U,A,A,A,A)><L,U>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Interactive.Types.PSCiState)
                   (w1 :: Language.PureScript.Types.SourceType) ->
                 Language.PureScript.AST.Declarations.Module
                   Language.PureScript.Interactive.Module.internalSpan
                   (GHC.Types.[] @ Language.PureScript.Comments.Comment)
                   Language.PureScript.Interactive.Module.createTemporaryModule25
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))
                   (case w of wild { Language.PureScript.Interactive.Types.PSCiState x ds1 ds2 ds3 ds4 ds5 ->
                    let {
                      z :: [Language.PureScript.AST.Declarations.Declaration]
                      = GHC.Base.++
                          @ Language.PureScript.AST.Declarations.Declaration
                          ds1
                          (GHC.Types.:
                             @ Language.PureScript.AST.Declarations.Declaration
                             (Language.PureScript.AST.Declarations.TypeSynonymDeclaration
                                Language.PureScript.Interactive.Module.createTemporaryModule24
                                Language.PureScript.Interactive.Module.createTemporaryModuleForKind1
                                  `cast`
                                (Sym (Language.PureScript.Names.N:ProperName[0]
                                          <'Language.PureScript.Names.TypeName>_P))
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))
                                w1)
                             (GHC.Types.[] @ Language.PureScript.AST.Declarations.Declaration))
                    } in
                    letrec {
                      go :: [(Language.PureScript.Names.ModuleName,
                              Language.PureScript.AST.Declarations.ImportDeclarationType,
                              GHC.Base.Maybe Language.PureScript.Names.ModuleName)]
                            -> [Language.PureScript.AST.Declarations.Declaration]
                        {- Arity: 1, Strictness: <S,U> -}
                      = \ (ds :: [(Language.PureScript.Names.ModuleName,
                                   Language.PureScript.AST.Declarations.ImportDeclarationType,
                                   GHC.Base.Maybe Language.PureScript.Names.ModuleName)]) ->
                        case ds of wild1 {
                          [] -> z
                          : y ys
                          -> GHC.Types.:
                               @ Language.PureScript.AST.Declarations.Declaration
                               (case y of wild2 { (,,) mn declType asQ ->
                                Language.PureScript.AST.Declarations.ImportDeclaration
                                  Language.PureScript.Interactive.Module.createTemporaryModule24
                                  mn
                                  declType
                                  asQ })
                               (go ys) }
                    } in
                    go x })
                   (GHC.Base.Nothing
                      @ [Language.PureScript.AST.Declarations.DeclarationRef])) -}
15c3527c0e1b4233d3b549e40cc959f9
  createTemporaryModuleForKind1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Interactive.Module.createTemporaryModuleForKind2) -}
b11c12fe900434243ce910f836fb7a2f
  createTemporaryModuleForKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("IT"#) -}
e9a392c8912c2278ee6afc1df47c64fa
  importDecl ::
    Language.PureScript.Interactive.Types.ImportedModule
    -> Language.PureScript.AST.Declarations.Declaration
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Language.PureScript.Names.ModuleName,
                           Language.PureScript.AST.Declarations.ImportDeclarationType,
                           GHC.Base.Maybe Language.PureScript.Names.ModuleName)) ->
                 case ds of wild { (,,) mn declType asQ ->
                 Language.PureScript.AST.Declarations.ImportDeclaration
                   Language.PureScript.Interactive.Module.createTemporaryModule24
                   mn
                   declType
                   asQ }) -}
00961305a85f3e6d95101cf0febe5982
  indexFile :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Language.PureScript.Interactive.Module.indexFile4
                   Language.PureScript.Interactive.Module.indexFile1) -}
2fd2e5c5a94811b84f8832c332db35e8
  indexFile1 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   System.FilePath.Posix.pathSeparator
                   Language.PureScript.Interactive.Module.indexFile2) -}
75b087e41202b2c0a9f67035d1951d06
  indexFile2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Interactive.Module.indexFile3) -}
668f82b926915b45aaf2b84e8e0c0a70
  indexFile3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("index.js"#) -}
f5b298b28d3d0f9c9ff01a50462f1310
  indexFile4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (".psci_modules"#) -}
fe929f2d2a4d426ec417ae68af470945
  internalSpan :: Language.PureScript.AST.SourcePos.SourceSpan
  {- Strictness: m,
     Unfolding: (Language.PureScript.AST.SourcePos.SourceSpan
                   Language.PureScript.Interactive.Module.internalSpan1
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan1
                   Language.PureScript.AST.SourcePos.$bNullSourceSpan1) -}
e580bb6268497c4cbe7b8cca1cc3af78
  internalSpan1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Interactive.Module.internalSpan2) -}
5b4f30a0fa3857356fb5c35a51fc4ffc
  internalSpan2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<internal>"#) -}
e9289808e129e92f33ab37a013812964
  loadAllModules ::
    [GHC.IO.FilePath]
    -> GHC.Types.IO
         (Data.Either.Either
            Language.PureScript.Errors.MultipleErrors
            [(GHC.IO.FilePath, Language.PureScript.AST.Declarations.Module)])
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Interactive.Module.loadAllModules1
                  `cast`
                (<[GHC.IO.FilePath]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  Language.PureScript.Errors.MultipleErrors
                                  [(GHC.IO.FilePath,
                                    Language.PureScript.AST.Declarations.Module)]>_R)) -}
6d024b3e069fb625c6fef9684015b63f
  loadAllModules1 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Language.PureScript.Errors.MultipleErrors
            [(GHC.IO.FilePath, Language.PureScript.AST.Declarations.Module)] #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (files :: [GHC.IO.FilePath])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.Error.modifyIOError1
                        @ GHC.IO.FilePath
                        System.Directory.Internal.Common.getCurrentDirectory6
                        System.Directory.Internal.Common.getCurrentDirectory2
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case Language.PureScript.Interactive.Module.loadAllModules2
                        files
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    Language.PureScript.Parser.Declarations.parseModulesFromFiles
                      @ (Data.Either.Either Language.PureScript.Errors.MultipleErrors)
                      @ GHC.IO.FilePath
                      (Control.Monad.Error.Class.$fMonadErroreEither
                         @ Language.PureScript.Errors.MultipleErrors)
                      (System.FilePath.Posix.makeRelative ipv1)
                      ipv3 #) } }) -}
8fca906ffc7980e74eac358787819372
  loadAllModules2 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(GHC.IO.FilePath, Data.Text.Internal.Text)] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
79cbead1da4f782da16846870165a3af
  loadModule ::
    GHC.IO.FilePath
    -> GHC.Types.IO
         (Data.Either.Either
            GHC.Base.String [Language.PureScript.AST.Declarations.Module])
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Interactive.Module.loadModule1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  GHC.Base.String
                                  [Language.PureScript.AST.Declarations.Module]>_R)) -}
b7fbd18b8ba2fb0238386327ab4912ac
  loadModule1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Base.String [Language.PureScript.AST.Declarations.Module] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (filename :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.IO.Error.modifyIOError1
                        @ GHC.IO.FilePath
                        System.Directory.Internal.Common.getCurrentDirectory6
                        System.Directory.Internal.Common.getCurrentDirectory2
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case System.IO.UTF8.readUTF8FileT1
                        filename
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    case Language.PureScript.Parser.Declarations.parseModulesFromFiles
                           @ (Data.Either.Either Language.PureScript.Errors.MultipleErrors)
                           @ GHC.IO.FilePath
                           (Control.Monad.Error.Class.$fMonadErroreEither
                              @ Language.PureScript.Errors.MultipleErrors)
                           (GHC.Base.id @ GHC.IO.FilePath)
                           (GHC.Types.:
                              @ (GHC.IO.FilePath, Data.Text.Internal.Text)
                              (filename, ipv3)
                              (GHC.Types.[]
                                 @ (GHC.IO.FilePath, Data.Text.Internal.Text))) of wild {
                      Data.Either.Left x
                      -> Data.Either.Left
                           @ GHC.Base.String
                           @ [Language.PureScript.AST.Declarations.Module]
                           (Data.OldList.unlines
                              (GHC.Base.map
                                 @ Text.PrettyPrint.Boxes.Box
                                 @ [GHC.Types.Char]
                                 Language.PureScript.Errors.renderBox
                                 (Language.PureScript.Errors.prettyPrintMultipleErrorsWith
                                    (Language.PureScript.Errors.PPEOptions
                                       Language.PureScript.Errors.defaultPPEOptions1
                                       GHC.Types.False
                                       Language.PureScript.Errors.Error
                                       GHC.Types.True
                                       ipv1)
                                    Language.PureScript.Errors.prettyPrintMultipleErrors1
                                    Language.PureScript.Errors.$fShowLevel4
                                    x)))
                      Data.Either.Right y
                      -> Data.Either.Right
                           @ GHC.Base.String
                           @ [Language.PureScript.AST.Declarations.Module]
                           (GHC.Base.map
                              @ (GHC.IO.FilePath, Language.PureScript.AST.Declarations.Module)
                              @ Language.PureScript.AST.Declarations.Module
                              (Data.Tuple.snd
                                 @ GHC.IO.FilePath
                                 @ Language.PureScript.AST.Declarations.Module)
                              y) } #) } }) -}
8b97b96cf1ecadf3841809bbd7f52a20
  modulesDir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Language.PureScript.Interactive.Module.indexFile4
                   Language.PureScript.Interactive.Module.modulesDir1) -}
fc64588c9b0d603fa7d7834cbdeaad36
  modulesDir1 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   System.FilePath.Posix.pathSeparator
                   Language.PureScript.Interactive.Module.modulesDir2) -}
efa49f29c6332b80385e812da81aa84f
  modulesDir2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Interactive.Module.modulesDir3) -}
b1c1c11c86393e902488b01314fd8d2a
  modulesDir3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("node_modules"#) -}
0f3913966d03ff2792f09df42d7fc283
  supportModuleIsDefined ::
    [Language.PureScript.AST.Declarations.Module] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Interactive.Module.supportModuleIsDefined_go
                  `cast`
                (<[Language.PureScript.AST.Declarations.Module]>_R
                 ->_R Data.Semigroup.Internal.N:Any[0]) -}
6b7097185e380bf18c45c0ac38ff16bb
  supportModuleIsDefined_go ::
    [Language.PureScript.AST.Declarations.Module]
    -> Data.Semigroup.Internal.Any
  {- Arity: 1, Strictness: <S,1*U> -}
fce276f9ba1a9a99afca27f5dccb4511
  supportModuleName :: Language.PureScript.Names.ModuleName
  {- Unfolding: InlineRule (0, True, True)
                Language.PureScript.Interactive.Types.initialInteractivePrint4
                  `cast`
                (Sym (Language.PureScript.Names.N:ModuleName[0])) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

