
==================== FINAL INTERFACE ====================
2019-01-24 14:17:46.310581 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Usage 8043
  interface hash: 63bfa54238381a2e65fa31b8b7f5fc93
  ABI hash: 7e010f5175c3fef09e362339d0ce65db
  export-list hash: f3effc9102c154126d90e0f8828b0c5c
  orphan hash: 3bfa79b3b56d1e028428b9aa64f4d532
  flag hash: 5ca2b6297314332f988f1cde11325eb2
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Ide.Usage.applySearch
  Language.PureScript.Ide.Usage.directDependants
  Language.PureScript.Ide.Usage.eligibleModules
  Language.PureScript.Ide.Usage.findReexportingModules
  Language.PureScript.Ide.Usage.findUsages
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Docs.Convert.Single
                     Language.PureScript.Docs.RenderedCode
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.RenderType
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Errors
                     Language.PureScript.Errors.JSON Language.PureScript.Externs
                     Language.PureScript.Ide.Error Language.PureScript.Ide.Externs
                     Language.PureScript.Ide.Logging Language.PureScript.Ide.Reexports
                     Language.PureScript.Ide.SourceFile Language.PureScript.Ide.State
                     Language.PureScript.Ide.Types Language.PureScript.Ide.Util
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Linter Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript System.IO.UTF8
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      auto-update-0.1.4 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 clock-0.7.2 colour-2.3.4 conduit-1.3.0.3
                      conduit-extra-1.3.0 containers-0.5.11.0 data-ordlist-0.4.7.0
                      deepseq-1.4.3.0 directory-1.3.1.5 dlist-0.8.0.4 easy-file-0.2.2
                      exceptions-0.10.0 fast-logger-2.4.11 filepath-1.4.2
                      ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 monad-logger-0.3.28.5 monad-loops-0.4.3
                      mtl-2.2.2 old-locale-1.0.0.7 old-time-1.1.0.3 parallel-3.2.1.1
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 resourcet-1.2.1
                      safe-0.3.17 scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3
                      stm-2.4.5.0 stm-chans-3.0.0.4 stringsearch-0.3.6.6 syb-0.7
                      tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 transformers-base-0.4.5.2 unix-2.7.2.2
                      unix-time-0.3.8 unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: unix-time-0.3.8:Data.UnixTime.Diff
         syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         clock-0.7.2:System.Clock
                         conduit-1.3.0.3:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.3:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Reexports
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Monad.IO.Class 96109c36cb3c919872278540487fa39e
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List.NonEmpty 595ee3baddcadebc4831ea7541427984
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Set 7d3c64a641be4cacbcd8119445bab919
import  -/  containers-0.5.11.0:Data.Set.Internal 93fa3ef95853aa2a7aadf32d693bd451
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  microlens-mtl-0.1.11.1:Lens.Micro.Mtl 0b8886821fc976acf46035b23c9705b6
import  -/  microlens-platform-0.3.10:Lens.Micro.Platform 0a8b1a3c754e3254d224cc9602b42f64
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
import  -/  Language.PureScript.AST.Binders 482af52ec934a93b1ca6ec424fbe30f2
  ConstructorBinder 82c410a4d9e21c325ba3e1527c50daff
  OpBinder a4e859ef3c8b2681b04a2dfae6eb0fb8
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  Constructor ea2b7d92995197a177f6abf42269c377
  DeclarationRef 1ef988d2f8db98f35f578bde9282f468
  Explicit 0e7d786f7f26f8b40dc941854a989937
  Hiding 14af127ef57cd3e7808a207407b44158
  Implicit 3dec7010cde86de5e211cd1c4e2e7a9d
  ImportDeclaration b98a8b3e9f19a9a91825a99d72954601
  KindRef fdcf7f61e078f63d583e2e92289fb303
  Module 3342e00ee072addfd009ee61e87fb865
  Op bbe2a0a58ceeace944ccf429f680f6bc
  TypeClassRef 0dfae6fa12be94e312c419132246a1f3
  TypeOpRef cd0b4bf0e37e512f28be11229ab2e497
  TypeRef 7b2aa9fe81ad40f64c659855da835def
  ValueOpRef 08efa0d335ba46b69b381a343c739614
  ValueRef 78dee2d86cdf935e8811ecdd18c169d3
  Var 5fd1e80d993ab2f76a4e002bbbfc9990
  getModuleDeclarations 77bbf79d27e1a58f6883cbe40cb44e01
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.AST.Traversals f5adaf844c5e9d0f0678a8b574a32aa6
  LocalIdent bb84b4c96bd109d06b41acf4d65ddce6
  everythingWithScope 569a5e5bf677f3eba029adc5853b1579
import  -/  Language.PureScript.Ide.State 6596e6b1b04a4a1b7b69c0256b5b2e95
  exports: 4a5f4f202d7d05e1561b603fd2daadc9
  getAllModules 8127e3ed0115c3eb5d5fb04aec2ad4e2
  getFileState 26891732e23e221f5df596cfa1dd1c42
import  -/  Language.PureScript.Ide.Types 4bb81e9de3788f7f63a68a23e190eb73
  exports: e5ee4d37ef25d4dfedd36ea1d435a17a
  Ide daf7e11ebbb1a4f28e92151bdfd877f7
  IdeDeclDataConstructor 8fce6bf53fa94a19e0d601b21857c083
  IdeDeclKind eadccdfcdc773a4889209905550631de
  IdeDeclType bf6a01d2f64dd736d0c0838c335e1f4d
  IdeDeclTypeClass daec5de1fc0811383493f72c17859b3c
  IdeDeclTypeOperator 942a106238947e7cdd45b0c72cd2559c
  IdeDeclTypeSynonym f16924e305412463e9d0339a34821aa8
  IdeDeclValue cff86d395b09e6db0f9fde8980f34310
  IdeDeclValueOperator 30db1956e4e27b3074312970c743db17
  IdeDeclaration 0c91b1320f07da0ab07b77b49d64d462
  IdeDeclarationAnn b02d1e3d0d65a3bc0459005430392eb1
  ModuleMap 70319f3e75143277feb6984fb77be89b
  _IdeDeclDataConstructor 2a59d3a75e6ec43625d4ac73194fc132
  _IdeDeclValue f69c0561e04acdd8727d69b166d26993
  _IdeDeclValueOperator 719b52cf16b49b15d6375afaac01e929
  _annExportedFrom b02d1e3d0d65a3bc0459005430392eb1
  _idaAnnotation b02d1e3d0d65a3bc0459005430392eb1
  _idaDeclaration b02d1e3d0d65a3bc0459005430392eb1
  _ideDtorName 0c91b1320f07da0ab07b77b49d64d462
  _ideDtorTypeName 0c91b1320f07da0ab07b77b49d64d462
  _ideSynonymName 434cac5be7a927bb03b5196d1252e0b7
  _ideTCName 60c599d0289b3fc90de185766f47b756
  _ideTypeName 862d0466a921badc471ac4eb799b1c5c
  _ideTypeOpName 942db7ca1b475d96338060f9a58d09df
  _ideValueIdent c06af6ff55b70f882a784f9bfe7ed7d8
  _ideValueOpName cf3c14901b432d2873d0b1d8733734a7
  fsModules 2923622c53c0f0fcf77bbfd3720beec1
import  -/  Language.PureScript.Ide.Util 23feade20e7d884b8e398315c4ffa11e
  exports: b783a834cebd9a63a606ae4111317a86
  identifierFromIdeDeclaration d3020ece8f1e881771f78c7f6ed69758
  namespaceForDeclaration 118407e31332438e83d40344230582f8
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  disqualify bf1cc3b0e6c1ffc0008a6113bf8116c0
  isQualified aaa813ca766a4e34b35755fcebd13831
  runIdent f4727e6f001b3b7d933fd4e8122af572
8e16a8a2e28706f76d77eaf4a47dfad5
  $s$wsplit_$s$wpoly_go13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Language.PureScript.Names.ModuleName
    -> (# Data.Map.Internal.Map Language.PureScript.Names.ModuleName a,
          Data.Map.Internal.Map Language.PureScript.Names.ModuleName a #)
  {- Arity: 6, Strictness: <L,A><S,U><L,U><L,U><L,U><S,U> -}
f520e60ceb787e1b27774b08bf705eda
  $sinsertR_$sgo13 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
775acff8adc6f619f1353632b546365f
  $sinsert_$s$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> a
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 8,
     Strictness: <L,U><S,U><L,U><L,U><L,U><L,U><S,1*U><L,U> -}
43199cdaf7b6257958031c7784b509d6
  $sinsert_$sgo13 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
3e2ea84c490e795de97bb2b4235ef490
  $slookup1 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
e45b0441019f5deb4661d43bcb27c0c8
  $smember_$sgo1 ::
    Data.Set.Internal.Set
      Language.PureScript.AST.Traversals.ScopedIdent
    -> Language.PureScript.Names.Ident -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
e68023868ccd3d9cace615532403df1e
  $sunion ::
    Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
7bbcf5ec9e6c54a1d5c0ad5572e0aad9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Ide.Usage.$trModule3
                   Language.PureScript.Ide.Usage.$trModule1) -}
3eedd5e73b2653277444a2212075c863
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Usage.$trModule2) -}
1499a366600543a2314ef3b6dfcd5024
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Ide.Usage"#) -}
56d7900a9b30270f40d4e92e9f638f6a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Usage.$trModule4) -}
2a72d6752a5b9a3326df15d278497216
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
d2f7fcbfd38f8ce3d987665c80f34bc1
  $wapplySearch ::
    [Language.PureScript.AST.Declarations.Declaration]
    -> Language.PureScript.Ide.Usage.Search
    -> [Language.PureScript.AST.SourcePos.SourceSpan]
  {- Arity: 2, Strictness: <S,1*U><L,U(U,U)>, Inline: [0] -}
f06d324a65e407375e2fac06b00a788b
  $weligibleModules ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Ide.Types.IdeDeclaration
    -> Language.PureScript.Ide.Types.ModuleMap
         [Language.PureScript.Ide.Types.IdeDeclarationAnn]
    -> Language.PureScript.Ide.Types.ModuleMap
         Language.PureScript.AST.Declarations.Module
    -> Language.PureScript.Ide.Types.ModuleMap
         (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
  {- Arity: 4, Strictness: <S,U><L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ModuleName)
                   (ww1 :: Language.PureScript.Ide.Types.IdeDeclaration)
                   (w :: Language.PureScript.Ide.Types.ModuleMap
                           [Language.PureScript.Ide.Types.IdeDeclarationAnn])
                   (w1 :: Language.PureScript.Ide.Types.ModuleMap
                            Language.PureScript.AST.Declarations.Module) ->
                 letrec {
                   go :: [Language.PureScript.Names.ModuleName]
                         -> Language.PureScript.Ide.Types.ModuleMap
                              (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds1 :: [Language.PureScript.Names.ModuleName]) ->
                     case ds1 of wild1 {
                       []
                       -> Data.Map.Internal.Tip
                            @ Language.PureScript.Names.ModuleName
                            @ (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
                       : y ys
                       -> Language.PureScript.Ide.Usage.$sunion
                            @ (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
                            (Language.PureScript.Ide.Usage.directDependants ww1 w1 y)
                            (go ys) }
                 } in
                 Language.PureScript.Ide.Usage.$sinsert_$sgo13
                   @ (GHC.Base.NonEmpty
                        (Language.PureScript.Names.Qualified
                           Language.PureScript.Ide.Types.IdeDeclaration))
                   ww
                   ww
                   (GHC.Base.:|
                      @ (Language.PureScript.Names.Qualified
                           Language.PureScript.Ide.Types.IdeDeclaration)
                      (Language.PureScript.Names.Qualified
                         @ Language.PureScript.Ide.Types.IdeDeclaration
                         (GHC.Base.Nothing @ Language.PureScript.Names.ModuleName)
                         ww1)
                      (GHC.Types.[]
                         @ (Language.PureScript.Names.Qualified
                              Language.PureScript.Ide.Types.IdeDeclaration)))
                   (Language.PureScript.Ide.Usage.$sunion
                      @ (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
                      (Language.PureScript.Ide.Usage.directDependants ww1 w1 ww)
                      (go
                         (Language.PureScript.Ide.Usage.$wfindReexportingModules
                            ww
                            ww1
                            w)))) -}
a90fbf91bfd2a1ba1b9b7ed987114f8e
  $wfindReexportingModules ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Ide.Types.IdeDeclaration
    -> Language.PureScript.Ide.Types.ModuleMap
         [Language.PureScript.Ide.Types.IdeDeclarationAnn]
    -> [Language.PureScript.Names.ModuleName]
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
ef964353bf0b4d6228e29827f731acd8
  $wpoly_go13 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> (# Data.Map.Internal.Map Language.PureScript.Names.ModuleName a,
          Data.Map.Internal.Map Language.PureScript.Names.ModuleName a #)
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
765c5caac84ffb5af1ddbcd57df08c7a
  type Search =
    Language.PureScript.Names.Qualified
      Language.PureScript.Ide.Types.IdeDeclaration
d2cdf5a26cc9d8da32a84bed52899a44
  applySearch ::
    Language.PureScript.AST.Declarations.Module
    -> Language.PureScript.Ide.Usage.Search
    -> [Language.PureScript.AST.SourcePos.SourceSpan]
  {- Arity: 2, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)><L,U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.Declarations.Module)
                   (w1 :: Language.PureScript.Ide.Usage.Search) ->
                 case w of ww { Language.PureScript.AST.Declarations.Module ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Ide.Usage.$wapplySearch ww4 w1 }) -}
da6f9349c3539eac42b9b91d844aa2c9
  directDependants ::
    Language.PureScript.Ide.Types.IdeDeclaration
    -> Language.PureScript.Ide.Types.ModuleMap
         Language.PureScript.AST.Declarations.Module
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Ide.Types.ModuleMap
         (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U> -}
5abf1d6a91b0cbff15f8982dfddfc10f
  eligibleModules ::
    (Language.PureScript.Names.ModuleName,
     Language.PureScript.Ide.Types.IdeDeclaration)
    -> Language.PureScript.Ide.Types.ModuleMap
         [Language.PureScript.Ide.Types.IdeDeclarationAnn]
    -> Language.PureScript.Ide.Types.ModuleMap
         Language.PureScript.AST.Declarations.Module
    -> Language.PureScript.Ide.Types.ModuleMap
         (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
  {- Arity: 3, Strictness: <S(SL),1*U(U,U)><S,1*U><S,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: (Language.PureScript.Names.ModuleName,
                          Language.PureScript.Ide.Types.IdeDeclaration))
                   (w1 :: Language.PureScript.Ide.Types.ModuleMap
                            [Language.PureScript.Ide.Types.IdeDeclarationAnn])
                   (w2 :: Language.PureScript.Ide.Types.ModuleMap
                            Language.PureScript.AST.Declarations.Module) ->
                 case w of ww { (,) ww1 ww2 ->
                 Language.PureScript.Ide.Usage.$weligibleModules ww1 ww2 w1 w2 }) -}
b0e18f41fffc073eff2b8d9251180011
  findReexportingModules ::
    (Language.PureScript.Names.ModuleName,
     Language.PureScript.Ide.Types.IdeDeclaration)
    -> Language.PureScript.Ide.Types.ModuleMap
         [Language.PureScript.Ide.Types.IdeDeclarationAnn]
    -> [Language.PureScript.Names.ModuleName]
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Language.PureScript.Names.ModuleName,
                          Language.PureScript.Ide.Types.IdeDeclaration))
                   (w1 :: Language.PureScript.Ide.Types.ModuleMap
                            [Language.PureScript.Ide.Types.IdeDeclarationAnn]) ->
                 case w of ww { (,) ww1 ww2 ->
                 Language.PureScript.Ide.Usage.$wfindReexportingModules
                   ww1
                   ww2
                   w1 }) -}
42ea6715439f4ff36feb7f8778d5c56d
  findUsages ::
    (Control.Monad.IO.Class.MonadIO m,
     Language.PureScript.Ide.Types.Ide m) =>
    Language.PureScript.Ide.Types.IdeDeclaration
    -> Language.PureScript.Names.ModuleName
    -> m (Language.PureScript.Ide.Types.ModuleMap
            (GHC.Base.NonEmpty Language.PureScript.AST.SourcePos.SourceSpan))
  {- Arity: 4,
     Strictness: <S(S(LC(C(S))LLL)L),1*U(1*U(1*U(1*U(1*C1(C1(U)),A),C(U),A,A,A,A),C(C1(U)),A,A,A),A)><L,U(U(U(U(U(C(C1(U)),A),C(U),A,A,A,A),C(C1(U)),A,A,A),C(U)),U(A,U,A,A))><L,U><L,U>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   ($d(%,%) :: Language.PureScript.Ide.Types.Ide m)
                   (eta :: Language.PureScript.Ide.Types.IdeDeclaration)
                   (eta1 :: Language.PureScript.Names.ModuleName) ->
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO
                 } in
                 let {
                   $dApplicative :: GHC.Base.Applicative m
                   = GHC.Base.$p1Monad @ m $dMonad
                 } in
                 let {
                   lvl3 :: m (Data.Map.Internal.Map
                                Language.PureScript.Names.ModuleName
                                Language.PureScript.AST.Declarations.Module)
                   = GHC.Base.fmap
                       @ m
                       (GHC.Base.$p1Applicative @ m $dApplicative)
                       @ Language.PureScript.Ide.Types.IdeFileState
                       @ (Data.Map.Internal.Map
                            Language.PureScript.Names.ModuleName
                            Language.PureScript.AST.Declarations.Module)
                       Language.PureScript.Ide.Usage.findUsages2
                       (Language.PureScript.Ide.State.getFileState @ m $d(%,%))
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (Language.PureScript.Ide.Types.ModuleMap
                        [Language.PureScript.Ide.Types.IdeDeclarationAnn])
                   @ (Language.PureScript.Ide.Types.ModuleMap
                        (GHC.Base.NonEmpty Language.PureScript.AST.SourcePos.SourceSpan))
                   (Language.PureScript.Ide.State.getAllModules
                      @ m
                      $d(%,%)
                      (GHC.Base.Nothing @ Language.PureScript.Names.ModuleName))
                   (\ (ms :: Language.PureScript.Ide.Types.ModuleMap
                               [Language.PureScript.Ide.Types.IdeDeclarationAnn]) ->
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ (Data.Map.Internal.Map
                           Language.PureScript.Names.ModuleName
                           Language.PureScript.AST.Declarations.Module)
                      @ (Language.PureScript.Ide.Types.ModuleMap
                           (GHC.Base.NonEmpty Language.PureScript.AST.SourcePos.SourceSpan))
                      lvl3
                      (\ (asts :: Data.Map.Internal.Map
                                    Language.PureScript.Names.ModuleName
                                    Language.PureScript.AST.Declarations.Module) ->
                       GHC.Base.pure
                         @ m
                         $dApplicative
                         @ (Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName
                              (GHC.Base.NonEmpty Language.PureScript.AST.SourcePos.SourceSpan))
                         (Data.Map.Internal.mapMaybeWithKey
                            @ Language.PureScript.Names.ModuleName
                            @ [Language.PureScript.AST.SourcePos.SourceSpan]
                            @ (GHC.Base.NonEmpty Language.PureScript.AST.SourcePos.SourceSpan)
                            Language.PureScript.Ide.Usage.findUsages1
                            (Data.Map.Internal.mapWithKey
                               @ Language.PureScript.Names.ModuleName
                               @ (GHC.Base.NonEmpty Language.PureScript.Ide.Usage.Search)
                               @ [Language.PureScript.AST.SourcePos.SourceSpan]
                               (\ (mn :: Language.PureScript.Names.ModuleName)
                                  (searches :: GHC.Base.NonEmpty
                                                 Language.PureScript.Ide.Usage.Search)[OneShot] ->
                                case Language.PureScript.Ide.Usage.$slookup1
                                       @ Language.PureScript.AST.Declarations.Module
                                       mn
                                       asts of wild {
                                  GHC.Base.Nothing
                                  -> GHC.Types.[] @ Language.PureScript.AST.SourcePos.SourceSpan
                                  GHC.Base.Just x
                                  -> case x of ww { Language.PureScript.AST.Declarations.Module ww1 ww2 ww3 ww4 ww5 ->
                                     GHC.Base.++
                                       @ Language.PureScript.AST.SourcePos.SourceSpan
                                       (Language.PureScript.Ide.Usage.$wapplySearch
                                          ww4
                                          (case searches of wild1 { GHC.Base.:| a1 as -> a1 }))
                                       (case searches of wild1 { GHC.Base.:| a1 as ->
                                        letrec {
                                          go :: [Language.PureScript.Ide.Usage.Search]
                                                -> [Language.PureScript.AST.SourcePos.SourceSpan]
                                            {- Arity: 1, Strictness: <S,1*U> -}
                                          = \ (ds1 :: [Language.PureScript.Ide.Usage.Search]) ->
                                            case ds1 of wild2 {
                                              []
                                              -> GHC.Types.[]
                                                   @ Language.PureScript.AST.SourcePos.SourceSpan
                                              : y ys
                                              -> GHC.Base.++
                                                   @ Language.PureScript.AST.SourcePos.SourceSpan
                                                   (Language.PureScript.Ide.Usage.$wapplySearch
                                                      ww4
                                                      y)
                                                   (go ys) }
                                        } in
                                        go as }) } })
                               (Language.PureScript.Ide.Usage.$weligibleModules
                                  eta1
                                  eta
                                  ms
                                  asts)))))) -}
bccb24689b70092362e6d3b0e7fe6aab
  findUsages1 ::
    Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.SourcePos.SourceSpan]
    -> GHC.Base.Maybe
         (GHC.Base.NonEmpty Language.PureScript.AST.SourcePos.SourceSpan)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Language.PureScript.Names.ModuleName)
                   (x :: [Language.PureScript.AST.SourcePos.SourceSpan])[OneShot] ->
                 Data.List.NonEmpty.nonEmpty
                   @ Language.PureScript.AST.SourcePos.SourceSpan
                   x) -}
5a601fbad2f7cf534bc93227febfac34
  findUsages2 ::
    Language.PureScript.Ide.Types.IdeFileState
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Language.PureScript.AST.Declarations.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Ide.Types.IdeFileState) ->
                 case w of ww { Language.PureScript.Ide.Types.IdeFileState ww1 ww2 ->
                 Language.PureScript.Ide.Usage.findUsages_go13 ww2 }) -}
5b9c12d3b7a506a6121b5616d96a3982
  findUsages_go13 ::
    Data.Map.Internal.Map
      Language.PureScript.Names.ModuleName
      (Language.PureScript.AST.Declarations.Module, GHC.IO.FilePath)
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Language.PureScript.AST.Declarations.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
"SC:$sgo130" forall @ a
                    (sc :: GHC.Prim.Int#)
                    (sc1 :: Language.PureScript.Names.ModuleName)
                    (sc2 :: a)
                    (sc3 :: Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName a)
                    (sc4 :: Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName a)
                    (sc5 :: a)
                    (sc6 :: Language.PureScript.Names.ModuleName)
                    (sc7 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Ide.Usage.$sinsert_$sgo13 @ a
                                                sc7
                                                sc6
                                                sc5
                                                (Data.Map.Internal.Bin
                                                   @ Language.PureScript.Names.ModuleName
                                                   @ a
                                                   sc
                                                   sc1
                                                   sc2
                                                   sc3
                                                   sc4)
  = Language.PureScript.Ide.Usage.$sinsert_$s$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
"SC:$wpoly_go130" [0] forall @ a
                             (sc :: GHC.Prim.Int#)
                             (sc1 :: Language.PureScript.Names.ModuleName)
                             (sc2 :: a)
                             (sc3 :: Data.Map.Internal.Map
                                       Language.PureScript.Names.ModuleName a)
                             (sc4 :: Data.Map.Internal.Map
                                       Language.PureScript.Names.ModuleName a)
                             (sc5 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Ide.Usage.$wpoly_go13 @ a
                                            sc5
                                            (Data.Map.Internal.Bin
                                               @ Language.PureScript.Names.ModuleName
                                               @ a
                                               sc
                                               sc1
                                               sc2
                                               sc3
                                               sc4)
  = Language.PureScript.Ide.Usage.$s$wsplit_$s$wpoly_go13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
"SPEC/Language.PureScript.Ide.Usage union @ ModuleName _" [orphan] forall @ a
                                                                          ($dOrd :: GHC.Classes.Ord
                                                                                      Language.PureScript.Names.ModuleName)
  Data.Map.Internal.union @ Language.PureScript.Names.ModuleName
                          @ a
                          $dOrd
  = Language.PureScript.Ide.Usage.$sunion @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

