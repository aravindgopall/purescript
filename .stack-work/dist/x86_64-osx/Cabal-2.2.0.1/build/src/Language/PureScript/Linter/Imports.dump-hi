
==================== FINAL INTERFACE ====================
2019-01-24 14:16:03.113491 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Linter.Imports 8043
  interface hash: f7f3488da0de867441e36541362c7953
  ABI hash: aefa9ff6006527af6830c71138331d72
  export-list hash: a5703a90a81364728aef16783aa10d3e
  orphan hash: 00288d3473e4ce12b9df2183704884be
  flag hash: 14472b647fa7c417d91c58225e422ddf
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Linter.Imports.lintImports
  Language.PureScript.Linter.Imports.UsedImports
  Language.PureScript.Names.Name{Language.PureScript.Names.DctorName Language.PureScript.Names.IdentName Language.PureScript.Names.KiName Language.PureScript.Names.ModName Language.PureScript.Names.TyClassName Language.PureScript.Names.TyName Language.PureScript.Names.TyOpName Language.PureScript.Names.ValOpName}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Pretty
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Pretty.Types Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 safe-0.3.17
                      scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0
                      syb-0.7 tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Monoid c40cd435d79b84293ce5503253ee6d44
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Semigroup.Internal 3e64145a879c21fc4c6fc83e5d8ca93b
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  mtl-2.2.2:Control.Monad.Writer.Class 69f540e019eada69892c26d267276458
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.List 3a80368167450d7a4360ebf1ea443345
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  exports: ca3189140688cddb12d34cdf2c0663e4
  Declaration e92f6ee78a22c0eadc3566d7d1f48d5b
  DeclarationRef 1ef988d2f8db98f35f578bde9282f468
  DuplicateImport 31f16e44385b2d00c67246f7434649af
  DuplicateImportRef 1a231a3c60f89a209268a2adc8fd01fc
  DuplicateSelectiveImport 5534e34769da216b074f9fbce29850d0
  Explicit 0e7d786f7f26f8b40dc941854a989937
  Hiding 14af127ef57cd3e7808a207407b44158
  HidingImport b89b6387492f92801a46c239b962a5a8
  Implicit 3dec7010cde86de5e211cd1c4e2e7a9d
  ImplicitImport f46372b3303599a61ce56fb83b392d10
  ImplicitQualifiedImport 4626c43503de0d794c412d0a06e5f787
  ImplicitQualifiedImportReExport 99e1f1a554e020978c5d59c34e90137d
  ImportDeclaration b98a8b3e9f19a9a91825a99d72954601
  ImportDeclarationType ee54accdb974d8b355eb58984489a7af
  KindRef fdcf7f61e078f63d583e2e92289fb303
  Module 305128e30e200d34d712365aa2d509df
  Module 3342e00ee072addfd009ee61e87fb865
  ModuleRef 2ff9e8ed233e41ffb08c38dcae5865c0
  SimpleErrorMessage 85049d3cbfbe9dc15f83f3061172f760
  TypeClassRef 0dfae6fa12be94e312c419132246a1f3
  TypeOpRef cd0b4bf0e37e512f28be11229ab2e497
  TypeRef 7b2aa9fe81ad40f64c659855da835def
  UnusedDctorExplicitImport 61dabf77cfa792ae850406edee5667c1
  UnusedDctorImport e8b03809905af7b859f51c3534ce00be
  UnusedExplicitImport 3fad800c5eaf9c9c9ee39efe05c090c2
  UnusedImport 0ad58ebfa54b5782101a13c49bfacf89
  ValueOpRef 08efa0d335ba46b69b381a343c739614
  ValueRef 78dee2d86cdf935e8811ecdd18c169d3
  compDecRef 7ecd10c2cb7709fffc36d9d993e281f2
  getTypeRef 49d73504ee072e8c2fbd37f35c16fbff
  isExplicit 7250ed047a60c57e774f73259cedd1d2
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  exports: a1e32a05596348684f99f9072c553e2b
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Constants 69f48af5637c1cbbd07a6f85918359c3
  exports: 9c458e31ccbc9e07ff15471cf48a55ee
  prim aafaa42bb1179c6de3b49805eaa34c53
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  exports: 8e61484c4664eceb943d9fc4820c721b
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  errorMessage' d5b3fcc13faf321f693b39ae31b8bd13
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ConstructorName 84054a8bbbe827ba2ce7da83056a95ee
  DctorName 058beae22056ca37fdd3776575b08a7a
  IdentName f85afb00b35a2b992fb8ad7cbb2f9711
  KiName 3648c75d7b729914a2a52509b0a9365e
  ModName bdc8f8682bdb984467bbbfa35cbd8589
  ModuleName e77bf9e056798332a9668212060e8e06
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  Name d04047edf96c18708b7b5f72cb565394
  ProperName f69d3801241fcb4773f1284cd28f2dee
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  TyClassName e53bd54ac0d1b704756a477849dbd836
  TyName 6bd149eabdb95c312f9b6bf9d9f06c67
  TyOpName 440dd328b811fbf1c8a081bffcb8593d
  TypeName 40ce511c66a72431b4e87351210f7b03
  ValOpName c1457b90b10104e4d37147e7648f89b9
  disqualifyFor a577cc297e2d6839098678ededd6031a
  getClassName 2436b43b5a631a956e9ce0d8250b06c1
  getDctorName e8fcb89c2752d2d6f620663a51aec263
  getIdentName 15279104fadfea4df18932cbe593afab
  getKindName c7cce80edd861327d298652be1665923
  getQual fd365f85b7d21d7f6d9822dd71085ff1
  getTypeName 50827e2ee9bc8fbe2aacc34d5c31a680
  getTypeOpName 97007f7eb86551330c27144541f6b2f1
  getValOpName 2e54b223a38a12dab4d0d656ccf93318
  isQualifiedWith 8f37d555d49f68d6076bf50c183e125a
  isUnqualified fe642671cf4a0414b402b54fe03875ad
  runModuleName 58b788b37f600c0f34fa85241d7748ad
  runProperName a7268334e0b909381550b9329cb80fcc
import  -/  Language.PureScript.Sugar.Names.Common 538351743e85be7db44e544875b4b685
  exports: b9dd0b70b2737f33a5e246dc38bf81f2
  warnDuplicateRefs ab70a84efdf40bb5fc8e5a425359f4c7
import  -/  Language.PureScript.Sugar.Names.Env 97518f893bef0c5e5749cfa9e4ca9265
  exports: 1be6fa0858c130408a65d60cd8c577b4
  Env 2b6b2822bde15bda4afeb3aa3ef04e79
  ImportRecord 06c97ba5c09e065ef1b4ac69ccbfcc9e
  Imports 330f296cc3ed68256ee5fc6aa457fa42
  envModuleExports 0d5d48eab36db83ce390a5704336cf59
  exportedTypes d2107d9c7383e14684c4687121fab2f3
  importName 06c97ba5c09e065ef1b4ac69ccbfcc9e
  importedDataConstructors 330f296cc3ed68256ee5fc6aa457fa42
  importedTypeClasses 330f296cc3ed68256ee5fc6aa457fa42
  importedTypeOps 330f296cc3ed68256ee5fc6aa457fa42
  importedTypes 330f296cc3ed68256ee5fc6aa457fa42
  importedValueOps 330f296cc3ed68256ee5fc6aa457fa42
  importedValues 330f296cc3ed68256ee5fc6aa457fa42
  nullImports 5dfc688b52efa485e2b0285fa84553d6
import  -/  Language.PureScript.Sugar.Names.Imports ea0651e4823445a2f538974ee903c975
  exports: 85f8dff5874a25bd218daea1d8bb4d26
  ImportDef 0c3af3358c9ad1ab561abbade73a3664
  findImports 024484b2ba29221464988f36d5007372
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
126b5c640ddd2d95a477a3367b0aad58
  $s$fEqQualified ::
    GHC.Classes.Eq
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Name)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       Language.PureScript.Names.Name)
                  (Language.PureScript.Names.$fEqQualified_$c==
                     @ Language.PureScript.Names.Name
                     Language.PureScript.Names.$fEqName)
                  Language.PureScript.Linter.Imports.$s$fEqQualified_$s$fEqQualified_$c/= -}
418ef7a8eb5b22ea1349aaae7dbf3c2c
  $s$fEqQualified_$s$fEqQualified_$c/= ::
    Language.PureScript.Names.Qualified Language.PureScript.Names.Name
    -> Language.PureScript.Names.Qualified
         Language.PureScript.Names.Name
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Names.Qualified
                            Language.PureScript.Names.Name)
                   (y :: Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Name) ->
                 case Language.PureScript.Names.$fEqQualified_$c==
                        @ Language.PureScript.Names.Name
                        Language.PureScript.Names.$fEqName
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
708cb2cc1090dbad5af0e2d4097ce649
  $s$fOrdQualified ::
    GHC.Classes.Ord
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Name)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       Language.PureScript.Names.Name)
                  Language.PureScript.Linter.Imports.$s$fEqQualified
                  (Language.PureScript.Names.$fOrdQualified_$ccompare
                     @ Language.PureScript.Names.Name
                     Language.PureScript.Names.$fOrdName)
                  (Language.PureScript.Names.$fOrdQualified_$c<
                     @ Language.PureScript.Names.Name
                     Language.PureScript.Names.$fOrdName)
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Name)
                     (b :: Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Name) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ Language.PureScript.Names.Name
                          Language.PureScript.Names.$fOrdName
                          b
                          a1 of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Name)
                     (b :: Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Name) ->
                   Language.PureScript.Names.$fOrdQualified_$c<
                     @ Language.PureScript.Names.Name
                     Language.PureScript.Names.$fOrdName
                     b
                     a1)
                  (\ (a1 :: Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Name)
                     (b :: Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Name) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ Language.PureScript.Names.Name
                          Language.PureScript.Names.$fOrdName
                          a1
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x1 :: Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Name)
                     (y :: Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Name) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ Language.PureScript.Names.Name
                          Language.PureScript.Names.$fOrdName
                          y
                          x1 of wild {
                     GHC.Types.False -> y GHC.Types.True -> x1 })
                  (\ (x1 :: Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Name)
                     (y :: Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Name) ->
                   case Language.PureScript.Names.$fOrdQualified_$c<
                          @ Language.PureScript.Names.Name
                          Language.PureScript.Names.$fOrdName
                          y
                          x1 of wild {
                     GHC.Types.False -> x1 GHC.Types.True -> y }) -}
b9d456590998559c6ab9eb2673039790
  $salter_$sgo1 ::
    (GHC.Base.Maybe a1 -> GHC.Base.Maybe a1)
    -> Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 3, Strictness: <C(S),1*C1(U)><S,1*U><S,1*U> -}
2f0d8fcc82a3271df432e170c1144a77
  $sfindWithDefault1 ::
    a
    -> Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,1*U><S,1*U> -}
e00500f4d2f21788feb3a8077da94276
  $slookup3 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
8dc4ecd07c602c1c6d3c99c523e8981a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Linter.Imports.$trModule3
                   Language.PureScript.Linter.Imports.$trModule1) -}
d1b6fdcc31c6cf4d9dd70861092e4d5a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Imports.$trModule2) -}
b08dd586d3842e85f351bc1ee85a5bf4
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Linter.Imports"#) -}
89796be4a7bd66e696da9f547ef307ae
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Imports.$trModule4) -}
0eebc455a1a6d898312d29f7085cb059
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
10bfa3492101e3b255b441e678acc4b7
  $w$sgo13 ::
    (GHC.Base.Maybe a1 -> GHC.Base.Maybe a1)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
  {- Arity: 5, Strictness: <C(S),1*C1(U)><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
b8d23378f91a1322a07c1a0feb3864f4
  $wpoly_go1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
79da9448238c288e287ed572ba4f5790
  $wpoly_go13 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
1fd6dfd4cba68941f850cb59562298e5
  type UsedImports =
    Data.Map.Internal.Map
      Language.PureScript.Names.ModuleName
      [Language.PureScript.Names.Qualified
         Language.PureScript.Names.Name]
2cbe883cf0e056e9d20b04dc4422e515
  lintImports ::
    Control.Monad.Writer.Class.MonadWriter
      Language.PureScript.Errors.MultipleErrors m =>
    Language.PureScript.AST.Declarations.Module
    -> Language.PureScript.Sugar.Names.Env.Env
    -> Language.PureScript.Linter.Imports.UsedImports
    -> m ()
  {- Arity: 1,
     Strictness: <L,U(A,U(U(A,C(U),A,C(C1(C1(U))),C(C1(U)),A),C(C1(U)),C(C1(U)),U,A),A,C(U),A,C(U))> -}
"SPEC/Language.PureScript.Linter.Imports $fEqQualified @ Name" [orphan] forall (v :: GHC.Classes.Eq
                                                                                       Language.PureScript.Names.Name)
  Language.PureScript.Names.$fEqQualified @ Language.PureScript.Names.Name
                                          v
  = Language.PureScript.Linter.Imports.$s$fEqQualified
"SPEC/Language.PureScript.Linter.Imports $fEqQualified_$c/= @ Name" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                               Language.PureScript.Names.Name)
  Language.PureScript.Names.$fEqQualified_$c/= @ Language.PureScript.Names.Name
                                               $dEq
  = Language.PureScript.Linter.Imports.$s$fEqQualified_$s$fEqQualified_$c/=
"SPEC/Language.PureScript.Linter.Imports $fOrdQualified @ Name" [orphan] forall (v :: GHC.Classes.Ord
                                                                                        Language.PureScript.Names.Name)
  Language.PureScript.Names.$fOrdQualified @ Language.PureScript.Names.Name
                                           v
  = Language.PureScript.Linter.Imports.$s$fOrdQualified
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

