
==================== FINAL INTERFACE ====================
2019-01-24 14:17:01.382398 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Externs 8043
  interface hash: f34ecc5222cdf75e6f8528512e8065ff
  ABI hash: 01c33784015d1f3b34dbf4e8a565b308
  export-list hash: 03734d94ad1c35346fdca69b71601090
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2c479d38cdd04295a06ce5c00ce33b47
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Ide.Externs.convertExterns
  Language.PureScript.Ide.Externs.readExternFile
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Errors.JSON
                     Language.PureScript.Externs Language.PureScript.Ide.Error
                     Language.PureScript.Ide.Types Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 auto-update-0.1.4
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 boxes-0.1.5 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0.3 conduit-extra-1.3.0 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 easy-file-0.2.2 exceptions-0.10.0 fast-logger-2.4.11
                      filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 monad-logger-0.3.28.5 monad-loops-0.4.3
                      mtl-2.2.2 old-locale-1.0.0.7 old-time-1.1.0.3 parallel-3.2.1.1
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 resourcet-1.2.1
                      safe-0.3.17 scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3
                      stm-2.4.5.0 stm-chans-3.0.0.4 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-time-0.3.8
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: unix-time-0.3.8:Data.UnixTime.Diff
         syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         conduit-1.3.0.3:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.3:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types 80d8929e36e8070f3ae205ac2577d043
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  base-4.11.1.0:Control.Monad.IO.Class 96109c36cb3c919872278540487fa39e
import  -/  base-4.11.1.0:Data.Bifunctor a977586bad544f929bb5bc7f139aaa1c
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Semigroup.Internal 3e64145a879c21fc4c6fc83e5d8ca93b
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  bytestring-0.10.8.2:Data.ByteString 6d0008c12e5c3acd7278a6b95640b4e2
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  microlens-0.4.9.1:Lens.Micro 962434009a31a5b07a9c325f04604c4d
import  -/  microlens-mtl-0.1.11.1:Lens.Micro.Mtl 0b8886821fc976acf46035b23c9705b6
import  -/  microlens-platform-0.3.10:Lens.Micro.Platform 0a8b1a3c754e3254d224cc9602b42f64
import  -/  monad-logger-0.3.28.5:Control.Monad.Logger ae6f9fbc4451af5ecbeab48dfdfd01ee
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.Conv d23d6c6c41efc2e2cf73b3e455035f82
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
  version 340cbf275db4649c75aa4914e549ba5b
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  DeclarationRef 1ef988d2f8db98f35f578bde9282f468
  ReExportRef 2fef75d8ce745db15f225b0cb5e0c76d
import  -/  Language.PureScript.Externs cf933be49760ec7d1e991d8ad7f6146f
  EDClass f71940f3e461ffb20ccdf04fe199bdf0
  EDDataConstructor 94c27508c5f32e87b7712899818bb5c7
  EDInstance b505ded8eb9d4692ad56205d6f025319
  EDKind 13d406b0d7f8d8e70d2bcba744ae1949
  EDType 6b0d12f14059fee340a3030b97e005b0
  EDTypeSynonym 8348b671b522d5bc1b8d3e3defbf78a5
  EDValue 936064f836f8cf9b183c93828ea8291c
  ExternsDeclaration a7fb565ada874d78b726c57090b05102
  ExternsFile c010c09fe85776adf7c6787c7d79c898
  ExternsFixity b51e861990e5c53c59e0be20b2914e4a
  ExternsFixity faf775006e4902ca2862b62427af99db
  ExternsTypeFixity 95b88cb3880c7981f3c00bfab786621e
  ExternsTypeFixity 2cdf2d30c32e0c2e399d4c8039173e63
  edClassConstraints a7fb565ada874d78b726c57090b05102
  edClassMembers a7fb565ada874d78b726c57090b05102
  edClassName a7fb565ada874d78b726c57090b05102
  edClassTypeArguments a7fb565ada874d78b726c57090b05102
  edDataCtorFields a7fb565ada874d78b726c57090b05102
  edDataCtorName a7fb565ada874d78b726c57090b05102
  edDataCtorOrigin a7fb565ada874d78b726c57090b05102
  edDataCtorType a7fb565ada874d78b726c57090b05102
  edDataCtorTypeCtor a7fb565ada874d78b726c57090b05102
  edFunctionalDependencies a7fb565ada874d78b726c57090b05102
  edKindName a7fb565ada874d78b726c57090b05102
  edTypeDeclarationKind a7fb565ada874d78b726c57090b05102
  edTypeKind a7fb565ada874d78b726c57090b05102
  edTypeName a7fb565ada874d78b726c57090b05102
  edTypeSynonymArguments a7fb565ada874d78b726c57090b05102
  edTypeSynonymName a7fb565ada874d78b726c57090b05102
  edTypeSynonymType a7fb565ada874d78b726c57090b05102
  edValueName a7fb565ada874d78b726c57090b05102
  edValueType a7fb565ada874d78b726c57090b05102
  efAlias faf775006e4902ca2862b62427af99db
  efAssociativity faf775006e4902ca2862b62427af99db
  efDeclarations c010c09fe85776adf7c6787c7d79c898
  efExports c010c09fe85776adf7c6787c7d79c898
  efFixities c010c09fe85776adf7c6787c7d79c898
  efOperator faf775006e4902ca2862b62427af99db
  efPrecedence faf775006e4902ca2862b62427af99db
  efTypeAlias 2cdf2d30c32e0c2e399d4c8039173e63
  efTypeAssociativity 2cdf2d30c32e0c2e399d4c8039173e63
  efTypeFixities c010c09fe85776adf7c6787c7d79c898
  efTypeOperator 2cdf2d30c32e0c2e399d4c8039173e63
  efTypePrecedence 2cdf2d30c32e0c2e399d4c8039173e63
import  -/  Language.PureScript.Ide.Error b6eb0f8da112a6cbb4342061d1afef05
  exports: 618489d4d27b48ee8032da6edee10f0b
  GeneralError 12e806af4285c37439d91c81a0757c61
  IdeError 347304649e024d1c6990f4b438ecc115
import  -/  Language.PureScript.Ide.Types 4bb81e9de3788f7f63a68a23e190eb73
  exports: e5ee4d37ef25d4dfedd36ea1d435a17a
  IdeDataConstructor 01cdb91182692ecc25b2dbdcc2f07c21
  IdeDeclDataConstructor 8fce6bf53fa94a19e0d601b21857c083
  IdeDeclKind eadccdfcdc773a4889209905550631de
  IdeDeclType bf6a01d2f64dd736d0c0838c335e1f4d
  IdeDeclTypeClass daec5de1fc0811383493f72c17859b3c
  IdeDeclTypeOperator 942a106238947e7cdd45b0c72cd2559c
  IdeDeclTypeSynonym f16924e305412463e9d0339a34821aa8
  IdeDeclValue cff86d395b09e6db0f9fde8980f34310
  IdeDeclValueOperator 30db1956e4e27b3074312970c743db17
  IdeDeclaration 0c91b1320f07da0ab07b77b49d64d462
  IdeDeclarationAnn 1d5bc37494f0e43867ff35908b352362
  IdeDeclarationAnn b02d1e3d0d65a3bc0459005430392eb1
  IdeType 0188146763a7aa1054f2972987461ac8
  IdeType 862d0466a921badc471ac4eb799b1c5c
  IdeTypeClass 45605df9c8485f1041f8495fb95010ed
  IdeTypeOperator b9ef5dd7b6d30d2a7b873b7446e96d66
  IdeTypeSynonym e4e987e5e1aac9f5fb88047a854ff11c
  IdeTypeSynonym 434cac5be7a927bb03b5196d1252e0b7
  IdeValue e8dc97b9d8134289e79ec6eaebf8ed0e
  IdeValueOperator aefb3dc42069d55d1ef6f5ca52aa3016
  _IdeDeclType 5a85c0225b99d2057d2ce54ca7b67a42
  _IdeDeclTypeSynonym 1a34cbfe89c7ee34f024ee6ec31fbf20
  anyOf 30b07c9f4bcb7d654ab6d8adfaab60ba
  emptyAnn c6db26e1c9b1e1721bc8c428d1f879f7
  ideSynonymKind c38c08c49664012d9aaef2976130ce0f
  ideSynonymName dba058d7cc24bbf5f5716fc90da609d5
  ideTypeKind 6702fd04c337d07b067bd4d1673884df
  ideTypeName 102b07c9135d8fc8731c934f05b32722
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  ProperName a7268334e0b909381550b9329cb80fcc
  TypeName 40ce511c66a72431b4e87351210f7b03
  coerceProperName 441cf2d4ab32b68a0b73ca234d2a628b
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  SourceType 0ac818517c14fedd280ef5885ae0cdc3
cf73cc8ca70cdbc247da1dbfcbd653c3
  $tc'SynonymToResolve :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9930910365522050268##
                   15260313399065774192##
                   Language.PureScript.Ide.Externs.$trModule
                   Language.PureScript.Ide.Externs.$tc'SynonymToResolve2
                   0#
                   Language.PureScript.Ide.Externs.$tc'SynonymToResolve1) -}
8a5dbb58d8319d73e50777302955c1bb
  $tc'SynonymToResolve1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3ba1032fe6cc155e9ef35797b4c13162
  $tc'SynonymToResolve2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$tc'SynonymToResolve3) -}
c6072d6ba9c5fedb4f7aa4d3d6bb6526
  $tc'SynonymToResolve3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SynonymToResolve"#) -}
4ae0bedfe666865faffbd3862f0f28df
  $tc'TypeClassToResolve :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18152862162345034460##
                   6161769141143906629##
                   Language.PureScript.Ide.Externs.$trModule
                   Language.PureScript.Ide.Externs.$tc'TypeClassToResolve2
                   0#
                   Language.PureScript.Ide.Externs.$tc'TypeClassToResolve1) -}
1101bc4901e351560c73be63030e18cd
  $tc'TypeClassToResolve1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1f7bbc0914bc17ee67cf05a39d2ebf3c
  $tc'TypeClassToResolve2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$tc'TypeClassToResolve3) -}
4395b64293bdda8831beee597e5fc848
  $tc'TypeClassToResolve3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassToResolve"#) -}
00d58feedf0aac0568ea7b369e68cea7
  $tcToResolve :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7880971107112245727##
                   17192057531874752590##
                   Language.PureScript.Ide.Externs.$trModule
                   Language.PureScript.Ide.Externs.$tcToResolve1
                   0#
                   GHC.Types.krep$*) -}
ff30b23b9abb0ff2bb60584f9139409b
  $tcToResolve1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$tcToResolve2) -}
6196d54dc44a9dece0238af6fd962089
  $tcToResolve2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ToResolve"#) -}
9d9cb321e1ebe773939e72908adbaf0b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Ide.Externs.$trModule3
                   Language.PureScript.Ide.Externs.$trModule1) -}
f3ab3f3cb204ec3e569fc49680edda4c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$trModule2) -}
356c36d730c104094c40ce967cb2b6ec
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Ide.Externs"#) -}
25638b4d77cc095971ea74eb9b53da6e
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$trModule4) -}
20f6e16592711cc44d643c1d149d5c22
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
0e5a24a3514a8a16eb7aecb17f72bd55
  $wconvertExterns ::
    Language.PureScript.Externs.ExternsFile
    -> (# [Language.PureScript.Ide.Types.IdeDeclarationAnn],
          [(Language.PureScript.Names.ModuleName,
            Language.PureScript.AST.Declarations.DeclarationRef)] #)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(A,A,1*U,A,1*U,1*U,1*U,A)>, Inline: [0],
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsFile) ->
                 (# case w of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                    case Data.Either.$wpartitionEithers
                           @ Language.PureScript.Ide.Externs.ToResolve
                           @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                           (GHC.Base.map
                              @ Language.PureScript.Externs.ExternsDeclaration
                              @ (Data.Either.Either
                                   Language.PureScript.Ide.Externs.ToResolve
                                   (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration))
                              Language.PureScript.Ide.Externs.convertDecl
                              ds7) of ww { (#,#) ww1 ww2 ->
                    let {
                      z :: [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                      = let {
                          z1 :: [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                          = GHC.Base.map
                              @ Language.PureScript.Externs.ExternsTypeFixity
                              @ Language.PureScript.Ide.Types.IdeDeclarationAnn
                              Language.PureScript.Ide.Externs.convertExterns3
                              ds6
                        } in
                        letrec {
                          go :: [Language.PureScript.Externs.ExternsFixity]
                                -> [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: [Language.PureScript.Externs.ExternsFixity]) ->
                            case ds of wild1 {
                              [] -> z1
                              : y ys
                              -> GHC.Types.:
                                   @ Language.PureScript.Ide.Types.IdeDeclarationAnn
                                   (Language.PureScript.Ide.Types.IdeDeclarationAnn
                                      Language.PureScript.Ide.Types.emptyAnn
                                      (case y of wild2 { Language.PureScript.Externs.ExternsFixity ds11 ds12 ds13 ds14 ->
                                       Language.PureScript.Ide.Types.IdeDeclValueOperator
                                         (Language.PureScript.Ide.Types.IdeValueOperator
                                            ds13
                                            ds14
                                            ds12
                                            ds11
                                            (GHC.Base.Nothing
                                               @ Language.PureScript.Types.SourceType)) }))
                                   (go ys) }
                        } in
                        go ds5
                    } in
                    letrec {
                      go :: [Language.PureScript.Ide.Types.IdeDeclaration]
                            -> [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds :: [Language.PureScript.Ide.Types.IdeDeclaration]) ->
                        case ds of wild1 {
                          [] -> z
                          : y ys
                          -> GHC.Types.:
                               @ Language.PureScript.Ide.Types.IdeDeclarationAnn
                               (Language.PureScript.Ide.Types.IdeDeclarationAnn
                                  Language.PureScript.Ide.Types.emptyAnn
                                  y)
                               (go ys) }
                    } in
                    go
                      (Language.PureScript.Ide.Externs.convertExterns2
                         ww1
                         (Language.PureScript.Ide.Externs.convertExterns1
                            ww1
                            (Data.Maybe.catMaybes1
                               @ Language.PureScript.Ide.Types.IdeDeclaration
                               ww2))) } },
                    case w of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                    Data.Maybe.mapMaybe
                      @ Language.PureScript.AST.Declarations.DeclarationRef
                      @ (Language.PureScript.Names.ModuleName,
                         Language.PureScript.AST.Declarations.DeclarationRef)
                      Language.PureScript.Ide.Externs.convertExport
                      ds3 } #)) -}
88697c75f56b6db631443faed430b7c2
  data ToResolve
    = TypeClassToResolve (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.ClassName)
    | SynonymToResolve (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                       Language.PureScript.Types.SourceType
c12ce7fec338a74f79ce73d256ce2aad
  convertDecl ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Data.Either.Either
         Language.PureScript.Ide.Externs.ToResolve
         (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (ed :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ed of wild {
                   Language.PureScript.Externs.EDType ds ds1 ds2
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclType
                              (Language.PureScript.Ide.Types.IdeType
                                 ds
                                 ds1
                                 (GHC.Types.[]
                                    @ (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ConstructorName,
                                       Language.PureScript.Types.SourceType)))))
                   Language.PureScript.Externs.EDTypeSynonym ds ds1 ds2
                   -> Data.Either.Left
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (Language.PureScript.Ide.Externs.SynonymToResolve ds ds2)
                   Language.PureScript.Externs.EDDataConstructor ds ds1 ds2 ds3 ds4
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclDataConstructor
                              (Language.PureScript.Ide.Types.IdeDataConstructor ds ds2 ds3)))
                   Language.PureScript.Externs.EDValue ds ds1
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclValue
                              (Language.PureScript.Ide.Types.IdeValue ds ds1)))
                   Language.PureScript.Externs.EDClass ds ds1 ds2 ds3 ds4
                   -> Data.Either.Left
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (Language.PureScript.Ide.Externs.TypeClassToResolve ds)
                   Language.PureScript.Externs.EDInstance ds ds1 ds2 ds3 ds4 ds5
                   -> Language.PureScript.Ide.Externs.convertExterns4
                   Language.PureScript.Externs.EDKind ds
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclKind ds)) }) -}
19fea25ab934e5e5b14c054d481a9045
  convertExport ::
    Language.PureScript.AST.Declarations.DeclarationRef
    -> GHC.Base.Maybe
         (Language.PureScript.Names.ModuleName,
          Language.PureScript.AST.Declarations.DeclarationRef)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.Declarations.DeclarationRef) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Base.Nothing
                        @ (Language.PureScript.Names.ModuleName,
                           Language.PureScript.AST.Declarations.DeclarationRef)
                   Language.PureScript.AST.Declarations.ReExportRef ds1 m r
                   -> GHC.Base.Just
                        @ (Language.PureScript.Names.ModuleName,
                           Language.PureScript.AST.Declarations.DeclarationRef)
                        (m, r) }) -}
4fd90170e6df30f2d0127ff4b35d4b0e
  convertExterns ::
    Language.PureScript.Externs.ExternsFile
    -> ([Language.PureScript.Ide.Types.IdeDeclarationAnn],
        [(Language.PureScript.Names.ModuleName,
          Language.PureScript.AST.Declarations.DeclarationRef)])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,A,U,A,U,U,U,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFile) ->
                 case Language.PureScript.Ide.Externs.$wconvertExterns
                        w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
6e9f1164727fb19c0f89a033592f2bea
  convertExterns1 ::
    [Language.PureScript.Ide.Externs.ToResolve]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
13b9afc2d1d953e72007f42995925a45
  convertExterns2 ::
    [Language.PureScript.Ide.Externs.ToResolve]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
1e8d0a6376c9191a73df5d122dcb7b64
  convertExterns3 ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Language.PureScript.Ide.Types.IdeDeclarationAnn
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 Language.PureScript.Ide.Types.IdeDeclarationAnn
                   Language.PureScript.Ide.Types.emptyAnn
                   (case x of wild { Language.PureScript.Externs.ExternsTypeFixity ds ds1 ds2 ds3 ->
                    Language.PureScript.Ide.Types.IdeDeclTypeOperator
                      (Language.PureScript.Ide.Types.IdeTypeOperator
                         ds2
                         ds3
                         ds1
                         ds
                         (GHC.Base.Nothing @ Language.PureScript.Kinds.SourceKind)) })) -}
558dc697993e2d41d8f6b4d0cee2590b
  convertExterns4 ::
    Data.Either.Either
      Language.PureScript.Ide.Externs.ToResolve
      (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Language.PureScript.Ide.Externs.ToResolve
                   @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                   (GHC.Base.Nothing
                      @ Language.PureScript.Ide.Types.IdeDeclaration)) -}
0feb5b9c0836f205f4a8930848b3558a
  readExternFile ::
    (Control.Monad.IO.Class.MonadIO m,
     Control.Monad.Error.Class.MonadError
       Language.PureScript.Ide.Error.IdeError m,
     Control.Monad.Logger.MonadLogger m) =>
    GHC.IO.FilePath -> m Language.PureScript.Externs.ExternsFile
  {- Arity: 4,
     Strictness: <S(S(LC(C(S))LLL)L),U(1*U(1*U(A,C(U),A,A,A,A),1*C1(C1(U)),C(C1(U)),A,A),1*C1(U))><L,U(A,C(U),A)><L,U(A,C(C1(C1(C1(C1(U))))))><L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

