
==================== FINAL INTERFACE ====================
2018-11-30 20:48:15.21911 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Ide.Externs 8043
  interface hash: 68ffd55b3eb9441c1daacaaea6a4a793
  ABI hash: 52bfc827ac343fc1bcc9fcb1e0829386
  export-list hash: 85b0c309d5657903e842ccf132c588bd
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2c479d38cdd04295a06ce5c00ce33b47
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Ide.Externs.convertExterns
  Language.PureScript.Ide.Externs.readExternFile
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Errors.JSON
                     Language.PureScript.Externs Language.PureScript.Ide.Error
                     Language.PureScript.Ide.Types Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      auto-update-0.1.4 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 boxes-0.1.5 bytestring-0.10.8.2 colour-2.3.4
                      conduit-1.3.0.3 conduit-extra-1.3.0 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 easy-file-0.2.2 exceptions-0.10.0 fast-logger-2.4.11
                      filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 monad-logger-0.3.28.5 monad-loops-0.4.3
                      mtl-2.2.2 old-locale-1.0.0.7 old-time-1.1.0.3 parallel-3.2.1.1
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 resourcet-1.2.1
                      safe-0.3.17 scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3
                      stm-2.4.5.0 stm-chans-3.0.0.4 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-time-0.3.8
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: unix-time-0.3.8:Data.UnixTime.Diff
         syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         conduit-1.3.0.3:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.3:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Control.Monad.Logger
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Ide.Types
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Make.Monad
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types 80d8929e36e8070f3ae205ac2577d043
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  base-4.11.1.0:Control.Monad.IO.Class 96109c36cb3c919872278540487fa39e
import  -/  base-4.11.1.0:Data.Bifunctor a977586bad544f929bb5bc7f139aaa1c
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Semigroup.Internal 3e64145a879c21fc4c6fc83e5d8ca93b
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  bytestring-0.10.8.2:Data.ByteString 6d0008c12e5c3acd7278a6b95640b4e2
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  microlens-0.4.9.1:Lens.Micro 962434009a31a5b07a9c325f04604c4d
import  -/  microlens-mtl-0.1.11.1:Lens.Micro.Mtl 0b8886821fc976acf46035b23c9705b6
import  -/  microlens-platform-0.3.10:Lens.Micro.Platform 0a8b1a3c754e3254d224cc9602b42f64
import  -/  monad-logger-0.3.28.5:Control.Monad.Logger ae6f9fbc4451af5ecbeab48dfdfd01ee
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.Conv d23d6c6c41efc2e2cf73b3e455035f82
import  -/  Language.PureScript 055283757289375c92e0f1e11d744c0e
  exports: 01fc85db00ce4cf253ba5c16e07330e5
  version 60671cce5d1f57bd25291c665c13273e
import  -/  Language.PureScript.AST.Declarations 568e046fbf27b243bfc96f09017d4782
  DeclarationRef 9de74e8b46bfd07e044a72617cc5da5c
  ReExportRef f67e2c43a2cbc62a4a950b387e3ed943
import  -/  Language.PureScript.Externs 17598d5385c46f650a2a55de08912a53
  EDClass 9cb83a2abce39399d2d0a1b3cd400d65
  EDDataConstructor fcc92094c364f9506042d3ad829e5b28
  EDInstance df162d5263c0f620dff99525d40ae26f
  EDKind 815881308cb363295b2e125ad47b48d5
  EDType 38ede637ff5b805c86abe6269d4637a4
  EDTypeSynonym 1b850cae34937645a2897c439a03d547
  EDValue 29a0cd7ddd5974753c0e480c8a97e770
  ExternsDeclaration 45a26a6f5854665222c379466681ba1c
  ExternsFile b2e76f24ecba17bf3b946e078a8414b6
  ExternsFixity fc9aab220e4eaf56df961c5266b7d006
  ExternsFixity e2b9825419a009927ef7bc8fe43a5592
  ExternsTypeFixity f37bac60e1f55712bd46ecf0d2815c3b
  ExternsTypeFixity 550ce16782e073a4c465189b0fa52bb0
  edClassConstraints 45a26a6f5854665222c379466681ba1c
  edClassMembers 45a26a6f5854665222c379466681ba1c
  edClassName 45a26a6f5854665222c379466681ba1c
  edClassTypeArguments 45a26a6f5854665222c379466681ba1c
  edDataCtorFields 45a26a6f5854665222c379466681ba1c
  edDataCtorName 45a26a6f5854665222c379466681ba1c
  edDataCtorOrigin 45a26a6f5854665222c379466681ba1c
  edDataCtorType 45a26a6f5854665222c379466681ba1c
  edDataCtorTypeCtor 45a26a6f5854665222c379466681ba1c
  edFunctionalDependencies 45a26a6f5854665222c379466681ba1c
  edKindName 45a26a6f5854665222c379466681ba1c
  edTypeDeclarationKind 45a26a6f5854665222c379466681ba1c
  edTypeKind 45a26a6f5854665222c379466681ba1c
  edTypeName 45a26a6f5854665222c379466681ba1c
  edTypeSynonymArguments 45a26a6f5854665222c379466681ba1c
  edTypeSynonymName 45a26a6f5854665222c379466681ba1c
  edTypeSynonymType 45a26a6f5854665222c379466681ba1c
  edValueName 45a26a6f5854665222c379466681ba1c
  edValueType 45a26a6f5854665222c379466681ba1c
  efAlias e2b9825419a009927ef7bc8fe43a5592
  efAssociativity e2b9825419a009927ef7bc8fe43a5592
  efDeclarations b2e76f24ecba17bf3b946e078a8414b6
  efExports b2e76f24ecba17bf3b946e078a8414b6
  efFixities b2e76f24ecba17bf3b946e078a8414b6
  efOperator e2b9825419a009927ef7bc8fe43a5592
  efPrecedence e2b9825419a009927ef7bc8fe43a5592
  efTypeAlias 550ce16782e073a4c465189b0fa52bb0
  efTypeAssociativity 550ce16782e073a4c465189b0fa52bb0
  efTypeFixities b2e76f24ecba17bf3b946e078a8414b6
  efTypeOperator 550ce16782e073a4c465189b0fa52bb0
  efTypePrecedence 550ce16782e073a4c465189b0fa52bb0
import  -/  Language.PureScript.Ide.Error cef67e67cd2fefdfbab7f8e5964385b2
  exports: 4a39dd2ee53e53946ad697fd09af3e2c
  GeneralError 456c32f0e9cbe7fc7df2d82958fc7be9
  IdeError b045389a5f76cac922918f9ea2f2f4b2
import  -/  Language.PureScript.Ide.Types d9d9fd4c2b6a1fdeece731a5e8479937
  exports: dd47afbd66baea5bbcdd5e2641556a91
  IdeDataConstructor ee5d3e9882f97e73a2c60aca5e5d9c06
  IdeDeclDataConstructor 79fe65acfb276d9846795832f8cd5967
  IdeDeclKind f96b042ff6b5e4c79ef566bb7be1b354
  IdeDeclType 57208577780a76f017987bca4d2b2560
  IdeDeclTypeClass 42ebe2284da9669a4b1d687dc16c646e
  IdeDeclTypeOperator df9f5cb0624ba5f26f443c10cd955133
  IdeDeclTypeSynonym 28ae0a9332e5ab733f2495e6a4ce73c4
  IdeDeclValue 1a020d12f4b3babbfaa3f10dcf94e2d1
  IdeDeclValueOperator 54fcb442fafa92ac00e4505c9d086275
  IdeDeclaration 9a139a83eccdb4ce038336f38d1d61cf
  IdeDeclarationAnn fcd7162a0948180de725959709c4eb31
  IdeDeclarationAnn 9e61215f32f4caed313e4d158f96dea0
  IdeType f342b85e5dd873e57e982cf195656459
  IdeType 2cf1bd94f2c78eccc179ddf73012ec1f
  IdeTypeClass c3ff63e126f915e9d51adeaaf2650230
  IdeTypeOperator d1f800e3ed04b4786cc09f71fe5bc359
  IdeTypeSynonym 959618f612fa1cb80a120ed873e6e318
  IdeTypeSynonym 8e0134581e8be26d8a7975aa0f57a68f
  IdeValue e57eac312cb1109f71f54944ef49a046
  IdeValueOperator eac7ac3efbcef67fef0264276ebbe4f4
  _IdeDeclType b6abbb84c05a2626bb6f939f2d4a01d9
  _IdeDeclTypeSynonym b5eace2e83b060396a866e675bda3356
  anyOf 42e219aefc77f695882094d59e3b6182
  emptyAnn 5975d0d1e82d156ab8bd7ad89e6a954b
  ideSynonymKind 747b09f850f6e322cccab98f3750bbd9
  ideSynonymName f05596230d9dbc39b510041107fb41e9
  ideTypeKind 41b7daeb2ecc3435543b5da07ba15ee3
  ideTypeName 07a28cae9afd06eac4ebbeba9047afee
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  ClassName e69348bcf8c43a2174540a1d5983bfaa
  ModuleName 5a70062bbdf29e6dc659ad8bf5326b50
  ProperName 29f101e190cc99df85623423972e606f
  TypeName da42c92f73f4f363c63ecaf77b6335b9
  coerceProperName 9cce674374cd97d7385253445133e737
import  -/  Language.PureScript.Types 74562e642f5297557b3a23aac7819ad1
  Type 93223f8afa90d0facc05a03f863dc72d
02aa4b01650a04e3ba5a6b2423d8ef04
  $tc'SynonymToResolve :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18050644089620865887##
                   3036129244684641851##
                   Language.PureScript.Ide.Externs.$trModule
                   Language.PureScript.Ide.Externs.$tc'SynonymToResolve2
                   0#
                   Language.PureScript.Ide.Externs.$tc'SynonymToResolve1) -}
5559eeade6c6db4c01d1190b8a02efd9
  $tc'SynonymToResolve1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5e0366c1b82af2aa7ce75c97e623d162
  $tc'SynonymToResolve2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$tc'SynonymToResolve3) -}
322af08ec6f7a5bc68084e071b48e02f
  $tc'SynonymToResolve3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SynonymToResolve"#) -}
164d41fc74a860836e2fff59d3cdf175
  $tc'TypeClassToResolve :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3544573887484619167##
                   5325408283798837696##
                   Language.PureScript.Ide.Externs.$trModule
                   Language.PureScript.Ide.Externs.$tc'TypeClassToResolve2
                   0#
                   Language.PureScript.Ide.Externs.$tc'TypeClassToResolve1) -}
d1fbda9a6784e455a4a2b6b95614214d
  $tc'TypeClassToResolve1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
106d889abdfc4d5e93dad02c0205d1b0
  $tc'TypeClassToResolve2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$tc'TypeClassToResolve3) -}
651a4307ad3fdfed3d9d5cff11e55fc4
  $tc'TypeClassToResolve3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassToResolve"#) -}
5111cd6939e62f15e9c6956319139040
  $tcToResolve :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   808301452569954847##
                   17510387805147111417##
                   Language.PureScript.Ide.Externs.$trModule
                   Language.PureScript.Ide.Externs.$tcToResolve1
                   0#
                   GHC.Types.krep$*) -}
6fedbe98d7ef5100e7723fb0c71ae4c6
  $tcToResolve1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$tcToResolve2) -}
4c0eb5424f5d48d6d160ed7692e2a692
  $tcToResolve2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ToResolve"#) -}
7bbe77e07bf80d4e2f5c67707da1658f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Ide.Externs.$trModule3
                   Language.PureScript.Ide.Externs.$trModule1) -}
9fe0a4193be47e8cb49632699e805549
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$trModule2) -}
9999220f0c0f599205b534c6cfc9c5a7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Ide.Externs"#) -}
4da0eea72cbbf9e49494085ddd1dc79c
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Externs.$trModule4) -}
6eaf8d893bad4dc9af684436e6889b77
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
d932786a834b0f6105fa18afb8e81bf9
  $wconvertExterns ::
    Language.PureScript.Externs.ExternsFile
    -> (# [Language.PureScript.Ide.Types.IdeDeclarationAnn],
          [(Language.PureScript.Names.ModuleName,
            Language.PureScript.AST.Declarations.DeclarationRef)] #)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(A,A,1*U,A,1*U,1*U,1*U,A)>, Inline: [0],
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsFile) ->
                 (# case w of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                    case Data.Either.$wpartitionEithers
                           @ Language.PureScript.Ide.Externs.ToResolve
                           @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                           (GHC.Base.map
                              @ Language.PureScript.Externs.ExternsDeclaration
                              @ (Data.Either.Either
                                   Language.PureScript.Ide.Externs.ToResolve
                                   (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration))
                              Language.PureScript.Ide.Externs.convertDecl
                              ds7) of ww { (#,#) ww1 ww2 ->
                    let {
                      z :: [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                      = let {
                          z1 :: [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                          = GHC.Base.map
                              @ Language.PureScript.Externs.ExternsTypeFixity
                              @ Language.PureScript.Ide.Types.IdeDeclarationAnn
                              Language.PureScript.Ide.Externs.convertExterns3
                              ds6
                        } in
                        letrec {
                          go :: [Language.PureScript.Externs.ExternsFixity]
                                -> [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: [Language.PureScript.Externs.ExternsFixity]) ->
                            case ds of wild1 {
                              [] -> z1
                              : y ys
                              -> GHC.Types.:
                                   @ Language.PureScript.Ide.Types.IdeDeclarationAnn
                                   (Language.PureScript.Ide.Types.IdeDeclarationAnn
                                      Language.PureScript.Ide.Types.emptyAnn
                                      (case y of wild2 { Language.PureScript.Externs.ExternsFixity ds11 ds12 ds13 ds14 ->
                                       Language.PureScript.Ide.Types.IdeDeclValueOperator
                                         (Language.PureScript.Ide.Types.IdeValueOperator
                                            ds13
                                            ds14
                                            ds12
                                            ds11
                                            (GHC.Base.Nothing @ Language.PureScript.Types.Type)) }))
                                   (go ys) }
                        } in
                        go ds5
                    } in
                    letrec {
                      go :: [Language.PureScript.Ide.Types.IdeDeclaration]
                            -> [Language.PureScript.Ide.Types.IdeDeclarationAnn]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds :: [Language.PureScript.Ide.Types.IdeDeclaration]) ->
                        case ds of wild1 {
                          [] -> z
                          : y ys
                          -> GHC.Types.:
                               @ Language.PureScript.Ide.Types.IdeDeclarationAnn
                               (Language.PureScript.Ide.Types.IdeDeclarationAnn
                                  Language.PureScript.Ide.Types.emptyAnn
                                  y)
                               (go ys) }
                    } in
                    go
                      (Language.PureScript.Ide.Externs.convertExterns2
                         ww1
                         (Language.PureScript.Ide.Externs.convertExterns1
                            ww1
                            (Data.Maybe.catMaybes1
                               @ Language.PureScript.Ide.Types.IdeDeclaration
                               ww2))) } },
                    case w of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                    Data.Maybe.mapMaybe
                      @ Language.PureScript.AST.Declarations.DeclarationRef
                      @ (Language.PureScript.Names.ModuleName,
                         Language.PureScript.AST.Declarations.DeclarationRef)
                      Language.PureScript.Ide.Externs.convertExport
                      ds3 } #)) -}
9be5c7aeaa54cb6e741213756c381c0e
  data ToResolve
    = TypeClassToResolve (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.ClassName)
    | SynonymToResolve (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                       Language.PureScript.Types.Type
be663fda0cfc2844438bfef2feb2d1f7
  convertDecl ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Data.Either.Either
         Language.PureScript.Ide.Externs.ToResolve
         (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (ed :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ed of wild {
                   Language.PureScript.Externs.EDType ds ds1 ds2
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclType
                              (Language.PureScript.Ide.Types.IdeType
                                 ds
                                 ds1
                                 (GHC.Types.[]
                                    @ (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ConstructorName,
                                       Language.PureScript.Types.Type)))))
                   Language.PureScript.Externs.EDTypeSynonym ds ds1 ds2
                   -> Data.Either.Left
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (Language.PureScript.Ide.Externs.SynonymToResolve ds ds2)
                   Language.PureScript.Externs.EDDataConstructor ds ds1 ds2 ds3 ds4
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclDataConstructor
                              (Language.PureScript.Ide.Types.IdeDataConstructor ds ds2 ds3)))
                   Language.PureScript.Externs.EDValue ds ds1
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclValue
                              (Language.PureScript.Ide.Types.IdeValue ds ds1)))
                   Language.PureScript.Externs.EDClass ds ds1 ds2 ds3 ds4
                   -> Data.Either.Left
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (Language.PureScript.Ide.Externs.TypeClassToResolve ds)
                   Language.PureScript.Externs.EDInstance ds ds1 ds2 ds3 ds4 ds5
                   -> Language.PureScript.Ide.Externs.convertExterns4
                   Language.PureScript.Externs.EDKind ds
                   -> Data.Either.Right
                        @ Language.PureScript.Ide.Externs.ToResolve
                        @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                        (GHC.Base.Just
                           @ Language.PureScript.Ide.Types.IdeDeclaration
                           (Language.PureScript.Ide.Types.IdeDeclKind ds)) }) -}
fb8a7611131158744a908af5dafe2ce0
  convertExport ::
    Language.PureScript.AST.Declarations.DeclarationRef
    -> GHC.Base.Maybe
         (Language.PureScript.Names.ModuleName,
          Language.PureScript.AST.Declarations.DeclarationRef)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.Declarations.DeclarationRef) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Base.Nothing
                        @ (Language.PureScript.Names.ModuleName,
                           Language.PureScript.AST.Declarations.DeclarationRef)
                   Language.PureScript.AST.Declarations.ReExportRef ds1 m r
                   -> GHC.Base.Just
                        @ (Language.PureScript.Names.ModuleName,
                           Language.PureScript.AST.Declarations.DeclarationRef)
                        (m, r) }) -}
7c7045db41fe4488180d91efb674c757
  convertExterns ::
    Language.PureScript.Externs.ExternsFile
    -> ([Language.PureScript.Ide.Types.IdeDeclarationAnn],
        [(Language.PureScript.Names.ModuleName,
          Language.PureScript.AST.Declarations.DeclarationRef)])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(A,A,U,A,U,U,U,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFile) ->
                 case Language.PureScript.Ide.Externs.$wconvertExterns
                        w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
a33ce17812cd784488b927eb8ddf1d87
  convertExterns1 ::
    [Language.PureScript.Ide.Externs.ToResolve]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
c570148279efafae973b0d8f6deac51f
  convertExterns2 ::
    [Language.PureScript.Ide.Externs.ToResolve]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
    -> [Language.PureScript.Ide.Types.IdeDeclaration]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
0346c6e7db1046508572ab37a8a698f1
  convertExterns3 ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Language.PureScript.Ide.Types.IdeDeclarationAnn
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 Language.PureScript.Ide.Types.IdeDeclarationAnn
                   Language.PureScript.Ide.Types.emptyAnn
                   (case x of wild { Language.PureScript.Externs.ExternsTypeFixity ds ds1 ds2 ds3 ->
                    Language.PureScript.Ide.Types.IdeDeclTypeOperator
                      (Language.PureScript.Ide.Types.IdeTypeOperator
                         ds2
                         ds3
                         ds1
                         ds
                         (GHC.Base.Nothing @ Language.PureScript.Kinds.Kind)) })) -}
3621ffd59f0807b418b363131615f367
  convertExterns4 ::
    Data.Either.Either
      Language.PureScript.Ide.Externs.ToResolve
      (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Language.PureScript.Ide.Externs.ToResolve
                   @ (GHC.Base.Maybe Language.PureScript.Ide.Types.IdeDeclaration)
                   (GHC.Base.Nothing
                      @ Language.PureScript.Ide.Types.IdeDeclaration)) -}
a25dd6132b40caf809ab60824ba22af2
  readExternFile ::
    (Control.Monad.IO.Class.MonadIO m,
     Control.Monad.Error.Class.MonadError
       Language.PureScript.Ide.Error.IdeError m,
     Control.Monad.Logger.MonadLogger m) =>
    GHC.IO.FilePath -> m Language.PureScript.Externs.ExternsFile
  {- Arity: 4,
     Strictness: <S(S(LC(C(S))LLL)L),U(1*U(1*U(A,C(U),A,A,A,A),1*C1(C1(U)),C(C1(U)),A,A),1*C1(U))><L,U(A,C(U),A)><L,U(A,C(C1(C1(C1(C1(U))))))><L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

