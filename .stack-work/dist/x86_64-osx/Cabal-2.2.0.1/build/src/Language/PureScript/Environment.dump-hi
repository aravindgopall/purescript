
==================== FINAL INTERFACE ====================
2019-01-24 14:13:55.450586 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment [family instance module] 8043
  interface hash: 9d58bad67c4d2042285239be2295db84
  ABI hash: 467b25d81b890e1aaabe28d0f09d192d
  export-list hash: a0cb6cb8c78c56365f58c9f88d1fe000
  orphan hash: e8031a705adc50f5b29519ee7178201a
  flag hash: 4ebcce6d18a0f87d1e176e401bb022d3
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Environment.-:>
  Language.PureScript.Environment.allPrimClasses
  Language.PureScript.Environment.allPrimKinds
  Language.PureScript.Environment.allPrimTypes
  Language.PureScript.Environment.function
  Language.PureScript.Environment.initEnvironment
  Language.PureScript.Environment.isFunction
  Language.PureScript.Environment.isKindType
  Language.PureScript.Environment.isNewtypeConstructor
  Language.PureScript.Environment.isObject
  Language.PureScript.Environment.isTypeOrApplied
  Language.PureScript.Environment.kindBoolean
  Language.PureScript.Environment.kindConstraint
  Language.PureScript.Environment.kindDoc
  Language.PureScript.Environment.kindOrdering
  Language.PureScript.Environment.kindRow
  Language.PureScript.Environment.kindRowList
  Language.PureScript.Environment.kindSymbol
  Language.PureScript.Environment.kindType
  Language.PureScript.Environment.lookupConstructor
  Language.PureScript.Environment.lookupValue
  Language.PureScript.Environment.makeTypeClassData
  Language.PureScript.Environment.primBooleanKinds
  Language.PureScript.Environment.primBooleanTypes
  Language.PureScript.Environment.primClasses
  Language.PureScript.Environment.primKind
  Language.PureScript.Environment.primKinds
  Language.PureScript.Environment.primName
  Language.PureScript.Environment.primOrderingKinds
  Language.PureScript.Environment.primOrderingTypes
  Language.PureScript.Environment.primRowClasses
  Language.PureScript.Environment.primRowListClasses
  Language.PureScript.Environment.primRowListKinds
  Language.PureScript.Environment.primRowListTypes
  Language.PureScript.Environment.primRowTypes
  Language.PureScript.Environment.primSubKind
  Language.PureScript.Environment.primSubName
  Language.PureScript.Environment.primSymbolClasses
  Language.PureScript.Environment.primSymbolTypes
  Language.PureScript.Environment.primTy
  Language.PureScript.Environment.primTypeErrorClasses
  Language.PureScript.Environment.primTypeErrorKinds
  Language.PureScript.Environment.primTypeErrorTypes
  Language.PureScript.Environment.primTypes
  Language.PureScript.Environment.showDataDeclType
  Language.PureScript.Environment.tyArray
  Language.PureScript.Environment.tyBoolean
  Language.PureScript.Environment.tyChar
  Language.PureScript.Environment.tyFunction
  Language.PureScript.Environment.tyInt
  Language.PureScript.Environment.tyNumber
  Language.PureScript.Environment.tyRecord
  Language.PureScript.Environment.tyString
  Language.PureScript.Environment.DataDeclType{Language.PureScript.Environment.Data Language.PureScript.Environment.Newtype}
  Language.PureScript.Environment.Environment{Language.PureScript.Environment.Environment dataConstructors kinds names typeClassDictionaries typeClasses typeSynonyms types}
  Language.PureScript.Environment.FunctionalDependency{Language.PureScript.Environment.FunctionalDependency fdDetermined fdDeterminers}
  Language.PureScript.Environment.NameKind{Language.PureScript.Environment.External Language.PureScript.Environment.Private Language.PureScript.Environment.Public}
  Language.PureScript.Environment.NameVisibility{Language.PureScript.Environment.Defined Language.PureScript.Environment.Undefined}
  Language.PureScript.Environment.TypeClassData{Language.PureScript.Environment.TypeClassData typeClassArguments typeClassCoveringSets typeClassDependencies typeClassDeterminedArguments typeClassMembers typeClassSuperclasses}
  Language.PureScript.Environment.TypeKind{Language.PureScript.Environment.DataType Language.PureScript.Environment.ExternData Language.PureScript.Environment.LocalTypeVariable Language.PureScript.Environment.ScopedTypeVar Language.PureScript.Environment.TypeSynonym}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST.SourcePos
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
package dependencies: aeson-1.3.1.1 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      scientific-0.3.6.2 stm-2.4.5.0 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.1
orphans: stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List.NonEmpty 595ee3baddcadebc4831ea7541427984
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Graph 62516cbabce0b5240500dc0da6a9b2cf
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Set 7d3c64a641be4cacbcd8119445bab919
import  -/  containers-0.5.11.0:Data.Set.Internal 93fa3ef95853aa2a7aadf32d693bd451
import  -/  containers-0.5.11.0:Data.Tree 334e5590b70599cff00c9af57a2f6140
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.List 3a80368167450d7a4360ebf1ea443345
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  exports: a1e32a05596348684f99f9072c553e2b
  nullSourceAnn f2dcb0c4d24a9cde0192cde9ecb60353
import  -/  Language.PureScript.Constants 69f48af5637c1cbbd07a6f85918359c3
  exports: 9c458e31ccbc9e07ff15471cf48a55ee
  doc 10b13c9b8d3c0be64325a4cb442179b1
  kindBoolean 8ab3cdf0a4367c672c8c9fc3695cb0a8
  kindOrdering 5772fe8489f4cfc8dd925d792c8f32d3
  kindRowList 6f6decd2c797aa973a3b8e8c49916dc8
  moduleBoolean fb600d6a4ee6fc6b178672ec8ca63524
  moduleOrdering d012d994d3d9a7b11689f1c13508fd48
  moduleRow bc0c40c2c88e76c7666b335dc9187a48
  moduleRowList a765432eeaca44befb81da7505b868e9
  moduleSymbol d28141499c7221ef4bf17c1379213adf
  prim aafaa42bb1179c6de3b49805eaa34c53
  symbol c71db3b329a5b308dfa153200af8a77c
  typ 6124b5b3795490aba7d42c6d56224669
  typeError 5c420dce614f2b372e246965fff0c014
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  exports: fe71635ad7964c0d620fb0685614a050
  FunKind 0560a3ce54d445316be516294eb33990
  Kind 5e0361ee324aa435f4976ea2eac1777d
  NamedKind b009a23b35083771c6f52aa92ab5803a
  Row 4c775745b04b676c03977288680c928b
  SourceKind 4cdf50d4b2444221832ca704f3a0c468
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  ConstructorName 84054a8bbbe827ba2ce7da83056a95ee
  Ident bad3562aa6138b6192713ac281080869
  KindName 7782d66ce60bd67282cf566485701e07
  ModuleName e77bf9e056798332a9668212060e8e06
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  ProperName f69d3801241fcb4773f1284cd28f2dee
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  TypeName 40ce511c66a72431b4e87351210f7b03
import  -/  Language.PureScript.TypeClassDictionaries 7fbd42662a194b8e85db9d2e22a4ea07
  exports: d83fdf73223cc4030d8649333c7594ad
  NamedDict 5e215d8e3d225869af57b18c7fc0b693
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  exports: 229bb7528146da886cffbefad5822e19
  SourceConstraint b73f205dd83ce498c3119d8c9316f0c6
  SourceType 0ac818517c14fedd280ef5885ae0cdc3
  Type d5fc19231e8a71936895da17eade4f5b
  TypeApp 9dadf19674ff2d747cbba0c42dfad343
  TypeConstructor c7b7bcec494a17e684a206aeb55ef57b
  eqType d5fc19231e8a71936895da17eade4f5b
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
fixities infixr 4 -:>
7eb61fe78108d98d82e39145869b2402
  $fEqDataDeclType ::
    GHC.Classes.Eq Language.PureScript.Environment.DataDeclType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.DataDeclType
                  Language.PureScript.Environment.$fEqDataDeclType_$c==
                  Language.PureScript.Environment.$fEqDataDeclType_$c/= -}
7eb61fe78108d98d82e39145869b2402
  $fEqDataDeclType_$c/= ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType)
                   (y :: Language.PureScript.Environment.DataDeclType) ->
                 case x of wild {
                   Language.PureScript.Environment.Data
                   -> case y of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.False
                        Language.PureScript.Environment.Newtype -> GHC.Types.True }
                   Language.PureScript.Environment.Newtype
                   -> case y of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.True
                        Language.PureScript.Environment.Newtype -> GHC.Types.False } }) -}
7eb61fe78108d98d82e39145869b2402
  $fEqDataDeclType_$c== ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Environment.DataDeclType)
                   (ds1 :: Language.PureScript.Environment.DataDeclType) ->
                 case ds of wild {
                   Language.PureScript.Environment.Data
                   -> case ds1 of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.True
                        Language.PureScript.Environment.Newtype -> GHC.Types.False }
                   Language.PureScript.Environment.Newtype
                   -> case ds1 of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.False
                        Language.PureScript.Environment.Newtype -> GHC.Types.True } }) -}
7e23f4ddba2350405f465a39833424c7
  $fEqNameKind ::
    GHC.Classes.Eq Language.PureScript.Environment.NameKind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.NameKind
                  Language.PureScript.Environment.$fEqNameKind_$c==
                  Language.PureScript.Environment.$fEqNameKind_$c/= -}
7e23f4ddba2350405f465a39833424c7
  $fEqNameKind_$c/= ::
    Language.PureScript.Environment.NameKind
    -> Language.PureScript.Environment.NameKind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Environment.NameKind)
                   (y :: Language.PureScript.Environment.NameKind) ->
                 case x of wild {
                   Language.PureScript.Environment.Private
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Language.PureScript.Environment.Private -> GHC.Types.False }
                   Language.PureScript.Environment.Public
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Language.PureScript.Environment.Public -> GHC.Types.False }
                   Language.PureScript.Environment.External
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Language.PureScript.Environment.External -> GHC.Types.False } }) -}
7e23f4ddba2350405f465a39833424c7
  $fEqNameKind_$c== ::
    Language.PureScript.Environment.NameKind
    -> Language.PureScript.Environment.NameKind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Environment.NameKind)
                   (ds1 :: Language.PureScript.Environment.NameKind) ->
                 case ds of wild {
                   Language.PureScript.Environment.Private
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.Private -> GHC.Types.True }
                   Language.PureScript.Environment.Public
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.Public -> GHC.Types.True }
                   Language.PureScript.Environment.External
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.External -> GHC.Types.True } }) -}
22706fecc369659455f7dc5f13f3340f
  $fEqNameVisibility ::
    GHC.Classes.Eq Language.PureScript.Environment.NameVisibility
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.NameVisibility
                  Language.PureScript.Environment.$fEqNameVisibility_$c==
                  Language.PureScript.Environment.$fEqNameVisibility_$c/= -}
22706fecc369659455f7dc5f13f3340f
  $fEqNameVisibility_$c/= ::
    Language.PureScript.Environment.NameVisibility
    -> Language.PureScript.Environment.NameVisibility -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Environment.NameVisibility)
                   (y :: Language.PureScript.Environment.NameVisibility) ->
                 case x of wild {
                   Language.PureScript.Environment.Undefined
                   -> case y of wild1 {
                        Language.PureScript.Environment.Undefined -> GHC.Types.False
                        Language.PureScript.Environment.Defined -> GHC.Types.True }
                   Language.PureScript.Environment.Defined
                   -> case y of wild1 {
                        Language.PureScript.Environment.Undefined -> GHC.Types.True
                        Language.PureScript.Environment.Defined -> GHC.Types.False } }) -}
22706fecc369659455f7dc5f13f3340f
  $fEqNameVisibility_$c== ::
    Language.PureScript.Environment.NameVisibility
    -> Language.PureScript.Environment.NameVisibility -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Environment.NameVisibility)
                   (ds1 :: Language.PureScript.Environment.NameVisibility) ->
                 case ds of wild {
                   Language.PureScript.Environment.Undefined
                   -> case ds1 of wild1 {
                        Language.PureScript.Environment.Undefined -> GHC.Types.True
                        Language.PureScript.Environment.Defined -> GHC.Types.False }
                   Language.PureScript.Environment.Defined
                   -> case ds1 of wild1 {
                        Language.PureScript.Environment.Undefined -> GHC.Types.False
                        Language.PureScript.Environment.Defined -> GHC.Types.True } }) -}
713362c52c19b15de0cab368ddfda667
  $fEqTypeKind ::
    GHC.Classes.Eq Language.PureScript.Environment.TypeKind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeKind
                  Language.PureScript.Environment.$fEqTypeKind_$c==
                  Language.PureScript.Environment.$fEqTypeKind_$c/= -}
713362c52c19b15de0cab368ddfda667
  $fEqTypeKind_$c/= ::
    Language.PureScript.Environment.TypeKind
    -> Language.PureScript.Environment.TypeKind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Environment.TypeKind)
                   (y :: Language.PureScript.Environment.TypeKind) ->
                 case Language.PureScript.Environment.$fEqTypeKind_$c==
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
713362c52c19b15de0cab368ddfda667
  $fEqTypeKind_$c== ::
    Language.PureScript.Environment.TypeKind
    -> Language.PureScript.Environment.TypeKind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Environment.TypeKind)
                   (ds1 :: Language.PureScript.Environment.TypeKind) ->
                 case ds of wild {
                   Language.PureScript.Environment.DataType a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.DataType b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (Data.Text.Internal.Text,
                                     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                                  Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)1
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName,
                                     [Language.PureScript.Types.SourceType])
                                  Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)
                                  a2
                                  b2 } }
                   Language.PureScript.Environment.TypeSynonym
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.TypeSynonym -> GHC.Types.True }
                   Language.PureScript.Environment.ExternData
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.ExternData -> GHC.Types.True }
                   Language.PureScript.Environment.LocalTypeVariable
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.LocalTypeVariable
                        -> GHC.Types.True }
                   Language.PureScript.Environment.ScopedTypeVar
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Environment.ScopedTypeVar
                        -> GHC.Types.True } }) -}
90c4f8cdeaf8ff7bb180ff40c4fbb9fc
  $fEqTypeKind_$s$fEq(,) ::
    GHC.Classes.Eq
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName,
       [Language.PureScript.Types.SourceType])
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.ProperName
                       'Language.PureScript.Names.ConstructorName,
                     [Language.PureScript.Types.SourceType])
                  (GHC.Classes.$fEq(,)_$c==
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     @ [Language.PureScript.Types.SourceType]
                     (Language.PureScript.Names.$fEqProperName
                        @ 'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Environment.$fEqTypeKind_$s$fEq[])
                  Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)_$c/= -}
64ae0b8b3ebba5afeaa748a72708839f
  $fEqTypeKind_$s$fEq(,)1 ::
    GHC.Classes.Eq
      (Data.Text.Internal.Text,
       GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Text.Internal.Text,
                     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                  (GHC.Classes.$fEq(,)_$c==
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                     Data.Text.$fEqText
                     Language.PureScript.Environment.$fEqTypeKind_$s$fEqMaybe)
                  Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)_$c/=1 -}
e332d6b9da7ab5d9d19f980ec683f7ca
  $fEqTypeKind_$s$fEq(,)_$c/= ::
    (Language.PureScript.Names.ProperName
       'Language.PureScript.Names.ConstructorName,
     [Language.PureScript.Types.SourceType])
    -> (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ConstructorName,
        [Language.PureScript.Types.SourceType])
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.ConstructorName,
                          [Language.PureScript.Types.SourceType]))
                   (y :: (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.ConstructorName,
                          [Language.PureScript.Types.SourceType])) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case a1
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ConstructorName>_P) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ConstructorName>_P) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Classes.eqInt
                        (GHC.Types.I# dt2)
                        (GHC.Types.I# dt5) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Int.eqInt32
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                             (GHC.Int.I32# 0#) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (Language.PureScript.Types.Type
                                       Language.PureScript.AST.SourcePos.SourceAnn)
                                  (Language.PureScript.Types.$fEqType
                                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                        [Language.PureScript.Comments.Comment]))
                                  a2
                                  b2 of wild7 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } } } } } } }) -}
cfccf275b0d5653e5278c05b10bbd17b
  $fEqTypeKind_$s$fEq(,)_$c/=1 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
    -> (Data.Text.Internal.Text,
        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (Data.Text.Internal.Text,
                          GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))
                   (y :: (Data.Text.Internal.Text,
                          GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case a1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Classes.eqInt
                        (GHC.Types.I# dt2)
                        (GHC.Types.I# dt5) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Int.eqInt32
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                             (GHC.Int.I32# 0#) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case a2 of wild7 {
                             GHC.Base.Nothing
                             -> case b2 of wild8 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just ipv -> GHC.Types.True }
                             GHC.Base.Just a4
                             -> case b2 of wild8 {
                                  GHC.Base.Nothing -> GHC.Types.True
                                  GHC.Base.Just b4
                                  -> case Language.PureScript.Kinds.eqKind
                                            @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                               [Language.PureScript.Comments.Comment])
                                            @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                               [Language.PureScript.Comments.Comment])
                                            a4
                                            b4 of wild9 {
                                       GHC.Types.False -> GHC.Types.True
                                       GHC.Types.True -> GHC.Types.False } } } } } } } } } }) -}
f3875ffd5346b05dffb2f93c9b83f9f1
  $fEqTypeKind_$s$fEqMaybe ::
    GHC.Classes.Eq
      (GHC.Base.Maybe
         (Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe
                       (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn))
                  (\ (ds :: GHC.Base.Maybe
                              (Language.PureScript.Kinds.Kind
                                 Language.PureScript.AST.SourcePos.SourceAnn))
                     (ds1 :: GHC.Base.Maybe
                               (Language.PureScript.Kinds.Kind
                                  Language.PureScript.AST.SourcePos.SourceAnn)) ->
                   case ds of wild {
                     GHC.Base.Nothing
                     -> case ds1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just ipv -> GHC.Types.False }
                     GHC.Base.Just a1
                     -> case ds1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just b1
                          -> Language.PureScript.Kinds.eqKind
                               @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                  [Language.PureScript.Comments.Comment])
                               @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                  [Language.PureScript.Comments.Comment])
                               a1
                               b1 } })
                  Language.PureScript.Environment.$fEqTypeKind_$s$fEqMaybe_$c/= -}
21d829d19c67439ba8ab02ca5cac12e7
  $fEqTypeKind_$s$fEqMaybe_$c/= ::
    GHC.Base.Maybe
      (Language.PureScript.Kinds.Kind
         Language.PureScript.AST.SourcePos.SourceAnn)
    -> GHC.Base.Maybe
         (Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: GHC.Base.Maybe
                           (Language.PureScript.Kinds.Kind
                              Language.PureScript.AST.SourcePos.SourceAnn))
                   (y :: GHC.Base.Maybe
                           (Language.PureScript.Kinds.Kind
                              Language.PureScript.AST.SourcePos.SourceAnn)) ->
                 case x of wild {
                   GHC.Base.Nothing
                   -> case y of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just ipv -> GHC.Types.True }
                   GHC.Base.Just a1
                   -> case y of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just b1
                        -> case Language.PureScript.Kinds.eqKind
                                  @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                     [Language.PureScript.Comments.Comment])
                                  @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                     [Language.PureScript.Comments.Comment])
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
c77f23e74c0ffca80a03bebd8300e04e
  $fEqTypeKind_$s$fEq[] ::
    GHC.Classes.Eq
      [Language.PureScript.Types.Type
         Language.PureScript.AST.SourcePos.SourceAnn]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Types.Type
                       Language.PureScript.AST.SourcePos.SourceAnn]
                  (GHC.Classes.$fEq[]_$c==
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     (Language.PureScript.Types.$fEqType
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])))
                  Language.PureScript.Environment.$fEqTypeKind_$s$fEq[]_$c/= -}
bfef3006a84a3a48664ee9625b1762ac
  $fEqTypeKind_$s$fEq[]_$c/= ::
    [Language.PureScript.Types.Type
       Language.PureScript.AST.SourcePos.SourceAnn]
    -> [Language.PureScript.Types.Type
          Language.PureScript.AST.SourcePos.SourceAnn]
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Language.PureScript.Types.Type
                            Language.PureScript.AST.SourcePos.SourceAnn])
                   (y :: [Language.PureScript.Types.Type
                            Language.PureScript.AST.SourcePos.SourceAnn]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn)
                        (Language.PureScript.Types.$fEqType
                           @ (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment]))
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Environment.DataDeclType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.DataDeclType
                  Language.PureScript.Environment.$fFromJSONDataDeclType_$cparseJSON
                  Language.PureScript.Environment.$fFromJSONDataDeclType_$cparseJSONList -}
59def0db6b6ab69e609b81c17cc3d325
  $fFromJSONDataDeclType1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
cae156596d9073ffd2044f097bb648be
  $fFromJSONDataDeclType10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fFromJSONDataDeclType11) -}
c31dfd1340d578b8a8524018da117df9
  $fFromJSONDataDeclType11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("newtype"#) -}
9798e0dc30187af19cd986826e9cd3cd
  $fFromJSONDataDeclType12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fFromJSONDataDeclType13) -}
843b069879cb7c519b1f9218ab6a2b75
  $fFromJSONDataDeclType13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("data"#) -}
bac0a3739170a6e347ef89383c64113d
  $fFromJSONDataDeclType14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fFromJSONDataDeclType15) -}
b8a6091428e1c34c89908c497962a2ca
  $fFromJSONDataDeclType15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DataDeclType"#) -}
6061e6bdb6c822c7b23514ccd3d9a1d1
  $fFromJSONDataDeclType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
583a4b2ce080ba17b0e985a94257263b
  $fFromJSONDataDeclType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType4 ::
    Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Environment.DataDeclType
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Language.PureScript.Environment.$w$cparseJSON ww1 ww2 ww3 }) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType5 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success
         Language.PureScript.Environment.DataDeclType f4 r
    -> f4 r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (3, True, True)
                (\ @ f4 :: * -> *
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (ks :: Data.Aeson.Types.Internal.Success
                            Language.PureScript.Environment.DataDeclType f4 r) ->
                 ks Language.PureScript.Environment.Data) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType6 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success
         Language.PureScript.Environment.DataDeclType f4 r
    -> f4 r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (3, True, True)
                (\ @ f4 :: * -> *
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (ks :: Data.Aeson.Types.Internal.Success
                            Language.PureScript.Environment.DataDeclType f4 r) ->
                 ks Language.PureScript.Environment.Newtype) -}
7dd044fe04392af7616a15d1f6a26094
  $fFromJSONDataDeclType7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fFromJSONDataDeclType8) -}
95e4fbd4f402628786d5b972e5a0903c
  $fFromJSONDataDeclType8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'"#) -}
9c626a59bf2118642f4c26c086d3d523
  $fFromJSONDataDeclType9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("invalid type: '"#) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Environment.DataDeclType
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.FromJSON.withText
                   @ Language.PureScript.Environment.DataDeclType
                   Language.PureScript.Environment.$fFromJSONDataDeclType14
                   Language.PureScript.Environment.$fFromJSONDataDeclType4) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Environment.DataDeclType]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg5 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Environment.$fFromJSONDataDeclType3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Environment.$fFromJSONDataDeclType2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Environment.$fFromJSONDataDeclType1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Environment.DataDeclType] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg5)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Environment.DataDeclType]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Environment.$fFromJSONDataDeclType_go
                        0#
                        ($wgo 0#) } }) -}
7eb61fe78108d98d82e39145869b2402
  $fFromJSONDataDeclType_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Environment.DataDeclType]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
181e7295489b314c6c042d61e80bb6b9
  $fFromJSONFunctionalDependency ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Environment.FunctionalDependency
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.FunctionalDependency
                  Language.PureScript.Environment.$fFromJSONFunctionalDependency_$cparseJSON
                  Language.PureScript.Environment.$fFromJSONFunctionalDependency_$cparseJSONList -}
181e7295489b314c6c042d61e80bb6b9
  $fFromJSONFunctionalDependency1 ::
    Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Environment.FunctionalDependency
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (o :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
                   = case Language.PureScript.Environment.$fFromJSONFunctionalDependency9 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                     case Data.Aeson.Types.FromJSON.$w$slookup
                            @ Data.Aeson.Types.Internal.Value
                            ww1
                            ww2
                            ww3
                            o of wild {
                       GHC.Base.Nothing
                       -> Language.PureScript.Environment.$fFromJSONFunctionalDependency11
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R))
                       GHC.Base.Just v
                       -> let {
                            p1 :: Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
                            = Data.Aeson.Types.FromJSON.$fFromJSON1IntMap_$cparseJSONList v
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (ks :: Data.Aeson.Types.Internal.Success
                                      [GHC.Types.Int] f4 r)[OneShot] ->
                           p1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R)
                             @ f4
                             @ r
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.JSONPathElement
                                Language.PureScript.Environment.$fFromJSONFunctionalDependency_pathElem1
                                path)
                             kf
                             ks)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Int]>_R)) } }
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
                   = case Language.PureScript.Environment.$fFromJSONFunctionalDependency2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                     case Data.Aeson.Types.FromJSON.$w$slookup
                            @ Data.Aeson.Types.Internal.Value
                            ww1
                            ww2
                            ww3
                            o of wild {
                       GHC.Base.Nothing
                       -> Language.PureScript.Environment.$fFromJSONFunctionalDependency4
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R))
                       GHC.Base.Just v
                       -> let {
                            p1 :: Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
                            = Data.Aeson.Types.FromJSON.$fFromJSON1IntMap_$cparseJSONList v
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (ks :: Data.Aeson.Types.Internal.Success
                                      [GHC.Types.Int] f4 r)[OneShot] ->
                           p1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R)
                             @ f4
                             @ r
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.JSONPathElement
                                Language.PureScript.Environment.$fFromJSONFunctionalDependency_pathElem16
                                path)
                             kf
                             ks)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Int]>_R)) } }
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             Language.PureScript.Environment.FunctionalDependency f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a1 :: [GHC.Types.Int]) ->
                     e `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a2 :: [GHC.Types.Int]) ->
                        ks (Language.PureScript.Environment.FunctionalDependency a1 a2))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Language.PureScript.Environment.FunctionalDependency>_R))) -}
f2a0b6838969081772a825ea4c004741
  $fFromJSONFunctionalDependency10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("determiners"#) -}
09d5c6356307c9063ad89c0369beab69
  $fFromJSONFunctionalDependency11 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success [GHC.Types.Int] f4 r
    -> f4 r
  {- Arity: 3, Strictness: <L,1*U><C(C(S)),1*C1(C1(U))><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ f4 :: * -> *
                   @ r
                   (path :: Data.Aeson.Types.Internal.JSONPath)
                   (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (_ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Int] f4 r) ->
                 kf
                   (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency_msg1) -}
f6cb54fa703f8d3687848511f6be83a9
  $fFromJSONFunctionalDependency12 :: [GHC.Types.Char]
  {- Unfolding: (case Data.Text.Show.$w$cshow
                        Language.PureScript.Environment.$fFromJSONFunctionalDependency9 of ww { (#,#) ww1 ww2 ->
                 GHC.Base.++_$s++
                   @ GHC.Types.Char
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency6
                   ww1
                   ww2 }) -}
380f0ae75621dcac66a7803c023c35ac
  $fFromJSONFunctionalDependency13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency14) -}
9c43ad849f68083bad93e523562dbeda
  $fFromJSONFunctionalDependency14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FunctionalDependency"#) -}
c3e6c380c5ba0714633b7a5d65b53afd
  $fFromJSONFunctionalDependency2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency3) -}
4ed013edac2f80316676c68442e3a1a2
  $fFromJSONFunctionalDependency3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("determined"#) -}
8a43f3147dad254d8453b3fbec94a2bf
  $fFromJSONFunctionalDependency4 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success [GHC.Types.Int] f4 r
    -> f4 r
  {- Arity: 3, Strictness: <L,1*U><C(C(S)),1*C1(C1(U))><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ f4 :: * -> *
                   @ r
                   (path :: Data.Aeson.Types.Internal.JSONPath)
                   (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (_ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Int] f4 r) ->
                 kf
                   (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency_msg19) -}
6832f531e8bbdf2bdf17b62c17f16367
  $fFromJSONFunctionalDependency5 :: [GHC.Types.Char]
  {- Unfolding: (case Data.Text.Show.$w$cshow
                        Language.PureScript.Environment.$fFromJSONFunctionalDependency2 of ww { (#,#) ww1 ww2 ->
                 GHC.Base.++_$s++
                   @ GHC.Types.Char
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency6
                   ww1
                   ww2 }) -}
e32724b52abf71991b1b6ed4dc899d62
  $fFromJSONFunctionalDependency6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency7) -}
56e35e56a368d5ea8ecad9946b85bab1
  $fFromJSONFunctionalDependency7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" not present"#) -}
ef853f0058f92162d348d6aae4985ae2
  $fFromJSONFunctionalDependency8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("key "#) -}
23ec89312ac2253007f759910bfda453
  $fFromJSONFunctionalDependency9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency10) -}
181e7295489b314c6c042d61e80bb6b9
  $fFromJSONFunctionalDependency_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Environment.FunctionalDependency
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.FromJSON.withObject
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency13
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency1) -}
181e7295489b314c6c042d61e80bb6b9
  $fFromJSONFunctionalDependency_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Environment.FunctionalDependency]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg5 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Environment.$fFromJSONDataDeclType3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Environment.$fFromJSONDataDeclType2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Environment.$fFromJSONDataDeclType1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Environment.FunctionalDependency] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg5)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Environment.FunctionalDependency]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Environment.$fFromJSONFunctionalDependency_go
                        0#
                        ($wgo 0#) } }) -}
181e7295489b314c6c042d61e80bb6b9
  $fFromJSONFunctionalDependency_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Environment.FunctionalDependency]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
19e94b88d97fdbfd38d32f1bea0632dc
  $fFromJSONFunctionalDependency_msg1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency8
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency12) -}
28356467ee737e85147a19fcdf0b28d7
  $fFromJSONFunctionalDependency_msg19 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency8
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency5) -}
f8fe063d678ecb87eb019576e9684a8e
  $fFromJSONFunctionalDependency_pathElem1 ::
    Data.Aeson.Types.Internal.JSONPathElement
  {- Strictness: m1,
     Unfolding: (Data.Aeson.Types.Internal.Key
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency9) -}
89f5c4ccf5b94dc1e43a86206efffea3
  $fFromJSONFunctionalDependency_pathElem16 ::
    Data.Aeson.Types.Internal.JSONPathElement
  {- Strictness: m1,
     Unfolding: (Data.Aeson.Types.Internal.Key
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency2) -}
713362c52c19b15de0cab368ddfda667
  $fFromJSONTypeKind ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Environment.TypeKind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeKind
                  Language.PureScript.Environment.$fFromJSONTypeKind_$cparseJSON
                  Language.PureScript.Environment.$fFromJSONTypeKind_$cparseJSONList -}
713362c52c19b15de0cab368ddfda667
  $fFromJSONTypeKind_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Environment.TypeKind
  {- Arity: 1, Strictness: <S,1*U> -}
713362c52c19b15de0cab368ddfda667
  $fFromJSONTypeKind_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Environment.TypeKind]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg5 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Environment.$fFromJSONDataDeclType3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Environment.$fFromJSONDataDeclType2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Environment.$fFromJSONDataDeclType1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Environment.TypeKind] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg5)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Environment.TypeKind]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Environment.$fFromJSONTypeKind_go
                        0#
                        ($wgo 0#) } }) -}
713362c52c19b15de0cab368ddfda667
  $fFromJSONTypeKind_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Environment.TypeKind]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
7eb61fe78108d98d82e39145869b2402
  $fGenericDataDeclType ::
    GHC.Generics.Generic Language.PureScript.Environment.DataDeclType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.DataDeclType
                  Language.PureScript.Environment.$fGenericDataDeclType1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.DataDeclType>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "DataDeclType"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Newtype"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_DataDeclType[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericDataDeclType_$cto -}
7eb61fe78108d98d82e39145869b2402
  $fGenericDataDeclType1 ::
    Language.PureScript.Environment.DataDeclType
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.Environment.DataDeclType) ->
                 case x1 of wild {
                   Language.PureScript.Environment.Data
                   -> Language.PureScript.Environment.$fGenericDataDeclType3 @ x
                   Language.PureScript.Environment.Newtype
                   -> Language.PureScript.Environment.$fGenericDataDeclType2 @ x }) -}
b435659b7798eb31cc652b146e47860a
  $fGenericDataDeclType2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
e2ba1e4c55d764e4613000e61219495a
  $fGenericDataDeclType3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Data" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7eb61fe78108d98d82e39145869b2402
  $fGenericDataDeclType_$cto ::
    GHC.Generics.Rep Language.PureScript.Environment.DataDeclType x
    -> Language.PureScript.Environment.DataDeclType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.DataDeclType x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_DataDeclType[0]) ; GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.D>_P
                                                                                        <'GHC.Generics.MetaData
                                                                                           "DataDeclType"
                                                                                           "Language.PureScript.Environment"
                                                                                           "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                           'GHC.Types.False>_P
                                                                                        <GHC.Generics.M1
                                                                                           GHC.Generics.C
                                                                                           ('GHC.Generics.MetaCons
                                                                                              "Data"
                                                                                              'GHC.Generics.PrefixI
                                                                                              'GHC.Types.False)
                                                                                           GHC.Generics.U1
                                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                                            GHC.Generics.C
                                                                                                            ('GHC.Generics.MetaCons
                                                                                                               "Newtype"
                                                                                                               'GHC.Generics.PrefixI
                                                                                                               'GHC.Types.False)
                                                                                                            GHC.Generics.U1>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Data" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.U1>_R <x>_N) of wild1 { GHC.Generics.U1 ->
                      Language.PureScript.Environment.Data }
                   GHC.Generics.R1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.U1>_R <x>_N) of wild1 { GHC.Generics.U1 ->
                      Language.PureScript.Environment.Newtype } }) -}
7eb61fe78108d98d82e39145869b2402
  $fGenericEnvironment ::
    GHC.Generics.Generic Language.PureScript.Environment.Environment
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.Environment
                  Language.PureScript.Environment.$fGenericEnvironment1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.Environment>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Environment"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Environment" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "names")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            (Data.Map.Internal.Map
                                               (Language.PureScript.Names.Qualified
                                                  Language.PureScript.Names.Ident)
                                               (Language.PureScript.Types.SourceType,
                                                Language.PureScript.Environment.NameKind,
                                                Language.PureScript.Environment.NameVisibility)))
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "types")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              (Data.Map.Internal.Map
                                                                 (Language.PureScript.Names.Qualified
                                                                    (Language.PureScript.Names.ProperName
                                                                       'Language.PureScript.Names.TypeName))
                                                                 (Language.PureScript.Kinds.SourceKind,
                                                                  Language.PureScript.Environment.TypeKind)))
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "dataConstructors")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Data.Map.Internal.Map
                                                                                  (Language.PureScript.Names.Qualified
                                                                                     (Language.PureScript.Names.ProperName
                                                                                        'Language.PureScript.Names.ConstructorName))
                                                                                  (Language.PureScript.Environment.DataDeclType,
                                                                                   Language.PureScript.Names.ProperName
                                                                                     'Language.PureScript.Names.TypeName,
                                                                                   Language.PureScript.Types.SourceType,
                                                                                   [Language.PureScript.Names.Ident])))))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "typeSynonyms")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              (Data.Map.Internal.Map
                                                                 (Language.PureScript.Names.Qualified
                                                                    (Language.PureScript.Names.ProperName
                                                                       'Language.PureScript.Names.TypeName))
                                                                 ([(Data.Text.Internal.Text,
                                                                    GHC.Base.Maybe
                                                                      Language.PureScript.Kinds.SourceKind)],
                                                                  Language.PureScript.Types.SourceType)))
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "typeClassDictionaries")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Data.Map.Internal.Map
                                                                                  (GHC.Base.Maybe
                                                                                     Language.PureScript.Names.ModuleName)
                                                                                  (Data.Map.Internal.Map
                                                                                     (Language.PureScript.Names.Qualified
                                                                                        (Language.PureScript.Names.ProperName
                                                                                           'Language.PureScript.Names.ClassName))
                                                                                     (Data.Map.Internal.Map
                                                                                        (Language.PureScript.Names.Qualified
                                                                                           Language.PureScript.Names.Ident)
                                                                                        (GHC.Base.NonEmpty
                                                                                           Language.PureScript.TypeClassDictionaries.NamedDict))))))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "typeClasses")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Data.Map.Internal.Map
                                                                                  (Language.PureScript.Names.Qualified
                                                                                     (Language.PureScript.Names.ProperName
                                                                                        'Language.PureScript.Names.ClassName))
                                                                                  Language.PureScript.Environment.TypeClassData))
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "kinds")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (Data.Set.Internal.Set
                                                                                                   (Language.PureScript.Names.Qualified
                                                                                                      (Language.PureScript.Names.ProperName
                                                                                                         'Language.PureScript.Names.KindName)))))))>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_Environment[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericEnvironment_$cto -}
7eb61fe78108d98d82e39145869b2402
  $fGenericEnvironment1 ::
    Language.PureScript.Environment.Environment
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Environment" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "names")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R
                (Data.Map.Internal.Map
                   (Language.PureScript.Names.Qualified
                      Language.PureScript.Names.Ident)
                   (Language.PureScript.Types.SourceType,
                    Language.PureScript.Environment.NameKind,
                    Language.PureScript.Environment.NameVisibility)))
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "types")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName))
                                     (Language.PureScript.Kinds.SourceKind,
                                      Language.PureScript.Environment.TypeKind)))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "dataConstructors")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (Data.Map.Internal.Map
                                                      (Language.PureScript.Names.Qualified
                                                         (Language.PureScript.Names.ProperName
                                                            'Language.PureScript.Names.ConstructorName))
                                                      (Language.PureScript.Environment.DataDeclType,
                                                       Language.PureScript.Names.ProperName
                                                         'Language.PureScript.Names.TypeName,
                                                       Language.PureScript.Types.SourceType,
                                                       [Language.PureScript.Names.Ident])))))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeSynonyms")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName))
                                     ([(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                      Language.PureScript.Types.SourceType)))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "typeClassDictionaries")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (Data.Map.Internal.Map
                                                      (GHC.Base.Maybe
                                                         Language.PureScript.Names.ModuleName)
                                                      (Data.Map.Internal.Map
                                                         (Language.PureScript.Names.Qualified
                                                            (Language.PureScript.Names.ProperName
                                                               'Language.PureScript.Names.ClassName))
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               Language.PureScript.Names.Ident)
                                                            (GHC.Base.NonEmpty
                                                               Language.PureScript.TypeClassDictionaries.NamedDict))))))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "typeClasses")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (Data.Map.Internal.Map
                                                      (Language.PureScript.Names.Qualified
                                                         (Language.PureScript.Names.ProperName
                                                            'Language.PureScript.Names.ClassName))
                                                      Language.PureScript.Environment.TypeClassData))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "kinds")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (Data.Set.Internal.Set
                                                                       (Language.PureScript.Names.Qualified
                                                                          (Language.PureScript.Names.ProperName
                                                                             'Language.PureScript.Names.KindName)))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.Environment.Environment) ->
                 case x1 of wild { Language.PureScript.Environment.Environment g1 g2 g3 g4 g5 g6 g7 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "names")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            (Data.Map.Internal.Map
                               (Language.PureScript.Names.Qualified
                                  Language.PureScript.Names.Ident)
                               (Language.PureScript.Types.SourceType,
                                Language.PureScript.Environment.NameKind,
                                Language.PureScript.Environment.NameVisibility)))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "types")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (Data.Map.Internal.Map
                                                 (Language.PureScript.Names.Qualified
                                                    (Language.PureScript.Names.ProperName
                                                       'Language.PureScript.Names.TypeName))
                                                 (Language.PureScript.Kinds.SourceKind,
                                                  Language.PureScript.Environment.TypeKind)))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "dataConstructors")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (Data.Map.Internal.Map
                                                                  (Language.PureScript.Names.Qualified
                                                                     (Language.PureScript.Names.ProperName
                                                                        'Language.PureScript.Names.ConstructorName))
                                                                  (Language.PureScript.Environment.DataDeclType,
                                                                   Language.PureScript.Names.ProperName
                                                                     'Language.PureScript.Names.TypeName,
                                                                   Language.PureScript.Types.SourceType,
                                                                   [Language.PureScript.Names.Ident])))))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "typeSynonyms")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1
                             GHC.Generics.R
                             (Data.Map.Internal.Map
                                (Language.PureScript.Names.Qualified
                                   (Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.TypeName))
                                ([(Data.Text.Internal.Text,
                                   GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                 Language.PureScript.Types.SourceType)))
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "typeClassDictionaries")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (Data.Map.Internal.Map
                                                 (GHC.Base.Maybe
                                                    Language.PureScript.Names.ModuleName)
                                                 (Data.Map.Internal.Map
                                                    (Language.PureScript.Names.Qualified
                                                       (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.ClassName))
                                                    (Data.Map.Internal.Map
                                                       (Language.PureScript.Names.Qualified
                                                          Language.PureScript.Names.Ident)
                                                       (GHC.Base.NonEmpty
                                                          Language.PureScript.TypeClassDictionaries.NamedDict))))))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "typeClasses")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (Data.Map.Internal.Map
                                                 (Language.PureScript.Names.Qualified
                                                    (Language.PureScript.Names.ProperName
                                                       'Language.PureScript.Names.ClassName))
                                                 Language.PureScript.Environment.TypeClassData))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "kinds")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (Data.Set.Internal.Set
                                                                  (Language.PureScript.Names.Qualified
                                                                     (Language.PureScript.Names.ProperName
                                                                        'Language.PureScript.Names.KindName))))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "names")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Data.Map.Internal.Map
                                  (Language.PureScript.Names.Qualified
                                     Language.PureScript.Names.Ident)
                                  (Language.PureScript.Types.SourceType,
                                   Language.PureScript.Environment.NameKind,
                                   Language.PureScript.Environment.NameVisibility))))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "types")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Data.Map.Internal.Map
                                  (Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.TypeName))
                                  (Language.PureScript.Kinds.SourceKind,
                                   Language.PureScript.Environment.TypeKind)))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "dataConstructors")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (Data.Map.Internal.Map
                                                   (Language.PureScript.Names.Qualified
                                                      (Language.PureScript.Names.ProperName
                                                         'Language.PureScript.Names.ConstructorName))
                                                   (Language.PureScript.Environment.DataDeclType,
                                                    Language.PureScript.Names.ProperName
                                                      'Language.PureScript.Names.TypeName,
                                                    Language.PureScript.Types.SourceType,
                                                    [Language.PureScript.Names.Ident]))))
                       @ x
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       Language.PureScript.Names.Ident)
                                    (Language.PureScript.Types.SourceType,
                                     Language.PureScript.Environment.NameKind,
                                     Language.PureScript.Environment.NameVisibility)>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "names")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      (Data.Map.Internal.Map
                                                         (Language.PureScript.Names.Qualified
                                                            Language.PureScript.Names.Ident)
                                                         (Language.PureScript.Types.SourceType,
                                                          Language.PureScript.Environment.NameKind,
                                                          Language.PureScript.Environment.NameVisibility))>_R) <x>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "types")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName))
                                     (Language.PureScript.Kinds.SourceKind,
                                      Language.PureScript.Environment.TypeKind))))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "dataConstructors")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ConstructorName))
                                     (Language.PureScript.Environment.DataDeclType,
                                      Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.TypeName,
                                      Language.PureScript.Types.SourceType,
                                      [Language.PureScript.Names.Ident]))))
                          @ x
                          g2
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       (Language.PureScript.Names.Qualified
                                          (Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.TypeName))
                                       (Language.PureScript.Kinds.SourceKind,
                                        Language.PureScript.Environment.TypeKind)>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "types")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.TypeName))
                                                            (Language.PureScript.Kinds.SourceKind,
                                                             Language.PureScript.Environment.TypeKind))>_R) <x>_N)
                          g3
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       (Language.PureScript.Names.Qualified
                                          (Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.ConstructorName))
                                       (Language.PureScript.Environment.DataDeclType,
                                        Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.TypeName,
                                        Language.PureScript.Types.SourceType,
                                        [Language.PureScript.Names.Ident])>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "dataConstructors")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.ConstructorName))
                                                            (Language.PureScript.Environment.DataDeclType,
                                                             Language.PureScript.Names.ProperName
                                                               'Language.PureScript.Names.TypeName,
                                                             Language.PureScript.Types.SourceType,
                                                             [Language.PureScript.Names.Ident]))>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "typeSynonyms")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Data.Map.Internal.Map
                                  (Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.TypeName))
                                  ([(Data.Text.Internal.Text,
                                     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                   Language.PureScript.Types.SourceType)))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "typeClassDictionaries")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (Data.Map.Internal.Map
                                                   (GHC.Base.Maybe
                                                      Language.PureScript.Names.ModuleName)
                                                   (Data.Map.Internal.Map
                                                      (Language.PureScript.Names.Qualified
                                                         (Language.PureScript.Names.ProperName
                                                            'Language.PureScript.Names.ClassName))
                                                      (Data.Map.Internal.Map
                                                         (Language.PureScript.Names.Qualified
                                                            Language.PureScript.Names.Ident)
                                                         (GHC.Base.NonEmpty
                                                            Language.PureScript.TypeClassDictionaries.NamedDict))))))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "typeClasses")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Data.Map.Internal.Map
                                  (Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.ClassName))
                                  Language.PureScript.Environment.TypeClassData))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "kinds")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (Data.Set.Internal.Set
                                                   (Language.PureScript.Names.Qualified
                                                      (Language.PureScript.Names.ProperName
                                                         'Language.PureScript.Names.KindName)))))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeSynonyms")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName))
                                     ([(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                      Language.PureScript.Types.SourceType))))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassDictionaries")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                                     (Data.Map.Internal.Map
                                        (Language.PureScript.Names.Qualified
                                           (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.ClassName))
                                        (Data.Map.Internal.Map
                                           (Language.PureScript.Names.Qualified
                                              Language.PureScript.Names.Ident)
                                           (GHC.Base.NonEmpty
                                              Language.PureScript.TypeClassDictionaries.NamedDict))))))
                          @ x
                          g4
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       (Language.PureScript.Names.Qualified
                                          (Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.TypeName))
                                       ([(Data.Text.Internal.Text,
                                          GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                        Language.PureScript.Types.SourceType)>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeSynonyms")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.TypeName))
                                                            ([(Data.Text.Internal.Text,
                                                               GHC.Base.Maybe
                                                                 Language.PureScript.Kinds.SourceKind)],
                                                             Language.PureScript.Types.SourceType))>_R) <x>_N)
                          g5
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                                       (Data.Map.Internal.Map
                                          (Language.PureScript.Names.Qualified
                                             (Language.PureScript.Names.ProperName
                                                'Language.PureScript.Names.ClassName))
                                          (Data.Map.Internal.Map
                                             (Language.PureScript.Names.Qualified
                                                Language.PureScript.Names.Ident)
                                             (GHC.Base.NonEmpty
                                                Language.PureScript.TypeClassDictionaries.NamedDict)))>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClassDictionaries")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Map.Internal.Map
                                                            (GHC.Base.Maybe
                                                               Language.PureScript.Names.ModuleName)
                                                            (Data.Map.Internal.Map
                                                               (Language.PureScript.Names.Qualified
                                                                  (Language.PureScript.Names.ProperName
                                                                     'Language.PureScript.Names.ClassName))
                                                               (Data.Map.Internal.Map
                                                                  (Language.PureScript.Names.Qualified
                                                                     Language.PureScript.Names.Ident)
                                                                  (GHC.Base.NonEmpty
                                                                     Language.PureScript.TypeClassDictionaries.NamedDict))))>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClasses")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ClassName))
                                     Language.PureScript.Environment.TypeClassData)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "kinds")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Set.Internal.Set
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.KindName)))))
                          @ x
                          g6
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       (Language.PureScript.Names.Qualified
                                          (Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.ClassName))
                                       Language.PureScript.Environment.TypeClassData>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClasses")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.ClassName))
                                                            Language.PureScript.Environment.TypeClassData)>_R) <x>_N)
                          g7
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Set.Internal.Set
                                       (Language.PureScript.Names.Qualified
                                          (Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.KindName))>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "kinds")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Set.Internal.Set
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.KindName)))>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Environment" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "names")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        Language.PureScript.Names.Ident)
                                     (Language.PureScript.Types.SourceType,
                                      Language.PureScript.Environment.NameKind,
                                      Language.PureScript.Environment.NameVisibility)))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "types")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Data.Map.Internal.Map
                                                       (Language.PureScript.Names.Qualified
                                                          (Language.PureScript.Names.ProperName
                                                             'Language.PureScript.Names.TypeName))
                                                       (Language.PureScript.Kinds.SourceKind,
                                                        Language.PureScript.Environment.TypeKind)))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "dataConstructors")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Data.Map.Internal.Map
                                                                        (Language.PureScript.Names.Qualified
                                                                           (Language.PureScript.Names.ProperName
                                                                              'Language.PureScript.Names.ConstructorName))
                                                                        (Language.PureScript.Environment.DataDeclType,
                                                                         Language.PureScript.Names.ProperName
                                                                           'Language.PureScript.Names.TypeName,
                                                                         Language.PureScript.Types.SourceType,
                                                                         [Language.PureScript.Names.Ident])))))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "typeSynonyms")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Data.Map.Internal.Map
                                                       (Language.PureScript.Names.Qualified
                                                          (Language.PureScript.Names.ProperName
                                                             'Language.PureScript.Names.TypeName))
                                                       ([(Data.Text.Internal.Text,
                                                          GHC.Base.Maybe
                                                            Language.PureScript.Kinds.SourceKind)],
                                                        Language.PureScript.Types.SourceType)))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "typeClassDictionaries")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Data.Map.Internal.Map
                                                                        (GHC.Base.Maybe
                                                                           Language.PureScript.Names.ModuleName)
                                                                        (Data.Map.Internal.Map
                                                                           (Language.PureScript.Names.Qualified
                                                                              (Language.PureScript.Names.ProperName
                                                                                 'Language.PureScript.Names.ClassName))
                                                                           (Data.Map.Internal.Map
                                                                              (Language.PureScript.Names.Qualified
                                                                                 Language.PureScript.Names.Ident)
                                                                              (GHC.Base.NonEmpty
                                                                                 Language.PureScript.TypeClassDictionaries.NamedDict))))))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "typeClasses")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Data.Map.Internal.Map
                                                                        (Language.PureScript.Names.Qualified
                                                                           (Language.PureScript.Names.ProperName
                                                                              'Language.PureScript.Names.ClassName))
                                                                        Language.PureScript.Environment.TypeClassData))
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "kinds")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      (Data.Set.Internal.Set
                                                                                         (Language.PureScript.Names.Qualified
                                                                                            (Language.PureScript.Names.ProperName
                                                                                               'Language.PureScript.Names.KindName))))))>_R) <x>_N) }) -}
7eb61fe78108d98d82e39145869b2402
  $fGenericEnvironment_$cto ::
    GHC.Generics.Rep Language.PureScript.Environment.Environment x
    -> Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(SS)),1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.Environment x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_Environment[0]) ; (GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.D>_P
                                                                                        <'GHC.Generics.MetaData
                                                                                           "Environment"
                                                                                           "Language.PureScript.Environment"
                                                                                           "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                           'GHC.Types.False>_P
                                                                                        <GHC.Generics.M1
                                                                                           GHC.Generics.C
                                                                                           ('GHC.Generics.MetaCons
                                                                                              "Environment"
                                                                                              'GHC.Generics.PrefixI
                                                                                              'GHC.Types.True)
                                                                                           ((GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "names")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  (Data.Map.Internal.Map
                                                                                                     (Language.PureScript.Names.Qualified
                                                                                                        Language.PureScript.Names.Ident)
                                                                                                     (Language.PureScript.Types.SourceType,
                                                                                                      Language.PureScript.Environment.NameKind,
                                                                                                      Language.PureScript.Environment.NameVisibility)))
                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                 GHC.Generics.S
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Base.Just
                                                                                                                       "types")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.K1
                                                                                                                    GHC.Generics.R
                                                                                                                    (Data.Map.Internal.Map
                                                                                                                       (Language.PureScript.Names.Qualified
                                                                                                                          (Language.PureScript.Names.ProperName
                                                                                                                             'Language.PureScript.Names.TypeName))
                                                                                                                       (Language.PureScript.Kinds.SourceKind,
                                                                                                                        Language.PureScript.Environment.TypeKind)))
                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                  GHC.Generics.S
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Base.Just
                                                                                                                                        "dataConstructors")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.K1
                                                                                                                                     GHC.Generics.R
                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                        (Language.PureScript.Names.Qualified
                                                                                                                                           (Language.PureScript.Names.ProperName
                                                                                                                                              'Language.PureScript.Names.ConstructorName))
                                                                                                                                        (Language.PureScript.Environment.DataDeclType,
                                                                                                                                         Language.PureScript.Names.ProperName
                                                                                                                                           'Language.PureScript.Names.TypeName,
                                                                                                                                         Language.PureScript.Types.SourceType,
                                                                                                                                         [Language.PureScript.Names.Ident])))))
                                                                                            GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                                 GHC.Generics.S
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Base.Just
                                                                                                                       "typeSynonyms")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.K1
                                                                                                                    GHC.Generics.R
                                                                                                                    (Data.Map.Internal.Map
                                                                                                                       (Language.PureScript.Names.Qualified
                                                                                                                          (Language.PureScript.Names.ProperName
                                                                                                                             'Language.PureScript.Names.TypeName))
                                                                                                                       ([(Data.Text.Internal.Text,
                                                                                                                          GHC.Base.Maybe
                                                                                                                            Language.PureScript.Kinds.SourceKind)],
                                                                                                                        Language.PureScript.Types.SourceType)))
                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                  GHC.Generics.S
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Base.Just
                                                                                                                                        "typeClassDictionaries")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.K1
                                                                                                                                     GHC.Generics.R
                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                        (GHC.Base.Maybe
                                                                                                                                           Language.PureScript.Names.ModuleName)
                                                                                                                                        (Data.Map.Internal.Map
                                                                                                                                           (Language.PureScript.Names.Qualified
                                                                                                                                              (Language.PureScript.Names.ProperName
                                                                                                                                                 'Language.PureScript.Names.ClassName))
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              (Language.PureScript.Names.Qualified
                                                                                                                                                 Language.PureScript.Names.Ident)
                                                                                                                                              (GHC.Base.NonEmpty
                                                                                                                                                 Language.PureScript.TypeClassDictionaries.NamedDict))))))
                                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.S
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Base.Just
                                                                                                                                        "typeClasses")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.K1
                                                                                                                                     GHC.Generics.R
                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                        (Language.PureScript.Names.Qualified
                                                                                                                                           (Language.PureScript.Names.ProperName
                                                                                                                                              'Language.PureScript.Names.ClassName))
                                                                                                                                        Language.PureScript.Environment.TypeClassData))
                                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.S
                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                         "kinds")
                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                      GHC.Generics.R
                                                                                                                                                      (Data.Set.Internal.Set
                                                                                                                                                         (Language.PureScript.Names.Qualified
                                                                                                                                                            (Language.PureScript.Names.ProperName
                                                                                                                                                               'Language.PureScript.Names.KindName)))))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                                                   <*>_N
                                                                                                                                                                                                                   <GHC.Generics.C>_P
                                                                                                                                                                                                                   <'GHC.Generics.MetaCons
                                                                                                                                                                                                                      "Environment"
                                                                                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                                                                                      'GHC.Types.True>_P
                                                                                                                                                                                                                   <(GHC.Generics.M1
                                                                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                                             "names")
                                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                                                                             (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                Language.PureScript.Names.Ident)
                                                                                                                                                                                                                             (Language.PureScript.Types.SourceType,
                                                                                                                                                                                                                              Language.PureScript.Environment.NameKind,
                                                                                                                                                                                                                              Language.PureScript.Environment.NameVisibility)))
                                                                                                                                                                                                                     GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                                         GHC.Generics.S
                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                                                               "types")
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                         (GHC.Generics.K1
                                                                                                                                                                                                                                            GHC.Generics.R
                                                                                                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                                                                                                               (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                     'Language.PureScript.Names.TypeName))
                                                                                                                                                                                                                                               (Language.PureScript.Kinds.SourceKind,
                                                                                                                                                                                                                                                Language.PureScript.Environment.TypeKind)))
                                                                                                                                                                                                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                                          GHC.Generics.S
                                                                                                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                                                                "dataConstructors")
                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                          (GHC.Generics.K1
                                                                                                                                                                                                                                                             GHC.Generics.R
                                                                                                                                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                                   (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                      'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                                                                                                                (Language.PureScript.Environment.DataDeclType,
                                                                                                                                                                                                                                                                 Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                   'Language.PureScript.Names.TypeName,
                                                                                                                                                                                                                                                                 Language.PureScript.Types.SourceType,
                                                                                                                                                                                                                                                                 [Language.PureScript.Names.Ident])))))
                                                                                                                                                                                                                    GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                                                                                                                                                         GHC.Generics.S
                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                                                               "typeSynonyms")
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                         (GHC.Generics.K1
                                                                                                                                                                                                                                            GHC.Generics.R
                                                                                                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                                                                                                               (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                     'Language.PureScript.Names.TypeName))
                                                                                                                                                                                                                                               ([(Data.Text.Internal.Text,
                                                                                                                                                                                                                                                  GHC.Base.Maybe
                                                                                                                                                                                                                                                    Language.PureScript.Kinds.SourceKind)],
                                                                                                                                                                                                                                                Language.PureScript.Types.SourceType)))
                                                                                                                                                                                                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                                          GHC.Generics.S
                                                                                                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                                                                "typeClassDictionaries")
                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                          (GHC.Generics.K1
                                                                                                                                                                                                                                                             GHC.Generics.R
                                                                                                                                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                (GHC.Base.Maybe
                                                                                                                                                                                                                                                                   Language.PureScript.Names.ModuleName)
                                                                                                                                                                                                                                                                (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                   (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                                      (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                         'Language.PureScript.Names.ClassName))
                                                                                                                                                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                      (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                                         Language.PureScript.Names.Ident)
                                                                                                                                                                                                                                                                      (GHC.Base.NonEmpty
                                                                                                                                                                                                                                                                         Language.PureScript.TypeClassDictionaries.NamedDict))))))
                                                                                                                                                                                                                                      GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                                                          GHC.Generics.S
                                                                                                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                                                                "typeClasses")
                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                          (GHC.Generics.K1
                                                                                                                                                                                                                                                             GHC.Generics.R
                                                                                                                                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                                   (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                      'Language.PureScript.Names.ClassName))
                                                                                                                                                                                                                                                                Language.PureScript.Environment.TypeClassData))
                                                                                                                                                                                                                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                                                           GHC.Generics.S
                                                                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                                                                                                 "kinds")
                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                           (GHC.Generics.K1
                                                                                                                                                                                                                                                                              GHC.Generics.R
                                                                                                                                                                                                                                                                              (Data.Set.Internal.Set
                                                                                                                                                                                                                                                                                 (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                                       'Language.PureScript.Names.KindName))))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds4 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds2 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild5 { GHC.Generics.:*: ds11 ds12 ->
                 Language.PureScript.Environment.Environment
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "names")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 Language.PureScript.Names.Ident)
                              (Language.PureScript.Types.SourceType,
                               Language.PureScript.Environment.NameKind,
                               Language.PureScript.Environment.NameVisibility))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.R>_P
                                                                                               <Data.Map.Internal.Map
                                                                                                  (Language.PureScript.Names.Qualified
                                                                                                     Language.PureScript.Names.Ident)
                                                                                                  (Language.PureScript.Types.SourceType,
                                                                                                   Language.PureScript.Environment.NameKind,
                                                                                                   Language.PureScript.Environment.NameVisibility)>_R
                                                                                               <x>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "types")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName))
                              (Language.PureScript.Kinds.SourceKind,
                               Language.PureScript.Environment.TypeKind))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                         <*>_N
                                                                                         <GHC.Generics.R>_P
                                                                                         <Data.Map.Internal.Map
                                                                                            (Language.PureScript.Names.Qualified
                                                                                               (Language.PureScript.Names.ProperName
                                                                                                  'Language.PureScript.Names.TypeName))
                                                                                            (Language.PureScript.Kinds.SourceKind,
                                                                                             Language.PureScript.Environment.TypeKind)>_R
                                                                                         <x>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "dataConstructors")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName))
                              (Language.PureScript.Environment.DataDeclType,
                               Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.TypeName,
                               Language.PureScript.Types.SourceType,
                               [Language.PureScript.Names.Ident]))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                  <*>_N
                                                                                  <GHC.Generics.R>_P
                                                                                  <Data.Map.Internal.Map
                                                                                     (Language.PureScript.Names.Qualified
                                                                                        (Language.PureScript.Names.ProperName
                                                                                           'Language.PureScript.Names.ConstructorName))
                                                                                     (Language.PureScript.Environment.DataDeclType,
                                                                                      Language.PureScript.Names.ProperName
                                                                                        'Language.PureScript.Names.TypeName,
                                                                                      Language.PureScript.Types.SourceType,
                                                                                      [Language.PureScript.Names.Ident])>_R
                                                                                  <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeSynonyms")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName))
                              ([(Data.Text.Internal.Text,
                                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                               Language.PureScript.Types.SourceType))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.R>_P
                                                                                     <Data.Map.Internal.Map
                                                                                        (Language.PureScript.Names.Qualified
                                                                                           (Language.PureScript.Names.ProperName
                                                                                              'Language.PureScript.Names.TypeName))
                                                                                        ([(Data.Text.Internal.Text,
                                                                                           GHC.Base.Maybe
                                                                                             Language.PureScript.Kinds.SourceKind)],
                                                                                         Language.PureScript.Types.SourceType)>_R
                                                                                     <x>_P)
                   ds10
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassDictionaries")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                              (Data.Map.Internal.Map
                                 (Language.PureScript.Names.Qualified
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ClassName))
                                 (Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       Language.PureScript.Names.Ident)
                                    (GHC.Base.NonEmpty
                                       Language.PureScript.TypeClassDictionaries.NamedDict))))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                                              <*>_N
                                                                                                              <GHC.Generics.R>_P
                                                                                                              <Data.Map.Internal.Map
                                                                                                                 (GHC.Base.Maybe
                                                                                                                    Language.PureScript.Names.ModuleName)
                                                                                                                 (Data.Map.Internal.Map
                                                                                                                    (Language.PureScript.Names.Qualified
                                                                                                                       (Language.PureScript.Names.ProperName
                                                                                                                          'Language.PureScript.Names.ClassName))
                                                                                                                    (Data.Map.Internal.Map
                                                                                                                       (Language.PureScript.Names.Qualified
                                                                                                                          Language.PureScript.Names.Ident)
                                                                                                                       (GHC.Base.NonEmpty
                                                                                                                          Language.PureScript.TypeClassDictionaries.NamedDict)))>_R
                                                                                                              <x>_P)
                   ds11
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClasses")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName))
                              Language.PureScript.Environment.TypeClassData)>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                            <*>_N
                                                                                            <GHC.Generics.R>_P
                                                                                            <Data.Map.Internal.Map
                                                                                               (Language.PureScript.Names.Qualified
                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                     'Language.PureScript.Names.ClassName))
                                                                                               Language.PureScript.Environment.TypeClassData>_R
                                                                                            <x>_P)
                   ds12
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "kinds")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Set.Internal.Set
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.KindName)))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <Data.Set.Internal.Set
                                                                                             (Language.PureScript.Names.Qualified
                                                                                                (Language.PureScript.Names.ProperName
                                                                                                   'Language.PureScript.Names.KindName))>_R
                                                                                          <x>_P) } } } } } }) -}
181e7295489b314c6c042d61e80bb6b9
  $fGenericFunctionalDependency ::
    GHC.Generics.Generic
      Language.PureScript.Environment.FunctionalDependency
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.FunctionalDependency
                  Language.PureScript.Environment.$fGenericFunctionalDependency1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.FunctionalDependency>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "FunctionalDependency"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "FunctionalDependency"
                                        'GHC.Generics.PrefixI
                                        'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fdDeterminers")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Int])
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "fdDetermined")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            [GHC.Types.Int]))>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_FunctionalDependency[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericFunctionalDependency_$cto -}
181e7295489b314c6c042d61e80bb6b9
  $fGenericFunctionalDependency1 ::
    Language.PureScript.Environment.FunctionalDependency
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FunctionalDependency" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "fdDeterminers")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Int])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "fdDetermined")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Int]))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (x1 :: Language.PureScript.Environment.FunctionalDependency) ->
                 case x1 of wild { Language.PureScript.Environment.FunctionalDependency g1 g2 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "fdDeterminers")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Int]))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "fdDetermined")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Int]))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <[GHC.Types.Int]>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "fdDeterminers")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R [GHC.Types.Int]>_R) <x>_N)
                    g2
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <[GHC.Types.Int]>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "fdDetermined")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R [GHC.Types.Int]>_R) <x>_N))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "FunctionalDependency" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "fdDeterminers")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Int])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "fdDetermined")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [GHC.Types.Int])>_R) <x>_N) }) -}
181e7295489b314c6c042d61e80bb6b9
  $fGenericFunctionalDependency_$cto ::
    GHC.Generics.Rep
      Language.PureScript.Environment.FunctionalDependency x
    -> Language.PureScript.Environment.FunctionalDependency
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.FunctionalDependency x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_FunctionalDependency[0]) ; (GHC.Generics.N:M1[0]
                                                                                                 <*>_N
                                                                                                 <GHC.Generics.D>_P
                                                                                                 <'GHC.Generics.MetaData
                                                                                                    "FunctionalDependency"
                                                                                                    "Language.PureScript.Environment"
                                                                                                    "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                                    'GHC.Types.False>_P
                                                                                                 <GHC.Generics.M1
                                                                                                    GHC.Generics.C
                                                                                                    ('GHC.Generics.MetaCons
                                                                                                       "FunctionalDependency"
                                                                                                       'GHC.Generics.PrefixI
                                                                                                       'GHC.Types.True)
                                                                                                    (GHC.Generics.M1
                                                                                                       GHC.Generics.S
                                                                                                       ('GHC.Generics.MetaSel
                                                                                                          ('GHC.Base.Just
                                                                                                             "fdDeterminers")
                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                       (GHC.Generics.K1
                                                                                                          GHC.Generics.R
                                                                                                          [GHC.Types.Int])
                                                                                                     GHC.Generics.:*: GHC.Generics.M1
                                                                                                                        GHC.Generics.S
                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                           ('GHC.Base.Just
                                                                                                                              "fdDetermined")
                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                        (GHC.Generics.K1
                                                                                                                           GHC.Generics.R
                                                                                                                           [GHC.Types.Int]))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                      <*>_N
                                                                                                                                                      <GHC.Generics.C>_P
                                                                                                                                                      <'GHC.Generics.MetaCons
                                                                                                                                                         "FunctionalDependency"
                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                         'GHC.Types.True>_P
                                                                                                                                                      <GHC.Generics.M1
                                                                                                                                                         GHC.Generics.S
                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                               "fdDeterminers")
                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                         (GHC.Generics.K1
                                                                                                                                                            GHC.Generics.R
                                                                                                                                                            [GHC.Types.Int])
                                                                                                                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                          GHC.Generics.S
                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                "fdDetermined")
                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                          (GHC.Generics.K1
                                                                                                                                                                             GHC.Generics.R
                                                                                                                                                                             [GHC.Types.Int])>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Language.PureScript.Environment.FunctionalDependency
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "fdDeterminers")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R [GHC.Types.Int]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <[GHC.Types.Int]>_R
                                                                         <x>_P)
                   ds2
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "fdDetermined")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R [GHC.Types.Int]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <[GHC.Types.Int]>_R
                                                                         <x>_P) }) -}
7e23f4ddba2350405f465a39833424c7
  $fGenericNameKind ::
    GHC.Generics.Generic Language.PureScript.Environment.NameKind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.NameKind
                  Language.PureScript.Environment.$fGenericNameKind1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.NameKind>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "NameKind"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "Public"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "External"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_NameKind[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericNameKind_$cto -}
7e23f4ddba2350405f465a39833424c7
  $fGenericNameKind1 ::
    Language.PureScript.Environment.NameKind
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.Environment.NameKind) ->
                 case x1 of wild {
                   Language.PureScript.Environment.Private
                   -> Language.PureScript.Environment.$fGenericNameKind6 @ x
                   Language.PureScript.Environment.Public
                   -> Language.PureScript.Environment.$fGenericNameKind4 @ x
                   Language.PureScript.Environment.External
                   -> Language.PureScript.Environment.$fGenericNameKind2 @ x }) -}
2c197d1aeb321598cfb0233b317d78b1
  $fGenericNameKind2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Language.PureScript.Environment.$fGenericNameKind3 @ x)) -}
429464eae5501d372384b7a64d5511b6
  $fGenericNameKind3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "External" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
697dccd56b6abcce49f5d4a9aec699cd
  $fGenericNameKind4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Language.PureScript.Environment.$fGenericNameKind5 @ x)) -}
dd80b883be78c45f18f26249cdf0b7cc
  $fGenericNameKind5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Public" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
5121ca839e43ba112c256e252741bbc0
  $fGenericNameKind6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "External" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Private" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7e23f4ddba2350405f465a39833424c7
  $fGenericNameKind_$cto ::
    GHC.Generics.Rep Language.PureScript.Environment.NameKind x
    -> Language.PureScript.Environment.NameKind
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.NameKind x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_NameKind[0]) ; GHC.Generics.N:M1[0]
                                                                                    <*>_N
                                                                                    <GHC.Generics.D>_P
                                                                                    <'GHC.Generics.MetaData
                                                                                       "NameKind"
                                                                                       "Language.PureScript.Environment"
                                                                                       "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                       'GHC.Types.False>_P
                                                                                    <GHC.Generics.M1
                                                                                       GHC.Generics.C
                                                                                       ('GHC.Generics.MetaCons
                                                                                          "Private"
                                                                                          'GHC.Generics.PrefixI
                                                                                          'GHC.Types.False)
                                                                                       GHC.Generics.U1
                                                                                     GHC.Generics.:+: (GHC.Generics.M1
                                                                                                         GHC.Generics.C
                                                                                                         ('GHC.Generics.MetaCons
                                                                                                            "Public"
                                                                                                            'GHC.Generics.PrefixI
                                                                                                            'GHC.Types.False)
                                                                                                         GHC.Generics.U1
                                                                                                       GHC.Generics.:+: GHC.Generics.M1
                                                                                                                          GHC.Generics.C
                                                                                                                          ('GHC.Generics.MetaCons
                                                                                                                             "External"
                                                                                                                             'GHC.Generics.PrefixI
                                                                                                                             'GHC.Types.False)
                                                                                                                          GHC.Generics.U1)>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Private" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.U1>_R <x>_N) of wild1 { GHC.Generics.U1 ->
                      Language.PureScript.Environment.Private }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Public" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.U1>_R <x>_N) of wild2 { GHC.Generics.U1 ->
                           Language.PureScript.Environment.Public }
                        GHC.Generics.R1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "External" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.U1>_R <x>_N) of wild2 { GHC.Generics.U1 ->
                           Language.PureScript.Environment.External } } }) -}
22706fecc369659455f7dc5f13f3340f
  $fGenericNameVisibility ::
    GHC.Generics.Generic Language.PureScript.Environment.NameVisibility
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.NameVisibility
                  Language.PureScript.Environment.$fGenericNameVisibility1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.NameVisibility>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "NameVisibility"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "Defined"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_NameVisibility[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericNameVisibility_$cto -}
22706fecc369659455f7dc5f13f3340f
  $fGenericNameVisibility1 ::
    Language.PureScript.Environment.NameVisibility
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.Environment.NameVisibility) ->
                 case x1 of wild {
                   Language.PureScript.Environment.Undefined
                   -> Language.PureScript.Environment.$fGenericNameVisibility3 @ x
                   Language.PureScript.Environment.Defined
                   -> Language.PureScript.Environment.$fGenericNameVisibility2
                        @ x }) -}
e360be4d6b2cc28c80a4f8ba8b89a04f
  $fGenericNameVisibility2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
d452c3fb8b58792e1cfab4841e9d9b24
  $fGenericNameVisibility3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
22706fecc369659455f7dc5f13f3340f
  $fGenericNameVisibility_$cto ::
    GHC.Generics.Rep Language.PureScript.Environment.NameVisibility x
    -> Language.PureScript.Environment.NameVisibility
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.NameVisibility x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_NameVisibility[0]) ; GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.D>_P
                                                                                          <'GHC.Generics.MetaData
                                                                                             "NameVisibility"
                                                                                             "Language.PureScript.Environment"
                                                                                             "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                             'GHC.Types.False>_P
                                                                                          <GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "Undefined"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.False)
                                                                                             GHC.Generics.U1
                                                                                           GHC.Generics.:+: GHC.Generics.M1
                                                                                                              GHC.Generics.C
                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                 "Defined"
                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                 'GHC.Types.False)
                                                                                                              GHC.Generics.U1>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.U1>_R <x>_N) of wild1 { GHC.Generics.U1 ->
                      Language.PureScript.Environment.Undefined }
                   GHC.Generics.R1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.U1>_R <x>_N) of wild1 { GHC.Generics.U1 ->
                      Language.PureScript.Environment.Defined } }) -}
181e7295489b314c6c042d61e80bb6b9
  $fGenericTypeClassData ::
    GHC.Generics.Generic Language.PureScript.Environment.TypeClassData
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeClassData
                  Language.PureScript.Environment.$fGenericTypeClassData1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.TypeClassData>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "TypeClassData"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "TypeClassData" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "typeClassArguments")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            [(Data.Text.Internal.Text,
                                              GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "typeClassMembers")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              [(Language.PureScript.Names.Ident,
                                                                Language.PureScript.Types.SourceType)])
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "typeClassSuperclasses")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [Language.PureScript.Types.SourceConstraint])))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just
                                                                "typeClassDependencies")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [Language.PureScript.Environment.FunctionalDependency])
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "typeClassDeterminedArguments")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Data.Set.Internal.Set
                                                                                  GHC.Types.Int))
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "typeClassCoveringSets")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (Data.Set.Internal.Set
                                                                                                   (Data.Set.Internal.Set
                                                                                                      GHC.Types.Int))))))>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_TypeClassData[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericTypeClassData_$cto -}
181e7295489b314c6c042d61e80bb6b9
  $fGenericTypeClassData1 ::
    Language.PureScript.Environment.TypeClassData
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "TypeClassData" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "typeClassArguments")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R
                [(Data.Text.Internal.Text,
                  GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassMembers")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Language.PureScript.Names.Ident,
                                    Language.PureScript.Types.SourceType)])
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "typeClassSuperclasses")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Language.PureScript.Types.SourceConstraint])))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "typeClassDependencies")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R
                                 [Language.PureScript.Environment.FunctionalDependency])
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "typeClassDeterminedArguments")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (Data.Set.Internal.Set GHC.Types.Int))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just
                                                                       "typeClassCoveringSets")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (Data.Set.Internal.Set
                                                                       (Data.Set.Internal.Set
                                                                          GHC.Types.Int))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.Environment.TypeClassData) ->
                 case x1 of wild { Language.PureScript.Environment.TypeClassData g1 g2 g3 g4 g5 g6 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "typeClassArguments")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            [(Data.Text.Internal.Text,
                              GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "typeClassMembers")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              [(Language.PureScript.Names.Ident,
                                                Language.PureScript.Types.SourceType)])
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just
                                                                  "typeClassSuperclasses")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               [Language.PureScript.Types.SourceConstraint])))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "typeClassDependencies")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            [Language.PureScript.Environment.FunctionalDependency])
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "typeClassDeterminedArguments")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R (Data.Set.Internal.Set GHC.Types.Int))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just
                                                                  "typeClassCoveringSets")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (Data.Set.Internal.Set
                                                                  (Data.Set.Internal.Set
                                                                     GHC.Types.Int)))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "typeClassArguments")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [(Data.Text.Internal.Text,
                                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "typeClassMembers")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [(Language.PureScript.Names.Ident,
                                 Language.PureScript.Types.SourceType)])
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "typeClassSuperclasses")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [Language.PureScript.Types.SourceConstraint]))
                       @ x
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[(Data.Text.Internal.Text,
                                    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "typeClassArguments")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [(Data.Text.Internal.Text,
                                                        GHC.Base.Maybe
                                                          Language.PureScript.Kinds.SourceKind)]>_R) <x>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassMembers")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Language.PureScript.Names.Ident,
                                    Language.PureScript.Types.SourceType)]))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassSuperclasses")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R [Language.PureScript.Types.SourceConstraint]))
                          @ x
                          g2
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[(Language.PureScript.Names.Ident,
                                       Language.PureScript.Types.SourceType)]>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClassMembers")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         [(Language.PureScript.Names.Ident,
                                                           Language.PureScript.Types.SourceType)]>_R) <x>_N)
                          g3
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[Language.PureScript.Types.SourceConstraint]>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClassSuperclasses")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         [Language.PureScript.Types.SourceConstraint]>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "typeClassDependencies")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [Language.PureScript.Environment.FunctionalDependency]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "typeClassDeterminedArguments")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (Data.Set.Internal.Set GHC.Types.Int))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "typeClassCoveringSets")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (Data.Set.Internal.Set
                                                   (Data.Set.Internal.Set GHC.Types.Int))))
                       @ x
                       g4
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[Language.PureScript.Environment.FunctionalDependency]>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "typeClassDependencies")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [Language.PureScript.Environment.FunctionalDependency]>_R) <x>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassDeterminedArguments")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R (Data.Set.Internal.Set GHC.Types.Int)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassCoveringSets")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int))))
                          @ x
                          g5
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Set.Internal.Set GHC.Types.Int>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just
                                                            "typeClassDeterminedArguments")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Set.Internal.Set
                                                            GHC.Types.Int)>_R) <x>_N)
                          g6
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClassCoveringSets")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Data.Set.Internal.Set
                                                            (Data.Set.Internal.Set
                                                               GHC.Types.Int))>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "TypeClassData" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "typeClassArguments")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Data.Text.Internal.Text,
                                    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "typeClassMembers")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    [(Language.PureScript.Names.Ident,
                                                      Language.PureScript.Types.SourceType)])
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "typeClassSuperclasses")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     [Language.PureScript.Types.SourceConstraint])))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "typeClassDependencies")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Language.PureScript.Environment.FunctionalDependency])
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "typeClassDeterminedArguments")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Data.Set.Internal.Set
                                                                        GHC.Types.Int))
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "typeClassCoveringSets")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      (Data.Set.Internal.Set
                                                                                         (Data.Set.Internal.Set
                                                                                            GHC.Types.Int)))))>_R) <x>_N) }) -}
181e7295489b314c6c042d61e80bb6b9
  $fGenericTypeClassData_$cto ::
    GHC.Generics.Rep Language.PureScript.Environment.TypeClassData x
    -> Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(LS)),1*U(1*U(U,1*U(U,U)),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.TypeClassData x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_TypeClassData[0]) ; (GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.D>_P
                                                                                          <'GHC.Generics.MetaData
                                                                                             "TypeClassData"
                                                                                             "Language.PureScript.Environment"
                                                                                             "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                             'GHC.Types.False>_P
                                                                                          <GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "TypeClassData"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.True)
                                                                                             ((GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Base.Just
                                                                                                       "typeClassArguments")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    [(Data.Text.Internal.Text,
                                                                                                      GHC.Base.Maybe
                                                                                                        Language.PureScript.Kinds.SourceKind)])
                                                                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Base.Just
                                                                                                                         "typeClassMembers")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      [(Language.PureScript.Names.Ident,
                                                                                                                        Language.PureScript.Types.SourceType)])
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "typeClassSuperclasses")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       [Language.PureScript.Types.SourceConstraint])))
                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "typeClassDependencies")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     [Language.PureScript.Environment.FunctionalDependency])
                                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "typeClassDeterminedArguments")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       (Data.Set.Internal.Set
                                                                                                                                          GHC.Types.Int))
                                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.S
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                           "typeClassCoveringSets")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                        GHC.Generics.R
                                                                                                                                                        (Data.Set.Internal.Set
                                                                                                                                                           (Data.Set.Internal.Set
                                                                                                                                                              GHC.Types.Int))))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                           <*>_N
                                                                                                                                                                                           <GHC.Generics.C>_P
                                                                                                                                                                                           <'GHC.Generics.MetaCons
                                                                                                                                                                                              "TypeClassData"
                                                                                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                                                                                              'GHC.Types.True>_P
                                                                                                                                                                                           <(GHC.Generics.M1
                                                                                                                                                                                               GHC.Generics.S
                                                                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "typeClassArguments")
                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               (GHC.Generics.K1
                                                                                                                                                                                                  GHC.Generics.R
                                                                                                                                                                                                  [(Data.Text.Internal.Text,
                                                                                                                                                                                                    GHC.Base.Maybe
                                                                                                                                                                                                      Language.PureScript.Kinds.SourceKind)])
                                                                                                                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                 GHC.Generics.S
                                                                                                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                                       "typeClassMembers")
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                 (GHC.Generics.K1
                                                                                                                                                                                                                    GHC.Generics.R
                                                                                                                                                                                                                    [(Language.PureScript.Names.Ident,
                                                                                                                                                                                                                      Language.PureScript.Types.SourceType)])
                                                                                                                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                                        "typeClassSuperclasses")
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                                                                                                     GHC.Generics.R
                                                                                                                                                                                                                                     [Language.PureScript.Types.SourceConstraint])))
                                                                                                                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                GHC.Generics.S
                                                                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "typeClassDependencies")
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                                                                                   GHC.Generics.R
                                                                                                                                                                                                                   [Language.PureScript.Environment.FunctionalDependency])
                                                                                                                                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                                        "typeClassDeterminedArguments")
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                                                                                                     GHC.Generics.R
                                                                                                                                                                                                                                     (Data.Set.Internal.Set
                                                                                                                                                                                                                                        GHC.Types.Int))
                                                                                                                                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                                   GHC.Generics.S
                                                                                                                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                                                         "typeClassCoveringSets")
                                                                                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                                                                                                                      GHC.Generics.R
                                                                                                                                                                                                                                                      (Data.Set.Internal.Set
                                                                                                                                                                                                                                                         (Data.Set.Internal.Set
                                                                                                                                                                                                                                                            GHC.Types.Int)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds4 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds2 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds8 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 Language.PureScript.Environment.TypeClassData
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassArguments")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [(Data.Text.Internal.Text,
                             GHC.Base.Maybe
                               Language.PureScript.Kinds.SourceKind)]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.R>_P
                                                                                     <[(Data.Text.Internal.Text,
                                                                                        GHC.Base.Maybe
                                                                                          Language.PureScript.Kinds.SourceKind)]>_R
                                                                                     <x>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassMembers")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [(Language.PureScript.Names.Ident,
                             Language.PureScript.Types.SourceType)]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <[(Language.PureScript.Names.Ident,
                                                                                      Language.PureScript.Types.SourceType)]>_R
                                                                                   <x>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassSuperclasses")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Types.SourceConstraint]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.R>_P
                                                                                       <[Language.PureScript.Types.SourceConstraint]>_R
                                                                                       <x>_P)
                   ds7
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassDependencies")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Environment.FunctionalDependency]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                                 <*>_N
                                                                                                 <GHC.Generics.R>_P
                                                                                                 <[Language.PureScript.Environment.FunctionalDependency]>_R
                                                                                                 <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassDeterminedArguments")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Set.Internal.Set
                              GHC.Types.Int)>_R <x>_N ; GHC.Generics.N:K1[0]
                                                            <*>_N
                                                            <GHC.Generics.R>_P
                                                            <Data.Set.Internal.Set GHC.Types.Int>_R
                                                            <x>_P)
                   ds10
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "typeClassCoveringSets")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Set.Internal.Set
                              (Data.Set.Internal.Set
                                 GHC.Types.Int))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                <*>_N
                                                                <GHC.Generics.R>_P
                                                                <Data.Set.Internal.Set
                                                                   (Data.Set.Internal.Set
                                                                      GHC.Types.Int)>_R
                                                                <x>_P) } } } } }) -}
713362c52c19b15de0cab368ddfda667
  $fGenericTypeKind ::
    GHC.Generics.Generic Language.PureScript.Environment.TypeKind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeKind
                  Language.PureScript.Environment.$fGenericTypeKind1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Environment.TypeKind>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "TypeKind"
                                     "Language.PureScript.Environment"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <(GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            [(Data.Text.Internal.Text,
                                              GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [(Language.PureScript.Names.ProperName
                                                                 'Language.PureScript.Names.ConstructorName,
                                                               [Language.PureScript.Types.SourceType])]))
                                    GHC.Generics.:+: GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "TypeSynonym"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "ExternData"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: (GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "LocalTypeVariable"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1
                                                                       GHC.Generics.:+: GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "ScopedTypeVar"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.False)
                                                                                          GHC.Generics.U1))>_R) ; Sub (Sym (Language.PureScript.Environment.Rep_TypeKind[0]))) <x>_N)
                  Language.PureScript.Environment.$fGenericTypeKind_$cto -}
713362c52c19b15de0cab368ddfda667
  $fGenericTypeKind1 ::
    Language.PureScript.Environment.TypeKind
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R
                  [(Data.Text.Internal.Text,
                    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R
                                   [(Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName,
                                     [Language.PureScript.Types.SourceType])]))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ScopedTypeVar"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Language.PureScript.Environment.TypeKind) ->
                 case x1 of wild {
                   Language.PureScript.Environment.DataType g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R
                                   [(Data.Text.Internal.Text,
                                     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    [(Language.PureScript.Names.ProperName
                                                        'Language.PureScript.Names.ConstructorName,
                                                      [Language.PureScript.Types.SourceType])]))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "TypeSynonym"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              GHC.Generics.U1)
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "LocalTypeVariable"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ScopedTypeVar"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      [(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Language.PureScript.Names.ProperName
                                                           'Language.PureScript.Names.ConstructorName,
                                                         [Language.PureScript.Types.SourceType])])))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      [(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      [(Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.ConstructorName,
                                        [Language.PureScript.Types.SourceType])]))
                              @ x
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <[(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [(Data.Text.Internal.Text,
                                                               GHC.Base.Maybe
                                                                 Language.PureScript.Kinds.SourceKind)]>_R) <x>_N)
                              g2
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <[(Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.ConstructorName,
                                           [Language.PureScript.Types.SourceType])]>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [(Language.PureScript.Names.ProperName
                                                                 'Language.PureScript.Names.ConstructorName,
                                                               [Language.PureScript.Types.SourceType])]>_R) <x>_N))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           [(Data.Text.Internal.Text,
                                             GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            [(Language.PureScript.Names.ProperName
                                                                'Language.PureScript.Names.ConstructorName,
                                                              [Language.PureScript.Types.SourceType])])>_R) <x>_N))
                   Language.PureScript.Environment.TypeSynonym
                   -> Language.PureScript.Environment.$fGenericTypeKind10 @ x
                   Language.PureScript.Environment.ExternData
                   -> Language.PureScript.Environment.$fGenericTypeKind8 @ x
                   Language.PureScript.Environment.LocalTypeVariable
                   -> Language.PureScript.Environment.$fGenericTypeKind5 @ x
                   Language.PureScript.Environment.ScopedTypeVar
                   -> Language.PureScript.Environment.$fGenericTypeKind2 @ x }) -}
a8d8a8f160a84461af78fc195169da41
  $fGenericTypeKind10 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R
               [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                [(Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName,
                                  [Language.PureScript.Types.SourceType])]))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "ScopedTypeVar"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R
                              [(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Language.PureScript.Names.ProperName
                                                   'Language.PureScript.Names.ConstructorName,
                                                 [Language.PureScript.Types.SourceType])]))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "LocalTypeVariable"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "ScopedTypeVar"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Language.PureScript.Environment.$fGenericTypeKind11 @ x)) -}
949fd6d8826589ae3aded6f2e674c7dd
  $fGenericTypeKind11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R
               [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                [(Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName,
                                  [Language.PureScript.Types.SourceType])])))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R
                              [(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Language.PureScript.Names.ProperName
                                                   'Language.PureScript.Names.ConstructorName,
                                                 [Language.PureScript.Types.SourceType])])))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
0e1c5f24332a2c2c4e1e62641d98134e
  $fGenericTypeKind2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R
               [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                [(Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName,
                                  [Language.PureScript.Types.SourceType])]))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "ScopedTypeVar"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R
                              [(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Language.PureScript.Names.ProperName
                                                   'Language.PureScript.Names.ConstructorName,
                                                 [Language.PureScript.Types.SourceType])]))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "LocalTypeVariable"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "ScopedTypeVar"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Language.PureScript.Environment.$fGenericTypeKind3 @ x)) -}
f19ca5f988332f2ac6242a29b27c5b5c
  $fGenericTypeKind3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Language.PureScript.Environment.$fGenericTypeKind4 @ x)) -}
c7ee78715f525c7af9b16f0f27e3b184
  $fGenericTypeKind4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
5dcef217dde1258d5b97e5749f74fdec
  $fGenericTypeKind5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R
               [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                [(Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName,
                                  [Language.PureScript.Types.SourceType])]))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "ScopedTypeVar"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R
                              [(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Language.PureScript.Names.ProperName
                                                   'Language.PureScript.Names.ConstructorName,
                                                 [Language.PureScript.Types.SourceType])]))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "LocalTypeVariable"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "ScopedTypeVar"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Language.PureScript.Environment.$fGenericTypeKind6 @ x)) -}
493961da8d6f5b30078979d1ea50b034
  $fGenericTypeKind6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Language.PureScript.Environment.$fGenericTypeKind7 @ x)) -}
d0166b29e7b756032745b6b8aaf664ed
  $fGenericTypeKind7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
0275fc2c32a344d9ff97cc5e669abf45
  $fGenericTypeKind8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R
               [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                [(Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName,
                                  [Language.PureScript.Types.SourceType])]))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "ScopedTypeVar"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R
                              [(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Language.PureScript.Names.ProperName
                                                   'Language.PureScript.Names.ConstructorName,
                                                 [Language.PureScript.Types.SourceType])]))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "LocalTypeVariable"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "ScopedTypeVar"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Language.PureScript.Environment.$fGenericTypeKind9 @ x)) -}
0983c93172e268c3a18da3c4377618af
  $fGenericTypeKind9 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "LocalTypeVariable" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "ScopedTypeVar" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
713362c52c19b15de0cab368ddfda667
  $fGenericTypeKind_$cto ::
    GHC.Generics.Rep Language.PureScript.Environment.TypeKind x
    -> Language.PureScript.Environment.TypeKind
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Environment.TypeKind x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Environment.Rep_TypeKind[0]) ; GHC.Generics.N:M1[0]
                                                                                    <*>_N
                                                                                    <GHC.Generics.D>_P
                                                                                    <'GHC.Generics.MetaData
                                                                                       "TypeKind"
                                                                                       "Language.PureScript.Environment"
                                                                                       "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                       'GHC.Types.False>_P
                                                                                    <(GHC.Generics.M1
                                                                                        GHC.Generics.C
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "DataType"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        (GHC.Generics.M1
                                                                                           GHC.Generics.S
                                                                                           ('GHC.Generics.MetaSel
                                                                                              'GHC.Base.Nothing
                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                              'GHC.Generics.DecidedLazy)
                                                                                           (GHC.Generics.K1
                                                                                              GHC.Generics.R
                                                                                              [(Data.Text.Internal.Text,
                                                                                                GHC.Base.Maybe
                                                                                                  Language.PureScript.Kinds.SourceKind)])
                                                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                                                            GHC.Generics.S
                                                                                                            ('GHC.Generics.MetaSel
                                                                                                               'GHC.Base.Nothing
                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                            (GHC.Generics.K1
                                                                                                               GHC.Generics.R
                                                                                                               [(Language.PureScript.Names.ProperName
                                                                                                                   'Language.PureScript.Names.ConstructorName,
                                                                                                                 [Language.PureScript.Types.SourceType])]))
                                                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                                                         GHC.Generics.C
                                                                                                         ('GHC.Generics.MetaCons
                                                                                                            "TypeSynonym"
                                                                                                            'GHC.Generics.PrefixI
                                                                                                            'GHC.Types.False)
                                                                                                         GHC.Generics.U1)
                                                                                     GHC.Generics.:+: (GHC.Generics.M1
                                                                                                         GHC.Generics.C
                                                                                                         ('GHC.Generics.MetaCons
                                                                                                            "ExternData"
                                                                                                            'GHC.Generics.PrefixI
                                                                                                            'GHC.Types.False)
                                                                                                         GHC.Generics.U1
                                                                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                           GHC.Generics.C
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "LocalTypeVariable"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False)
                                                                                                                           GHC.Generics.U1
                                                                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                            GHC.Generics.C
                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                               "ScopedTypeVar"
                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                               'GHC.Types.False)
                                                                                                                                            GHC.Generics.U1))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           [(Data.Text.Internal.Text,
                                             GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            [(Language.PureScript.Names.ProperName
                                                                'Language.PureScript.Names.ConstructorName,
                                                              [Language.PureScript.Types.SourceType])])>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Language.PureScript.Environment.DataType
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     [(Data.Text.Internal.Text,
                                       GHC.Base.Maybe
                                         Language.PureScript.Kinds.SourceKind)]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.R>_P
                                                                                               <[(Data.Text.Internal.Text,
                                                                                                  GHC.Base.Maybe
                                                                                                    Language.PureScript.Kinds.SourceKind)]>_R
                                                                                               <x>_P)
                             ds4
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     [(Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ConstructorName,
                                       [Language.PureScript.Types.SourceType])]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.R>_P
                                                                                               <[(Language.PureScript.Names.ProperName
                                                                                                    'Language.PureScript.Names.ConstructorName,
                                                                                                  [Language.PureScript.Types.SourceType])]>_R
                                                                                               <x>_P) }
                        GHC.Generics.R1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.U1>_R <x>_N) of wild2 { GHC.Generics.U1 ->
                           Language.PureScript.Environment.TypeSynonym } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.U1>_R <x>_N) of wild2 { GHC.Generics.U1 ->
                           Language.PureScript.Environment.ExternData }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "LocalTypeVariable"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <x>_N) of wild3 { GHC.Generics.U1 ->
                                Language.PureScript.Environment.LocalTypeVariable }
                             GHC.Generics.R1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "ScopedTypeVar"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <x>_N) of wild3 { GHC.Generics.U1 ->
                                Language.PureScript.Environment.ScopedTypeVar } } } }) -}
7eb61fe78108d98d82e39145869b2402
  $fNFDataDataDeclType ::
    Control.DeepSeq.NFData Language.PureScript.Environment.DataDeclType
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataDataDeclType_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.DataDeclType>_N)) -}
7eb61fe78108d98d82e39145869b2402
  $fNFDataDataDeclType_$crnf ::
    Language.PureScript.Environment.DataDeclType -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType) ->
                 case x of wild { DEFAULT -> GHC.Tuple.() }) -}
7eb61fe78108d98d82e39145869b2402
  $fNFDataEnvironment ::
    Control.DeepSeq.NFData Language.PureScript.Environment.Environment
  DFunId
  {- Arity: 1,
     Strictness: <S(SSSSSSS),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataEnvironment_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.Environment>_N)) -}
ea9273d3bb227ad1dd834321edc810ed
  $fNFDataEnvironment1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*H)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 case ww2
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.KindName>_P) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case ww1 of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        x `cast` (Language.PureScript.Names.N:ModuleName[0]) } } }) -}
f4ca0de14e755984cf4620e960c1b929
  $fNFDataEnvironment10 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe Language.PureScript.Names.ModuleName) ->
                 case ds of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        x `cast` (Language.PureScript.Names.N:ModuleName[0]) }) -}
a04ad091964d64dd4f1ee2c971941e59
  $fNFDataEnvironment11 ::
    ([(Data.Text.Internal.Text,
       GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
     Language.PureScript.Types.Type
       Language.PureScript.AST.SourcePos.SourceAnn)
    -> ()
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ([(Data.Text.Internal.Text,
                             GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                           Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn)) ->
                 case ds of wild { (,) x y ->
                 case Language.PureScript.Environment.$fNFDataEnvironment_go3
                        x of wild1 { () ->
                 Language.PureScript.Environment.$fNFDataEnvironment12 y } }) -}
3647045ef4bd1b4eca6a320708acd506
  $fNFDataEnvironment12 ::
    Language.PureScript.Types.Type
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> ()
  {- Unfolding: (Language.PureScript.Types.$fNFDataConstraint_$crnf2
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fNFDataEnvironment3
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <(Language.PureScript.AST.SourcePos.SourceSpan,
                               [Language.PureScript.Comments.Comment])>_N))) -}
7eb61fe78108d98d82e39145869b2402
  $fNFDataEnvironment13 ::
    (Language.PureScript.Environment.DataDeclType,
     Language.PureScript.Names.ProperName
       'Language.PureScript.Names.TypeName,
     Language.PureScript.Types.Type
       Language.PureScript.AST.SourcePos.SourceAnn,
     [Language.PureScript.Names.Ident])
    -> ()
  {- Arity: 1, Strictness: <S(SSLS),1*U(1*U,1*H,U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Language.PureScript.Environment.DataDeclType,
                           Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName,
                           Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn,
                           [Language.PureScript.Names.Ident])) ->
                 case ds of wild { (,,,) x1 x2 x3 x4 ->
                 case x1 of wild1 { DEFAULT ->
                 case x2
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.TypeName>_P) of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Language.PureScript.Environment.$fNFDataEnvironment12
                        x3 of wild3 { () ->
                 Language.PureScript.Environment.$fNFDataEnvironment_go5
                   x4 } } } }) -}
2cbe0815bf7dfddd8de599db62224c70
  $fNFDataEnvironment14 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName)
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*H)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ConstructorName)) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 case ww2
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ConstructorName>_P) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case ww1 of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        x `cast` (Language.PureScript.Names.N:ModuleName[0]) } } }) -}
35a53ff52ba070155101c524bda619a6
  $fNFDataEnvironment15 ::
    (Language.PureScript.Kinds.Kind
       Language.PureScript.AST.SourcePos.SourceAnn,
     Language.PureScript.Environment.TypeKind)
    -> ()
  {- Arity: 1, Strictness: <S(SS),1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Language.PureScript.Kinds.Kind
                             Language.PureScript.AST.SourcePos.SourceAnn,
                           Language.PureScript.Environment.TypeKind)) ->
                 case ds of wild { (,) x y ->
                 case Language.PureScript.Kinds.$fNFDataKind_$crnf
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])
                        Language.PureScript.Environment.$fNFDataEnvironment3
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <(Language.PureScript.AST.SourcePos.SourceSpan,
                                    [Language.PureScript.Comments.Comment])>_N))
                        x of wild1 { () ->
                 Language.PureScript.Environment.$fNFDataEnvironment_$crnf2
                   y } }) -}
28cca0702d67eefe8522c184a1e0ebf2
  $fNFDataEnvironment16 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*H)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName)) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 case ww2
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.TypeName>_P) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case ww1 of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        x `cast` (Language.PureScript.Names.N:ModuleName[0]) } } }) -}
885dd3f45fe31ea095307bd472f774df
  $fNFDataEnvironment17 ::
    (Language.PureScript.Types.Type
       Language.PureScript.AST.SourcePos.SourceAnn,
     Language.PureScript.Environment.NameKind,
     Language.PureScript.Environment.NameVisibility)
    -> ()
  {- Arity: 1, Strictness: <S(LSS),1*U(U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn,
                           Language.PureScript.Environment.NameKind,
                           Language.PureScript.Environment.NameVisibility)) ->
                 case ds of wild { (,,) x1 x2 x3 ->
                 case Language.PureScript.Environment.$fNFDataEnvironment12
                        x1 of wild1 { () ->
                 case x2 of wild2 { DEFAULT ->
                 case x3 of wild3 { DEFAULT -> GHC.Tuple.() } } } }) -}
87a940fc62c024875c960fbdc6fd109c
  $fNFDataEnvironment2 ::
    Language.PureScript.Types.Constraint
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> ()
  {- Unfolding: (Language.PureScript.Types.$fNFDataConstraint_$crnf
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fNFDataEnvironment3
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <(Language.PureScript.AST.SourcePos.SourceSpan,
                               [Language.PureScript.Comments.Comment])>_N))) -}
4377824dbcc4a672a118a1bbb070c7d7
  $fNFDataEnvironment3 ::
    (Language.PureScript.AST.SourcePos.SourceSpan,
     [Language.PureScript.Comments.Comment])
    -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS(SS)S(SS))S),1*U(1*U(1*U,1*U(1*H,1*H),1*U(1*H,1*H)),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Language.PureScript.AST.SourcePos.SourceSpan,
                          [Language.PureScript.Comments.Comment])) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Language.PureScript.AST.SourcePos.SourceSpan ww4 ww5 ww6 ->
                 case ww5 of ww7 { Language.PureScript.AST.SourcePos.SourcePos ww8 ww9 ->
                 case ww8 of ww10 { GHC.Types.I# ipv ->
                 case ww9 of ww11 { GHC.Types.I# ipv1 ->
                 case ww6 of ww12 { Language.PureScript.AST.SourcePos.SourcePos ww13 ww14 ->
                 case ww13 of ww15 { GHC.Types.I# ipv2 ->
                 case ww14 of ww16 { GHC.Types.I# ipv3 ->
                 case Language.PureScript.AST.SourcePos.$fNFDataSourceSpan_go
                        ww4 of wild1 { () ->
                 Language.PureScript.Environment.$fNFDataEnvironment_go
                   ww2 } } } } } } } } }) -}
8918bc6ba8ca2dd06124cb82a5482c50
  $fNFDataEnvironment4 :: Data.Set.Internal.Set GHC.Types.Int -> ()
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Data.Set.Internal.$fNFDataSet_$crnf
                   @ GHC.Types.Int
                   (Control.DeepSeq.rwhnf @ GHC.Types.Int)
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0] <GHC.Types.Int>_N))) -}
e521fea57cfcd61a72b34c474e217edc
  $fNFDataEnvironment5 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*H)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName)) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 case ww2
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ClassName>_P) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case ww1 of wild {
                   GHC.Base.Nothing -> GHC.Tuple.()
                   GHC.Base.Just x
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        x `cast` (Language.PureScript.Names.N:ModuleName[0]) } } }) -}
650180a909bbf4889f1750a28699dba8
  $fNFDataEnvironment6 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      (Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (GHC.Base.NonEmpty
            Language.PureScript.TypeClassDictionaries.NamedDict))
    -> ()
  {- Arity: 1,
     Unfolding: (Data.Map.Internal.$fNFDataMap_$crnf
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName))
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident)
                        (GHC.Base.NonEmpty
                           Language.PureScript.TypeClassDictionaries.NamedDict))
                   Language.PureScript.Environment.$fNFDataEnvironment5
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ClassName)>_N))
                   Language.PureScript.Environment.$fNFDataEnvironment7
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <Data.Map.Internal.Map
                                (Language.PureScript.Names.Qualified
                                   Language.PureScript.Names.Ident)
                                (GHC.Base.NonEmpty
                                   Language.PureScript.TypeClassDictionaries.NamedDict)>_N))) -}
741e1cd6856b74cc604f02443810a9af
  $fNFDataEnvironment7 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      (GHC.Base.NonEmpty
         Language.PureScript.TypeClassDictionaries.NamedDict)
    -> ()
  {- Arity: 1,
     Unfolding: (Data.Map.Internal.$fNFDataMap_$crnf
                   @ (Language.PureScript.Names.Qualified
                        Language.PureScript.Names.Ident)
                   @ (GHC.Base.NonEmpty
                        Language.PureScript.TypeClassDictionaries.NamedDict)
                   Language.PureScript.Environment.$fNFDataEnvironment9
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <Language.PureScript.Names.Qualified
                                Language.PureScript.Names.Ident>_N))
                   Language.PureScript.Environment.$fNFDataEnvironment8
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <GHC.Base.NonEmpty
                                (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                   (Language.PureScript.Names.Qualified
                                      Language.PureScript.Names.Ident))>_N))) -}
a38c4d37ad0a5fa8fe49ce5489eb41bc
  $fNFDataEnvironment8 ::
    GHC.Base.NonEmpty
      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident))
    -> ()
  {- Arity: 1,
     Strictness: <S(S(SSS(SS)SS(SS)SS)S),1*U(1*U(1*U,1*U,1*U(1*U,1*U),1*U,1*U(1*U,1*H),1*U,1*U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.NonEmpty
                           (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                              (Language.PureScript.Names.Qualified
                                 Language.PureScript.Names.Ident))) ->
                 case w of ww { GHC.Base.:| ww1 ww2 ->
                 case ww1 of ww3 { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww6 of ww11 { Language.PureScript.Names.Qualified ww12 ww13 ->
                 case ww8 of ww14 { Language.PureScript.Names.Qualified ww15 ww16 ->
                 case ww16
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ClassName>_P) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Language.PureScript.Environment.$w$dNFData
                   ww4
                   ww5
                   ww12
                   ww13
                   ww7
                   ww15
                   nt
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))
                   ww9
                   ww10
                   ww2 } } } } }) -}
7d9e60c61e4380f421a9438239ed8a30
  $fNFDataEnvironment9 ::
    Language.PureScript.Names.Qualified Language.PureScript.Names.Ident
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 Language.PureScript.Environment.$w$dNFData1 ww1 ww2 }) -}
7eb61fe78108d98d82e39145869b2402
  $fNFDataEnvironment_$crnf ::
    Language.PureScript.Environment.Environment -> ()
  {- Arity: 1,
     Strictness: <S(SSSSSSS),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Environment.Environment) ->
                 case w of ww { Language.PureScript.Environment.Environment ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Language.PureScript.Environment.$w$crnf
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 }) -}
181e7295489b314c6c042d61e80bb6b9
  $fNFDataEnvironment_$crnf1 ::
    Language.PureScript.Environment.TypeClassData -> ()
  {- Arity: 1, Strictness: <S(SSSSSS),1*U(1*U,1*U,1*U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Environment.TypeClassData) ->
                 case w of ww { Language.PureScript.Environment.TypeClassData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.$w$crnf1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
713362c52c19b15de0cab368ddfda667
  $fNFDataEnvironment_$crnf2 ::
    Language.PureScript.Environment.TypeKind -> ()
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Environment.TypeKind) ->
                 case x of wild {
                   Language.PureScript.Environment.DataType g1 g2
                   -> case Language.PureScript.Environment.$fNFDataEnvironment_go3
                             g1 of wild1 { () ->
                      Language.PureScript.Environment.$fNFDataEnvironment_go6 g2 }
                   Language.PureScript.Environment.TypeSynonym -> GHC.Tuple.()
                   Language.PureScript.Environment.ExternData -> GHC.Tuple.()
                   Language.PureScript.Environment.LocalTypeVariable -> GHC.Tuple.()
                   Language.PureScript.Environment.ScopedTypeVar -> GHC.Tuple.() }) -}
e6c9095abb2fbc2387b94dc59e5729a9
  $fNFDataEnvironment_go ::
    [Language.PureScript.Comments.Comment] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
181e7295489b314c6c042d61e80bb6b9
  $fNFDataEnvironment_go1 ::
    [Language.PureScript.Environment.FunctionalDependency] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
115e00a9083ed1f0bc858390f33bd4ff
  $fNFDataEnvironment_go2 ::
    [(Language.PureScript.Names.Ident,
      Language.PureScript.Types.SourceType)]
    -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
105ee5f16c53e5e6b69b875b8842a3c3
  $fNFDataEnvironment_go3 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ac21dc773198fc775cd95ed4e8726c7f
  $fNFDataEnvironment_go4 ::
    [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
       (Language.PureScript.Names.Qualified
          Language.PureScript.Names.Ident)]
    -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
8f014a330bc9c964f46f226a9da4f46a
  $fNFDataEnvironment_go5 :: [Language.PureScript.Names.Ident] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b57b90cb4adc70cbf447dfbe2a4a6b2f
  $fNFDataEnvironment_go6 ::
    [(Language.PureScript.Names.ProperName
        'Language.PureScript.Names.ConstructorName,
      [Language.PureScript.Types.SourceType])]
    -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
181e7295489b314c6c042d61e80bb6b9
  $fNFDataFunctionalDependency ::
    Control.DeepSeq.NFData
      Language.PureScript.Environment.FunctionalDependency
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataFunctionalDependency_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.FunctionalDependency>_N)) -}
181e7295489b314c6c042d61e80bb6b9
  $fNFDataFunctionalDependency_$crnf ::
    Language.PureScript.Environment.FunctionalDependency -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.FunctionalDependency) ->
                 case x of wild { Language.PureScript.Environment.FunctionalDependency g1 g2 ->
                 case Language.PureScript.Environment.$fNFDataFunctionalDependency_go
                        g1 of wild1 { () ->
                 Language.PureScript.Environment.$fNFDataFunctionalDependency_go
                   g2 } }) -}
95115e90e3bf78ec45eab712d520fbcb
  $fNFDataFunctionalDependency_go :: [GHC.Types.Int] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7e23f4ddba2350405f465a39833424c7
  $fNFDataNameKind ::
    Control.DeepSeq.NFData Language.PureScript.Environment.NameKind
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataNameKind_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.NameKind>_N)) -}
7e23f4ddba2350405f465a39833424c7
  $fNFDataNameKind_$crnf ::
    Language.PureScript.Environment.NameKind -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.NameKind) ->
                 case x of wild { DEFAULT -> GHC.Tuple.() }) -}
22706fecc369659455f7dc5f13f3340f
  $fNFDataNameVisibility ::
    Control.DeepSeq.NFData
      Language.PureScript.Environment.NameVisibility
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataNameVisibility_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.NameVisibility>_N)) -}
22706fecc369659455f7dc5f13f3340f
  $fNFDataNameVisibility_$crnf ::
    Language.PureScript.Environment.NameVisibility -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.NameVisibility) ->
                 case x of wild { DEFAULT -> GHC.Tuple.() }) -}
181e7295489b314c6c042d61e80bb6b9
  $fNFDataTypeClassData ::
    Control.DeepSeq.NFData
      Language.PureScript.Environment.TypeClassData
  DFunId
  {- Arity: 1, Strictness: <S(SSSSSS),1*U(1*U,1*U,1*U,U,U,U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataEnvironment_$crnf1
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.TypeClassData>_N)) -}
713362c52c19b15de0cab368ddfda667
  $fNFDataTypeKind ::
    Control.DeepSeq.NFData Language.PureScript.Environment.TypeKind
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Environment.$fNFDataEnvironment_$crnf2
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Environment.TypeKind>_N)) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType ::
    GHC.Classes.Ord Language.PureScript.Environment.DataDeclType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.DataDeclType
                  Language.PureScript.Environment.$fEqDataDeclType
                  Language.PureScript.Environment.$fOrdDataDeclType_$ccompare
                  Language.PureScript.Environment.$fOrdDataDeclType_$c<
                  Language.PureScript.Environment.$fOrdDataDeclType_$c<=
                  Language.PureScript.Environment.$fOrdDataDeclType_$c>
                  Language.PureScript.Environment.$fOrdDataDeclType_$c>=
                  Language.PureScript.Environment.$fOrdDataDeclType_$cmax
                  Language.PureScript.Environment.$fOrdDataDeclType_$cmin -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$c< ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Environment.DataDeclType)
                   (b :: Language.PureScript.Environment.DataDeclType) ->
                 case a of wild {
                   Language.PureScript.Environment.Data
                   -> case b of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.False
                        Language.PureScript.Environment.Newtype -> GHC.Types.True }
                   Language.PureScript.Environment.Newtype
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$c<= ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Environment.DataDeclType)
                   (b :: Language.PureScript.Environment.DataDeclType) ->
                 case b of wild {
                   Language.PureScript.Environment.Data
                   -> case a of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.True
                        Language.PureScript.Environment.Newtype -> GHC.Types.False }
                   Language.PureScript.Environment.Newtype
                   -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$c> ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Environment.DataDeclType)
                   (b :: Language.PureScript.Environment.DataDeclType) ->
                 Language.PureScript.Environment.$fOrdDataDeclType_$c< b a) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$c>= ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Environment.DataDeclType)
                   (b :: Language.PureScript.Environment.DataDeclType) ->
                 case a of wild {
                   Language.PureScript.Environment.Data
                   -> case b of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.True
                        Language.PureScript.Environment.Newtype -> GHC.Types.False }
                   Language.PureScript.Environment.Newtype
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$ccompare ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Environment.DataDeclType)
                   (b :: Language.PureScript.Environment.DataDeclType) ->
                 case a of wild {
                   Language.PureScript.Environment.Data
                   -> case b of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.EQ
                        Language.PureScript.Environment.Newtype -> GHC.Types.LT }
                   Language.PureScript.Environment.Newtype
                   -> case b of wild1 {
                        Language.PureScript.Environment.Data -> GHC.Types.GT
                        Language.PureScript.Environment.Newtype -> GHC.Types.EQ } }) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$cmax ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType)
                   (y :: Language.PureScript.Environment.DataDeclType) ->
                 case y of wild {
                   Language.PureScript.Environment.Data -> x
                   Language.PureScript.Environment.Newtype
                   -> case x of wild1 { DEFAULT ->
                      Language.PureScript.Environment.Newtype } }) -}
7eb61fe78108d98d82e39145869b2402
  $fOrdDataDeclType_$cmin ::
    Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType
    -> Language.PureScript.Environment.DataDeclType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType)
                   (y :: Language.PureScript.Environment.DataDeclType) ->
                 case y of wild {
                   Language.PureScript.Environment.Data
                   -> case x of wild1 { DEFAULT ->
                      Language.PureScript.Environment.Data }
                   Language.PureScript.Environment.Newtype -> x }) -}
7eb61fe78108d98d82e39145869b2402
  $fShowDataDeclType ::
    GHC.Show.Show Language.PureScript.Environment.DataDeclType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.DataDeclType
                  Language.PureScript.Environment.$fShowDataDeclType_$cshowsPrec
                  Language.PureScript.Environment.$fShowDataDeclType_$cshow
                  Language.PureScript.Environment.$fShowDataDeclType_$cshowList -}
7eb61fe78108d98d82e39145869b2402
  $fShowDataDeclType1 ::
    Language.PureScript.Environment.DataDeclType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Environment.DataDeclType)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Language.PureScript.Environment.Data
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowDataDeclType4)
                        eta
                   Language.PureScript.Environment.Newtype
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowDataDeclType2)
                        eta }) -}
ec2ca4d3e5b931c456f5e4b016859928
  $fShowDataDeclType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowDataDeclType3) -}
61457ff65f32e163c858f58f4e40ca59
  $fShowDataDeclType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Newtype"#) -}
a265f6b3064bec68bd5979530e54a980
  $fShowDataDeclType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowDataDeclType5) -}
520a338d92032c5072e3357833704b79
  $fShowDataDeclType5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Data"#) -}
7eb61fe78108d98d82e39145869b2402
  $fShowDataDeclType_$cshow ::
    Language.PureScript.Environment.DataDeclType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType) ->
                 case x of wild {
                   Language.PureScript.Environment.Data
                   -> Language.PureScript.Environment.$fShowDataDeclType4
                   Language.PureScript.Environment.Newtype
                   -> Language.PureScript.Environment.$fShowDataDeclType2 }) -}
7eb61fe78108d98d82e39145869b2402
  $fShowDataDeclType_$cshowList ::
    [Language.PureScript.Environment.DataDeclType] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.DataDeclType])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.DataDeclType
                   Language.PureScript.Environment.$fShowDataDeclType1
                   ls
                   s) -}
7eb61fe78108d98d82e39145869b2402
  $fShowDataDeclType_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.DataDeclType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Language.PureScript.Environment.DataDeclType)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Language.PureScript.Environment.Data
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowDataDeclType4)
                        eta
                   Language.PureScript.Environment.Newtype
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowDataDeclType2)
                        eta }) -}
7eb61fe78108d98d82e39145869b2402
  $fShowEnvironment ::
    GHC.Show.Show Language.PureScript.Environment.Environment
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.Environment
                  Language.PureScript.Environment.$fShowEnvironment_$cshowsPrec
                  Language.PureScript.Environment.$fShowEnvironment_$cshow
                  Language.PureScript.Environment.$fShowEnvironment_$cshowList -}
7eb61fe78108d98d82e39145869b2402
  $fShowEnvironment1 ::
    Language.PureScript.Environment.Environment -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (w :: Language.PureScript.Environment.Environment) ->
                 case w of ww { Language.PureScript.Environment.Environment ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 Language.PureScript.Environment.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 }) -}
d9673528971a374e256383f4a81d7a38
  $fShowEnvironment2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
7eb61fe78108d98d82e39145869b2402
  $fShowEnvironment_$cshow ::
    Language.PureScript.Environment.Environment -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.Environment) ->
                 Language.PureScript.Environment.$fShowEnvironment_$cshowsPrec
                   Language.PureScript.Environment.$fShowEnvironment2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7eb61fe78108d98d82e39145869b2402
  $fShowEnvironment_$cshowList ::
    [Language.PureScript.Environment.Environment] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.Environment])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.Environment
                   Language.PureScript.Environment.$fShowEnvironment1
                   ls
                   s) -}
7eb61fe78108d98d82e39145869b2402
  $fShowEnvironment_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.Environment -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Environment.Environment) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Environment.Environment ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 Language.PureScript.Environment.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowFunctionalDependency ::
    GHC.Show.Show Language.PureScript.Environment.FunctionalDependency
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.FunctionalDependency
                  Language.PureScript.Environment.$fShowFunctionalDependency_$cshowsPrec
                  Language.PureScript.Environment.$fShowFunctionalDependency_$cshow
                  Language.PureScript.Environment.$fShowFunctionalDependency_$cshowList -}
181e7295489b314c6c042d61e80bb6b9
  $fShowFunctionalDependency1 ::
    Language.PureScript.Environment.FunctionalDependency
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Environment.FunctionalDependency)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Environment.FunctionalDependency ww1 ww2 ->
                 Language.PureScript.Environment.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowFunctionalDependency_$cshow ::
    Language.PureScript.Environment.FunctionalDependency
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.FunctionalDependency) ->
                 Language.PureScript.Environment.$fShowFunctionalDependency_$cshowsPrec
                   Language.PureScript.Environment.$fShowEnvironment2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowFunctionalDependency_$cshowList ::
    [Language.PureScript.Environment.FunctionalDependency]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.FunctionalDependency])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.$fShowFunctionalDependency1
                   ls
                   s) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowFunctionalDependency_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.FunctionalDependency
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Environment.FunctionalDependency)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Environment.FunctionalDependency ww3 ww4 ->
                 Language.PureScript.Environment.$w$cshowsPrec1
                   ww1
                   ww3
                   ww4
                   w2 } }) -}
7e23f4ddba2350405f465a39833424c7
  $fShowNameKind ::
    GHC.Show.Show Language.PureScript.Environment.NameKind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.NameKind
                  Language.PureScript.Environment.$fShowNameKind_$cshowsPrec
                  Language.PureScript.Environment.$fShowNameKind_$cshow
                  Language.PureScript.Environment.$fShowNameKind_$cshowList -}
a206860e6153e6aeffbcf685885e1360
  $fShowNameKind1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowNameKind2) -}
b06743f4a1c321c994bb9dc4e1a68d4a
  $fShowNameKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("External"#) -}
84959463a559bad33b4036dc88008c9b
  $fShowNameKind3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowNameKind4) -}
1b3986156f61e39de2358bb4a6b0a3aa
  $fShowNameKind4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Public"#) -}
ab0cf0daaf3dd381dc86c9f3e647c577
  $fShowNameKind5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowNameKind6) -}
499c7f0f7a6a54eb1f2af478d4000e96
  $fShowNameKind6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Private"#) -}
7e23f4ddba2350405f465a39833424c7
  $fShowNameKind_$cshow ::
    Language.PureScript.Environment.NameKind -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.NameKind) ->
                 case x of wild {
                   Language.PureScript.Environment.Private
                   -> Language.PureScript.Environment.$fShowNameKind5
                   Language.PureScript.Environment.Public
                   -> Language.PureScript.Environment.$fShowNameKind3
                   Language.PureScript.Environment.External
                   -> Language.PureScript.Environment.$fShowNameKind1 }) -}
7e23f4ddba2350405f465a39833424c7
  $fShowNameKind_$cshowList ::
    [Language.PureScript.Environment.NameKind] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.NameKind])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.NameKind
                   Language.PureScript.Environment.$w$cshowsPrec2
                   ls
                   s) -}
7e23f4ddba2350405f465a39833424c7
  $fShowNameKind_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.NameKind -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Environment.NameKind)
                   (w2 :: GHC.Base.String) ->
                 Language.PureScript.Environment.$w$cshowsPrec2 w1 w2) -}
22706fecc369659455f7dc5f13f3340f
  $fShowNameVisibility ::
    GHC.Show.Show Language.PureScript.Environment.NameVisibility
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.NameVisibility
                  Language.PureScript.Environment.$fShowNameVisibility_$cshowsPrec
                  Language.PureScript.Environment.$fShowNameVisibility_$cshow
                  Language.PureScript.Environment.$fShowNameVisibility_$cshowList -}
22706fecc369659455f7dc5f13f3340f
  $fShowNameVisibility1 ::
    Language.PureScript.Environment.NameVisibility -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Environment.NameVisibility)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Language.PureScript.Environment.Undefined
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowNameVisibility4)
                        eta
                   Language.PureScript.Environment.Defined
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowNameVisibility2)
                        eta }) -}
9c0ed9fbc6e89fb36371e5775cacb917
  $fShowNameVisibility2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowNameVisibility3) -}
1854be002d7178467f98481fefca1531
  $fShowNameVisibility3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Defined"#) -}
e2c8ea4ebaa891fd16f44956fb29da6f
  $fShowNameVisibility4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowNameVisibility5) -}
d732bc7c5753c4beed444fe3c9f2f42b
  $fShowNameVisibility5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Undefined"#) -}
22706fecc369659455f7dc5f13f3340f
  $fShowNameVisibility_$cshow ::
    Language.PureScript.Environment.NameVisibility -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.NameVisibility) ->
                 case x of wild {
                   Language.PureScript.Environment.Undefined
                   -> Language.PureScript.Environment.$fShowNameVisibility4
                   Language.PureScript.Environment.Defined
                   -> Language.PureScript.Environment.$fShowNameVisibility2 }) -}
22706fecc369659455f7dc5f13f3340f
  $fShowNameVisibility_$cshowList ::
    [Language.PureScript.Environment.NameVisibility] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.NameVisibility])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.NameVisibility
                   Language.PureScript.Environment.$fShowNameVisibility1
                   ls
                   s) -}
22706fecc369659455f7dc5f13f3340f
  $fShowNameVisibility_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.NameVisibility -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Language.PureScript.Environment.NameVisibility)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Language.PureScript.Environment.Undefined
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowNameVisibility4)
                        eta
                   Language.PureScript.Environment.Defined
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           Language.PureScript.Environment.$fShowNameVisibility2)
                        eta }) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowTypeClassData ::
    GHC.Show.Show Language.PureScript.Environment.TypeClassData
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeClassData
                  Language.PureScript.Environment.$fShowTypeClassData_$cshowsPrec
                  Language.PureScript.Environment.$fShowTypeClassData_$cshow
                  Language.PureScript.Environment.$fShowTypeClassData_$cshowList -}
181e7295489b314c6c042d61e80bb6b9
  $fShowTypeClassData1 ::
    Language.PureScript.Environment.TypeClassData -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U,1*U)>,
     Unfolding: (\ (w :: Language.PureScript.Environment.TypeClassData) ->
                 case w of ww { Language.PureScript.Environment.TypeClassData ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.$w$cshowsPrec3
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowTypeClassData_$cshow ::
    Language.PureScript.Environment.TypeClassData -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.TypeClassData) ->
                 Language.PureScript.Environment.$fShowTypeClassData_$cshowsPrec
                   Language.PureScript.Environment.$fShowEnvironment2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowTypeClassData_$cshowList ::
    [Language.PureScript.Environment.TypeClassData] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.TypeClassData])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.TypeClassData
                   Language.PureScript.Environment.$fShowTypeClassData1
                   ls
                   s) -}
181e7295489b314c6c042d61e80bb6b9
  $fShowTypeClassData_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.TypeClassData -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,U,U,U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Environment.TypeClassData) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Environment.TypeClassData ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Language.PureScript.Environment.$w$cshowsPrec3
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 } }) -}
713362c52c19b15de0cab368ddfda667
  $fShowTypeKind ::
    GHC.Show.Show Language.PureScript.Environment.TypeKind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeKind
                  Language.PureScript.Environment.$fShowTypeKind_$cshowsPrec
                  Language.PureScript.Environment.$fShowTypeKind_$cshow
                  Language.PureScript.Environment.$fShowTypeKind_$cshowList -}
713362c52c19b15de0cab368ddfda667
  $fShowTypeKind1 ::
    Language.PureScript.Environment.TypeKind -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.PureScript.Environment.$fShowTypeKind_$cshowsPrec
                   Language.PureScript.Environment.$fShowEnvironment2) -}
36eb359e3874a73869d5d892a8e25e9c
  $fShowTypeKind10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind11) -}
b5925b884fa73bf37d908d472d298632
  $fShowTypeKind11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DataType "#) -}
75f2b4a4ffca9754366d9bbfa6988bbc
  $fShowTypeKind12 ::
    (Language.PureScript.Names.ProperName
       'Language.PureScript.Names.ConstructorName,
     [Language.PureScript.Types.SourceType])
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U),1*U)><L,U>m2,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.ConstructorName,
                          [Language.PureScript.Types.SourceType]))
                   (w1 :: GHC.Base.String) ->
                 case w of ww { (,) ww1 ww2 ->
                 case Language.PureScript.Environment.$wlvl
                        ww1
                        ww2
                        w1 of ww3 { (#,#) ww4 ww5 ->
                 GHC.Types.: @ GHC.Types.Char ww4 ww5 } }) -}
195bcaff86356959e2e809dbe576e9bd
  $fShowTypeKind13 ::
    Language.PureScript.Types.Type
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w2 :: Language.PureScript.Types.Type
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])) ->
                 Language.PureScript.Types.$w$cshowsPrec3
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                   0#
                   w2) -}
99eb15ef53ce5dd194638d7a8774adc6
  $fShowTypeKind14 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U),1*U)><L,U>m2,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Data.Text.Internal.Text,
                          GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))
                   (w1 :: GHC.Base.String) ->
                 case w of ww { (,) ww1 ww2 ->
                 case Language.PureScript.Environment.$wlvl1
                        ww1
                        ww2
                        w1 of ww3 { (#,#) ww4 ww5 ->
                 GHC.Types.: @ GHC.Types.Char ww4 ww5 } }) -}
af05075dc2df7a4a7c8b42e83609d157
  $fShowTypeKind2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind3) -}
1b2336e024678ba124a0fb49ef04a1a9
  $fShowTypeKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ScopedTypeVar"#) -}
0bef50c6f6147816d3eb120a75e20dcb
  $fShowTypeKind4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind5) -}
c7ab7a981425b6b7ac20190349c78dcb
  $fShowTypeKind5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LocalTypeVariable"#) -}
caab0919313ced1ece314b8c05ee9765
  $fShowTypeKind6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind7) -}
1c4f8b422bf2ac51c3e5779c0a12fc1e
  $fShowTypeKind7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternData"#) -}
7cbf4299ef76397458b3ca2a30c12c09
  $fShowTypeKind8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind9) -}
9c3f5eecf8f9dab29d949c3a7409d443
  $fShowTypeKind9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeSynonym"#) -}
713362c52c19b15de0cab368ddfda667
  $fShowTypeKind_$cshow ::
    Language.PureScript.Environment.TypeKind -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
713362c52c19b15de0cab368ddfda667
  $fShowTypeKind_$cshowList ::
    [Language.PureScript.Environment.TypeKind] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Environment.TypeKind])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Environment.TypeKind
                   Language.PureScript.Environment.$fShowTypeKind1
                   ls
                   s) -}
713362c52c19b15de0cab368ddfda667
  $fShowTypeKind_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Environment.TypeKind -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Language.PureScript.Environment.TypeKind)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Language.PureScript.Environment.DataType b1 b2
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String)[OneShot] ->
                          GHC.Show.showList__
                            @ (Data.Text.Internal.Text,
                               GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                            Language.PureScript.Environment.$fShowTypeKind14
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName,
                                     [Language.PureScript.Types.SourceType])
                                  Language.PureScript.Environment.$fShowTypeKind12
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Environment.$fShowTypeKind10
                             (g eta)
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Environment.$fShowTypeKind10
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 eta))) } }
                   Language.PureScript.Environment.TypeSynonym
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowTypeKind8
                        eta
                   Language.PureScript.Environment.ExternData
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowTypeKind6
                        eta
                   Language.PureScript.Environment.LocalTypeVariable
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowTypeKind4
                        eta
                   Language.PureScript.Environment.ScopedTypeVar
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowTypeKind2
                        eta }) -}
9ec8affa99e377978aec3f566e8b4238
  $fShowTypeKind_$s$fShow(,) ::
    GHC.Show.Show
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.AST.SourcePos.SourceSpan,
                     [Language.PureScript.Comments.Comment])
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.AST.SourcePos.$fShowSourceSpan
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShow[])
                  (\ (x :: (Language.PureScript.AST.SourcePos.SourceSpan,
                            [Language.PureScript.Comments.Comment])) ->
                   GHC.Show.$fShow(,)_$cshowsPrec
                     @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.AST.SourcePos.$fShowSourceSpan
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShow[]
                     GHC.Show.$fShow(,)1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [(Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ Language.PureScript.AST.SourcePos.SourceSpan
                        @ [Language.PureScript.Comments.Comment]
                        Language.PureScript.AST.SourcePos.$fShowSourceSpan
                        Language.PureScript.Environment.$fShowTypeKind_$s$fShow[]
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
74b8e89974b71d4c894a8dad8345448c
  $fShowTypeKind_$s$fShowKind ::
    GHC.Show.Show
      (Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Kinds.Kind
                       (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment]))
                  (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,))
                  (\ (x :: Language.PureScript.Kinds.Kind
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])) ->
                   Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                     Language.PureScript.Kinds.$fFoldableKind7
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Kinds.Kind
                               (Language.PureScript.AST.SourcePos.SourceSpan,
                                [Language.PureScript.Comments.Comment])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Kinds.Kind
                          (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment]))
                     (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])
                        Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                        Language.PureScript.Kinds.$fFoldableKind7)
                     ls
                     s) -}
ab3b58bf44e25225e9d341f3d7e78919
  $fShowTypeKind_$s$fShow[] ::
    GHC.Show.Show [Language.PureScript.Comments.Comment]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Comments.Comment]
                  (\ (ds :: GHC.Types.Int) ->
                   Language.PureScript.Comments.$fShowComment_$cshowList)
                  (\ (x :: [Language.PureScript.Comments.Comment]) ->
                   GHC.Show.showList__
                     @ Language.PureScript.Comments.Comment
                     Language.PureScript.Comments.$fShowComment1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[Language.PureScript.Comments.Comment]])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.Comments.$fShowComment_$cshowList
                     ls
                     s) -}
7eb61fe78108d98d82e39145869b2402
  $fToJSONDataDeclType ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Environment.DataDeclType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.DataDeclType
                  Language.PureScript.Environment.$fToJSONDataDeclType_$ctoJSON
                  Language.PureScript.Environment.$fToJSONDataDeclType_$ctoEncoding
                  Language.PureScript.Environment.$fToJSONDataDeclType_$ctoJSONList
                  Language.PureScript.Environment.$fToJSONDataDeclType_$ctoEncodingList -}
7eb61fe78108d98d82e39145869b2402
  $fToJSONDataDeclType_$ctoEncoding ::
    Language.PureScript.Environment.DataDeclType
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType) ->
                 case x of wild {
                   Language.PureScript.Environment.Data
                   -> case Language.PureScript.Environment.$fFromJSONDataDeclType12 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      Data.Aeson.Encoding.Builder.encodeToBuilder
                        (Data.Aeson.Types.Internal.String dt) }
                   Language.PureScript.Environment.Newtype
                   -> case Language.PureScript.Environment.$fFromJSONDataDeclType10 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      Data.Aeson.Encoding.Builder.encodeToBuilder
                        (Data.Aeson.Types.Internal.String dt) } })
                  `cast`
                (<Language.PureScript.Environment.DataDeclType>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
7eb61fe78108d98d82e39145869b2402
  $fToJSONDataDeclType_$ctoEncodingList ::
    [Language.PureScript.Environment.DataDeclType]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Environment.DataDeclType
                   Language.PureScript.Environment.$fToJSONDataDeclType_$ctoEncoding) -}
7eb61fe78108d98d82e39145869b2402
  $fToJSONDataDeclType_$ctoJSON ::
    Language.PureScript.Environment.DataDeclType
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Environment.DataDeclType) ->
                 case x of wild {
                   Language.PureScript.Environment.Data
                   -> case Language.PureScript.Environment.$fFromJSONDataDeclType12 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      Data.Aeson.Types.Internal.String dt }
                   Language.PureScript.Environment.Newtype
                   -> case Language.PureScript.Environment.$fFromJSONDataDeclType10 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      Data.Aeson.Types.Internal.String dt } }) -}
7eb61fe78108d98d82e39145869b2402
  $fToJSONDataDeclType_$ctoJSONList ::
    [Language.PureScript.Environment.DataDeclType]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Environment.DataDeclType]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Environment.DataDeclType
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Environment.DataDeclType
                                     c
                                     Language.PureScript.Environment.$fToJSONDataDeclType_$ctoJSON)
                                  n1
                                  x)))))) -}
181e7295489b314c6c042d61e80bb6b9
  $fToJSONFunctionalDependency ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Environment.FunctionalDependency
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.FunctionalDependency
                  Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoJSON
                  Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoEncoding
                  Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoJSONList
                  Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoEncodingList -}
181e7295489b314c6c042d61e80bb6b9
  $fToJSONFunctionalDependency_$ctoEncoding ::
    Language.PureScript.Environment.FunctionalDependency
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.Environment.FunctionalDependency) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoJSON
                      x))
                  `cast`
                (<Language.PureScript.Environment.FunctionalDependency>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
181e7295489b314c6c042d61e80bb6b9
  $fToJSONFunctionalDependency_$ctoEncodingList ::
    [Language.PureScript.Environment.FunctionalDependency]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoEncoding) -}
181e7295489b314c6c042d61e80bb6b9
  $fToJSONFunctionalDependency_$ctoJSON ::
    Language.PureScript.Environment.FunctionalDependency
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,1*U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Environment.FunctionalDependency) ->
                 case w of ww { Language.PureScript.Environment.FunctionalDependency ww1 ww2 ->
                 case Language.PureScript.Environment.$w$ctoJSON
                        ww1
                        ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
181e7295489b314c6c042d61e80bb6b9
  $fToJSONFunctionalDependency_$ctoJSONList ::
    [Language.PureScript.Environment.FunctionalDependency]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Environment.FunctionalDependency]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Environment.FunctionalDependency
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Environment.FunctionalDependency
                                     c
                                     Language.PureScript.Environment.$fToJSONFunctionalDependency_$ctoJSON)
                                  n1
                                  x)))))) -}
994fa8ca333b5e167aa7c8aced04ecaa
  $fToJSONFunctionalDependency_$s$wfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         GHC.Prim.RealWorld Data.Aeson.Types.Internal.Value
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
  {- Arity: 6, Strictness: <S,U><S,1*U><L,U><S,U><L,U><L,U> -}
713362c52c19b15de0cab368ddfda667
  $fToJSONTypeKind ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Environment.TypeKind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Environment.TypeKind
                  Language.PureScript.Environment.$fToJSONTypeKind_$ctoJSON
                  Language.PureScript.Environment.$fToJSONTypeKind_$ctoEncoding
                  Language.PureScript.Environment.$fToJSONTypeKind_$ctoJSONList
                  Language.PureScript.Environment.$fToJSONTypeKind_$ctoEncodingList -}
7839b8c907066ef307e6b3c9b97dd17d
  $fToJSONTypeKind1 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Language.PureScript.Environment.$fToJSONTypeKind2 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
7ed64087c91133800cba0d74b7c099c6
  $fToJSONTypeKind10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ctors"#) -}
6f38cf03894a622f10eb4affba590fd3
  $fToJSONTypeKind11 ::
    (Language.PureScript.Names.ProperName
       'Language.PureScript.Names.ConstructorName,
     [Language.PureScript.Types.SourceType])
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.ToJSON.$fToJSON(,)_$cliftToJSON2
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ConstructorName)
                   @ [Language.PureScript.Types.SourceType]
                   Data.Aeson.Types.Internal.$WString
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ConstructorName>_P)
                    ->_R <Data.Aeson.Types.Internal.Value>_R)
                   (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                      @ 'Language.PureScript.Names.ConstructorName)
                   Language.PureScript.Environment.$fToJSONTypeKind13
                   Language.PureScript.Environment.$fToJSONTypeKind12) -}
dea0dde0f2eadce7add1eab0ae261fa3
  $fToJSONTypeKind12 ::
    [[Language.PureScript.Types.Type
        Language.PureScript.AST.SourcePos.SourceAnn]]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [[Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn]]) ->
                 case Language.PureScript.Environment.$wlvl2 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
00429a77e75f4c324544bb0bed05c1fc
  $fToJSONTypeKind13 ::
    [Language.PureScript.Types.Type
       (Language.PureScript.AST.SourcePos.SourceSpan,
        [Language.PureScript.Comments.Comment])]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Types.Type
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])]) ->
                 case Language.PureScript.Environment.$wlvl3 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
ab6f7347228ff25ba74d347688567747
  $fToJSONTypeKind14 ::
    (Language.PureScript.AST.SourcePos.SourceSpan,
     [Language.PureScript.Comments.Comment])
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.ToJSON.$fToJSON(,)_$cliftToJSON2
                   @ Language.PureScript.AST.SourcePos.SourceSpan
                   @ [Language.PureScript.Comments.Comment]
                   Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoJSON
                   Language.PureScript.AST.SourcePos.$fToJSONSourceSpan_$ctoJSONList
                   Language.PureScript.Comments.$fToJSONComment_$ctoJSONList
                   Language.PureScript.Environment.$fToJSONTypeKind15) -}
7e89df1515a99148b51657f3d2b77bfa
  $fToJSONTypeKind15 ::
    [[Language.PureScript.Comments.Comment]]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [[Language.PureScript.Comments.Comment]]) ->
                 case Language.PureScript.Environment.$wlvl4 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
c41675d4613d7924f9c496e5de70d70f
  $fToJSONTypeKind16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("args"#) -}
165c489ed199fe84f076bab8aca3036c
  $fToJSONTypeKind17 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.ToJSON.$fToJSON(,)_$cliftToJSON2
                   @ Data.Text.Internal.Text
                   @ (GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Data.Aeson.Types.Internal.$WString
                   Data.Aeson.Types.ToJSON.$fToJSONKeyText0_$ctoJSONList
                   Language.PureScript.Environment.$fToJSONTypeKind_f7
                   Language.PureScript.Environment.$fToJSONTypeKind18) -}
e335141e378b9e2969782aabc80f8517
  $fToJSONTypeKind18 ::
    [GHC.Base.Maybe
       (Language.PureScript.Kinds.Kind
          Language.PureScript.AST.SourcePos.SourceAnn)]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [GHC.Base.Maybe
                            (Language.PureScript.Kinds.Kind
                               Language.PureScript.AST.SourcePos.SourceAnn)]) ->
                 case Language.PureScript.Environment.$wlvl5 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
aaa4c524fdc3a2df2386d38668abd563
  $fToJSONTypeKind2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind3) -}
6031dcd73242bcf83d147d8e7b455b7f
  $fToJSONTypeKind3 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Language.PureScript.Environment.$fToJSONTypeKind4 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
dd9b2a926a2784918c5959a8b42080be
  $fToJSONTypeKind4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind5) -}
fa9a9beb742cc4d1fc92d256ce88b2fc
  $fToJSONTypeKind5 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Language.PureScript.Environment.$fToJSONTypeKind6 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
73d2860b3ecc9859daef58432220e9b3
  $fToJSONTypeKind6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind7) -}
c00c80ec06019ed120357fed9881d2a6
  $fToJSONTypeKind7 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Language.PureScript.Environment.$fToJSONTypeKind8 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
e5929d91c28440d273b6f3f280e8d97e
  $fToJSONTypeKind8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fShowTypeKind9) -}
dfe5cc7a9002902dc29bd8030a4c0fc7
  $fToJSONTypeKind9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DataType"#) -}
713362c52c19b15de0cab368ddfda667
  $fToJSONTypeKind_$ctoEncoding ::
    Language.PureScript.Environment.TypeKind
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.Environment.TypeKind) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Environment.$fToJSONTypeKind_$ctoJSON x))
                  `cast`
                (<Language.PureScript.Environment.TypeKind>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
713362c52c19b15de0cab368ddfda667
  $fToJSONTypeKind_$ctoEncodingList ::
    [Language.PureScript.Environment.TypeKind]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Environment.TypeKind
                   Language.PureScript.Environment.$fToJSONTypeKind_$ctoEncoding) -}
713362c52c19b15de0cab368ddfda667
  $fToJSONTypeKind_$ctoJSON ::
    Language.PureScript.Environment.TypeKind
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Environment.TypeKind) ->
                 case ds of wild {
                   Language.PureScript.Environment.DataType args ctors
                   -> case GHC.Magic.runRW#
                             @ ('GHC.Types.TupleRep
                                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                             @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.newArray#
                                     @ Data.Aeson.Types.Internal.Value
                                     @ (Control.Monad.Primitive.PrimState
                                          (GHC.ST.ST GHC.Prim.RealWorld))
                                     0#
                                     (Data.Vector.Mutable.uninitialised
                                        @ Data.Aeson.Types.Internal.Value)
                                     s1
                                       `cast`
                                     (GHC.Prim.State#
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                              Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R
                                (GHC.Base.map
                                   @ (Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                                   @ Data.Aeson.Types.Internal.Value
                                   Language.PureScript.Environment.$fToJSONTypeKind17
                                   args)
                                0#
                                ipv1
                                  `cast`
                                (GHC.Prim.MutableArray#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N)
                                   <Data.Aeson.Types.Internal.Value>_R)_R
                                0#
                                0# }) of ds1 { (#,#) ipv1 ipv2 ->
                      case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                      case Language.PureScript.Environment.$fToJSONTypeKind_key3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww1
                             ww2
                             ww3
                             (Data.Aeson.Types.Internal.Array dt)
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                      case GHC.Magic.runRW#
                             @ ('GHC.Types.TupleRep
                                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                             @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.newArray#
                                     @ Data.Aeson.Types.Internal.Value
                                     @ (Control.Monad.Primitive.PrimState
                                          (GHC.ST.ST GHC.Prim.RealWorld))
                                     0#
                                     (Data.Vector.Mutable.uninitialised
                                        @ Data.Aeson.Types.Internal.Value)
                                     s1
                                       `cast`
                                     (GHC.Prim.State#
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                              Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R
                                (GHC.Base.map
                                   @ (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.ConstructorName,
                                      [Language.PureScript.Types.SourceType])
                                   @ Data.Aeson.Types.Internal.Value
                                   Language.PureScript.Environment.$fToJSONTypeKind11
                                   ctors)
                                0#
                                ipv7
                                  `cast`
                                (GHC.Prim.MutableArray#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N)
                                   <Data.Aeson.Types.Internal.Value>_R)_R
                                0#
                                0# }) of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                      case Language.PureScript.Environment.$fToJSONTypeKind_key1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww5
                             ww6
                             ww7
                             (Data.Aeson.Types.Internal.Array dt1)
                             z23 of dt2 { DEFAULT ->
                      case Language.PureScript.Environment.$fToJSONTypeKind_key2 of ww8 { Data.Text.Internal.Text ww9 ww10 ww11 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww9
                             ww10
                             ww11
                             (Data.Aeson.Types.Internal.Object dt2)
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt3 { DEFAULT ->
                      Data.Aeson.Types.Internal.Object dt3 } } } } } } } } } }
                   Language.PureScript.Environment.TypeSynonym
                   -> Language.PureScript.Environment.$fToJSONTypeKind7
                   Language.PureScript.Environment.ExternData
                   -> Language.PureScript.Environment.$fToJSONTypeKind5
                   Language.PureScript.Environment.LocalTypeVariable
                   -> Language.PureScript.Environment.$fToJSONTypeKind3
                   Language.PureScript.Environment.ScopedTypeVar
                   -> Language.PureScript.Environment.$fToJSONTypeKind1 }) -}
713362c52c19b15de0cab368ddfda667
  $fToJSONTypeKind_$ctoJSONList ::
    [Language.PureScript.Environment.TypeKind]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Environment.TypeKind]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Environment.TypeKind
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Environment.TypeKind
                                     c
                                     Language.PureScript.Environment.$fToJSONTypeKind_$ctoJSON)
                                  n1
                                  x)))))) -}
72738a7101027fa04dccc52a06e6b50d
  $fToJSONTypeKind_f11 ::
    Language.PureScript.Types.Type
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Language.PureScript.Types.Type
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])) ->
                 Language.PureScript.Types.typeToJSON
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fToJSONTypeKind14
                   eta) -}
a4ceca2f0f99bf19a2a443ac926330dc
  $fToJSONTypeKind_f5 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Language.PureScript.Kinds.Kind
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])) ->
                 case Language.PureScript.Kinds.$wkindToJSON
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])
                        Language.PureScript.Environment.$fToJSONTypeKind14
                        eta of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
9bfb87c82bd882cdafec908ecc30bff1
  $fToJSONTypeKind_f6 ::
    [Language.PureScript.Kinds.Kind
       Language.PureScript.AST.SourcePos.SourceAnn]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Kinds.Kind
                            Language.PureScript.AST.SourcePos.SourceAnn]) ->
                 case Language.PureScript.Environment.$wf6 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
a6a5282e08940ffc571ffe11e459ec78
  $fToJSONTypeKind_f7 ::
    GHC.Base.Maybe
      (Language.PureScript.Kinds.Kind
         Language.PureScript.AST.SourcePos.SourceAnn)
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.ToJSON.$fToJSON1Maybe_$cliftToJSON
                   @ (Language.PureScript.Kinds.Kind
                        Language.PureScript.AST.SourcePos.SourceAnn)
                   Language.PureScript.Environment.$fToJSONTypeKind_f5
                   Language.PureScript.Environment.$fToJSONTypeKind_f6) -}
92adfd34eceb11ddb77c209feb505641
  $fToJSONTypeKind_key1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fToJSONTypeKind10) -}
d351fd17eae7696a7fe2c903ff4d773a
  $fToJSONTypeKind_key2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fToJSONTypeKind9) -}
ff40dc0204ad44b9f4978add17509ce8
  $fToJSONTypeKind_key3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.$fToJSONTypeKind16) -}
89cd3e8b7579aef7f146927a861e4a8d
  $s$fFromJSONMaybe ::
    Data.Aeson.Types.FromJSON.FromJSON
      (GHC.Base.Maybe
         (Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe
                       (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn))
                  (Data.Aeson.Types.FromJSON.$fFromJSON1Maybe_$cliftParseJSON
                     @ (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     Language.PureScript.Kinds.$fFromJSONKind1_$cparseJSON
                     Language.PureScript.Kinds.$fFromJSONKind1_$cparseJSONList)
                  (Data.Aeson.Types.FromJSON.$fFromJSONMaybe_$cparseJSONList
                     @ (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     Language.PureScript.Kinds.$fFromJSONKind1) -}
c84c2ca985a78576d4ebd514cda2d65b
  $s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON
      [Language.PureScript.Types.Type
         Language.PureScript.AST.SourcePos.SourceAnn]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Types.Type
                       Language.PureScript.AST.SourcePos.SourceAnn]
                  Language.PureScript.Types.$fFromJSONType1_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     Language.PureScript.Types.$fFromJSONType1) -}
3bfc95a69d7af447e26d21538d60b071
  $s$fShow(,,) ::
    GHC.Show.Show
      (Language.PureScript.Types.Type
         Language.PureScript.AST.SourcePos.SourceAnn,
       Language.PureScript.Environment.NameKind,
       Language.PureScript.Environment.NameVisibility)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Types.Type
                       Language.PureScript.AST.SourcePos.SourceAnn,
                     Language.PureScript.Environment.NameKind,
                     Language.PureScript.Environment.NameVisibility)
                  (GHC.Show.$fShow(,,)_$cshowsPrec
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     @ Language.PureScript.Environment.NameKind
                     @ Language.PureScript.Environment.NameVisibility
                     Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
                     Language.PureScript.Environment.$fShowNameKind
                     Language.PureScript.Environment.$fShowNameVisibility)
                  (\ (x :: (Language.PureScript.Types.Type
                              Language.PureScript.AST.SourcePos.SourceAnn,
                            Language.PureScript.Environment.NameKind,
                            Language.PureScript.Environment.NameVisibility)) ->
                   GHC.Show.$fShow(,,)_$cshowsPrec
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     @ Language.PureScript.Environment.NameKind
                     @ Language.PureScript.Environment.NameVisibility
                     Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
                     Language.PureScript.Environment.$fShowNameKind
                     Language.PureScript.Environment.$fShowNameVisibility
                     GHC.Show.$fShow(,)1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [(Language.PureScript.Types.Type
                                Language.PureScript.AST.SourcePos.SourceAnn,
                              Language.PureScript.Environment.NameKind,
                              Language.PureScript.Environment.NameVisibility)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn,
                        Language.PureScript.Environment.NameKind,
                        Language.PureScript.Environment.NameVisibility)
                     (GHC.Show.$fShow(,,)_$cshowsPrec
                        @ (Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn)
                        @ Language.PureScript.Environment.NameKind
                        @ Language.PureScript.Environment.NameVisibility
                        Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
                        Language.PureScript.Environment.$fShowNameKind
                        Language.PureScript.Environment.$fShowNameVisibility
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
c596b4af115ca3ed3def627e89e0976e
  $s$fShow(,,)_$s$fShowType ::
    GHC.Show.Show
      (Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Types.Type
                       (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment]))
                  (Language.PureScript.Types.$fShowType_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,))
                  (\ (x :: Language.PureScript.Types.Type
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])) ->
                   Language.PureScript.Types.$fShowType_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                     Language.PureScript.Types.$fFoldableConstraint4
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Types.Type
                               (Language.PureScript.AST.SourcePos.SourceSpan,
                                [Language.PureScript.Comments.Comment])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Types.Type
                          (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment]))
                     (Language.PureScript.Types.$fShowType_$cshowsPrec
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])
                        Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                        Language.PureScript.Types.$fFoldableConstraint4)
                     ls
                     s) -}
c8b7e4225862e78157938acdd4ed4e92
  $s$fShow(,,,) ::
    GHC.Show.Show
      (Language.PureScript.Environment.DataDeclType,
       Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName,
       Language.PureScript.Types.Type
         Language.PureScript.AST.SourcePos.SourceAnn,
       [Language.PureScript.Names.Ident])
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Environment.DataDeclType,
                     Language.PureScript.Names.ProperName
                       'Language.PureScript.Names.TypeName,
                     Language.PureScript.Types.Type
                       Language.PureScript.AST.SourcePos.SourceAnn,
                     [Language.PureScript.Names.Ident])
                  (GHC.Show.$fShow(,,,)_$cshowsPrec
                     @ Language.PureScript.Environment.DataDeclType
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     @ [Language.PureScript.Names.Ident]
                     Language.PureScript.Environment.$fShowDataDeclType
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.TypeName)
                     Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
                     Language.PureScript.Environment.$s$fShow(,,,)_$s$fShow[])
                  (\ (x :: (Language.PureScript.Environment.DataDeclType,
                            Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName,
                            Language.PureScript.Types.Type
                              Language.PureScript.AST.SourcePos.SourceAnn,
                            [Language.PureScript.Names.Ident])) ->
                   GHC.Show.$fShow(,,,)_$cshowsPrec
                     @ Language.PureScript.Environment.DataDeclType
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                     @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     @ [Language.PureScript.Names.Ident]
                     Language.PureScript.Environment.$fShowDataDeclType
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.TypeName)
                     Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
                     Language.PureScript.Environment.$s$fShow(,,,)_$s$fShow[]
                     GHC.Show.$fShow(,)1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [(Language.PureScript.Environment.DataDeclType,
                              Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName,
                              Language.PureScript.Types.Type
                                Language.PureScript.AST.SourcePos.SourceAnn,
                              [Language.PureScript.Names.Ident])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Environment.DataDeclType,
                        Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName,
                        Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn,
                        [Language.PureScript.Names.Ident])
                     (GHC.Show.$fShow(,,,)_$cshowsPrec
                        @ Language.PureScript.Environment.DataDeclType
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                        @ (Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn)
                        @ [Language.PureScript.Names.Ident]
                        Language.PureScript.Environment.$fShowDataDeclType
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.TypeName)
                        Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
                        Language.PureScript.Environment.$s$fShow(,,,)_$s$fShow[]
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
9556ac3ca666fc0d151d4d10292f27de
  $s$fShow(,,,)_$s$fShow[] ::
    GHC.Show.Show [Language.PureScript.Names.Ident]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Names.Ident]
                  (\ (ds :: GHC.Types.Int) ->
                   Language.PureScript.Names.$fShowIdent_$cshowList)
                  (\ (x :: [Language.PureScript.Names.Ident]) ->
                   GHC.Show.showList__
                     @ Language.PureScript.Names.Ident
                     Language.PureScript.Names.$fShowIdent1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[Language.PureScript.Names.Ident]])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [Language.PureScript.Names.Ident]
                     Language.PureScript.Names.$fShowIdent_$cshowList
                     ls
                     s) -}
2b2ad4fd2956c6d825e683e6a7e09270
  $s$fShowKind_$cshow ::
    Language.PureScript.Kinds.Kind
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind
                           (Language.PureScript.AST.SourcePos.SourceSpan,
                            [Language.PureScript.Comments.Comment])) ->
                 Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                   Language.PureScript.Kinds.$fFoldableKind7
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a22d44e09eedffe69e4ef71e13204b19
  $s$fShowKind_$cshowList ::
    [Language.PureScript.Kinds.Kind
       (Language.PureScript.AST.SourcePos.SourceSpan,
        [Language.PureScript.Comments.Comment])]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Kinds.Kind
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Kinds.Kind
                        (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment]))
                   (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                      @ (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment])
                      Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                      Language.PureScript.Kinds.$fFoldableKind7)
                   ls
                   s) -}
a1a57557e8c76bc2f4d0b0f84d27d6f8
  $s$fShowKind_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Kinds.Kind
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Kinds.$w$cshowsPrec
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                   ww1
                   w2 }) -}
c1b94a665868c9905ea732ba7c6ad96c
  $s$fShowMap ::
    GHC.Show.Show
      (Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (GHC.Base.NonEmpty
            Language.PureScript.TypeClassDictionaries.NamedDict))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Internal.Map
                       (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident)
                       (GHC.Base.NonEmpty
                          Language.PureScript.TypeClassDictionaries.NamedDict))
                  (Data.Map.Internal.$fShowMap_$cshowsPrec
                     @ (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident)
                     @ (GHC.Base.NonEmpty
                          Language.PureScript.TypeClassDictionaries.NamedDict)
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty)
                  (\ (x :: Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                Language.PureScript.Names.Ident)
                             (GHC.Base.NonEmpty
                                Language.PureScript.TypeClassDictionaries.NamedDict)) ->
                   Data.Map.Internal.$fShowMap_$cshowsPrec
                     @ (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident)
                     @ (GHC.Base.NonEmpty
                          Language.PureScript.TypeClassDictionaries.NamedDict)
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty
                     Data.Map.Internal.$fDataMap3
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Data.Map.Internal.Map
                               (Language.PureScript.Names.Qualified
                                  Language.PureScript.Names.Ident)
                               (GHC.Base.NonEmpty
                                  Language.PureScript.TypeClassDictionaries.NamedDict)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Map.Internal.Map
                          (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident)
                          (GHC.Base.NonEmpty
                             Language.PureScript.TypeClassDictionaries.NamedDict))
                     (Data.Map.Internal.$fShowMap_$cshowsPrec
                        @ (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident)
                        @ (GHC.Base.NonEmpty
                             Language.PureScript.TypeClassDictionaries.NamedDict)
                        Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                        Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty
                        Data.Map.Internal.$fDataMap3)
                     ls
                     s) -}
295198f9fa5c1a4ae691c33b8d80553d
  $s$fShowMap_$cshow ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      (GHC.Base.NonEmpty
         Language.PureScript.TypeClassDictionaries.NamedDict)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Ident)
                           (GHC.Base.NonEmpty
                              Language.PureScript.TypeClassDictionaries.NamedDict)) ->
                 Data.Map.Internal.$fShowMap_$cshowsPrec
                   @ (Language.PureScript.Names.Qualified
                        Language.PureScript.Names.Ident)
                   @ (GHC.Base.NonEmpty
                        Language.PureScript.TypeClassDictionaries.NamedDict)
                   Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                   Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty
                   Data.Map.Internal.$fDataMap3
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a64d2cdcf01bd88a212c1734f401748e
  $s$fShowMap_$cshowList ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          Language.PureScript.Names.Ident)
       (GHC.Base.NonEmpty
          Language.PureScript.TypeClassDictionaries.NamedDict)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                Language.PureScript.Names.Ident)
                             (GHC.Base.NonEmpty
                                Language.PureScript.TypeClassDictionaries.NamedDict)])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident)
                        (GHC.Base.NonEmpty
                           Language.PureScript.TypeClassDictionaries.NamedDict))
                   (Data.Map.Internal.$fShowMap_$cshowsPrec
                      @ (Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident)
                      @ (GHC.Base.NonEmpty
                           Language.PureScript.TypeClassDictionaries.NamedDict)
                      Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                      Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty
                      Data.Map.Internal.$fDataMap3)
                   ls
                   s) -}
968e8551366c074a11a876a7209c4a6f
  $s$fShowMap_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (GHC.Base.NonEmpty
            Language.PureScript.TypeClassDictionaries.NamedDict)
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: GHC.Types.Int)
                   (w3 :: Data.Map.Internal.Map
                            (Language.PureScript.Names.Qualified
                               Language.PureScript.Names.Ident)
                            (GHC.Base.NonEmpty
                               Language.PureScript.TypeClassDictionaries.NamedDict)) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Data.Map.Internal.$w$cshowsPrec
                   @ (Language.PureScript.Names.Qualified
                        Language.PureScript.Names.Ident)
                   @ (GHC.Base.NonEmpty
                        Language.PureScript.TypeClassDictionaries.NamedDict)
                   Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                   Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty
                   ww1
                   w3 }) -}
952fe8eeb4be55df189abe2af42ee3a6
  $s$fShowMap_$cshowsPrec10 ::
    GHC.Show.Show
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (GHC.Show.$fShow(,)
                   @ (Language.PureScript.Kinds.Kind
                        Language.PureScript.AST.SourcePos.SourceAnn)
                   @ Language.PureScript.Environment.TypeKind
                   Language.PureScript.Environment.$fShowTypeKind_$s$fShowKind
                   Language.PureScript.Environment.$fShowTypeKind) -}
cbfbcaa5519d4fdc86531d6cd3efa210
  $s$fShowMap_$cshowsPrec2 ::
    GHC.Show.Show
      ([(Data.Text.Internal.Text,
         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
       Language.PureScript.Types.SourceType)
  {- Unfolding: (GHC.Show.$fShow(,)
                   @ [(Data.Text.Internal.Text,
                       GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
                   @ (Language.PureScript.Types.Type
                        Language.PureScript.AST.SourcePos.SourceAnn)
                   Language.PureScript.Environment.$s$fShowMap_$cshowsPrec3
                   Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType) -}
6a0ba97aed7f41310339943dfdae4a59
  $s$fShowMap_$cshowsPrec3 ::
    GHC.Show.Show
      [(Data.Text.Internal.Text,
        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Unfolding: (GHC.Show.$fShow[]
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.$s$fShowMap_$cshowsPrec4) -}
877e51b7340dbf8acd06b4b8fb33f84a
  $s$fShowMap_$cshowsPrec4 ::
    GHC.Show.Show
      (Data.Text.Internal.Text,
       GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Unfolding: (GHC.Show.$fShow(,)
                   @ Data.Text.Internal.Text
                   @ (GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Data.Text.Show.$fShowText
                   Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowMaybe) -}
1035006a4b48007fc959f2958ee483b8
  $s$fShowMap_$cshowsPrec8 ::
    GHC.Show.Show
      (Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident)
            (GHC.Base.NonEmpty
               Language.PureScript.TypeClassDictionaries.NamedDict)))
  {- Unfolding: (Data.Map.Internal.$fShowMap
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName))
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident)
                        (GHC.Base.NonEmpty
                           Language.PureScript.TypeClassDictionaries.NamedDict))
                   Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowQualified2
                   Language.PureScript.Environment.$s$fShowMap) -}
1a7c78a5b2dac3870b6ac1f0f223499b
  $s$fShowMap_$cshowsPrec_$s$fShowMaybe ::
    GHC.Show.Show
      (GHC.Base.Maybe
         (Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe
                       (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn))
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     Language.PureScript.Environment.$fShowTypeKind_$s$fShowKind)
                  (\ (x :: GHC.Base.Maybe
                             (Language.PureScript.Kinds.Kind
                                Language.PureScript.AST.SourcePos.SourceAnn)) ->
                   case x of wild {
                     GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                     GHC.Base.Just b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n GHC.Show.$fShowMaybe1)
                          (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                             @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                [Language.PureScript.Comments.Comment])
                             Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                             GHC.Show.appPrec1
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [GHC.Base.Maybe
                               (Language.PureScript.Kinds.Kind
                                  Language.PureScript.AST.SourcePos.SourceAnn)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Base.Maybe
                          (Language.PureScript.Kinds.Kind
                             Language.PureScript.AST.SourcePos.SourceAnn))
                     (GHC.Show.$fShowMaybe_$cshowsPrec
                        @ (Language.PureScript.Kinds.Kind
                             Language.PureScript.AST.SourcePos.SourceAnn)
                        Language.PureScript.Environment.$fShowTypeKind_$s$fShowKind
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
f80d10c99554b69431398fee86aee671
  $s$fShowMap_$cshowsPrec_$s$fShowMaybe1 ::
    GHC.Show.Show (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ Language.PureScript.Names.ModuleName
                     Language.PureScript.Names.$fShowModuleName)
                  (\ (x :: GHC.Base.Maybe Language.PureScript.Names.ModuleName) ->
                   case x of wild {
                     GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                     GHC.Base.Just b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n GHC.Show.$fShowMaybe1)
                          (Language.PureScript.Names.$fShowModuleName_$cshowsPrec
                             GHC.Show.appPrec1
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [GHC.Base.Maybe Language.PureScript.Names.ModuleName])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                     (GHC.Show.$fShowMaybe_$cshowsPrec
                        @ Language.PureScript.Names.ModuleName
                        Language.PureScript.Names.$fShowModuleName
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
f2015d6b0eb6ce139ca0203c4228805d
  $s$fShowMap_$cshowsPrec_$s$fShowQualified ::
    GHC.Show.Show
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName))
                  (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.TypeName))
                  (\ (x :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName)) ->
                   Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.TypeName)
                     Language.PureScript.Names.$fShowIdent2
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.TypeName)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Names.Qualified
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName))
                     (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.TypeName)
                        Language.PureScript.Names.$fShowIdent2)
                     ls
                     s) -}
9fc23e3c9ae87f24a5b00558db466e52
  $s$fShowMap_$cshowsPrec_$s$fShowQualified1 ::
    GHC.Show.Show
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName))
                  (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.ConstructorName))
                  (\ (x :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)) ->
                   Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fShowIdent2
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ConstructorName)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Names.Qualified
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName))
                     (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.ConstructorName)
                        Language.PureScript.Names.$fShowIdent2)
                     ls
                     s) -}
130f61b99e6e5842f1a62616e543bd3c
  $s$fShowMap_$cshowsPrec_$s$fShowQualified2 ::
    GHC.Show.Show
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName))
                  (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.ClassName))
                  (\ (x :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName)) ->
                   Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ClassName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.ClassName)
                     Language.PureScript.Names.$fShowIdent2
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ClassName)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Names.Qualified
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ClassName))
                     (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ClassName)
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.ClassName)
                        Language.PureScript.Names.$fShowIdent2)
                     ls
                     s) -}
1b0cf5a3a653bfb56058c222b90d4727
  $s$fShowMap_$s$fShowNonEmpty ::
    GHC.Show.Show
      (GHC.Base.NonEmpty
         (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident)))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.NonEmpty
                       (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                          (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident)))
                  (GHC.Show.$fShowNonEmpty_$cshowsPrec
                     @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                          (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident))
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowTypeClassDictionaryInScope)
                  (GHC.Show.$fShowNonEmpty_$cshow
                     @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                          (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident))
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowTypeClassDictionaryInScope)
                  (\ (ls :: [GHC.Base.NonEmpty
                               (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                  (Language.PureScript.Names.Qualified
                                     Language.PureScript.Names.Ident))])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Base.NonEmpty
                          (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             (Language.PureScript.Names.Qualified
                                Language.PureScript.Names.Ident)))
                     (GHC.Show.$fShowNonEmpty_$cshowsPrec
                        @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             (Language.PureScript.Names.Qualified
                                Language.PureScript.Names.Ident))
                        Language.PureScript.Environment.$s$fShowMap_$s$fShowTypeClassDictionaryInScope
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
c8898441f29efbc76204df7b0239d3ef
  $s$fShowMap_$s$fShowQualified ::
    GHC.Show.Show
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       Language.PureScript.Names.Ident)
                  (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ Language.PureScript.Names.Ident
                     Language.PureScript.Names.$fShowIdent)
                  (\ (x :: Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident) ->
                   Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ Language.PureScript.Names.Ident
                     Language.PureScript.Names.$fShowIdent
                     Language.PureScript.Names.$fShowIdent2
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Names.Qualified
                               Language.PureScript.Names.Ident])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident)
                     (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                        @ Language.PureScript.Names.Ident
                        Language.PureScript.Names.$fShowIdent
                        Language.PureScript.Names.$fShowIdent2)
                     ls
                     s) -}
d4eca313899bfe469966feb8b5946976
  $s$fShowMap_$s$fShowTypeClassDictionaryInScope ::
    GHC.Show.Show
      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                       (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident))
                  (Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowsPrec
                     @ (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident)
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified)
                  (\ (x :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             (Language.PureScript.Names.Qualified
                                Language.PureScript.Names.Ident)) ->
                   Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowsPrec
                     @ (Language.PureScript.Names.Qualified
                          Language.PureScript.Names.Ident)
                     Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                     Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                               (Language.PureScript.Names.Qualified
                                  Language.PureScript.Names.Ident)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                          (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident))
                     (Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowsPrec
                        @ (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident)
                        Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
                        Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope1)
                     ls
                     s) -}
f3d8b5b44ab9db52b2e0037cfc880a0a
  $s$fShowMaybe_$cshowList ::
    [GHC.Base.Maybe
       (Language.PureScript.Kinds.Kind
          Language.PureScript.AST.SourcePos.SourceAnn)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [GHC.Base.Maybe
                             (Language.PureScript.Kinds.Kind
                                Language.PureScript.AST.SourcePos.SourceAnn)])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe
                        (Language.PureScript.Kinds.Kind
                           Language.PureScript.AST.SourcePos.SourceAnn))
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ (Language.PureScript.Kinds.Kind
                           Language.PureScript.AST.SourcePos.SourceAnn)
                      Language.PureScript.Environment.$fShowTypeKind_$s$fShowKind
                      GHC.Show.$fShow(,)1)
                   ls
                   s) -}
8dfcfb4b735188b893d47326b27658dc
  $s$fShowNonEmpty_$cshowList ::
    [GHC.Base.NonEmpty
       (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
          (Language.PureScript.Names.Qualified
             Language.PureScript.Names.Ident))]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [GHC.Base.NonEmpty
                             (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                (Language.PureScript.Names.Qualified
                                   Language.PureScript.Names.Ident))])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Base.NonEmpty
                        (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                           (Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Ident)))
                   (GHC.Show.$fShowNonEmpty_$cshowsPrec
                      @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                           (Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Ident))
                      Language.PureScript.Environment.$s$fShowMap_$s$fShowTypeClassDictionaryInScope
                      GHC.Show.$fShow(,)1)
                   ls
                   s) -}
53a1d6f842e13b6cf08bd89f1230233c
  $s$fShowNonEmpty_$cshowsPrec ::
    GHC.Types.Int
    -> GHC.Base.NonEmpty
         (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident))
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Base.NonEmpty
                            (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                               (Language.PureScript.Names.Qualified
                                  Language.PureScript.Names.Ident))) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { GHC.Base.:| ww3 ww4 ->
                 GHC.Show.$w$cshowsPrec7
                   @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                        (Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident))
                   Language.PureScript.Environment.$s$fShowMap_$s$fShowTypeClassDictionaryInScope
                   ww1
                   ww3
                   ww4 } }) -}
26201a29eae0a0e87dcf13aaebf2d547
  $s$fShowQualified ::
    GHC.Show.Show
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.KindName))
                  (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.KindName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.KindName))
                  (\ (x :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.KindName)) ->
                   Language.PureScript.Names.$fShowQualified_$cshowsPrec
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.KindName)
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.KindName)
                     Language.PureScript.Names.$fShowIdent2
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.KindName)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Names.Qualified
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.KindName))
                     (Language.PureScript.Names.$fShowQualified_$cshowsPrec
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.KindName)
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.KindName)
                        Language.PureScript.Names.$fShowIdent2)
                     ls
                     s) -}
16b0c33fb146bdfd4f2a2018b14d00a0
  $s$fShowSet :: GHC.Show.Show (Data.Set.Internal.Set GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Set.Internal.Set GHC.Types.Int)
                  (Data.Set.Internal.$fShowSet_$cshowsPrec
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (\ (x :: Data.Set.Internal.Set GHC.Types.Int) ->
                   GHC.Base.augment
                     @ GHC.Types.Char
                     (\ @ b
                        (c :: GHC.Types.Char -> b -> b)[OneShot]
                        (n :: b)[OneShot] ->
                      GHC.Base.foldr
                        @ GHC.Types.Char
                        @ b
                        c
                        n
                        Data.Set.Internal.$fShowSet1)
                     (case Data.Set.Internal.$fDataSet_go
                             @ GHC.Types.Int
                             (GHC.Types.[] @ GHC.Types.Int)
                             x of wild {
                        []
                        -> GHC.CString.unpackAppendCString#
                             GHC.Show.showList__4
                             (GHC.Types.[] @ GHC.Types.Char)
                        : x1 xs
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showList__3
                             (case x1 of ww { GHC.Types.I# ww1 ->
                              case GHC.Show.$wshowSignedInt
                                     0#
                                     ww1
                                     (let {
                                        lvl175 :: [GHC.Types.Char]
                                        = GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.showList__2
                                            (GHC.Types.[] @ GHC.Types.Char)
                                      } in
                                      letrec {
                                        showl2 :: [GHC.Types.Int] -> GHC.Base.String
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ (ds2 :: [GHC.Types.Int]) ->
                                          case ds2 of wild1 {
                                            [] -> lvl175
                                            : y ys
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 GHC.Show.showList__1
                                                 (case y of ww2 { GHC.Types.I# ww3 ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0#
                                                         ww3
                                                         (showl2 ys) of ww4 { (#,#) ww5 ww6 ->
                                                  GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) }
                                      } in
                                      showl2 xs) of ww2 { (#,#) ww3 ww4 ->
                              GHC.Types.: @ GHC.Types.Char ww3 ww4 } }) }))
                  (\ (ls :: [Data.Set.Internal.Set GHC.Types.Int])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Set.Internal.Set GHC.Types.Int)
                     (Data.Set.Internal.$fShowSet_$cshowsPrec
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        Data.Set.Internal.$fReadSet3)
                     ls
                     s) -}
9766cbd0aec0e63136cd3add8fc135f9
  $s$fShowType_$cshow ::
    Language.PureScript.Types.Type
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Types.Type
                           (Language.PureScript.AST.SourcePos.SourceSpan,
                            [Language.PureScript.Comments.Comment])) ->
                 Language.PureScript.Types.$fShowType_$cshowsPrec
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                   Language.PureScript.Types.$fFoldableConstraint4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1cdd4fd7967ae3c3f54e718d54977854
  $s$fShowType_$cshowList ::
    [Language.PureScript.Types.Type
       (Language.PureScript.AST.SourcePos.SourceSpan,
        [Language.PureScript.Comments.Comment])]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Types.Type
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Types.Type
                        (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment]))
                   (Language.PureScript.Types.$fShowType_$cshowsPrec
                      @ (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment])
                      Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                      Language.PureScript.Types.$fFoldableConstraint4)
                   ls
                   s) -}
f7b907ba3837f8f511d51a3fabffe51b
  $s$fShowType_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Types.Type
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Types.$w$cshowsPrec3
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
                   ww1
                   w2 }) -}
9312f388adb9cfdf8ebbdf5d8d832640
  $s$wsplitS ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> (# Data.Set.Internal.Set
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.KindName)),
          Data.Set.Internal.Set
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.KindName)) #)
  {- Arity: 2, Strictness: <L,1*U(U,U(U,U,U))><S,1*U>, Inline: [~] -}
444bf2bec1e84f2426634bb7893338ad
  $s$wsplit_$s$wpoly_go1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      a
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> (# Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            a #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U(U,U,U)> -}
e9b50a4599f23cc1260c2488157eb603
  $s$wsplit_$s$wpoly_go13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      a
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> (# Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.TypeName))
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.TypeName))
            a #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U(U,U,U)> -}
768ef4be75f1ca8235f41c43a2b10c93
  $sfromList ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      a)]
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
  {- Arity: 1, Strictness: <S,1*U> -}
7395c3a4f2909c62d7ed00d89b3efe40
  $sfromList1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      a)]
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a
  {- Arity: 1, Strictness: <S,1*U> -}
e6c813a95f820624d812f145b9ef750a
  $sfromList2 ::
    [GHC.Types.Int] -> Data.Set.Internal.Set GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Types.Int]) ->
                 case ds of wild {
                   [] -> Data.Set.Internal.Tip @ GHC.Types.Int
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { GHC.Types.I# ipv ->
                           Data.Set.Internal.Bin
                             @ GHC.Types.Int
                             1#
                             dt
                             (Data.Set.Internal.Tip @ GHC.Types.Int)
                             (Data.Set.Internal.Tip @ GHC.Types.Int) }
                        : ipv ipv1
                        -> case x of wild2 { GHC.Types.I# x1 ->
                           case ipv of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.>=# x1 y of lwild {
                             DEFAULT
                             -> Language.PureScript.Environment.$sfromList_$s$wgo3
                                  y
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ GHC.Types.Int
                                     1#
                                     wild2
                                     (Data.Set.Internal.Tip @ GHC.Types.Int)
                                     (Data.Set.Internal.Tip @ GHC.Types.Int))
                                  1#
                             1#
                             -> Language.PureScript.Environment.$sfromList_$sgo4
                                  y
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ GHC.Types.Int
                                     1#
                                     wild2
                                     (Data.Set.Internal.Tip @ GHC.Types.Int)
                                     (Data.Set.Internal.Tip @ GHC.Types.Int)) } } } } }) -}
e15cc2b6c303db64f4dfe3ed7e2a196e
  $sfromList3 ::
    [Data.Set.Internal.Set GHC.Types.Int]
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Set.Internal.Set GHC.Types.Int]) ->
                 case ds of wild {
                   [] -> Data.Set.Internal.Tip @ (Data.Set.Internal.Set GHC.Types.Int)
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Internal.Bin
                             @ (Data.Set.Internal.Set GHC.Types.Int)
                             1#
                             dt
                             (Data.Set.Internal.Tip @ (Data.Set.Internal.Set GHC.Types.Int))
                             (Data.Set.Internal.Tip @ (Data.Set.Internal.Set GHC.Types.Int)) }
                        : ipv ipv1
                        -> case GHC.Classes.$fOrd[]_$s$ccompare
                                  (Data.Set.Internal.$fDataSet_go
                                     @ GHC.Types.Int
                                     (GHC.Types.[] @ GHC.Types.Int)
                                     x)
                                  (Data.Set.Internal.$fDataSet_go
                                     @ GHC.Types.Int
                                     (GHC.Types.[] @ GHC.Types.Int)
                                     ipv) of wild2 {
                             DEFAULT
                             -> case x of dt { DEFAULT ->
                                Language.PureScript.Environment.$sfromList_$sgo1
                                  ipv
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ (Data.Set.Internal.Set GHC.Types.Int)
                                     1#
                                     dt
                                     (Data.Set.Internal.Tip @ (Data.Set.Internal.Set GHC.Types.Int))
                                     (Data.Set.Internal.Tip
                                        @ (Data.Set.Internal.Set GHC.Types.Int))) }
                             GHC.Types.LT
                             -> case x of dt { DEFAULT ->
                                Language.PureScript.Environment.$sfromList_$s$wgo1
                                  ipv
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ (Data.Set.Internal.Set GHC.Types.Int)
                                     1#
                                     dt
                                     (Data.Set.Internal.Tip @ (Data.Set.Internal.Set GHC.Types.Int))
                                     (Data.Set.Internal.Tip
                                        @ (Data.Set.Internal.Set GHC.Types.Int)))
                                  1# } } } }) -}
995121d40c7dbfb346ff8daf9f266ed5
  $sfromList4 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 1, Strictness: <S,1*U> -}
356b65ca9c60971e42a96a80f754fcdf
  $sfromList_$s$wgo1 ::
    Data.Set.Internal.Set GHC.Types.Int
    -> [Data.Set.Internal.Set GHC.Types.Int]
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
  {- Arity: 4, Strictness: <S,U><S,1*U><S,1*U><L,U> -}
ca2838aac658d0031746bb725bab999c
  $sfromList_$s$wgo3 ::
    GHC.Prim.Int#
    -> [GHC.Types.Int]
    -> Data.Set.Internal.Set GHC.Types.Int
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set GHC.Types.Int
  {- Arity: 4, Strictness: <S,U><S,1*U><S,1*U><L,U> -}
e22e4f2894a5cac85cb82212a428707b
  $sfromList_$sgo1 ::
    Data.Set.Internal.Set GHC.Types.Int
    -> [Data.Set.Internal.Set GHC.Types.Int]
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
  {- Arity: 3, Strictness: <S,U><S,1*U><S,1*U> -}
6bc531178301bc52435d0787f7028d0f
  $sfromList_$sgo4 ::
    GHC.Prim.Int#
    -> [GHC.Types.Int]
    -> Data.Set.Internal.Set GHC.Types.Int
    -> Data.Set.Internal.Set GHC.Types.Int
  {- Arity: 3, Strictness: <S,U><S,1*U><S,1*U> -}
2315f08b5116e3a669cbc244cd0031a9
  $sinsertWithKey_$s$w$sgo13 ::
    Data.Map.Internal.Map GHC.Types.Int [GHC.Types.Int]
    -> [GHC.Types.Int]
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map GHC.Types.Int [GHC.Types.Int]
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U> -}
bab9e496cdaa0200a84f635b121fa767
  $sinsert_$s$w$sgo1 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a
    -> a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a
  {- Arity: 10,
     Strictness: <L,U><S,U><L,U(U,U,U)><L,U><L,U><L,U><L,U><L,U(U,U,U)><S,U><L,U> -}
b43c01d632042846954529625301ab9d
  $sinsert_$s$w$sgo13 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
    -> a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
  {- Arity: 10,
     Strictness: <L,U><S,U><L,U(U,U,U)><L,U><L,U><L,U><L,U><L,U(U,U,U)><S,U><L,U> -}
deb6d73abef6a79dcedcbc1af57cf214
  $sinsert_$s$w$sgo3 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 8,
     Strictness: <L,U><S,U><L,U(U,U,U)><L,U><L,U><L,U(U,U,U)><S,U><L,U> -}
917f9eb181451b78bb1b1949c3548b39
  $sinsert_$sgo1 ::
    Data.Set.Internal.Set GHC.Types.Int
    -> Data.Set.Internal.Set GHC.Types.Int
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
ee397f9b28b39ecb16aac01093890179
  $slookup1 ::
    Language.PureScript.Names.Qualified Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(1*U,U)><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident)
                   (w1 :: Data.Map.Internal.Map
                            (Language.PureScript.Names.Qualified
                               Language.PureScript.Names.Ident)
                            a) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 Language.PureScript.Environment.$wpoly_go13 @ a ww1 ww2 w1 }) -}
1dcf4ff1523e87daa14f17ab34a284e0
  $slookup3 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U,1*U(U,U,U))><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ConstructorName))
                   (w1 :: Data.Map.Internal.Map
                            (Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ConstructorName))
                            a) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 Language.PureScript.Environment.$wpoly_go1 @ a ww1 ww2 w1 }) -}
066b625160edfaf56c17e626c474fb1b
  $slookup_$s$wpoly_go1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      a
    -> Language.PureScript.Names.Ident -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
c2f392e7ec8db628f5d60d3dff7accfb
  $slookup_$s$wpoly_go13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      a
    -> Language.PureScript.Names.Ident
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U> -}
31b87e4865949f2e19a06c581d5b3f8e
  $slookup_$s$wpoly_go2 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
e02dd257c6031a71649bd98d7ce2ca84
  $slookup_$s$wpoly_go3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U,U)> -}
6d1b7eb93ff92a9f839638800e92c57a
  $slookup_$s$wpoly_go4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName :: *)) =>
       GHC.Base.Maybe a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U> -}
a2f8e3bb714988d9a5524bf4f9c7ef9d
  $sunion ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
7e3191af34eff709e7fa8090e40b8d1d
  $sunion1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
866855479f47ab024898e84c38ed30f1
  $sunion2 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
94e41110145f6058f82647fe7a261fd9
  $tc'Data :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10294918611976747956##
                   496965813247150749##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Data2
                   0#
                   Language.PureScript.Environment.$tc'Data1) -}
e23257b757f435458813be13a7cb8049
  $tc'Data1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
ca410e860c1ce8c3569d186d7a51666f
  $tc'Data2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Data3) -}
2f2aa6f37c837670f0919b80eaab4b85
  $tc'Data3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Data"#) -}
df3e307db8ad03346c794253437941a9
  $tc'DataType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13646175013092890213##
                   15132864847587040565##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'DataType2
                   0#
                   Language.PureScript.Environment.$tc'DataType1) -}
f46b08c511c4f209e150ca3440ef0b77
  $tc'DataType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
dd14de2c967c43801fe07b0248d9d54f
  $tc'DataType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'DataType3) -}
0322e113de781bf88424ffc8ad6305a5
  $tc'DataType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DataType"#) -}
3b6f6368d9bc70b2597e1a87c15ebecd
  $tc'Defined :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14003683017282910090##
                   7351836246939776836##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Defined2
                   0#
                   Language.PureScript.Environment.$tc'Defined1) -}
3645e6698454818264cafe3d8558d54a
  $tc'Defined1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
c04530f2477bf8030dbd3039123fbcd7
  $tc'Defined2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Defined3) -}
10db99d501376ea148bbaf063078c61e
  $tc'Defined3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Defined"#) -}
4dfbe4f0239a2bf1246c7c0f7a18c5a9
  $tc'Environment :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11158434706500443631##
                   14045914053867140166##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Environment2
                   0#
                   Language.PureScript.Environment.$tc'Environment1) -}
008d8a3de6c147caeed8c51ba2676453
  $tc'Environment1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ad0f0e930e0e41b75ca5f595ad31b1d9
  $tc'Environment2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Environment3) -}
d4506c74dd6321bd5b2d46f33c4e0a67
  $tc'Environment3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Environment"#) -}
a87dcb0de3775b9c02baa2d13d10ced6
  $tc'ExternData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15569004358769963010##
                   14987381692499668607##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'ExternData2
                   0#
                   Language.PureScript.Environment.$tc'ExternData1) -}
f548d49050c3aa823f1b31e91120a387
  $tc'ExternData1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
3b2bf907191eced17d2d96300d05f07b
  $tc'ExternData2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'ExternData3) -}
d40e76dd703dd790be34410b0063bc87
  $tc'ExternData3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternData"#) -}
f6d9a0afae09a3db1616ebd904d81b45
  $tc'External :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9702495620620405595##
                   2375899720874723515##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'External2
                   0#
                   Language.PureScript.Environment.$tc'External1) -}
431cf54c8a9cfa4f03905784637db325
  $tc'External1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
3da39a62ba18b36a759a461722ee2346
  $tc'External2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'External3) -}
6a9fa761408487d6feed7223d2e40c5f
  $tc'External3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'External"#) -}
4628adef1d83d03840e1575cda5881ac
  $tc'FunctionalDependency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8977631692886105351##
                   529104780941515262##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'FunctionalDependency2
                   0#
                   Language.PureScript.Environment.$tc'FunctionalDependency1) -}
c56ac052c0d20b194d39dbe1d40ed865
  $tc'FunctionalDependency1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f1681f33ccac9968fb2eb9e56105de7d
  $tc'FunctionalDependency2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'FunctionalDependency3) -}
f32abf3b82d482db407bc9bbf2bb92e8
  $tc'FunctionalDependency3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FunctionalDependency"#) -}
1ebf10c49df4831831fbb802f0e9aa50
  $tc'LocalTypeVariable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1521987290017296369##
                   15009077179159835251##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'LocalTypeVariable1
                   0#
                   Language.PureScript.Environment.$tc'ExternData1) -}
d1f654310e941c7dcc315ffa0ebe2e10
  $tc'LocalTypeVariable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'LocalTypeVariable2) -}
d1bfd489e5282b2c85109263c12c1624
  $tc'LocalTypeVariable2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LocalTypeVariable"#) -}
ae7b112a3ba4b2e935c7d5f5c8c88eb4
  $tc'Newtype :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8622512503786190239##
                   1189391023823834257##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Newtype1
                   0#
                   Language.PureScript.Environment.$tc'Data1) -}
5b481823246194201069b5cc2b9a8dd4
  $tc'Newtype1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Newtype2) -}
55e5dba6f5d04f28089f407d4b6387c9
  $tc'Newtype2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Newtype"#) -}
8b43cd7710adcfcee67179c62dc302df
  $tc'Private :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1617304977007670059##
                   12951680909137492348##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Private1
                   0#
                   Language.PureScript.Environment.$tc'External1) -}
7c4bc59b5b5ef7aac3ee2af16cd0265d
  $tc'Private1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Private2) -}
8a8a23f7f4a6b6f590c08fa52d28f0e7
  $tc'Private2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Private"#) -}
b3b789657dfe7df9c95470deafd65139
  $tc'Public :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12557151083578341775##
                   13866145637354108850##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Public1
                   0#
                   Language.PureScript.Environment.$tc'External1) -}
e7598b612166a37c7ec37490d6addcb1
  $tc'Public1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Public2) -}
c6b3b88744be0ff309a9d860c47e9b9b
  $tc'Public2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Public"#) -}
454b4a76faf77769fa03c641d24df2c6
  $tc'ScopedTypeVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10409184874013835595##
                   14049177324601497302##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'ScopedTypeVar1
                   0#
                   Language.PureScript.Environment.$tc'ExternData1) -}
312636904dfe6e4d0094de2a287b9eb0
  $tc'ScopedTypeVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'ScopedTypeVar2) -}
9e11f36ec7a12b583d07572ad9186f87
  $tc'ScopedTypeVar2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ScopedTypeVar"#) -}
b6f5bfed6c23dba508f44bb6fd535747
  $tc'TypeClassData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12900922980664127349##
                   16914689453471555904##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'TypeClassData2
                   0#
                   Language.PureScript.Environment.$tc'TypeClassData1) -}
bafbee0c8e28ea1d3cf2a5477aff1759
  $tc'TypeClassData1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5c8488beb4e6d5b835be913495311cd8
  $tc'TypeClassData2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'TypeClassData3) -}
585262c7f8dc0040290b109060549f16
  $tc'TypeClassData3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassData"#) -}
e177de370eb2bf88fba021f0c330be1f
  $tc'TypeSynonym :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15499860669430809418##
                   12838019983267292406##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'TypeSynonym1
                   0#
                   Language.PureScript.Environment.$tc'ExternData1) -}
85668ef9f060c714fbdba28b87ff5502
  $tc'TypeSynonym1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'TypeSynonym2) -}
5985765eb4c69519f3272f581907280c
  $tc'TypeSynonym2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeSynonym"#) -}
3953fc2e9ee625205a9204f7b95bc5db
  $tc'Undefined :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11049893013265280810##
                   16718470619212355644##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tc'Undefined1
                   0#
                   Language.PureScript.Environment.$tc'Defined1) -}
1553d93162b1f9f33c5572c06f770251
  $tc'Undefined1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tc'Undefined2) -}
9224d783cf0d4d68f21e5fe03351befc
  $tc'Undefined2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Undefined"#) -}
89f368570f1200aec0b06897a6904fc0
  $tcDataDeclType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   113510503561766351##
                   3694021665252571565##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcDataDeclType1
                   0#
                   GHC.Types.krep$*) -}
7b2fa2ddc8e9e28b359563bdeecc8afe
  $tcDataDeclType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$fFromJSONDataDeclType15) -}
4483a3df28c9d92d0a6709e7329e260d
  $tcEnvironment :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12307769365397926071##
                   15329740175719994986##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcEnvironment1
                   0#
                   GHC.Types.krep$*) -}
6de46babdbc3c6f13585b08718d2bcdb
  $tcEnvironment1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tcEnvironment2) -}
e1a5d8a33be3ea749d77576eb42fa0a2
  $tcEnvironment2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Environment"#) -}
2cdae41da298f7423ef856bd398c4ff2
  $tcFunctionalDependency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9039805094488242829##
                   4336933967747363897##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcFunctionalDependency1
                   0#
                   GHC.Types.krep$*) -}
3b6e16d0177762954129a40bcfd97920
  $tcFunctionalDependency1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$fFromJSONFunctionalDependency14) -}
678a6ea6985261ee7034ff292d2ee671
  $tcNameKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9353550395555508557##
                   11556119880271010179##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcNameKind1
                   0#
                   GHC.Types.krep$*) -}
1d0bb051864c2a7970ac0dd863ec9fe2
  $tcNameKind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tcNameKind2) -}
6f413a9fd8795d100b84cec60dd411f1
  $tcNameKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NameKind"#) -}
b35a84d2e97fba91eef94f294e2f9d67
  $tcNameVisibility :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1802298934290835899##
                   11747221878816953833##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcNameVisibility1
                   0#
                   GHC.Types.krep$*) -}
a562e86a63d7d1684e97c5aa70c2a515
  $tcNameVisibility1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tcNameVisibility2) -}
12fe45b429fc907b956a0ef7404cd253
  $tcNameVisibility2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NameVisibility"#) -}
36bfb0b5d01c812197c59d7d065bd15e
  $tcTypeClassData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17443333808417099307##
                   3556626596041708962##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcTypeClassData1
                   0#
                   GHC.Types.krep$*) -}
f49ee9db0948f6892013386cd1f9e582
  $tcTypeClassData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tcTypeClassData2) -}
12001812ecbfadabd44726f0acfc3c8a
  $tcTypeClassData2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeClassData"#) -}
8743d33a5848e2d1c5304f8fdcddf7ca
  $tcTypeKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16491998533592013270##
                   18267973338982199186##
                   Language.PureScript.Environment.$trModule
                   Language.PureScript.Environment.$tcTypeKind1
                   0#
                   GHC.Types.krep$*) -}
aacc2f9fd9b35d290c3370833431ddba
  $tcTypeKind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$tcTypeKind2) -}
8b57b08452eb9a6c77a10b4505440a86
  $tcTypeKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeKind"#) -}
cd39eda8c09619a9c29d11d6a08c8e90
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Environment.$trModule3
                   Language.PureScript.Environment.$trModule1) -}
ec6a857f3dea1df9fbc5b1c8ae8e7ec5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$trModule2) -}
570dd482e72f2f6fde9cdbf4eb41d34f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Environment"#) -}
1c8b9a7ae76afa84bc8bd40655c17a2d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Environment.$trModule4) -}
7cfefea0f383d8a9a87d1d7bd38ee45f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
7eb61fe78108d98d82e39145869b2402
  $w$cparseJSON ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Environment.DataDeclType
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 case Language.PureScript.Environment.$fFromJSONDataDeclType12 of wild1 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 let {
                   $j :: Data.Aeson.Types.Internal.Parser
                           Language.PureScript.Environment.DataDeclType
                     <join 0>
                   = case Language.PureScript.Environment.$fFromJSONDataDeclType10 of wild2 { Data.Text.Internal.Text dt1 dt2 dt6 ->
                     let {
                       $j1 :: Data.Aeson.Types.Internal.Parser
                                Language.PureScript.Environment.DataDeclType
                         <join 0>
                       = let {
                           msg5 :: GHC.Base.String
                           = GHC.CString.unpackAppendCString#
                               Language.PureScript.Environment.$fFromJSONDataDeclType9
                               (let {
                                  end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                                } in
                                letrec {
                                  $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                    {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                  = \ (ww3 :: GHC.Prim.Int#) ->
                                    case GHC.Prim.>=# ww3 end of lwild {
                                      DEFAULT
                                      -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                                         case GHC.Prim.geWord# r# 55296## of lwild1 {
                                           DEFAULT
                                           -> GHC.Types.:
                                                @ GHC.Types.Char
                                                (GHC.Types.C#
                                                   (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                ($wunfold (GHC.Prim.+# ww3 1#))
                                           1#
                                           -> case GHC.Prim.leWord# r# 56319## of lwild2 {
                                                DEFAULT
                                                -> GHC.Types.:
                                                     @ GHC.Types.Char
                                                     (GHC.Types.C#
                                                        (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                     ($wunfold (GHC.Prim.+# ww3 1#))
                                                1#
                                                -> case GHC.Prim.indexWord16Array#
                                                          ww
                                                          (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                                   GHC.Types.:
                                                     @ GHC.Types.Char
                                                     (GHC.Types.C#
                                                        (GHC.Prim.chr#
                                                           (GHC.Prim.+#
                                                              (GHC.Prim.+#
                                                                 (GHC.Prim.uncheckedIShiftL#
                                                                    (GHC.Prim.-#
                                                                       (GHC.Prim.word2Int# r#)
                                                                       55296#)
                                                                    10#)
                                                                 (GHC.Prim.-#
                                                                    (GHC.Prim.word2Int# r#1)
                                                                    56320#))
                                                              65536#)))
                                                     ($wunfold (GHC.Prim.+# ww3 2#)) } } } }
                                      1# -> GHC.Types.[] @ GHC.Types.Char }
                                } in
                                GHC.Base.++
                                  @ GHC.Types.Char
                                  ($wunfold ww1)
                                  Language.PureScript.Environment.$fFromJSONDataDeclType7)
                         } in
                         (\ @ f4 :: * -> *
                            @ r
                            (path :: Data.Aeson.Types.Internal.JSONPath)
                            (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                            (_ks :: Data.Aeson.Types.Internal.Success
                                      Language.PureScript.Environment.DataDeclType f4 r) ->
                          kf
                            (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                            msg5)
                           `cast`
                         (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                   <Language.PureScript.Environment.DataDeclType>_R))
                     } in
                     case GHC.Prim.==# ww2 dt6 of lwild {
                       DEFAULT -> $j1
                       1#
                       -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                         -> GHC.Prim.Word#
                                                         -> GHC.Prim.ByteArray#
                                                         -> GHC.Prim.Word#
                                                         -> GHC.Prim.Word#
                                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               GHC.Prim.Int# #)}
                                 ww
                                 (GHC.Prim.int2Word# ww1)
                                 dt1
                                 (GHC.Prim.int2Word# dt2)
                                 (GHC.Prim.int2Word# ww2)
                                 GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                          case GHC.Prim.narrow32Int# ds3 of wild {
                            DEFAULT -> $j1
                            0#
                            -> Language.PureScript.Environment.$fFromJSONDataDeclType6
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <Language.PureScript.Environment.DataDeclType>_R)) } } } }
                 } in
                 case GHC.Prim.==# ww2 dt5 of lwild {
                   DEFAULT -> $j
                   1#
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             ww
                             (GHC.Prim.int2Word# ww1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# ww2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Prim.narrow32Int# ds3 of wild {
                        DEFAULT -> $j
                        0#
                        -> Language.PureScript.Environment.$fFromJSONDataDeclType5
                             `cast`
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <Language.PureScript.Environment.DataDeclType>_R)) } } } }) -}
7eb61fe78108d98d82e39145869b2402
  $w$crnf ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      (Language.PureScript.Types.SourceType,
       Language.PureScript.Environment.NameKind,
       Language.PureScript.Environment.NameVisibility)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         (Language.PureScript.Environment.DataDeclType,
          Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName,
          Language.PureScript.Types.SourceType,
          [Language.PureScript.Names.Ident])
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         ([(Data.Text.Internal.Text,
            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
          Language.PureScript.Types.SourceType)
    -> Data.Map.Internal.Map
         (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  Language.PureScript.Names.Ident)
               (GHC.Base.NonEmpty
                  Language.PureScript.TypeClassDictionaries.NamedDict)))
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> ()
  {- Arity: 7,
     Strictness: <S,1*U><S,1*U><S,1*U><S,1*U><S,1*U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.Map.Internal.Map
                            (Language.PureScript.Names.Qualified
                               Language.PureScript.Names.Ident)
                            (Language.PureScript.Types.SourceType,
                             Language.PureScript.Environment.NameKind,
                             Language.PureScript.Environment.NameVisibility))
                   (ww1 :: Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.TypeName))
                             (Language.PureScript.Kinds.SourceKind,
                              Language.PureScript.Environment.TypeKind))
                   (ww2 :: Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ConstructorName))
                             (Language.PureScript.Environment.DataDeclType,
                              Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName,
                              Language.PureScript.Types.SourceType,
                              [Language.PureScript.Names.Ident]))
                   (ww3 :: Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.TypeName))
                             ([(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                              Language.PureScript.Types.SourceType))
                   (ww4 :: Data.Map.Internal.Map
                             (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                             (Data.Map.Internal.Map
                                (Language.PureScript.Names.Qualified
                                   (Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.ClassName))
                                (Data.Map.Internal.Map
                                   (Language.PureScript.Names.Qualified
                                      Language.PureScript.Names.Ident)
                                   (GHC.Base.NonEmpty
                                      Language.PureScript.TypeClassDictionaries.NamedDict))))
                   (ww5 :: Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ClassName))
                             Language.PureScript.Environment.TypeClassData)
                   (ww6 :: Data.Set.Internal.Set
                             (Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.KindName))) ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ (Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident)
                        @ (Language.PureScript.Types.SourceType,
                           Language.PureScript.Environment.NameKind,
                           Language.PureScript.Environment.NameVisibility)
                        Language.PureScript.Environment.$fNFDataEnvironment9
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Names.Qualified
                                     Language.PureScript.Names.Ident>_N))
                        Language.PureScript.Environment.$fNFDataEnvironment17
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <(Language.PureScript.Types.Type
                                      Language.PureScript.AST.SourcePos.SourceAnn,
                                    Language.PureScript.Environment.NameKind,
                                    Language.PureScript.Environment.NameVisibility)>_N))
                        ww of wild1 { () ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ (Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName))
                        @ (Language.PureScript.Kinds.SourceKind,
                           Language.PureScript.Environment.TypeKind)
                        Language.PureScript.Environment.$fNFDataEnvironment16
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.TypeName)>_N))
                        Language.PureScript.Environment.$fNFDataEnvironment15
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <(Language.PureScript.Kinds.Kind
                                      Language.PureScript.AST.SourcePos.SourceAnn,
                                    Language.PureScript.Environment.TypeKind)>_N))
                        ww1 of wild2 { () ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ (Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName))
                        @ (Language.PureScript.Environment.DataDeclType,
                           Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName,
                           Language.PureScript.Types.SourceType,
                           [Language.PureScript.Names.Ident])
                        Language.PureScript.Environment.$fNFDataEnvironment14
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.ConstructorName)>_N))
                        Language.PureScript.Environment.$fNFDataEnvironment13
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <(Language.PureScript.Environment.DataDeclType,
                                    Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.TypeName,
                                    Language.PureScript.Types.Type
                                      Language.PureScript.AST.SourcePos.SourceAnn,
                                    [Language.PureScript.Names.Ident])>_N))
                        ww2 of wild3 { () ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ (Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName))
                        @ ([(Data.Text.Internal.Text,
                             GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                           Language.PureScript.Types.SourceType)
                        Language.PureScript.Environment.$fNFDataEnvironment16
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.TypeName)>_N))
                        Language.PureScript.Environment.$fNFDataEnvironment11
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <([(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                    Language.PureScript.Types.Type
                                      Language.PureScript.AST.SourcePos.SourceAnn)>_N))
                        ww3 of wild4 { () ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                        @ (Data.Map.Internal.Map
                             (Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ClassName))
                             (Data.Map.Internal.Map
                                (Language.PureScript.Names.Qualified
                                   Language.PureScript.Names.Ident)
                                (GHC.Base.NonEmpty
                                   Language.PureScript.TypeClassDictionaries.NamedDict)))
                        Language.PureScript.Environment.$fNFDataEnvironment10
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <GHC.Base.Maybe Language.PureScript.Names.ModuleName>_N))
                        Language.PureScript.Environment.$fNFDataEnvironment6
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ClassName))
                                     (Data.Map.Internal.Map
                                        (Language.PureScript.Names.Qualified
                                           Language.PureScript.Names.Ident)
                                        (GHC.Base.NonEmpty
                                           Language.PureScript.TypeClassDictionaries.NamedDict))>_N))
                        ww4 of wild5 { () ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ (Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName))
                        @ Language.PureScript.Environment.TypeClassData
                        Language.PureScript.Environment.$fNFDataEnvironment5
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.ClassName)>_N))
                        Language.PureScript.Environment.$fNFDataEnvironment_$crnf1
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Environment.TypeClassData>_N))
                        ww5 of wild6 { () ->
                 Data.Set.Internal.$fNFDataSet_$crnf
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.$fNFDataEnvironment1
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0]
                             <Language.PureScript.Names.Qualified
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.KindName)>_N))
                   ww6 } } } } } }) -}
181e7295489b314c6c042d61e80bb6b9
  $w$crnf1 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
    -> [(Language.PureScript.Names.Ident,
         Language.PureScript.Types.SourceType)]
    -> [Language.PureScript.Types.SourceConstraint]
    -> [Language.PureScript.Environment.FunctionalDependency]
    -> Data.Set.Internal.Set GHC.Types.Int
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
    -> ()
  {- Arity: 6, Strictness: <S,1*U><S,1*U><S,1*U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: [(Data.Text.Internal.Text,
                            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                   (ww1 :: [(Language.PureScript.Names.Ident,
                             Language.PureScript.Types.SourceType)])
                   (ww2 :: [Language.PureScript.Types.SourceConstraint])
                   (ww3 :: [Language.PureScript.Environment.FunctionalDependency])
                   (ww4 :: Data.Set.Internal.Set GHC.Types.Int)
                   (ww5 :: Data.Set.Internal.Set
                             (Data.Set.Internal.Set GHC.Types.Int)) ->
                 case Language.PureScript.Environment.$fNFDataEnvironment_go3
                        ww of wild1 { () ->
                 case Language.PureScript.Environment.$fNFDataEnvironment_go2
                        ww1 of wild2 { () ->
                 let {
                   $j :: () <join 0>
                   = case Language.PureScript.Environment.$fNFDataEnvironment_go1
                            ww3 of wild3 { () ->
                     case Data.Set.Internal.$fNFDataSet_$crnf
                            @ GHC.Types.Int
                            (Control.DeepSeq.rwhnf @ GHC.Types.Int)
                              `cast`
                            (Sym (Control.DeepSeq.N:NFData[0] <GHC.Types.Int>_N))
                            ww4 of wild4 { () ->
                     Data.Set.Internal.$fNFDataSet_$crnf
                       @ (Data.Set.Internal.Set GHC.Types.Int)
                       Language.PureScript.Environment.$fNFDataEnvironment4
                         `cast`
                       (Sym (Control.DeepSeq.N:NFData[0]
                                 <Data.Set.Internal.Set GHC.Types.Int>_N))
                       ww5 } }
                 } in
                 letrec {
                   go8 :: [Language.PureScript.Types.Constraint
                             Language.PureScript.AST.SourcePos.SourceAnn]
                          -> ()
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Language.PureScript.Types.Constraint
                                 Language.PureScript.AST.SourcePos.SourceAnn]) ->
                     case ds of wild {
                       [] -> $j
                       : x xs
                       -> case Language.PureScript.Environment.$fNFDataEnvironment2
                                 x of wild3 { () ->
                          go8 xs } }
                 } in
                 go8 ww2 } }) -}
7eb61fe78108d98d82e39145869b2402
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (Language.PureScript.Types.SourceType,
          Language.PureScript.Environment.NameKind,
          Language.PureScript.Environment.NameVisibility)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         (Language.PureScript.Environment.DataDeclType,
          Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName,
          Language.PureScript.Types.SourceType,
          [Language.PureScript.Names.Ident])
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         ([(Data.Text.Internal.Text,
            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
          Language.PureScript.Types.SourceType)
    -> Data.Map.Internal.Map
         (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  Language.PureScript.Names.Ident)
               (GHC.Base.NonEmpty
                  Language.PureScript.TypeClassDictionaries.NamedDict)))
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> GHC.Show.ShowS
  {- Arity: 8,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
828b024d761261394159811d9686f2da
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> [GHC.Types.Int]
    -> [GHC.Types.Int]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0] -}
7e23f4ddba2350405f465a39833424c7
  $w$cshowsPrec2 ::
    Language.PureScript.Environment.NameKind
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Language.PureScript.Environment.NameKind)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Language.PureScript.Environment.Private
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowNameKind5
                        w1
                   Language.PureScript.Environment.Public
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowNameKind3
                        w1
                   Language.PureScript.Environment.External
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Environment.$fShowNameKind1
                        w1 }) -}
181e7295489b314c6c042d61e80bb6b9
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> [(Data.Text.Internal.Text,
         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
    -> [(Language.PureScript.Names.Ident,
         Language.PureScript.Types.SourceType)]
    -> [Language.PureScript.Types.SourceConstraint]
    -> [Language.PureScript.Environment.FunctionalDependency]
    -> Data.Set.Internal.Set GHC.Types.Int
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
    -> GHC.Show.ShowS
  {- Arity: 7, Strictness: <S,U><L,U><L,U><L,U><L,U><L,1*U><L,1*U>,
     Inline: [0] -}
538acae48f0d99c7c3efe2d27640071e
  $w$ctoJSON ::
    [GHC.Types.Int]
    -> [GHC.Types.Int] -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: [GHC.Types.Int]) (ww1 :: [GHC.Types.Int]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ GHC.Types.Int
                              @ Data.Aeson.Types.Internal.Value
                              Data.Aeson.Types.ToJSON.$fToJSON1IntMap_$ctoJSON
                              ww)
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 case Language.PureScript.Environment.$fFromJSONFunctionalDependency9 of ww2 { Data.Text.Internal.Text ww3 ww4 ww5 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww3
                        ww4
                        ww5
                        (Data.Aeson.Types.Internal.Array dt)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv6 ipv7 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv6
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ GHC.Types.Int
                              @ Data.Aeson.Types.Internal.Value
                              Data.Aeson.Types.ToJSON.$fToJSON1IntMap_$ctoJSON
                              ww1)
                           0#
                           ipv7
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of dt1 { Data.Vector.Vector ipv8 ipv9 ipv10 ->
                 case Language.PureScript.Environment.$fFromJSONFunctionalDependency2 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww7
                        ww8
                        ww9
                        (Data.Aeson.Types.Internal.Array dt1)
                        z23 of dt2 { DEFAULT ->
                 (# dt2 #) } } } } } } } }) -}
c4ea7cef50f9429514c7d764a715ee6b
  $w$dNFData ::
    [Language.PureScript.Names.Qualified
       Language.PureScript.Names.Ident]
    -> GHC.Integer.Type.Integer
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Ident
    -> [(Language.PureScript.Names.Qualified
           (Language.PureScript.Names.ProperName
              'Language.PureScript.Names.ClassName),
         GHC.Integer.Type.Integer)]
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> [Language.PureScript.Types.SourceType]
    -> GHC.Base.Maybe [Language.PureScript.Types.SourceConstraint]
    -> [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
          (Language.PureScript.Names.Qualified
             Language.PureScript.Names.Ident)]
    -> ()
  {- Arity: 10,
     Strictness: <S,1*U><S,1*U><S,1*U><S,1*U><S,1*U><S,1*U><L,A><S,1*U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident])
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (ww3 :: Language.PureScript.Names.Ident)
                   (ww4 :: [(Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ClassName),
                             GHC.Integer.Type.Integer)])
                   (ww5 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (ww6 :: Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ClassName)
                   (ww7 :: [Language.PureScript.Types.SourceType])
                   (ww8 :: GHC.Base.Maybe
                             [Language.PureScript.Types.SourceConstraint])
                   (ww9 :: [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                              (Language.PureScript.Names.Qualified
                                 Language.PureScript.Names.Ident)]) ->
                 case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go3
                        ww of wild1 { () ->
                 case ww1 of ds1 { DEFAULT ->
                 let {
                   $j :: () <join 0>
                   = case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go2
                            ww4 of wild3 { () ->
                     let {
                       $j1 :: () <join 0>
                       = case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go1
                                ww7 of wild4 { () ->
                         case ww8 of wild {
                           GHC.Base.Nothing
                           -> Language.PureScript.Environment.$fNFDataEnvironment_go4 ww9
                           GHC.Base.Just x
                           -> case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go
                                     x of wild2 { () ->
                              Language.PureScript.Environment.$fNFDataEnvironment_go4 ww9 } } }
                     } in
                     case ww5 of wild {
                       GHC.Base.Nothing -> $j1
                       GHC.Base.Just x
                       -> case Language.PureScript.Names.$fNFDataModuleName_go
                                 x `cast`
                                 (Language.PureScript.Names.N:ModuleName[0]) of wild4 { () ->
                          $j1 } } }
                 } in
                 case ww2 of wild {
                   GHC.Base.Nothing
                   -> case ww3 of wild2 {
                        Language.PureScript.Names.Ident g1
                        -> case g1 of ds2 { Data.Text.Internal.Text ipv ipv1 ipv2 -> $j }
                        Language.PureScript.Names.GenIdent g1 g2
                        -> case g1 of wild3 {
                             GHC.Base.Nothing -> case g2 of ds2 { DEFAULT -> $j }
                             GHC.Base.Just x1
                             -> case x1 of ds2 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                                case g2 of ds3 { DEFAULT -> $j } } }
                        Language.PureScript.Names.UnusedIdent -> $j }
                   GHC.Base.Just x
                   -> case Language.PureScript.Names.$fNFDataModuleName_go
                             x `cast`
                             (Language.PureScript.Names.N:ModuleName[0]) of wild2 { () ->
                      case ww3 of wild3 {
                        Language.PureScript.Names.Ident g1
                        -> case g1 of ds2 { Data.Text.Internal.Text ipv ipv1 ipv2 -> $j }
                        Language.PureScript.Names.GenIdent g1 g2
                        -> case g1 of wild4 {
                             GHC.Base.Nothing -> case g2 of ds2 { DEFAULT -> $j }
                             GHC.Base.Just x1
                             -> case x1 of ds2 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                                case g2 of ds3 { DEFAULT -> $j } } }
                        Language.PureScript.Names.UnusedIdent -> $j } } } } }) -}
49dcc2188d775bc25d35abd787fc9dce
  $w$dNFData1 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Ident -> ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.Maybe
                            Language.PureScript.Names.ModuleName)
                   (ww1 :: Language.PureScript.Names.Ident) ->
                 case ww of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Names.$fNFDataIdent_$crnf ww1
                   GHC.Base.Just x
                   -> case Language.PureScript.Names.$fNFDataModuleName_go
                             x `cast`
                             (Language.PureScript.Names.N:ModuleName[0]) of wild1 { () ->
                      Language.PureScript.Names.$fNFDataIdent_$crnf ww1 } }) -}
6a399fd5739e347ce85f304d18bff028
  $w$sgo1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U,U,U)><L,U><S,1*U>,
     Inline: [0] -}
c81a2dc4f437209457f11b986df25091
  $w$sgo13 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U,U,U)><L,U><S,1*U>,
     Inline: [0] -}
4dae073ad164d2217f9597fbe2d76c83
  $w$sgo2 ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set GHC.Types.Int
    -> Data.Set.Internal.Set GHC.Types.Int
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
bca873078be0ec68e1cd4d0d33a13206
  $w$sgo3 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 4, Strictness: <L,U><L,U><L,U(U,U,U)><S,1*U>,
     Inline: [0] -}
b73f28bcfcd22aa6102125d6798a4d36
  $w$sgo4 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 4, Strictness: <L,U><L,U><L,U(U,U,U)><S,1*U>,
     Inline: [0] -}
25150646cf3a9b816f75632b3ee3e897
  $w$sgo5 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U,U,U)><L,U><S,1*U>,
     Inline: [0] -}
d38ee7816824822acac3372bf08f8014
  $w$sgo6 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U,U,U)><L,U><S,1*U>,
     Inline: [0] -}
fb18f1d9acb595313105e7e2a411a170
  $wf6 ::
    [Language.PureScript.Kinds.Kind
       Language.PureScript.AST.SourcePos.SourceAnn]
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [Language.PureScript.Kinds.Kind
                            Language.PureScript.AST.SourcePos.SourceAnn]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ (Language.PureScript.Kinds.Kind
                                   (Language.PureScript.AST.SourcePos.SourceSpan,
                                    [Language.PureScript.Comments.Comment]))
                              @ Data.Aeson.Types.Internal.Value
                              Language.PureScript.Environment.$fToJSONTypeKind_f5
                              w)
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
ecc567b3720f1e2ef2862149dc311cb9
  $wlvl ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ConstructorName
    -> [Language.PureScript.Types.SourceType]
    -> GHC.Base.String
    -> (# GHC.Types.Char, [GHC.Types.Char] #)
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.ConstructorName)
                   (ww1 :: [Language.PureScript.Types.SourceType])
                   (w :: GHC.Base.String) ->
                 (# GHC.Show.$fShow(,)4,
                    Language.PureScript.Names.$w$cshowsPrec2
                      @ 'Language.PureScript.Names.ConstructorName
                      0#
                      ww
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.showList__1
                         (GHC.Show.$fShow(,)_$sgo1
                            (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)
                            (\ (s :: GHC.Base.String)[OneShot] ->
                             GHC.Show.showList__
                               @ (Language.PureScript.Types.Type
                                    (Language.PureScript.AST.SourcePos.SourceSpan,
                                     [Language.PureScript.Comments.Comment]))
                               Language.PureScript.Environment.$fShowTypeKind13
                               ww1
                               s)
                            (GHC.Types.[] @ GHC.Show.ShowS))) #)) -}
ca491f4d9fefbd98113d00bd445fddf2
  $wlvl1 ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
    -> GHC.Base.String
    -> (# GHC.Types.Char, [GHC.Types.Char] #)
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   (w :: GHC.Base.String) ->
                 (# GHC.Show.$fShow(,)4,
                    case Data.Text.Show.$w$cshowsPrec
                           ww
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showList__1
                              (GHC.Show.$fShow(,)_$sgo1
                                 (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)
                                 (GHC.Show.$fShowMaybe_$cshowsPrec
                                    @ (Language.PureScript.Kinds.Kind
                                         Language.PureScript.AST.SourcePos.SourceAnn)
                                    Language.PureScript.Environment.$fShowTypeKind_$s$fShowKind
                                    GHC.Show.$fShow(,)1
                                    ww1)
                                 (GHC.Types.[] @ GHC.Show.ShowS))) of ww2 { (#,#) ww3 ww4 ->
                    GHC.Types.: @ GHC.Types.Char ww3 ww4 } #)) -}
89b301d63d6ebf95670a1505199a305c
  $wlvl2 ::
    [[Language.PureScript.Types.Type
        Language.PureScript.AST.SourcePos.SourceAnn]]
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [[Language.PureScript.Types.Type
                             Language.PureScript.AST.SourcePos.SourceAnn]]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ [Language.PureScript.Types.Type
                                   Language.PureScript.AST.SourcePos.SourceAnn]
                              @ Data.Aeson.Types.Internal.Value
                              Language.PureScript.Environment.$fToJSONTypeKind13
                              w)
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
59e14d9396b8c95954e4a715285dbee4
  $wlvl3 ::
    [Language.PureScript.Types.Type
       (Language.PureScript.AST.SourcePos.SourceSpan,
        [Language.PureScript.Comments.Comment])]
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [Language.PureScript.Types.Type
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ (Language.PureScript.Types.Type
                                   (Language.PureScript.AST.SourcePos.SourceSpan,
                                    [Language.PureScript.Comments.Comment]))
                              @ Data.Aeson.Types.Internal.Value
                              Language.PureScript.Environment.$fToJSONTypeKind_f11
                              w)
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
de254954f61b2b5709db6276af5b0735
  $wlvl4 ::
    [[Language.PureScript.Comments.Comment]]
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [[Language.PureScript.Comments.Comment]]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ [Language.PureScript.Comments.Comment]
                              @ Data.Aeson.Types.Internal.Value
                              Language.PureScript.Comments.$fToJSONComment_$ctoJSONList
                              w)
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
354d3dcc1a9a84aefbc0fe8690ee28d0
  $wlvl5 ::
    [GHC.Base.Maybe
       (Language.PureScript.Kinds.Kind
          Language.PureScript.AST.SourcePos.SourceAnn)]
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: [GHC.Base.Maybe
                            (Language.PureScript.Kinds.Kind
                               Language.PureScript.AST.SourcePos.SourceAnn)]) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                         Language.PureScript.Environment.$fToJSONFunctionalDependency_$s$wfoldlM_loop
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                   <GHC.Prim.RealWorld>_N))_R
                           (GHC.Base.map
                              @ (GHC.Base.Maybe
                                   (Language.PureScript.Kinds.Kind
                                      Language.PureScript.AST.SourcePos.SourceAnn))
                              @ Data.Aeson.Types.Internal.Value
                              Language.PureScript.Environment.$fToJSONTypeKind_f7
                              w)
                           0#
                           ipv1
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
bb1f9146dd6afb683103e9b91aafd026
  $wmakeTypeClassData ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
    -> [(Language.PureScript.Names.Ident,
         Language.PureScript.Types.SourceType)]
    -> [Language.PureScript.Types.SourceConstraint]
    -> [Language.PureScript.Environment.FunctionalDependency]
    -> (# [(Data.Text.Internal.Text,
            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
          [(Language.PureScript.Names.Ident,
            Language.PureScript.Types.SourceType)],
          [Language.PureScript.Types.SourceConstraint],
          [Language.PureScript.Environment.FunctionalDependency],
          Data.Set.Internal.Set GHC.Types.Int,
          Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
fdffb03de0b6f163f07681852709a68a
  $wpoly_go1 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         a
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U(U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (ww1 :: Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                   (w :: Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName))
                           a) ->
                 case w of wild {
                   Data.Map.Internal.Bin ipv ipv1 ipv2 ipv3 ipv4
                   -> case ipv1 of ww3 { Language.PureScript.Names.Qualified ww4 ww5 ->
                      case ww of wild1 {
                        GHC.Base.Nothing
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing
                             -> case ww1
                                       `cast`
                                     (Language.PureScript.Names.N:ProperName[0]
                                          <'Language.PureScript.Names.ConstructorName>_P) of ww2 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                                case ww5
                                       `cast`
                                     (Language.PureScript.Names.N:ProperName[0]
                                          <'Language.PureScript.Names.ConstructorName>_P) of ww9 { Data.Text.Internal.Text ww10 ww11 ww12 ->
                                case Data.Text.$w$ccompare ww6 ww7 ww8 ww10 ww11 ww12 of wild3 {
                                  GHC.Types.LT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go4
                                       @ a
                                       ipv3
                                       ww6
                                       ww7
                                       ww8
                                       @~ (Sym (Language.PureScript.Names.N:ProperName[0]
                                                    <'Language.PureScript.Names.ConstructorName>_P))
                                  GHC.Types.EQ -> GHC.Base.Just @ a ipv2
                                  GHC.Types.GT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go4
                                       @ a
                                       ipv4
                                       ww6
                                       ww7
                                       ww8
                                       @~ (Sym (Language.PureScript.Names.N:ProperName[0]
                                                    <'Language.PureScript.Names.ConstructorName>_P)) } } }
                             GHC.Base.Just ipv7
                             -> Language.PureScript.Environment.$slookup_$s$wpoly_go3
                                  @ a
                                  ipv3
                                  ww1 }
                        GHC.Base.Just a2
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing
                             -> Language.PureScript.Environment.$slookup_$s$wpoly_go2
                                  @ a
                                  ipv4
                                  ww1
                                  a2
                             GHC.Base.Just b1
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b1
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  GHC.Types.LT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go2
                                       @ a
                                       ipv3
                                       ww1
                                       a2
                                  GHC.Types.EQ
                                  -> case ww1
                                            `cast`
                                          (Language.PureScript.Names.N:ProperName[0]
                                               <'Language.PureScript.Names.ConstructorName>_P) of ww2 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                                     case ww5
                                            `cast`
                                          (Language.PureScript.Names.N:ProperName[0]
                                               <'Language.PureScript.Names.ConstructorName>_P) of ww9 { Data.Text.Internal.Text ww10 ww11 ww12 ->
                                     case Data.Text.$w$ccompare
                                            ww6
                                            ww7
                                            ww8
                                            ww10
                                            ww11
                                            ww12 of wild4 {
                                       GHC.Types.LT
                                       -> Language.PureScript.Environment.$slookup_$s$wpoly_go2
                                            @ a
                                            ipv3
                                            ww2
                                              `cast`
                                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                                      <'Language.PureScript.Names.ConstructorName>_P))
                                            a2
                                       GHC.Types.EQ -> GHC.Base.Just @ a ipv2
                                       GHC.Types.GT
                                       -> Language.PureScript.Environment.$slookup_$s$wpoly_go2
                                            @ a
                                            ipv4
                                            ww2
                                              `cast`
                                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                                      <'Language.PureScript.Names.ConstructorName>_P))
                                            a2 } } }
                                  GHC.Types.GT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go2
                                       @ a
                                       ipv4
                                       ww1
                                       a2 } } } }
                   Data.Map.Internal.Tip -> GHC.Base.Nothing @ a }) -}
9112dfd8c0bdfb9bda68ea25ac97948c
  $wpoly_go13 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         a
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><L,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (ww1 :: Language.PureScript.Names.Ident)
                   (w :: Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Ident)
                           a) ->
                 case w of wild {
                   Data.Map.Internal.Bin ipv ipv1 ipv2 ipv3 ipv4
                   -> case ipv1 of ww3 { Language.PureScript.Names.Qualified ww4 ww5 ->
                      case ww of wild1 {
                        GHC.Base.Nothing
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing
                             -> case Language.PureScript.Names.$fOrdIdent_$ccompare
                                       ww1
                                       ww5 of wild3 {
                                  GHC.Types.LT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go1
                                       @ a
                                       ipv3
                                       ww1
                                  GHC.Types.EQ -> GHC.Base.Just @ a ipv2
                                  GHC.Types.GT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go1
                                       @ a
                                       ipv4
                                       ww1 }
                             GHC.Base.Just ipv7
                             -> Language.PureScript.Environment.$slookup_$s$wpoly_go1
                                  @ a
                                  ipv3
                                  ww1 }
                        GHC.Base.Just a2
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing
                             -> Language.PureScript.Environment.$slookup_$s$wpoly_go13
                                  @ a
                                  ipv4
                                  ww1
                                  a2
                             GHC.Base.Just b1
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b1
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  GHC.Types.LT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go13
                                       @ a
                                       ipv3
                                       ww1
                                       a2
                                  GHC.Types.EQ
                                  -> case Language.PureScript.Names.$fOrdIdent_$ccompare
                                            ww1
                                            ww5 of wild4 {
                                       GHC.Types.LT
                                       -> Language.PureScript.Environment.$slookup_$s$wpoly_go13
                                            @ a
                                            ipv3
                                            ww1
                                            a2
                                       GHC.Types.EQ -> GHC.Base.Just @ a ipv2
                                       GHC.Types.GT
                                       -> Language.PureScript.Environment.$slookup_$s$wpoly_go13
                                            @ a
                                            ipv4
                                            ww1
                                            a2 }
                                  GHC.Types.GT
                                  -> Language.PureScript.Environment.$slookup_$s$wpoly_go13
                                       @ a
                                       ipv4
                                       ww1
                                       a2 } } } }
                   Data.Map.Internal.Tip -> GHC.Base.Nothing @ a }) -}
e449cba5826db33cc91c5a5467e8f5b5
  (-:>) ::
    Language.PureScript.Kinds.SourceKind
    -> Language.PureScript.Kinds.SourceKind
    -> Language.PureScript.Kinds.SourceKind
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
7eb61fe78108d98d82e39145869b2402
  data DataDeclType = Data | Newtype
7eb61fe78108d98d82e39145869b2402
  data Environment
    = Environment {names :: Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 Language.PureScript.Names.Ident)
                              (Language.PureScript.Types.SourceType,
                               Language.PureScript.Environment.NameKind,
                               Language.PureScript.Environment.NameVisibility),
                   types :: Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName))
                              (Language.PureScript.Kinds.SourceKind,
                               Language.PureScript.Environment.TypeKind),
                   dataConstructors :: Data.Map.Internal.Map
                                         (Language.PureScript.Names.Qualified
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ConstructorName))
                                         (Language.PureScript.Environment.DataDeclType,
                                          Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.TypeName,
                                          Language.PureScript.Types.SourceType,
                                          [Language.PureScript.Names.Ident]),
                   typeSynonyms :: Data.Map.Internal.Map
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName))
                                     ([(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                      Language.PureScript.Types.SourceType),
                   typeClassDictionaries :: Data.Map.Internal.Map
                                              (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                                              (Data.Map.Internal.Map
                                                 (Language.PureScript.Names.Qualified
                                                    (Language.PureScript.Names.ProperName
                                                       'Language.PureScript.Names.ClassName))
                                                 (Data.Map.Internal.Map
                                                    (Language.PureScript.Names.Qualified
                                                       Language.PureScript.Names.Ident)
                                                    (GHC.Base.NonEmpty
                                                       Language.PureScript.TypeClassDictionaries.NamedDict))),
                   typeClasses :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       (Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.ClassName))
                                    Language.PureScript.Environment.TypeClassData,
                   kinds :: Data.Set.Internal.Set
                              (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.KindName))}
181e7295489b314c6c042d61e80bb6b9
  data FunctionalDependency
    = FunctionalDependency {fdDeterminers :: [GHC.Types.Int],
                            fdDetermined :: [GHC.Types.Int]}
7e23f4ddba2350405f465a39833424c7
  data NameKind = Private | Public | External
22706fecc369659455f7dc5f13f3340f
  data NameVisibility = Undefined | Defined
7eb61fe78108d98d82e39145869b2402
  axiom Language.PureScript.Environment.Rep_DataDeclType::
      GHC.Generics.Rep Language.PureScript.Environment.DataDeclType
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "DataDeclType"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Data" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Newtype" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
7eb61fe78108d98d82e39145869b2402
  axiom Language.PureScript.Environment.Rep_Environment::
      GHC.Generics.Rep Language.PureScript.Environment.Environment
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Environment"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Environment" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "names")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0
                      (Data.Map.Internal.Map
                         (Language.PureScript.Names.Qualified
                            Language.PureScript.Names.Ident)
                         (Language.PureScript.Types.SourceType,
                          Language.PureScript.Environment.NameKind,
                          Language.PureScript.Environment.NameVisibility)))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "types")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        (Data.Map.Internal.Map
                                           (Language.PureScript.Names.Qualified
                                              (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.TypeName))
                                           (Language.PureScript.Kinds.SourceKind,
                                            Language.PureScript.Environment.TypeKind)))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "dataConstructors")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.ConstructorName))
                                                            (Language.PureScript.Environment.DataDeclType,
                                                             Language.PureScript.Names.ProperName
                                                               'Language.PureScript.Names.TypeName,
                                                             Language.PureScript.Types.SourceType,
                                                             [Language.PureScript.Names.Ident])))))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "typeSynonyms")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        (Data.Map.Internal.Map
                                           (Language.PureScript.Names.Qualified
                                              (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.TypeName))
                                           ([(Data.Text.Internal.Text,
                                              GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                                            Language.PureScript.Types.SourceType)))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClassDictionaries")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Data.Map.Internal.Map
                                                            (GHC.Base.Maybe
                                                               Language.PureScript.Names.ModuleName)
                                                            (Data.Map.Internal.Map
                                                               (Language.PureScript.Names.Qualified
                                                                  (Language.PureScript.Names.ProperName
                                                                     'Language.PureScript.Names.ClassName))
                                                               (Data.Map.Internal.Map
                                                                  (Language.PureScript.Names.Qualified
                                                                     Language.PureScript.Names.Ident)
                                                                  (GHC.Base.NonEmpty
                                                                     Language.PureScript.TypeClassDictionaries.NamedDict))))))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClasses")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Data.Map.Internal.Map
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.ClassName))
                                                            Language.PureScript.Environment.TypeClassData))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "kinds")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (Data.Set.Internal.Set
                                                                             (Language.PureScript.Names.Qualified
                                                                                (Language.PureScript.Names.ProperName
                                                                                   'Language.PureScript.Names.KindName))))))))
181e7295489b314c6c042d61e80bb6b9
  axiom Language.PureScript.Environment.Rep_FunctionalDependency::
      GHC.Generics.Rep
        Language.PureScript.Environment.FunctionalDependency
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "FunctionalDependency"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FunctionalDependency" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fdDeterminers")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [GHC.Types.Int])
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fdDetermined")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [GHC.Types.Int])))
7e23f4ddba2350405f465a39833424c7
  axiom Language.PureScript.Environment.Rep_NameKind::
      GHC.Generics.Rep Language.PureScript.Environment.NameKind
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "NameKind"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Private" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Public" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "External"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
22706fecc369659455f7dc5f13f3340f
  axiom Language.PureScript.Environment.Rep_NameVisibility::
      GHC.Generics.Rep Language.PureScript.Environment.NameVisibility
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "NameVisibility"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Undefined" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Defined" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
181e7295489b314c6c042d61e80bb6b9
  axiom Language.PureScript.Environment.Rep_TypeClassData::
      GHC.Generics.Rep Language.PureScript.Environment.TypeClassData
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "TypeClassData"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "TypeClassData" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "typeClassArguments")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0
                      [(Data.Text.Internal.Text,
                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "typeClassMembers")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        [(Language.PureScript.Names.Ident,
                                          Language.PureScript.Types.SourceType)])
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "typeClassSuperclasses")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [Language.PureScript.Types.SourceConstraint])))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "typeClassDependencies")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0
                                       [Language.PureScript.Environment.FunctionalDependency])
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just
                                                            "typeClassDeterminedArguments")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Data.Set.Internal.Set GHC.Types.Int))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "typeClassCoveringSets")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (Data.Set.Internal.Set
                                                                             (Data.Set.Internal.Set
                                                                                GHC.Types.Int)))))))
713362c52c19b15de0cab368ddfda667
  axiom Language.PureScript.Environment.Rep_TypeKind::
      GHC.Generics.Rep Language.PureScript.Environment.TypeKind
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "TypeKind"
               "Language.PureScript.Environment"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "DataType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                (GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      'GHC.Base.Nothing
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0
                      [(Data.Text.Internal.Text,
                        GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0
                                       [(Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ConstructorName,
                                         [Language.PureScript.Types.SourceType])]))
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "TypeSynonym" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ExternData" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "LocalTypeVariable"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "ScopedTypeVar"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
181e7295489b314c6c042d61e80bb6b9
  data TypeClassData
    = TypeClassData {typeClassArguments :: [(Data.Text.Internal.Text,
                                             GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                     typeClassMembers :: [(Language.PureScript.Names.Ident,
                                           Language.PureScript.Types.SourceType)],
                     typeClassSuperclasses :: [Language.PureScript.Types.SourceConstraint],
                     typeClassDependencies :: [Language.PureScript.Environment.FunctionalDependency],
                     typeClassDeterminedArguments :: Data.Set.Internal.Set
                                                       GHC.Types.Int,
                     typeClassCoveringSets :: Data.Set.Internal.Set
                                                (Data.Set.Internal.Set GHC.Types.Int)}
713362c52c19b15de0cab368ddfda667
  data TypeKind
    = DataType [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
               [(Language.PureScript.Names.ProperName
                   'Language.PureScript.Names.ConstructorName,
                 [Language.PureScript.Types.SourceType])]
    | TypeSynonym
    | ExternData
    | LocalTypeVariable
    | ScopedTypeVar
c0cfdfe7717d5fa7014dc48af669e39d
  allPrimClasses ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
  {- Unfolding: (Language.PureScript.Environment.allPrimClasses_$sgo13
                   Language.PureScript.Environment.primClasses
                   Language.PureScript.Environment.allPrimClasses1
                   (Data.Map.Internal.Tip
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName))
                      @ Language.PureScript.Environment.TypeClassData)) -}
dbe5847ecfcdbf31080c2e3c327ce2f7
  allPrimClasses1 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.ClassName))
       Language.PureScript.Environment.TypeClassData]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName))
                        Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowClasses
                   Language.PureScript.Environment.allPrimClasses2) -}
fbc2296d1c13b0626f4a3b3d950d9f80
  allPrimClasses2 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.ClassName))
       Language.PureScript.Environment.TypeClassData]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName))
                        Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowListClasses
                   Language.PureScript.Environment.allPrimClasses3) -}
f97ab0e0f5bb0629d5405c85fac687b7
  allPrimClasses3 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.ClassName))
       Language.PureScript.Environment.TypeClassData]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName))
                        Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primSymbolClasses
                   Language.PureScript.Environment.allPrimClasses4) -}
43b191ca6f8b39921a139e037d2e3bf7
  allPrimClasses4 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.ClassName))
       Language.PureScript.Environment.TypeClassData]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName))
                        Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primTypeErrorClasses
                   (GHC.Types.[]
                      @ (Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                           Language.PureScript.Environment.TypeClassData))) -}
8e2acf18076e730479cfa1353a440ce7
  allPrimClasses_$sgo13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
    -> [Data.Map.Internal.Map
          (Language.PureScript.Names.Qualified
             (Language.PureScript.Names.ProperName
                'Language.PureScript.Names.ClassName))
          Language.PureScript.Environment.TypeClassData]
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
97e7f0df8c1bead442a28ddfc4a495d2
  allPrimKinds ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Unfolding: (Language.PureScript.Environment.allPrimKinds_$sgo
                   Language.PureScript.Environment.primKinds
                   Language.PureScript.Environment.allPrimKinds1) -}
b7accda9dd3260fd318bdcc0563721d9
  allPrimKinds1 ::
    [Data.Set.Internal.Set
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.KindName))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))
                   Language.PureScript.Environment.primBooleanKinds
                   Language.PureScript.Environment.allPrimKinds2) -}
f0b8cae5e88cf7a647087a3b9589984b
  allPrimKinds2 ::
    [Data.Set.Internal.Set
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.KindName))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))
                   Language.PureScript.Environment.primOrderingKinds
                   Language.PureScript.Environment.allPrimKinds3) -}
7bf9ecbaae00f5b288e8c7973d306dfb
  allPrimKinds3 ::
    [Data.Set.Internal.Set
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.KindName))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))
                   Language.PureScript.Environment.primRowListKinds
                   Language.PureScript.Environment.allPrimKinds4) -}
b7e5377cbc70b5c1c3e0753a64e12d14
  allPrimKinds4 ::
    [Data.Set.Internal.Set
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.KindName))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))
                   Language.PureScript.Environment.primTypeErrorKinds
                   (GHC.Types.[]
                      @ (Data.Set.Internal.Set
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.KindName))))) -}
e1b2bcae1003cf822f8139f2ee36a78f
  allPrimKinds_$sgo ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
    -> [Data.Set.Internal.Set
          (Language.PureScript.Names.Qualified
             (Language.PureScript.Names.ProperName
                'Language.PureScript.Names.KindName))]
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
72958e836995d95b4686cb74cbfaed07
  allPrimTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.allPrimTypes_$sgo13
                   Language.PureScript.Environment.primTypes
                   Language.PureScript.Environment.allPrimTypes1
                   (Data.Map.Internal.Tip
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                      @ (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))) -}
f43eec9922253afc6c607131a4c73e26
  allPrimTypes1 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.TypeName))
       (Language.PureScript.Kinds.SourceKind,
        Language.PureScript.Environment.TypeKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                        (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primBooleanTypes
                   Language.PureScript.Environment.allPrimTypes2) -}
5da2d35b6c96f4b5c5eba91bafafc2ff
  allPrimTypes2 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.TypeName))
       (Language.PureScript.Kinds.SourceKind,
        Language.PureScript.Environment.TypeKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                        (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primOrderingTypes
                   Language.PureScript.Environment.allPrimTypes3) -}
b1be067ebe4093fd6966077f10030fee
  allPrimTypes3 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.TypeName))
       (Language.PureScript.Kinds.SourceKind,
        Language.PureScript.Environment.TypeKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                        (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowTypes
                   Language.PureScript.Environment.allPrimTypes4) -}
1b6e2f7ce69d00ecf1ea696095a47c0d
  allPrimTypes4 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.TypeName))
       (Language.PureScript.Kinds.SourceKind,
        Language.PureScript.Environment.TypeKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                        (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowListTypes
                   Language.PureScript.Environment.allPrimTypes5) -}
d2869e88b4896d247074fef2974066b6
  allPrimTypes5 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.TypeName))
       (Language.PureScript.Kinds.SourceKind,
        Language.PureScript.Environment.TypeKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                        (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primSymbolTypes
                   Language.PureScript.Environment.allPrimTypes6) -}
0f47caf992412a13a7a842a50353519e
  allPrimTypes6 ::
    [Data.Map.Internal.Map
       (Language.PureScript.Names.Qualified
          (Language.PureScript.Names.ProperName
             'Language.PureScript.Names.TypeName))
       (Language.PureScript.Kinds.SourceKind,
        Language.PureScript.Environment.TypeKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Map.Internal.Map
                        (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                        (Language.PureScript.Kinds.SourceKind,
                         Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes
                   (GHC.Types.[]
                      @ (Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.TypeName))
                           (Language.PureScript.Kinds.SourceKind,
                            Language.PureScript.Environment.TypeKind)))) -}
0949933377977bf2af23502ceeaeaa5b
  allPrimTypes_$sgo13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       Language.PureScript.Environment.TypeKind)
    -> [Data.Map.Internal.Map
          (Language.PureScript.Names.Qualified
             (Language.PureScript.Names.ProperName
                'Language.PureScript.Names.TypeName))
          (Language.PureScript.Kinds.Kind
             (Language.PureScript.AST.SourcePos.SourceSpan,
              [Language.PureScript.Comments.Comment]),
           Language.PureScript.Environment.TypeKind)]
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.Kind
            (Language.PureScript.AST.SourcePos.SourceSpan,
             [Language.PureScript.Comments.Comment]),
          Language.PureScript.Environment.TypeKind)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
7eb61fe78108d98d82e39145869b2402
  dataConstructors ::
    Language.PureScript.Environment.Environment
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         (Language.PureScript.Environment.DataDeclType,
          Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName,
          Language.PureScript.Types.SourceType,
          [Language.PureScript.Names.Ident])
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds3 }) -}
181e7295489b314c6c042d61e80bb6b9
  fdDetermined ::
    Language.PureScript.Environment.FunctionalDependency
    -> [GHC.Types.Int]
  RecSel Left Language.PureScript.Environment.FunctionalDependency
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.FunctionalDependency) ->
                 case ds of wild { Language.PureScript.Environment.FunctionalDependency ds1 ds2 ->
                 ds2 }) -}
181e7295489b314c6c042d61e80bb6b9
  fdDeterminers ::
    Language.PureScript.Environment.FunctionalDependency
    -> [GHC.Types.Int]
  RecSel Left Language.PureScript.Environment.FunctionalDependency
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.FunctionalDependency) ->
                 case ds of wild { Language.PureScript.Environment.FunctionalDependency ds1 ds2 ->
                 ds1 }) -}
fb710d9343cfd06856a618519a627f36
  function ::
    Language.PureScript.Types.SourceType
    -> Language.PureScript.Types.SourceType
    -> Language.PureScript.Types.SourceType
  {- Arity: 2, Strictness: <L,U><L,U>m7,
     Unfolding: InlineRule (2, True, False)
                (\ (t1 :: Language.PureScript.Types.SourceType)
                   (t2 :: Language.PureScript.Types.SourceType) ->
                 Language.PureScript.Types.TypeApp
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   (Language.PureScript.Types.TypeApp
                      @ Language.PureScript.AST.SourcePos.SourceAnn
                      Language.PureScript.AST.SourcePos.$bNullSourceAnn
                      Language.PureScript.Environment.tyFunction
                      t1)
                   t2) -}
3ad13bed759e200214c30a8db150a0f5
  initEnvironment :: Language.PureScript.Environment.Environment
  {- Strictness: m,
     Unfolding: (Language.PureScript.Environment.Environment
                   (Data.Map.Internal.Tip
                      @ (Language.PureScript.Names.Qualified
                           Language.PureScript.Names.Ident)
                      @ (Language.PureScript.Types.SourceType,
                         Language.PureScript.Environment.NameKind,
                         Language.PureScript.Environment.NameVisibility))
                   Language.PureScript.Environment.allPrimTypes
                   (Data.Map.Internal.Tip
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ConstructorName))
                      @ (Language.PureScript.Environment.DataDeclType,
                         Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName,
                         Language.PureScript.Types.SourceType,
                         [Language.PureScript.Names.Ident]))
                   (Data.Map.Internal.Tip
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
                      @ ([(Data.Text.Internal.Text,
                           GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
                         Language.PureScript.Types.SourceType))
                   (Data.Map.Internal.Tip
                      @ (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                      @ (Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                           (Data.Map.Internal.Map
                              (Language.PureScript.Names.Qualified
                                 Language.PureScript.Names.Ident)
                              (GHC.Base.NonEmpty
                                 Language.PureScript.TypeClassDictionaries.NamedDict))))
                   Language.PureScript.Environment.allPrimClasses
                   Language.PureScript.Environment.allPrimKinds) -}
6c6989887fb19d1781ae7121a7ea8016
  isFunction :: Language.PureScript.Types.Type a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Types.Type a) ->
                 case ds of wild {
                   DEFAULT
                   -> Language.PureScript.Types.eqType
                        @ Language.PureScript.AST.SourcePos.SourceAnn
                        @ a
                        Language.PureScript.Environment.tyFunction
                        wild
                   Language.PureScript.Types.TypeApp ds1 t2 ds2
                   -> Language.PureScript.Types.eqType
                        @ Language.PureScript.AST.SourcePos.SourceAnn
                        @ a
                        Language.PureScript.Environment.tyFunction
                        t2 }) -}
6d49f4841adb3c84efe65654dc3bf16b
  isKindType :: Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: Language.PureScript.Kinds.Kind a) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Kinds.NamedKind ds1 n
                   -> case n of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                      case ww1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just a1
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fEqProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  Language.PureScript.Environment.kindSymbol4 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Data.Text.$fEqText_$c==
                                  ww2
                                    `cast`
                                  (Language.PureScript.Names.N:ProperName[0]
                                       <'Language.PureScript.Names.KindName>_P)
                                  Language.PureScript.Environment.kindType2 } } } }) -}
ec695789c5460a9820a9f7d190c19fa6
  isNewtypeConstructor ::
    Language.PureScript.Environment.Environment
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName)
    -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)><S,1*U(1*U,1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (e :: Language.PureScript.Environment.Environment)
                   (ctor :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)) ->
                 case e of wild { Language.PureScript.Environment.Environment ds ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case Language.PureScript.Environment.$slookup3
                        @ (Language.PureScript.Environment.DataDeclType,
                           Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName,
                           Language.PureScript.Types.SourceType,
                           [Language.PureScript.Names.Ident])
                        ctor
                        ds2 of wild1 {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Environment.isNewtypeConstructor1
                      ret_ty GHC.Types.Bool
                      of {}
                   GHC.Base.Just v
                   -> case v of wild2 { (,,,) ds7 ds8 ds9 ds10 ->
                      case ds7 of wild3 {
                        Language.PureScript.Environment.Data -> GHC.Types.False
                        Language.PureScript.Environment.Newtype
                        -> GHC.Types.True } } } }) -}
1dd7e6d3aa419e8617f4fceb8c98bc8b
  isNewtypeConstructor1 ::
    (Language.PureScript.Environment.DataDeclType,
     Language.PureScript.Names.ProperName
       'Language.PureScript.Names.TypeName,
     Language.PureScript.Types.SourceType,
     [Language.PureScript.Names.Ident])
  {- Strictness: x -}
eaf72ef1822bc53bcc8a79d937189cb2
  isObject :: Language.PureScript.Types.Type a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Types.Type a) ->
                 case ds of wild {
                   DEFAULT
                   -> Language.PureScript.Types.eqType
                        @ Language.PureScript.AST.SourcePos.SourceAnn
                        @ a
                        Language.PureScript.Environment.tyRecord
                        wild
                   Language.PureScript.Types.TypeApp ds1 t2 ds2
                   -> Language.PureScript.Types.eqType
                        @ Language.PureScript.AST.SourcePos.SourceAnn
                        @ a
                        Language.PureScript.Environment.tyRecord
                        t2 }) -}
9f097cdb51f0fe67226d65e24233546a
  isTypeOrApplied ::
    Language.PureScript.Types.Type a
    -> Language.PureScript.Types.Type b -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   (t1 :: Language.PureScript.Types.Type a)
                   (ds :: Language.PureScript.Types.Type b) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Types.eqType @ a @ b t1 wild
                   Language.PureScript.Types.TypeApp ds1 t2 ds2
                   -> Language.PureScript.Types.eqType @ a @ b t1 t2 }) -}
916034cc26fcb4dda8d11747132f5cae
  kindBoolean :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primBooleanKinds2) -}
0212acf2053cffab1240bae0cce0ddc1
  kindConstraint :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Environment.kindType -}
3e5e0a32c371463f9bf109c17d2126aa
  kindDoc :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindDoc1) -}
04186cb540e51a518be6d46bc3849c27
  kindDoc1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.KindName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.kindDoc2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.KindName>_P))) -}
9a65f7309c92c27d50803f578c105d69
  kindDoc2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.doc2) -}
6543aadd4386df36c72336275e26b100
  kindDoc3 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.kindDoc4
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
495275a43937774d80d99ae85fff60b1
  kindDoc4 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   Language.PureScript.Environment.kindDoc5) -}
4b9b48d72fb62c5e138a3171a2cf599a
  kindDoc5 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc6
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
68e67ed1fd9677d61897344ff3e79616
  kindDoc6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bFail7) -}
fe0bcb104909b0536fa7a0f14147e6a2
  kindDoc7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bFail9) -}
83cc14955ed976b9e8a9a2db1e723626
  kindOrdering :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindOrdering1) -}
83c91f8c4ba4a2f9d059e35971d7ad75
  kindOrdering1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.KindName)
                   Language.PureScript.Environment.kindOrdering3
                   Language.PureScript.Environment.kindOrdering2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.KindName>_P))) -}
e4ca548054cf526e669564df9f6efe9c
  kindOrdering2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bPrimOrdering4) -}
3c894db6c2c7d1a14c14b973a1b81fb0
  kindOrdering3 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.kindOrdering4
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
d8fc0f24149933052e1672f1d4a4d5b4
  kindOrdering4 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   Language.PureScript.Environment.kindOrdering5) -}
5b11f89eb134c9fa10e221cc51d6cff4
  kindOrdering5 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindOrdering2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
9ad02bb25f969a1f5b7fa4247dcd4e38
  kindRow ::
    Language.PureScript.Kinds.SourceKind
    -> Language.PureScript.Kinds.SourceKind
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Language.PureScript.Kinds.Row
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
6559d7f556ae61dea2f3bbe2cc44deed
  kindRowList :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindRowList1) -}
72121b16f20e6f16803697e1c438683a
  kindRowList1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.KindName)
                   Language.PureScript.Environment.kindRowList3
                   Language.PureScript.Environment.kindRowList2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.KindName>_P))) -}
49d72fbca003c9450030154dacd39e29
  kindRowList2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bPrimRowList4) -}
c0d1be44d6c9fde65613892f3b2486d9
  kindRowList3 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.kindRowList4
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
2819530360c61507103cc90273e25543
  kindRowList4 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   Language.PureScript.Environment.kindRowList5) -}
c58ccbf9b319085e060ab361fa2f7c91
  kindRowList5 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindRowList2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
dca41020f19efb11bcc405e7e0bdd12b
  kindSymbol :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol1) -}
d06fbc0e3ef6b22565afcf4440fb0ea9
  kindSymbol1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.KindName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.kindSymbol2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.KindName>_P))) -}
3fec5bfd78ce373d10a8e8cb50ebda61
  kindSymbol2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bDataSymbol4) -}
37578a08d905fd0297005fd9891502b2
  kindSymbol3 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.kindSymbol4
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
5efd081ad3946b84540da3b22642f9b5
  kindSymbol4 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
5aa8fecbb78cb16f648b40b4c0a9a13c
  kindType :: Language.PureScript.Kinds.SourceKind
  {- Strictness: m4,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType1) -}
95e7f0d981904301e26056f44a7ad2d9
  kindType1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.KindName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.kindType2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.KindName>_P))) -}
5ef90fe8f9c3ff1a20767921d745bc5c
  kindType2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.typ2) -}
7eb61fe78108d98d82e39145869b2402
  kinds ::
    Language.PureScript.Environment.Environment
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds7 }) -}
edaf188339942d07954d4a1ed77165d6
  lookupConstructor ::
    Language.PureScript.Environment.Environment
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName)
    -> (Language.PureScript.Environment.DataDeclType,
        Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName,
        Language.PureScript.Types.SourceType,
        [Language.PureScript.Names.Ident])
  {- Arity: 2,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)><S,1*U(1*U,1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (env :: Language.PureScript.Environment.Environment)
                   (ctor :: Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)) ->
                 case env of wild { Language.PureScript.Environment.Environment ds ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case Language.PureScript.Environment.$slookup3
                        @ (Language.PureScript.Environment.DataDeclType,
                           Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName,
                           Language.PureScript.Types.SourceType,
                           [Language.PureScript.Names.Ident])
                        ctor
                        ds2 of wild1 {
                   GHC.Base.Nothing
                   -> Language.PureScript.Environment.isNewtypeConstructor1
                   GHC.Base.Just v -> v } }) -}
f92bedc73b28c24eece2a523b0f7fa15
  lookupValue ::
    Language.PureScript.Environment.Environment
    -> Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident
    -> GHC.Base.Maybe
         (Language.PureScript.Types.SourceType,
          Language.PureScript.Environment.NameKind,
          Language.PureScript.Environment.NameVisibility)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)><S,1*U(1*U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (env :: Language.PureScript.Environment.Environment)
                   (ident :: Language.PureScript.Names.Qualified
                               Language.PureScript.Names.Ident) ->
                 case env of wild { Language.PureScript.Environment.Environment ds ds1 ds2 ds3 ds4 ds5 ds6 ->
                 Language.PureScript.Environment.$slookup1
                   @ (Language.PureScript.Types.SourceType,
                      Language.PureScript.Environment.NameKind,
                      Language.PureScript.Environment.NameVisibility)
                   ident
                   ds }) -}
01b32b44a7812593fdcf211bf1370ba3
  makeTypeClassData ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
    -> [(Language.PureScript.Names.Ident,
         Language.PureScript.Types.SourceType)]
    -> [Language.PureScript.Types.SourceConstraint]
    -> [Language.PureScript.Environment.FunctionalDependency]
    -> Language.PureScript.Environment.TypeClassData
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: [(Data.Text.Internal.Text,
                           GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)])
                   (w1 :: [(Language.PureScript.Names.Ident,
                            Language.PureScript.Types.SourceType)])
                   (w2 :: [Language.PureScript.Types.SourceConstraint])
                   (w3 :: [Language.PureScript.Environment.FunctionalDependency]) ->
                 case Language.PureScript.Environment.$wmakeTypeClassData
                        w
                        w1
                        w2
                        w3 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
7eb61fe78108d98d82e39145869b2402
  names ::
    Language.PureScript.Environment.Environment
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (Language.PureScript.Types.SourceType,
          Language.PureScript.Environment.NameKind,
          Language.PureScript.Environment.NameVisibility)
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds1 }) -}
f8c75ccaaf52c82b9e8330aabf0a9fad
  primBooleanKinds ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Unfolding: (Language.PureScript.Environment.$sfromList4
                   Language.PureScript.Environment.primBooleanKinds1) -}
a366e6c21eae6dc65e7c335a1eb0df9c
  primBooleanKinds1 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.primBooleanKinds2
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))) -}
f56801bec55e361da9d3251ab2125702
  primBooleanKinds2 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.KindName)
                   Language.PureScript.Environment.primBooleanKinds4
                   Language.PureScript.Environment.primBooleanKinds3
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.KindName>_P))) -}
e40a8f7644877eff9d46f38ab738c56f
  primBooleanKinds3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bPrimBoolean4) -}
0703e901ebbbd9691dc85e5606e1a45a
  primBooleanKinds4 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.primBooleanKinds5
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
1f0a55cf138a2bb8179f37a7b9d99bbc
  primBooleanKinds5 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   Language.PureScript.Environment.primBooleanKinds6) -}
6eb56d60eef40d004a429d76f1260ac5
  primBooleanKinds6 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.primBooleanKinds3
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
a236341df4c68e6250f239d60e685339
  primBooleanTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primBooleanTypes1) -}
a5e3df15a84f747e1164004521fd2501
  primBooleanTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primBooleanTypes8
                   Language.PureScript.Environment.primBooleanTypes2) -}
cee1df285c5a949b67c0a4fafca7e467
  primBooleanTypes10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primBooleanTypes11) -}
088aacb32aa31bb06e900d868352e79c
  primBooleanTypes11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("True"#) -}
82e2ec3cf3ae371b56d248171e171cdd
  primBooleanTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primBooleanTypes3
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
538b7e1e0a0a1b48a54a6fcde30a4add
  primBooleanTypes3 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primBooleanTypes5,
                  Language.PureScript.Environment.primBooleanTypes4)) -}
7aa6441fc367ced6f211747f6843e084
  primBooleanTypes4 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.kindBoolean,
                  Language.PureScript.Environment.ExternData)) -}
0dfa76f505e51a44b4bbbaf29af3450c
  primBooleanTypes5 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primBooleanKinds4
                   Language.PureScript.Environment.primBooleanTypes6
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
ef815a55bf8d5869952e12b0940a9afc
  primBooleanTypes6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primBooleanTypes7) -}
b501310c2ede20b947559faaa932e48e
  primBooleanTypes7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("False"#) -}
c06a467ab5bd3f171c417312fd0de523
  primBooleanTypes8 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primBooleanTypes9,
                  Language.PureScript.Environment.primBooleanTypes4)) -}
4fbfe17a9d037686c76be4a353064304
  primBooleanTypes9 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primBooleanKinds4
                   Language.PureScript.Environment.primBooleanTypes10
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
fe69f1e579507387753cf9b3b1293ca1
  primClasses ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
  {- Unfolding: (Language.PureScript.Environment.$sfromList1
                   @ Language.PureScript.Environment.TypeClassData
                   Language.PureScript.Environment.primClasses1) -}
1bcf9caebd868b67588a7dd716f6b7c0
  primClasses1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primClasses2
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName),
                         Language.PureScript.Environment.TypeClassData))) -}
f14a8449e142918236b32e274b63fbbd
  primClasses2 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primClasses4,
                  Language.PureScript.Environment.primClasses3)) -}
dbbdf621937577deea9daa395ade0d2f
  primClasses3 :: Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        (GHC.Types.[]
                           @ Language.PureScript.Environment.FunctionalDependency) of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
451fae6f6014424bfa66857d3745f0fd
  primClasses4 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primClasses5
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
bb0146233c099af4704555180370aba4
  primClasses5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primClasses6) -}
ff31ab42b88f4bb6be8f946c45272b52
  primClasses6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Partial"#) -}
a16c506cd9c77b68522b32a3a2922a13
  primKind ::
    Data.Text.Internal.Text -> Language.PureScript.Kinds.SourceKind
  {- Arity: 1, Strictness: <L,U>m4,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Text.Internal.Text) ->
                 Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   (Language.PureScript.Names.Qualified
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName)
                      Language.PureScript.Environment.kindSymbol3
                      x `cast`
                      (Sym (Language.PureScript.Names.N:ProperName[0]
                                <'Language.PureScript.Names.KindName>_P)))) -}
5deb48eda2e2f7bc1f3406fcddf34fe5
  primKinds ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Unfolding: (Language.PureScript.Environment.$sfromList4
                   Language.PureScript.Environment.primKinds1) -}
9b1629cf6122d0b760da1091a05d76e7
  primKinds1 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.kindType1
                   Language.PureScript.Environment.primKinds2) -}
7dc3e3b7f4405f6899ce3818383a18d0
  primKinds2 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.kindSymbol1
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))) -}
c8fe2d9c88b0887491c17c0338a9666c
  primName ::
    Data.Text.Internal.Text
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName a)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a :: Language.PureScript.Names.ProperNameType
                   (x :: Data.Text.Internal.Text) ->
                 Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName a)
                   Language.PureScript.Environment.kindSymbol3
                   x `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0] <a>_P))) -}
1ab8e56e88f0b341d193ce373c0f03f5
  primOrderingKinds ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Unfolding: (Language.PureScript.Environment.$sfromList4
                   Language.PureScript.Environment.primOrderingKinds1) -}
e98775ac2e7e2b487a0e274b932f150f
  primOrderingKinds1 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.kindOrdering1
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))) -}
db563108106fd58d175a8387ee260b77
  primOrderingTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primOrderingTypes1) -}
7746f084b43e13298810fedd6aa22365
  primOrderingTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primOrderingTypes13
                   Language.PureScript.Environment.primOrderingTypes2) -}
6eb03b72bb93abbc3037b39cf6b085de
  primOrderingTypes10 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindOrdering3
                   Language.PureScript.Environment.primOrderingTypes11
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
052b2f87afea75c6a39839eaa80e8162
  primOrderingTypes11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primOrderingTypes12) -}
a30effd907ade6448e1b40b6911bcb55
  primOrderingTypes12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EQ"#) -}
cf78a943cf3f6aec3c143d77715c642e
  primOrderingTypes13 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primOrderingTypes14,
                  Language.PureScript.Environment.primOrderingTypes5)) -}
9f49112ffd24158a5a756640a885c37f
  primOrderingTypes14 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindOrdering3
                   Language.PureScript.Environment.primOrderingTypes15
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
3d26509e419eb35eb3c27876b97bee09
  primOrderingTypes15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primOrderingTypes16) -}
caf7c2a5e398ae48fe3f326062f13b0e
  primOrderingTypes16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LT"#) -}
18cbb7c9d4b441a6a8a269a28b5d02a9
  primOrderingTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primOrderingTypes9
                   Language.PureScript.Environment.primOrderingTypes3) -}
ff0f77413b6b74b7db9f76cac4e56a44
  primOrderingTypes3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primOrderingTypes4
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
4240d19cd4f14f646ae4ed6e911ddd05
  primOrderingTypes4 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primOrderingTypes6,
                  Language.PureScript.Environment.primOrderingTypes5)) -}
7a1e7e4d5877c1c56b3b374e4b9659d4
  primOrderingTypes5 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.kindOrdering,
                  Language.PureScript.Environment.ExternData)) -}
8c3aec7f9f4e2a0910841e49f854030f
  primOrderingTypes6 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindOrdering3
                   Language.PureScript.Environment.primOrderingTypes7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
1390e4a9a8ff02246e43ebbc39d226a3
  primOrderingTypes7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primOrderingTypes8) -}
ff070a6e8e199f625dff63427ca7d08b
  primOrderingTypes8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GT"#) -}
8cfa8272b5043a4a32e3b3ab50c403fb
  primOrderingTypes9 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primOrderingTypes10,
                  Language.PureScript.Environment.primOrderingTypes5)) -}
a8d8fce9fb36b035d4869ee770b4b4df
  primRowClasses ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
  {- Unfolding: (Language.PureScript.Environment.$sfromList1
                   @ Language.PureScript.Environment.TypeClassData
                   Language.PureScript.Environment.primRowClasses1) -}
8cc02362abebd377e8ac76e83f71e00d
  primRowClasses1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowClasses51
                   Language.PureScript.Environment.primRowClasses2) -}
03e91d20a96281d26911f81105b96950
  primRowClasses10 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.$fShowEnvironment2
                   Language.PureScript.Environment.primRowClasses11) -}
b98f1f404d7b9d127b863fc17b12206d
  primRowClasses11 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.primRowClasses12
                   (GHC.Types.[] @ GHC.Types.Int)) -}
10dde4f7123534e8d7b2446c6c79ba02
  primRowClasses12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
d6d1ba82602a1de44ea4edae61aa376e
  primRowClasses13 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primRowClasses14
                   Language.PureScript.Environment.primRowClasses11) -}
3254a7d0f98a2d09a8b242847604c673
  primRowClasses14 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.$fShowEnvironment2
                   Language.PureScript.Environment.primSymbolClasses62) -}
a710d98b457dcd343ea9f7b1b48f059d
  primRowClasses15 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses24
                   Language.PureScript.Environment.primRowClasses16) -}
954d10dceddf8dc74597f7b75cf22679
  primRowClasses16 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses20
                   Language.PureScript.Environment.primRowClasses17) -}
ad5fa3353226d63cad9450c47ff47dbc
  primRowClasses17 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses19
                   Language.PureScript.Environment.primRowClasses18) -}
7032e9c9152f81b45cae8d7e321d5a7d
  primRowClasses18 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowListClasses12
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
ce5022291cf4d27e9ac1bf790c7aa4ff
  primRowClasses19 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses23,
                  Language.PureScript.Environment.primRowListClasses13)) -}
b5cd188e9664fc93fe353d61844c9228
  primRowClasses2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowClasses38
                   Language.PureScript.Environment.primRowClasses3) -}
a8aa26a3628b54665cd6781525dc7fec
  primRowClasses20 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses22,
                  Language.PureScript.Environment.primRowClasses21)) -}
688bb13bbf7ae9a59d980e13eba0650f
  primRowClasses21 ::
    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Kinds.SourceKind
                   Language.PureScript.Environment.kindType) -}
01644429542d33710d3843be997af5dc
  primRowClasses22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses23) -}
f839b96a7899d5a0b725754584e012ed
  primRowClasses23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("a"#) -}
8c110bf540a832c952bd5fa2b73abfd6
  primRowClasses24 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses25,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
4c534b12bc438cd57a9a01e5b5112985
  primRowClasses25 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses26) -}
7cf2900095476546c83e6cf8d1a7a18a
  primRowClasses26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("label"#) -}
89e9eddc2770250abf20a198a62b6a58
  primRowClasses27 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primSymbolClasses29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
de4fa1f166dffda96260ae34de544e3a
  primRowClasses28 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.primRowClasses29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
a2fc2eccd5daa299551acf0a582bb2c0
  primRowClasses29 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   Language.PureScript.Environment.primRowClasses30) -}
0b283f03876baad03f21c50a0868faab
  primRowClasses3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowClasses32
                   Language.PureScript.Environment.primRowClasses4) -}
f345af18ed7be13788911bd25cd4b95f
  primRowClasses30 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.primRowClasses31
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
ce1491b82a3918865d94c32aad05d796
  primRowClasses31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Constants.$bPrimRow4) -}
cdd6ab9191a9094e8e1056318f672477
  primRowClasses32 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses35,
                  Language.PureScript.Environment.primRowClasses33)) -}
ebb5ff62847447570d8e07fb98818d4c
  primRowClasses33 :: Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primRowClasses34
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        (GHC.Types.[]
                           @ Language.PureScript.Environment.FunctionalDependency) of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
6351e2788ef8f3963fc3da0208218bc8
  primRowClasses34 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses24
                   Language.PureScript.Environment.primRowClasses18) -}
2bfe21958e88331cfd9094c02cf40a22
  primRowClasses35 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primRowClasses36
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
f24a84ac56a057ef93eaa53abd622852
  primRowClasses36 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses37) -}
c7c8df20748e4a10cb24f9b3549cd8aa
  primRowClasses37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lacks"#) -}
77f28314942e42cbcf18491b5849c27f
  primRowClasses38 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses48,
                  Language.PureScript.Environment.primRowClasses39)) -}
0aeaf610a3ee8bf841e23dc4fd8ee911
  primRowClasses39 :: Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primRowClasses40
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primRowListClasses4 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
49f16717b09c1ab899ecb2e11dd24661
  primRowClasses4 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowClasses5
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName),
                         Language.PureScript.Environment.TypeClassData))) -}
935429feaed853d5ac652068b5bb9149
  primRowClasses40 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses45
                   Language.PureScript.Environment.primRowClasses41) -}
b13f4f2e5737034dd2da6c5a80832d2b
  primRowClasses41 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses42
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
d75ddcc8b8e64a3a5aeaa9d45e8f6de3
  primRowClasses42 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses43,
                  Language.PureScript.Environment.primRowListClasses13)) -}
f19a5ac2e60f47f8f75d433de71e1f96
  primRowClasses43 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses44) -}
3cbaf776d6599741bf5b1871522f2660
  primRowClasses44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nubbed"#) -}
814b42ed52a8bd4fafe1de03344ae73b
  primRowClasses45 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses46,
                  Language.PureScript.Environment.primRowListClasses13)) -}
391b7a95ad142e82efb7ab4e068d2bbf
  primRowClasses46 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses47) -}
917e237550ed8fec264b85555406595c
  primRowClasses47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("original"#) -}
938a536e2bb0b34ea117598566924162
  primRowClasses48 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primRowClasses49
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
5fad503ef042b399e1329b831fa6b37e
  primRowClasses49 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses50) -}
8b1ca67afcc8ac153f409c96ea04a22f
  primRowClasses5 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses27,
                  Language.PureScript.Environment.primRowClasses6)) -}
c2ba29d34d5233eb68f3e3a352c5a696
  primRowClasses50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Nub"#) -}
a3e93c7b768a6778cd1a93a87ff00fb6
  primRowClasses51 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses61,
                  Language.PureScript.Environment.primRowClasses52)) -}
2fcc05788a8df6aabe4b164c0a89f3a8
  primRowClasses52 :: Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primRowClasses53
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primSymbolClasses55 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
7370e0a3104d7e34dccd5d87e84d816d
  primRowClasses53 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses60
                   Language.PureScript.Environment.primRowClasses54) -}
3aa7319da42ac18934942833e42a0696
  primRowClasses54 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses59
                   Language.PureScript.Environment.primRowClasses55) -}
b6c734bca3cdb434f2749a6d5c734ade
  primRowClasses55 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowClasses56
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
4598b680151d9ecbb8ae284e6986276c
  primRowClasses56 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowClasses57,
                  Language.PureScript.Environment.primRowListClasses13)) -}
d5f0edcc567d3d06007f4bff33150b63
  primRowClasses57 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses58) -}
a345716f861d54fdeeab43b14ab3b3d7
  primRowClasses58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("union"#) -}
eb5d3a90f6547303bfc1ce88bde93b31
  primRowClasses59 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses45,
                  Language.PureScript.Environment.primRowListClasses13)) -}
0e962c4ccf0fb761275e2b4668973824
  primRowClasses6 :: Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primRowClasses15
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primRowClasses7 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
7b0946b0cf533a5be3de8cbb9ae6aff3
  primRowClasses60 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses48,
                  Language.PureScript.Environment.primRowListClasses13)) -}
7732250d92efdfae6f826f6a9ea58b91
  primRowClasses61 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primRowClasses62
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
7193ebdbd3fb6da87c370add21470b39
  primRowClasses62 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowClasses63) -}
cd05236ac0c4c6ba995e08795bc6c1a0
  primRowClasses63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Union"#) -}
6e1b51ec35aee0f0311ba7486c4cc318
  primRowClasses7 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primRowClasses13
                   Language.PureScript.Environment.primRowClasses8) -}
4200caf5beaea2fc15e8bb0739bd4e93
  primRowClasses8 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primRowClasses9
                   (GHC.Types.[]
                      @ Language.PureScript.Environment.FunctionalDependency)) -}
2b08832569f9c1433e67e59f332797e0
  primRowClasses9 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primRowClasses10
                   Language.PureScript.Environment.primSymbolClasses62) -}
05497a0cf3c6728627c3e7beb1eef0e3
  primRowListClasses ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
  {- Unfolding: (Language.PureScript.Environment.$sfromList1
                   @ Language.PureScript.Environment.TypeClassData
                   Language.PureScript.Environment.primRowListClasses1) -}
5e85e7325e45a77395c9e08833de4752
  primRowListClasses1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primRowListClasses2
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName),
                         Language.PureScript.Environment.TypeClassData))) -}
f04180c3f70e348eedd6b00700dab8a4
  primRowListClasses10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowListClasses11) -}
9300be57292cd01db5d98f2b6f9e863f
  primRowListClasses11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("list"#) -}
5a77d64d8796b4e536ad464fb7aaecbc
  primRowListClasses12 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListClasses15,
                  Language.PureScript.Environment.primRowListClasses13)) -}
1a00a516be07e16f13fb35ff80d6d1f8
  primRowListClasses13 ::
    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Kinds.SourceKind
                   Language.PureScript.Environment.primRowListClasses14) -}
c13f6093254bea57187bc13e5e5e13f6
  primRowListClasses14 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m2,
     Unfolding: (Language.PureScript.Kinds.Row
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType) -}
e8419ee0f0ba36d3acee4378c2c28624
  primRowListClasses15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowListClasses16) -}
af23342d3334d8359bf6529a2fe49549
  primRowListClasses16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("row"#) -}
3a0cc2993bd07784f21472011216a726
  primRowListClasses17 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.kindRowList3
                   Language.PureScript.Environment.primRowListClasses18
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
ee9dc3226b955c1f97555fc2f67e58c6
  primRowListClasses18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowListClasses19) -}
c7822e14329739ac75174fb0d39e4577
  primRowListClasses19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RowToList"#) -}
5ec7b259d895db8d79f92ffc96d92ecf
  primRowListClasses2 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListClasses17,
                  Language.PureScript.Environment.primRowListClasses3)) -}
30383dbde2ac3201615aa549ba8161a5
  primRowListClasses3 ::
    Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primRowListClasses6
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primRowListClasses4 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
273846b21fa25fcf24cba88df18e29e8
  primRowListClasses4 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primRowListClasses5
                   (GHC.Types.[]
                      @ Language.PureScript.Environment.FunctionalDependency)) -}
1c6f457f831db8d88b959aca22fe7851
  primRowListClasses5 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses60
                   Language.PureScript.Environment.primSymbolClasses10) -}
fac007e32c45033f05ff8d21453bd8cd
  primRowListClasses6 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowListClasses12
                   Language.PureScript.Environment.primRowListClasses7) -}
52c071c901f0792abe35c1869afcb504
  primRowListClasses7 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primRowListClasses8
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
1f887fa80161f1a3634b0e5aa2037e3c
  primRowListClasses8 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListClasses10,
                  Language.PureScript.Environment.primRowListClasses9)) -}
4e4248e0a1b91379753ce968f745cd0f
  primRowListClasses9 ::
    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Kinds.SourceKind
                   Language.PureScript.Environment.kindRowList) -}
52a15b7f3d2f24135fdbce8c34329410
  primRowListKinds ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Unfolding: (Language.PureScript.Environment.$sfromList4
                   Language.PureScript.Environment.primRowListKinds1) -}
c20743fed5351d09715fa7ed9aded90a
  primRowListKinds1 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.kindRowList1
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))) -}
50cf373dbf864a25ca47e7651f96a1b6
  primRowListTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primRowListTypes1) -}
1598d556bb50c5693b210755aacde3ec
  primRowListTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowListTypes14
                   Language.PureScript.Environment.primRowListTypes2) -}
cc6d48cd2d917d5e2f78b7a819b4bf64
  primRowListTypes10 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.kindRowList,
                  Language.PureScript.Environment.ExternData)) -}
0e2cf0a3c3dda5b6e82949ca0a1fb452
  primRowListTypes11 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindRowList3
                   Language.PureScript.Environment.primRowListTypes12
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
84e318c0d3ba77cb5c9de80ea8c0b71b
  primRowListTypes12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primRowListTypes13) -}
7584d8fdb7c3b467cfd7c22c0c87eaed
  primRowListTypes13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Nil"#) -}
e426fa505c8562ed3132981c1fa09b72
  primRowListTypes14 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListTypes19,
                  Language.PureScript.Environment.primRowListTypes15)) -}
c28b94ae542bfb074c9a3cc3ed193108
  primRowListTypes15 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListTypes16,
                  Language.PureScript.Environment.ExternData)) -}
02ce9dc4f3b83b0951d525284de03877
  primRowListTypes16 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primRowListTypes17) -}
0521c566fa69d494ba34026c74c857d5
  primRowListTypes17 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType
                   Language.PureScript.Environment.primRowListTypes18) -}
f4c0c59c5137f6aa4133a98b8b905f61
  primRowListTypes18 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindRowList
                   Language.PureScript.Environment.kindRowList) -}
03bde9327a20ecb8c8b15cc972ec7103
  primRowListTypes19 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindRowList3
                   Language.PureScript.Environment.primSymbolClasses29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
8add23254acab36b0478acd05b99e59b
  primRowListTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowListTypes9
                   Language.PureScript.Environment.primRowListTypes3) -}
517a8290aedd772e80a64ff641777334
  primRowListTypes3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowListTypes4
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
9214e0dd5591653538faadc9c011e204
  primRowListTypes4 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListTypes8,
                  Language.PureScript.Environment.primRowListTypes5)) -}
d6ad2d4c4be0fb2f884edeaffe3b3111
  primRowListTypes5 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListTypes6,
                  Language.PureScript.Environment.ExternData)) -}
05216d368b92badd8a617346e2c28c66
  primRowListTypes6 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primRowListClasses14
                   Language.PureScript.Environment.primRowListTypes7) -}
6f16e7df8c430a2b9a6f4320df73097c
  primRowListTypes7 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindRowList
                   Language.PureScript.Environment.kindType) -}
c5d8e7109d2d83f5b5075dea5fa3a875
  primRowListTypes8 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindRowList3
                   Language.PureScript.Environment.primRowListClasses18
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
4308cd96bd8440ad71809ab6c410f417
  primRowListTypes9 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowListTypes11,
                  Language.PureScript.Environment.primRowListTypes10)) -}
1a85675e66a59d4b34a7ede21e73a351
  primRowTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primRowTypes1) -}
79040716670b88047455ca7183903d27
  primRowTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowTypes19
                   Language.PureScript.Environment.primRowTypes2) -}
01114494d1421eac8eccade4aa40742d
  primRowTypes10 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primRowListClasses14
                   Language.PureScript.Environment.kindType) -}
c7fb75fd33b799b804e18e114f216c11
  primRowTypes11 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primSymbolClasses29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
5faae06d9eb5fc3279455311baee6634
  primRowTypes12 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes15,
                  Language.PureScript.Environment.primRowTypes13)) -}
fcfad18792120e60df247f2230f417ce
  primRowTypes13 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes14,
                  Language.PureScript.Environment.ExternData)) -}
449bc0dd04b42a33ec74b079b607b00a
  primRowTypes14 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primRowTypes10) -}
7bdc1f97973408426abd973f4f9897d5
  primRowTypes15 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primRowClasses36
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
c3496d4634918c1be9102a35906700a2
  primRowTypes16 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes18,
                  Language.PureScript.Environment.primRowTypes17)) -}
8ef1c471ba33a2161af4b03127935ab7
  primRowTypes17 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes9,
                  Language.PureScript.Environment.ExternData)) -}
b794ab4ad3c8f66e9c53339fb3c9d420
  primRowTypes18 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primRowClasses49
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
7ef86e66d52512d57ad101765854a018
  primRowTypes19 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes22,
                  Language.PureScript.Environment.primRowTypes20)) -}
4d51e93150fac26c9808718386ddc869
  primRowTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowTypes16
                   Language.PureScript.Environment.primRowTypes3) -}
c3b05799414358748761256f2952fa20
  primRowTypes20 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes21,
                  Language.PureScript.Environment.ExternData)) -}
f5cbb07c56d25afdd1d897c46450207b
  primRowTypes21 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primRowListClasses14
                   Language.PureScript.Environment.primRowTypes9) -}
c043f65de284c4083f9c4eeddde78a92
  primRowTypes22 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primRowClasses28
                   Language.PureScript.Environment.primRowClasses62
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
f9dd2979749677dde9e1f5d729def7bb
  primRowTypes3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowTypes12
                   Language.PureScript.Environment.primRowTypes4) -}
9079abcd9d91fa141a20b9ad1995745b
  primRowTypes4 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primRowTypes5
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
046efd8ffefa4c1d1dacb3e4272839b9
  primRowTypes5 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes11,
                  Language.PureScript.Environment.primRowTypes6)) -}
0ff975b42d2e09cdfc67891425a07929
  primRowTypes6 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes7,
                  Language.PureScript.Environment.ExternData)) -}
f61cc85ecb9a5ce088bead2c353f2f8a
  primRowTypes7 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primRowTypes8) -}
bb9aad706e6f241824b46429bd929d2c
  primRowTypes8 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType
                   Language.PureScript.Environment.primRowTypes9) -}
c26eb445d2747c31bdefb094423af6c5
  primRowTypes9 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primRowListClasses14
                   Language.PureScript.Environment.primRowTypes10) -}
70b12b5353c4135553b3d5cb450e44ed
  primSubKind ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text -> Language.PureScript.Kinds.SourceKind
  {- Arity: 2, Strictness: <L,U><L,U>m4,
     Unfolding: InlineRule (2, True, False)
                (\ (sub :: Data.Text.Internal.Text)
                   (eta :: Data.Text.Internal.Text) ->
                 Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   (Language.PureScript.Names.Qualified
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName)
                      (GHC.Base.Just
                         @ Language.PureScript.Names.ModuleName
                         (GHC.Types.:
                            @ (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.Namespace)
                            Language.PureScript.Environment.kindDoc7
                              `cast`
                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                      <'Language.PureScript.Names.Namespace>_P))
                            (GHC.Types.:
                               @ (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.Namespace)
                               sub
                                 `cast`
                               (Sym (Language.PureScript.Names.N:ProperName[0]
                                         <'Language.PureScript.Names.Namespace>_P))
                               (GHC.Types.[]
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace))))
                           `cast`
                         (Sym (Language.PureScript.Names.N:ModuleName[0])))
                      eta
                        `cast`
                      (Sym (Language.PureScript.Names.N:ProperName[0]
                                <'Language.PureScript.Names.KindName>_P)))) -}
b55bd10d6245c2105c34677529a6ad2e
  primSubName ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName a)
  {- Arity: 2, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a :: Language.PureScript.Names.ProperNameType
                   (sub :: Data.Text.Internal.Text)
                   (eta :: Data.Text.Internal.Text) ->
                 Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName a)
                   (GHC.Base.Just
                      @ Language.PureScript.Names.ModuleName
                      (GHC.Types.:
                         @ (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.Namespace)
                         Language.PureScript.Environment.kindDoc7
                           `cast`
                         (Sym (Language.PureScript.Names.N:ProperName[0]
                                   <'Language.PureScript.Names.Namespace>_P))
                         (GHC.Types.:
                            @ (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.Namespace)
                            sub
                              `cast`
                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                      <'Language.PureScript.Names.Namespace>_P))
                            (GHC.Types.[]
                               @ (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.Namespace))))
                        `cast`
                      (Sym (Language.PureScript.Names.N:ModuleName[0])))
                   eta
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0] <a>_P))) -}
08eb15552cc36a4b5d11f2dc66e0de38
  primSymbolClasses ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
  {- Unfolding: (Language.PureScript.Environment.$sfromList1
                   @ Language.PureScript.Environment.TypeClassData
                   Language.PureScript.Environment.primSymbolClasses1) -}
645ce4cc5a0a246dc0a09951ff9df860
  primSymbolClasses1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primSymbolClasses53
                   Language.PureScript.Environment.primSymbolClasses2) -}
77fa705fb369b229756db60163b9f721
  primSymbolClasses10 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.primSymbolClasses11
                   (GHC.Types.[] @ GHC.Types.Int)) -}
612a5fb348ea6667ee75323264014909
  primSymbolClasses11 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
fa0072a71870d43eb940faa268defb9c
  primSymbolClasses12 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.primSymbolClasses13
                   (GHC.Types.[] @ GHC.Types.Int)) -}
22aaa18f1a40b2dce0d2ed1fafd3efd7
  primSymbolClasses13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
ff96665d2a7265a3ef1096360ffd35f1
  primSymbolClasses14 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses9
                   Language.PureScript.Environment.primSymbolClasses12) -}
547a7b0cda719fd9af0052dd5221c083
  primSymbolClasses15 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses25
                   Language.PureScript.Environment.primSymbolClasses16) -}
cb43b5f084d4b0a3f5cf4eb3e19793bb
  primSymbolClasses16 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses22
                   Language.PureScript.Environment.primSymbolClasses17) -}
3d19dfeff0a6f04aaed76bd50c342742
  primSymbolClasses17 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses18
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
7e12742d1a4d646760a658d593a981ce
  primSymbolClasses18 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses20,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
888814ef391897bced2fd69251eaabfa
  primSymbolClasses19 ::
    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Kinds.SourceKind
                   Language.PureScript.Environment.kindSymbol) -}
94b529cdc4f6570aaa122bfce35d680c
  primSymbolClasses2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primSymbolClasses34
                   Language.PureScript.Environment.primSymbolClasses3) -}
39b99f1a7eb84676eb9dfb232af34d0a
  primSymbolClasses20 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses21) -}
490082cdbee0d8fd01ca0840132190c5
  primSymbolClasses21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("symbol"#) -}
597fd122bbc381b57639dfa47c869a33
  primSymbolClasses22 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses23,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
8821d341bfedb179d998c56c5167c0ac
  primSymbolClasses23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses24) -}
6081309481e001310969c77789dc71dc
  primSymbolClasses24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tail"#) -}
b4821045ae89291f2633db581d617101
  primSymbolClasses25 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses26,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
db77e23587c3d51271a3ba18039b3956
  primSymbolClasses26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses27) -}
e04c00b725dcee1dd9430e9e8c37c728
  primSymbolClasses27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("head"#) -}
e11cea81ea6b8a29488b3c3cb7475cfb
  primSymbolClasses28 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primSymbolClasses31
                   Language.PureScript.Environment.primSymbolClasses29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
479f35d4f753285ea40ad9a81ba31ba3
  primSymbolClasses29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses30) -}
2d888ad6e4017a0061f2fd16a5fd397a
  primSymbolClasses3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primSymbolClasses4
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName),
                         Language.PureScript.Environment.TypeClassData))) -}
900ca127f2dec6b53851bc3376ea42c7
  primSymbolClasses30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cons"#) -}
6dc6d6674fb5e5d7768c47228007e535
  primSymbolClasses31 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Environment.primSymbolClasses32
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
d1f77df3d59962a73c1ffa2a4171a0dd
  primSymbolClasses32 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindDoc7
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   Language.PureScript.Environment.primSymbolClasses33) -}
4c55d23108f58c6f5c380af75eec27d3
  primSymbolClasses33 ::
    [Language.PureScript.Names.ProperName
       'Language.PureScript.Names.Namespace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.Namespace)
                   Language.PureScript.Environment.kindSymbol2
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.Namespace>_P))
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.Namespace))) -}
b111e37755d8e63d7cf87dcfb8e05386
  primSymbolClasses34 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses50,
                  Language.PureScript.Environment.primSymbolClasses35)) -}
37b1393a77448853e79cbd31385a0968
  primSymbolClasses35 ::
    Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primSymbolClasses37
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primSymbolClasses36 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
d8feebbc41dd43fb24e0b3cf7f3c1ee2
  primSymbolClasses36 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses14
                   (GHC.Types.[]
                      @ Language.PureScript.Environment.FunctionalDependency)) -}
646f8690312cc5e5cc4eef68cb1e2ada
  primSymbolClasses37 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses47
                   Language.PureScript.Environment.primSymbolClasses38) -}
cd8909d53f90e6b695f6bcf5d58262b2
  primSymbolClasses38 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses44
                   Language.PureScript.Environment.primSymbolClasses39) -}
f38a08fbbb8be5554dc489b9fcebfffb
  primSymbolClasses39 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses40
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
1d95bd1bea8fe8ac254f33196156e751
  primSymbolClasses4 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses28,
                  Language.PureScript.Environment.primSymbolClasses5)) -}
77165b4d003b38ce69b7ebea35623279
  primSymbolClasses40 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses42,
                  Language.PureScript.Environment.primSymbolClasses41)) -}
4203fa7406d41c78111e8a54f16f3061
  primSymbolClasses41 ::
    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Kinds.SourceKind
                   Language.PureScript.Environment.kindOrdering) -}
586ef98049565a19b2ad19cf5213deb6
  primSymbolClasses42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses43) -}
394cf9f405f315c3b0c01dd5944262f2
  primSymbolClasses43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ordering"#) -}
f138692143c3dadadd1d34599e7f10f8
  primSymbolClasses44 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses45,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
11b184afc04a42a70e934807248cf72c
  primSymbolClasses45 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses46) -}
b5eb090ad30536887dfa2f3b268fa347
  primSymbolClasses46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("right"#) -}
06528340dd73d50cf5ce12490e15bdcd
  primSymbolClasses47 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses48,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
72bc911b670893d592949a608c42666b
  primSymbolClasses48 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses49) -}
52ddebaafb42e4a6181c307f90214cf4
  primSymbolClasses49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("left"#) -}
df5aa6904c382c69992a20981ca111a8
  primSymbolClasses5 :: Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primSymbolClasses15
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primSymbolClasses6 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
fc946c740e8309ee26a9c9f0a8ced739
  primSymbolClasses50 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primSymbolClasses31
                   Language.PureScript.Environment.primSymbolClasses51
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
17d51abff315aeff555280c1c37531cf
  primSymbolClasses51 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses52) -}
fe49ee151cd111446e6944243af39366
  primSymbolClasses52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Compare"#) -}
c242cb93c1d499406261242129f57575
  primSymbolClasses53 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses69,
                  Language.PureScript.Environment.primSymbolClasses54)) -}
fa932750ff1aa6f09cbeb1191e4a9415
  primSymbolClasses54 ::
    Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primSymbolClasses63
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        Language.PureScript.Environment.primSymbolClasses55 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
2c2917f93b263ae3c3caa339b3034d0d
  primSymbolClasses55 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses14
                   Language.PureScript.Environment.primSymbolClasses56) -}
d106b394ccc4c37234c4ad6dd7a8be53
  primSymbolClasses56 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses61
                   Language.PureScript.Environment.primSymbolClasses57) -}
acebebca620658daace63333b4f0b9e9
  primSymbolClasses57 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses58
                   (GHC.Types.[]
                      @ Language.PureScript.Environment.FunctionalDependency)) -}
9b346f3b3cb7639e57a54a77b75974ab
  primSymbolClasses58 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses59
                   Language.PureScript.Environment.primSymbolClasses10) -}
6d958e0c8eb8d1371609d73d0a37d4a9
  primSymbolClasses59 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.primSymbolClasses13
                   Language.PureScript.Environment.primSymbolClasses60) -}
c66e8234e35bf25630138be573e6259e
  primSymbolClasses6 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses14
                   Language.PureScript.Environment.primSymbolClasses7) -}
9132cb7153cfc9261c38503e5e06d96a
  primSymbolClasses60 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.$fShowEnvironment2
                   (GHC.Types.[] @ GHC.Types.Int)) -}
3420fd74fcc97a136a74acd8e67080fe
  primSymbolClasses61 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses62
                   Language.PureScript.Environment.primSymbolClasses60) -}
76b1a4c0cd48ee4d259a59fd540ee781
  primSymbolClasses62 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.primSymbolClasses11
                   Language.PureScript.Environment.primSymbolClasses12) -}
6c00b5b7af2f8775efbecc5fb9fe54b8
  primSymbolClasses63 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses47
                   Language.PureScript.Environment.primSymbolClasses64) -}
48ebc47b738a6378c866578a705448d1
  primSymbolClasses64 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses44
                   Language.PureScript.Environment.primSymbolClasses65) -}
42be01c10e7bdc58816ea6fe1101a4f0
  primSymbolClasses65 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primSymbolClasses66
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
0f83380305fc6e9b984ca590d456fb69
  primSymbolClasses66 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolClasses67,
                  Language.PureScript.Environment.primSymbolClasses19)) -}
e26fd74bb01499ec92821c202729d1f7
  primSymbolClasses67 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses68) -}
bfb94487ea5a4c220c2e44c48bdcb09c
  primSymbolClasses68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("appended"#) -}
3d9eec1e88e5fb43d2c8d4413177cd43
  primSymbolClasses69 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.primSymbolClasses31
                   Language.PureScript.Environment.primSymbolClasses70
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
3996b535483121447a448de0266990e9
  primSymbolClasses7 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses8
                   (GHC.Types.[]
                      @ Language.PureScript.Environment.FunctionalDependency)) -}
97d1e97e1a8f39fda88ab8f2c199a6a6
  primSymbolClasses70 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primSymbolClasses71) -}
e886a405d0ce348720f9540661fe0d17
  primSymbolClasses71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Append"#) -}
5999f5f0dcaeb8d1b885fbaa8d650692
  primSymbolClasses8 ::
    Language.PureScript.Environment.FunctionalDependency
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Environment.FunctionalDependency
                   Language.PureScript.Environment.primSymbolClasses12
                   Language.PureScript.Environment.primSymbolClasses9) -}
6b607b44d16a953166ff2052498a8a28
  primSymbolClasses9 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Environment.$fShowEnvironment2
                   Language.PureScript.Environment.primSymbolClasses10) -}
81883c6402caa01bb93ede0d3bbe862e
  primSymbolTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primSymbolTypes1) -}
b361e00a6ee291353a4156fa224cc60e
  primSymbolTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primSymbolTypes16
                   Language.PureScript.Environment.primSymbolTypes2) -}
a20dc45f6a7a06c014db5cf18aa5ca5e
  primSymbolTypes10 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolTypes15,
                  Language.PureScript.Environment.primSymbolTypes11)) -}
3f46cf9ce697a8df041ca6c3a41c1460
  primSymbolTypes11 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolTypes12,
                  Language.PureScript.Environment.ExternData)) -}
3f93ba462c00795975337791e0ea43ea
  primSymbolTypes12 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primSymbolTypes13) -}
6be16134543e01317961170d56c55275
  primSymbolTypes13 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primSymbolTypes14) -}
349a2cc875f5a2d0b5583870110ac0e5
  primSymbolTypes14 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindOrdering
                   Language.PureScript.Environment.kindType) -}
e054c70f4a99b3f8daf826b5588924c7
  primSymbolTypes15 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primSymbolClasses31
                   Language.PureScript.Environment.primSymbolClasses51
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
e8203338fadbdc7d5a23acabc042f50e
  primSymbolTypes16 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolTypes17,
                  Language.PureScript.Environment.primSymbolTypes5)) -}
c6d163960384d03812168167bf7fe475
  primSymbolTypes17 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primSymbolClasses31
                   Language.PureScript.Environment.primSymbolClasses70
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
17121fe78287c1d9c4a0f6ae34f49651
  primSymbolTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primSymbolTypes10
                   Language.PureScript.Environment.primSymbolTypes3) -}
160398ffc95b52e8d614e9f159f1692e
  primSymbolTypes3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primSymbolTypes4
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
651c0f9f4883a3ab9899900737609bba
  primSymbolTypes4 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolTypes9,
                  Language.PureScript.Environment.primSymbolTypes5)) -}
863ef479d18b78e8e83319a1690c2be3
  primSymbolTypes5 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primSymbolTypes6,
                  Language.PureScript.Environment.ExternData)) -}
2013a328bb116f001b0396509d9f6398
  primSymbolTypes6 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primSymbolTypes7) -}
e21ff6c83895c9861c989ad3dd313e16
  primSymbolTypes7 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.primSymbolTypes8) -}
46d01ce7bcb966b533e67fe3ee06bab4
  primSymbolTypes8 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.kindType) -}
218f81f2f1107ccc97b2c4f8945be8b0
  primSymbolTypes9 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.primSymbolClasses31
                   Language.PureScript.Environment.primSymbolClasses29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
5e8f5fbe04aae5e0b8cbcd3f90a4533b
  primTy ::
    Data.Text.Internal.Text -> Language.PureScript.Types.SourceType
  {- Arity: 1, Strictness: <L,U>m5,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Text.Internal.Text) ->
                 Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   (Language.PureScript.Names.Qualified
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName)
                      Language.PureScript.Environment.kindSymbol3
                      x `cast`
                      (Sym (Language.PureScript.Names.N:ProperName[0]
                                <'Language.PureScript.Names.TypeName>_P)))) -}
022280231240eedd26928b8af8661fe5
  primTypeErrorClasses ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
  {- Unfolding: (Language.PureScript.Environment.$sfromList1
                   @ Language.PureScript.Environment.TypeClassData
                   Language.PureScript.Environment.primTypeErrorClasses1) -}
e8bf87884ef6522001ddce307e2ae1e1
  primTypeErrorClasses1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primTypeErrorClasses13
                   Language.PureScript.Environment.primTypeErrorClasses2) -}
7639d6d8409cb59c60207289cccf35ce
  primTypeErrorClasses10 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorClasses11
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
6d10445a86ed445568713153d156038c
  primTypeErrorClasses11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorClasses12) -}
d32d9c7ca142114db13b97a19d2002f8
  primTypeErrorClasses12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Warn"#) -}
7ae3510570998abd7ba25d86de24aca4
  primTypeErrorClasses13 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorClasses14,
                  Language.PureScript.Environment.primTypeErrorClasses4)) -}
1492006d56876ece407f2bdd6e1ba340
  primTypeErrorClasses14 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ClassName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorClasses15
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))) -}
1dbac719517542d71ff3df043fa12f9e
  primTypeErrorClasses15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorClasses16) -}
8e276e33d8b3d066be1b839c96aad5a8
  primTypeErrorClasses16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Fail"#) -}
be4052a488f31be15c75e3875e5b552d
  primTypeErrorClasses2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      Language.PureScript.Environment.TypeClassData)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ClassName),
                      Language.PureScript.Environment.TypeClassData)
                   Language.PureScript.Environment.primTypeErrorClasses3
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName),
                         Language.PureScript.Environment.TypeClassData))) -}
c2b2cd282c770d79deacf9839dba031a
  primTypeErrorClasses3 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     Language.PureScript.Environment.TypeClassData)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorClasses10,
                  Language.PureScript.Environment.primTypeErrorClasses4)) -}
7bbdb94058b49f555be0b274ef880ce1
  primTypeErrorClasses4 ::
    Language.PureScript.Environment.TypeClassData
  {- Unfolding: (case Language.PureScript.Environment.$wmakeTypeClassData
                        Language.PureScript.Environment.primTypeErrorClasses5
                        (GHC.Types.[]
                           @ (Language.PureScript.Names.Ident,
                              Language.PureScript.Types.SourceType))
                        (GHC.Types.[] @ Language.PureScript.Types.SourceConstraint)
                        (GHC.Types.[]
                           @ Language.PureScript.Environment.FunctionalDependency) of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Environment.TypeClassData
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
b9d6326ec7c51124bfad52bd41a3c075
  primTypeErrorClasses5 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                   Language.PureScript.Environment.primTypeErrorClasses6
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind))) -}
c2f850b0fbe4c1cba518ef438f6664ce
  primTypeErrorClasses6 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorClasses8,
                  Language.PureScript.Environment.primTypeErrorClasses7)) -}
1ef3252ab21bd070b1eab75859ff316e
  primTypeErrorClasses7 ::
    GHC.Base.Maybe Language.PureScript.Kinds.SourceKind
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.Kinds.SourceKind
                   Language.PureScript.Environment.kindDoc) -}
fcab9738745d31e82e6e87d1c5220da9
  primTypeErrorClasses8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorClasses9) -}
8a699bf921feef45252ce413be697309
  primTypeErrorClasses9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("message"#) -}
fc77b82dbffa41edd1ad6ffaa74d9bcb
  primTypeErrorKinds ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Unfolding: (Language.PureScript.Environment.$sfromList4
                   Language.PureScript.Environment.primTypeErrorKinds1) -}
43c20a2827eaa6dc7b17d3f88069e7a0
  primTypeErrorKinds1 ::
    [Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.KindName)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.KindName))
                   Language.PureScript.Environment.kindDoc1
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName)))) -}
bee98899a28b6b8e65f4e07856171420
  primTypeErrorTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primTypeErrorTypes1) -}
89a8e470ec4bd08782d0a3aec1215dd5
  primTypeErrorTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes39
                   Language.PureScript.Environment.primTypeErrorTypes2) -}
197acd54654efaa4df2c1051366c88f5
  primTypeErrorTypes10 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindDoc
                   Language.PureScript.Environment.primTypeErrorTypes11) -}
c1b50d006eee6377f3533c04765a7cc0
  primTypeErrorTypes11 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindDoc
                   Language.PureScript.Environment.kindDoc) -}
256cbca3ffcb9e8e64a9dcdc3468b307
  primTypeErrorTypes12 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorTypes13
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
a1cd40651e8955133386ed56cb5dce8b
  primTypeErrorTypes13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorTypes14) -}
560499266c2b4c69922f1ad0fa250728
  primTypeErrorTypes14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Above"#) -}
73197107abfb72e5a7ed2bbf3da77952
  primTypeErrorTypes15 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes16,
                  Language.PureScript.Environment.primTypeErrorTypes9)) -}
deb1527cae637e6ae3075f2b60ea8a6d
  primTypeErrorTypes16 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorTypes17
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
2c9b2cfaf9612a9b08fd188bd006a7bf
  primTypeErrorTypes17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorTypes18) -}
5ebd2de24b179bc90266319cb7bb87ba
  primTypeErrorTypes18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Beside"#) -}
87cc43e44aab1c1aeeedca426ec06ced
  primTypeErrorTypes19 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes22,
                  Language.PureScript.Environment.primTypeErrorTypes20)) -}
27eca86275f92658e4193a90b34ae8d7
  primTypeErrorTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes35
                   Language.PureScript.Environment.primTypeErrorTypes3) -}
12b5bde337ee8937ea4c7f359b302b00
  primTypeErrorTypes20 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes21,
                  Language.PureScript.Environment.ExternData)) -}
985f88747b91fcfe2dd810954d31ca22
  primTypeErrorTypes21 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindSymbol
                   Language.PureScript.Environment.kindDoc) -}
42d503715ceb3a31995c5304be81aadb
  primTypeErrorTypes22 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorTypes23
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
226be5a7c98d51485b7b1b173e908ffb
  primTypeErrorTypes23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorTypes24) -}
cf015e9a05d2235c4e439c2a2c0ebe6b
  primTypeErrorTypes24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("QuoteLabel"#) -}
576ea2997f765c30d4e9fe95bf830698
  primTypeErrorTypes25 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes28,
                  Language.PureScript.Environment.primTypeErrorTypes26)) -}
04074f6baaa376399a8f83ecfee2625b
  primTypeErrorTypes26 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes27,
                  Language.PureScript.Environment.ExternData)) -}
b54e8c3c2fe675586db867292cdb920a
  primTypeErrorTypes27 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType
                   Language.PureScript.Environment.kindDoc) -}
80a0cde2b43384191dac9308f3dd4d05
  primTypeErrorTypes28 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorTypes29
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
368c12ba5e44105bb7177c3e6f1ea8fe
  primTypeErrorTypes29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorTypes30) -}
0e10d5fafb1ce0c0f032212a38c440d1
  primTypeErrorTypes3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes31
                   Language.PureScript.Environment.primTypeErrorTypes4) -}
027184a450ac4dc8b9c5bc3f66bdd2e6
  primTypeErrorTypes30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Quote"#) -}
ba0575c3d2b7db807aeb1e4b15d55f6c
  primTypeErrorTypes31 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes32,
                  Language.PureScript.Environment.primTypeErrorTypes20)) -}
ba7ec92d5f1a6d4279aef363f188f8df
  primTypeErrorTypes32 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorTypes33
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
c607061d1783e3b07ee7e870420ff98f
  primTypeErrorTypes33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypeErrorTypes34) -}
50cf28db1e5cfd25c943e20e0e3fb142
  primTypeErrorTypes34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Text"#) -}
5ccbfa75845346e68ab0b51787e22f4e
  primTypeErrorTypes35 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes38,
                  Language.PureScript.Environment.primTypeErrorTypes36)) -}
57dc7c10750c9116ca2a6a476462ebc0
  primTypeErrorTypes36 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes37,
                  Language.PureScript.Environment.ExternData)) -}
c1e2b6ba0fbd78069b57dfc1cb079936
  primTypeErrorTypes37 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindDoc
                   Language.PureScript.Environment.kindType) -}
36ee31930fc25d3fa808ca151e4dceeb
  primTypeErrorTypes38 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorClasses11
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
e7a1d4efd421a60dfde9b6ad4f1b0705
  primTypeErrorTypes39 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes40,
                  Language.PureScript.Environment.primTypeErrorTypes36)) -}
0eed635f43b2c7f46c97c3034757fb24
  primTypeErrorTypes4 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes25
                   Language.PureScript.Environment.primTypeErrorTypes5) -}
e074225f75769b3281e1707af39ea99d
  primTypeErrorTypes40 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindDoc3
                   Language.PureScript.Environment.primTypeErrorClasses15
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
f7378998f0dc2428787cfb47d93998bf
  primTypeErrorTypes5 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes19
                   Language.PureScript.Environment.primTypeErrorTypes6) -}
67a8d2e4470703edbb5c9b77f181c68d
  primTypeErrorTypes6 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes15
                   Language.PureScript.Environment.primTypeErrorTypes7) -}
b0564b6af0c1a1f8ecacd0c5dc7014a6
  primTypeErrorTypes7 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypeErrorTypes8
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
9b585e96d739557dbe1791fc2847303b
  primTypeErrorTypes8 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes12,
                  Language.PureScript.Environment.primTypeErrorTypes9)) -}
ed83ae3e92caf6d6286a993711a29efd
  primTypeErrorTypes9 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypeErrorTypes10,
                  Language.PureScript.Environment.ExternData)) -}
97d1d9e451bb84e536f912cf2c408fd7
  primTypes ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind)
  {- Unfolding: (Language.PureScript.Environment.$sfromList
                   @ (Language.PureScript.Kinds.SourceKind,
                      Language.PureScript.Environment.TypeKind)
                   Language.PureScript.Environment.primTypes1) -}
f10bc75e53636910998a4b1c9c2e41de
  primTypes1 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes44
                   Language.PureScript.Environment.primTypes2) -}
470acff8610a6f3ffdb0e9055a037e38
  primTypes10 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes12,
                  Language.PureScript.Environment.primTypes11)) -}
3b7c77bb5f68147fb3065489ea82c484
  primTypes11 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.kindType,
                  Language.PureScript.Environment.ExternData)) -}
e5a661ebd85b31b2a9bb14a8fde0ebdb
  primTypes12 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primClasses5
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
ed1d95862b570ec1536db783ddcc70d1
  primTypes13 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes14,
                  Language.PureScript.Environment.primTypes11)) -}
57ea9ede5d98e99d3dddf3f3ad39a9bf
  primTypes14 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes15
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
51dde61b90900d8c7285147f7356c66b
  primTypes15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes16) -}
265e0a815a65a21beec3aa613fd84de9
  primTypes16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Boolean"#) -}
da47277f631905586dcb83f1c211c8bb
  primTypes17 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes18,
                  Language.PureScript.Environment.primTypes11)) -}
fffe5c3aede537b93de2afc733ce6e06
  primTypes18 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes19
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
d5bc6bfe24e80aaa871ff3403f512413
  primTypes19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes20) -}
15eba0db613b64b87f14f4c5aa7bfa95
  primTypes2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes38
                   Language.PureScript.Environment.primTypes3) -}
01daf151e6df94d7bec286197ac565d2
  primTypes20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Int"#) -}
2038cd6979b63f9cc330d2fd577608f0
  primTypes21 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes22,
                  Language.PureScript.Environment.primTypes11)) -}
0672a93cd7e5fa4b2fc972e1051d94c7
  primTypes22 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes23
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
7e779e8285a61d9e5262cc852394792f
  primTypes23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes24) -}
1adae37d3788fd2d18ae1c4741c14121
  primTypes24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Number"#) -}
8b27cea0d100cc87fb4d43c5be892578
  primTypes25 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes26,
                  Language.PureScript.Environment.primTypes11)) -}
d4d8e6643218439134494cc6da608d23
  primTypes26 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes27
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
2eebc47f121d1f7b0a55af96cdc6752f
  primTypes27 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes28) -}
80436ce97f6dfa17f94b634adf44bbee
  primTypes28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Char"#) -}
038659bb346fbff94a3cb1d4b4fa7a9c
  primTypes29 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes30,
                  Language.PureScript.Environment.primTypes11)) -}
aedbed380fda4e887326607f3b7a98d7
  primTypes3 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes33
                   Language.PureScript.Environment.primTypes4) -}
70f075edf0344ca18dae51adfca7da42
  primTypes30 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes31
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
50ad624f96f633d9c0fcaa5846730fbf
  primTypes31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes32) -}
f2206fe3bbf14d81ab379cc62650dad2
  primTypes32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("String"#) -}
b5100f6d4aafd09e13abe3b7986f9e8c
  primTypes33 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes35,
                  Language.PureScript.Environment.primTypes34)) -}
85b68c21bcabf5a1998466ce94d17085
  primTypes34 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primRowTypes10,
                  Language.PureScript.Environment.ExternData)) -}
d171f2e849fe2f790fb3796a563d8818
  primTypes35 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes36
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
3e6d2d2b9ba95deb8e33c8f206f901f9
  primTypes36 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes37) -}
b1cdc127e199659ffb0d0093eb06627a
  primTypes37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Record"#) -}
f90ecd2f8514b7c2c4fc887c9c9c0963
  primTypes38 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes41,
                  Language.PureScript.Environment.primTypes39)) -}
ef7a5a3462bdf51d96ce354f7ef806ab
  primTypes39 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes40,
                  Language.PureScript.Environment.ExternData)) -}
dbd8220af17cc75a15d48b73f3a4e757
  primTypes4 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes29
                   Language.PureScript.Environment.primTypes5) -}
dcde82bd0690354867aeb7180016c56b
  primTypes40 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType
                   Language.PureScript.Environment.kindType) -}
90afe70781204e440c1c23525489ec67
  primTypes41 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes42
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
9065697022c42aeccca3f5fd35ca3355
  primTypes42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes43) -}
eca17e3802f1d0b01b8b2758860538d0
  primTypes43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Array"#) -}
5fb55fa3af338e541006c2de61c5e40f
  primTypes44 ::
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName),
     (Language.PureScript.Kinds.SourceKind,
      Language.PureScript.Environment.TypeKind))
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes47,
                  Language.PureScript.Environment.primTypes45)) -}
e34130495d2a48045dc28a4a60f28e6c
  primTypes45 ::
    (Language.PureScript.Kinds.SourceKind,
     Language.PureScript.Environment.TypeKind)
  {- Strictness: m,
     Unfolding: ((Language.PureScript.Environment.primTypes46,
                  Language.PureScript.Environment.ExternData)) -}
160c968eae3f008c36483c2bc111f155
  primTypes46 ::
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
  {- Strictness: m3,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.kindType
                   Language.PureScript.Environment.primTypes40) -}
d222f5d2acfd0767f9922a94054e190e
  primTypes47 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
  {- Strictness: m,
     Unfolding: (Language.PureScript.Names.Qualified
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   Language.PureScript.Environment.kindSymbol3
                   Language.PureScript.Environment.primTypes48
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P))) -}
cb3652cb8649bf6b29df556b77530a07
  primTypes48 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Environment.primTypes49) -}
6f3a4ac3d414f2f366a03a8fa273098d
  primTypes49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Function"#) -}
295954d45b5693580b6ad780747b819b
  primTypes5 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes25
                   Language.PureScript.Environment.primTypes6) -}
775b343c06d22e19b2aee467d1363568
  primTypes6 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes21
                   Language.PureScript.Environment.primTypes7) -}
65581517def9e41c2c3d60f8cdad4fb8
  primTypes7 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes17
                   Language.PureScript.Environment.primTypes8) -}
94531d775e2e5d70251fa376e9700a6a
  primTypes8 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes13
                   Language.PureScript.Environment.primTypes9) -}
84b2ab34721908821bcb4ab2bef66898
  primTypes9 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.TypeName),
      (Language.PureScript.Kinds.SourceKind,
       Language.PureScript.Environment.TypeKind))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.TypeName),
                      (Language.PureScript.Kinds.SourceKind,
                       Language.PureScript.Environment.TypeKind))
                   Language.PureScript.Environment.primTypes10
                   (GHC.Types.[]
                      @ (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName),
                         (Language.PureScript.Kinds.SourceKind,
                          Language.PureScript.Environment.TypeKind)))) -}
26ab4bfd2e1fb0753bd864488ee00f25
  showDataDeclType ::
    Language.PureScript.Environment.DataDeclType
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.DataDeclType) ->
                 case ds of wild {
                   Language.PureScript.Environment.Data
                   -> Language.PureScript.Environment.$fFromJSONDataDeclType12
                   Language.PureScript.Environment.Newtype
                   -> Language.PureScript.Environment.$fFromJSONDataDeclType10 }) -}
9c853147674c170f658aadff0d955fd3
  tyArray :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes41) -}
cf2a4b16921d4c14981aa678a6e26960
  tyBoolean :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes14) -}
55164640d04aa650d4ee004fb2b89cb1
  tyChar :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes26) -}
72bada10fd7f408ce623a31c14e8cefb
  tyFunction :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes47) -}
2eb80f9991d35ecb67b9d510eb6fa5f1
  tyInt :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes18) -}
33725bb2e2117f8c6457b7edde5db534
  tyNumber :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes22) -}
50710499a0d6346d3284449c5e15992d
  tyRecord :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes35) -}
0f7bc6cbb79c99c03768da77b67918ab
  tyString :: Language.PureScript.Types.SourceType
  {- Strictness: m5,
     Unfolding: (Language.PureScript.Types.TypeConstructor
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn
                   Language.PureScript.Environment.primTypes30) -}
181e7295489b314c6c042d61e80bb6b9
  typeClassArguments ::
    Language.PureScript.Environment.TypeClassData
    -> [(Data.Text.Internal.Text,
         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  RecSel Left Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.TypeClassData) ->
                 case ds of wild { Language.PureScript.Environment.TypeClassData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
181e7295489b314c6c042d61e80bb6b9
  typeClassCoveringSets ::
    Language.PureScript.Environment.TypeClassData
    -> Data.Set.Internal.Set (Data.Set.Internal.Set GHC.Types.Int)
  RecSel Left Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.TypeClassData) ->
                 case ds of wild { Language.PureScript.Environment.TypeClassData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
181e7295489b314c6c042d61e80bb6b9
  typeClassDependencies ::
    Language.PureScript.Environment.TypeClassData
    -> [Language.PureScript.Environment.FunctionalDependency]
  RecSel Left Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.TypeClassData) ->
                 case ds of wild { Language.PureScript.Environment.TypeClassData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
181e7295489b314c6c042d61e80bb6b9
  typeClassDeterminedArguments ::
    Language.PureScript.Environment.TypeClassData
    -> Data.Set.Internal.Set GHC.Types.Int
  RecSel Left Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.TypeClassData) ->
                 case ds of wild { Language.PureScript.Environment.TypeClassData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
7eb61fe78108d98d82e39145869b2402
  typeClassDictionaries ::
    Language.PureScript.Environment.Environment
    -> Data.Map.Internal.Map
         (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  Language.PureScript.Names.Ident)
               (GHC.Base.NonEmpty
                  Language.PureScript.TypeClassDictionaries.NamedDict)))
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds5 }) -}
181e7295489b314c6c042d61e80bb6b9
  typeClassMembers ::
    Language.PureScript.Environment.TypeClassData
    -> [(Language.PureScript.Names.Ident,
         Language.PureScript.Types.SourceType)]
  RecSel Left Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.TypeClassData) ->
                 case ds of wild { Language.PureScript.Environment.TypeClassData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
181e7295489b314c6c042d61e80bb6b9
  typeClassSuperclasses ::
    Language.PureScript.Environment.TypeClassData
    -> [Language.PureScript.Types.SourceConstraint]
  RecSel Left Language.PureScript.Environment.TypeClassData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.TypeClassData) ->
                 case ds of wild { Language.PureScript.Environment.TypeClassData ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
7eb61fe78108d98d82e39145869b2402
  typeClasses ::
    Language.PureScript.Environment.Environment
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds6 }) -}
7eb61fe78108d98d82e39145869b2402
  typeSynonyms ::
    Language.PureScript.Environment.Environment
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         ([(Data.Text.Internal.Text,
            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
          Language.PureScript.Types.SourceType)
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds4 }) -}
7eb61fe78108d98d82e39145869b2402
  types ::
    Language.PureScript.Environment.Environment
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
  RecSel Left Language.PureScript.Environment.Environment
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Environment.Environment) ->
                 case ds of wild { Language.PureScript.Environment.Environment ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds2 }) -}
instance GHC.Classes.Eq [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fEqDataDeclType
instance GHC.Classes.Eq [Language.PureScript.Environment.NameKind]
  = Language.PureScript.Environment.$fEqNameKind
instance GHC.Classes.Eq [Language.PureScript.Environment.NameVisibility]
  = Language.PureScript.Environment.$fEqNameVisibility
instance GHC.Classes.Eq [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.$fEqTypeKind
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fFromJSONDataDeclType
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Environment.FunctionalDependency]
  = Language.PureScript.Environment.$fFromJSONFunctionalDependency
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.$fFromJSONTypeKind
instance GHC.Generics.Generic [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fGenericDataDeclType
instance GHC.Generics.Generic [Language.PureScript.Environment.Environment]
  = Language.PureScript.Environment.$fGenericEnvironment
instance GHC.Generics.Generic [Language.PureScript.Environment.FunctionalDependency]
  = Language.PureScript.Environment.$fGenericFunctionalDependency
instance GHC.Generics.Generic [Language.PureScript.Environment.NameKind]
  = Language.PureScript.Environment.$fGenericNameKind
instance GHC.Generics.Generic [Language.PureScript.Environment.NameVisibility]
  = Language.PureScript.Environment.$fGenericNameVisibility
instance GHC.Generics.Generic [Language.PureScript.Environment.TypeClassData]
  = Language.PureScript.Environment.$fGenericTypeClassData
instance GHC.Generics.Generic [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.$fGenericTypeKind
instance Control.DeepSeq.NFData [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fNFDataDataDeclType
instance Control.DeepSeq.NFData [Language.PureScript.Environment.Environment]
  = Language.PureScript.Environment.$fNFDataEnvironment
instance Control.DeepSeq.NFData [Language.PureScript.Environment.FunctionalDependency]
  = Language.PureScript.Environment.$fNFDataFunctionalDependency
instance Control.DeepSeq.NFData [Language.PureScript.Environment.NameKind]
  = Language.PureScript.Environment.$fNFDataNameKind
instance Control.DeepSeq.NFData [Language.PureScript.Environment.NameVisibility]
  = Language.PureScript.Environment.$fNFDataNameVisibility
instance Control.DeepSeq.NFData [Language.PureScript.Environment.TypeClassData]
  = Language.PureScript.Environment.$fNFDataTypeClassData
instance Control.DeepSeq.NFData [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.$fNFDataTypeKind
instance GHC.Classes.Ord [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fOrdDataDeclType
instance GHC.Show.Show [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fShowDataDeclType
instance GHC.Show.Show [Language.PureScript.Environment.Environment]
  = Language.PureScript.Environment.$fShowEnvironment
instance GHC.Show.Show [Language.PureScript.Environment.FunctionalDependency]
  = Language.PureScript.Environment.$fShowFunctionalDependency
instance GHC.Show.Show [Language.PureScript.Environment.NameKind]
  = Language.PureScript.Environment.$fShowNameKind
instance GHC.Show.Show [Language.PureScript.Environment.NameVisibility]
  = Language.PureScript.Environment.$fShowNameVisibility
instance GHC.Show.Show [Language.PureScript.Environment.TypeClassData]
  = Language.PureScript.Environment.$fShowTypeClassData
instance GHC.Show.Show [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.$fShowTypeKind
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.$fToJSONDataDeclType
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Environment.FunctionalDependency]
  = Language.PureScript.Environment.$fToJSONFunctionalDependency
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.$fToJSONTypeKind
family instance GHC.Generics.Rep [Language.PureScript.Environment.Environment]
  = Language.PureScript.Environment.Rep_Environment
family instance GHC.Generics.Rep [Language.PureScript.Environment.DataDeclType]
  = Language.PureScript.Environment.Rep_DataDeclType
family instance GHC.Generics.Rep [Language.PureScript.Environment.TypeKind]
  = Language.PureScript.Environment.Rep_TypeKind
family instance GHC.Generics.Rep [Language.PureScript.Environment.NameKind]
  = Language.PureScript.Environment.Rep_NameKind
family instance GHC.Generics.Rep [Language.PureScript.Environment.NameVisibility]
  = Language.PureScript.Environment.Rep_NameVisibility
family instance GHC.Generics.Rep [Language.PureScript.Environment.TypeClassData]
  = Language.PureScript.Environment.Rep_TypeClassData
family instance GHC.Generics.Rep [Language.PureScript.Environment.FunctionalDependency]
  = Language.PureScript.Environment.Rep_FunctionalDependency
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                          (sc2 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
                          (sc3 :: a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       (Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.TypeName))
                                    a)
                          (sc5 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       (Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.TypeName))
                                    a)
                          (sc6 :: a)
                          (sc7 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
                          (sc8 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                          (sc9 :: Language.PureScript.Names.Qualified
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName))
  Language.PureScript.Environment.$w$sgo13 @ a
                                           sc9
                                           sc8
                                           sc7
                                           sc6
                                           (Data.Map.Internal.Bin
                                              @ (Language.PureScript.Names.Qualified
                                                   (Language.PureScript.Names.ProperName
                                                      'Language.PureScript.Names.TypeName))
                                              @ a
                                              sc
                                              (Language.PureScript.Names.Qualified
                                                 @ (Language.PureScript.Names.ProperName
                                                      'Language.PureScript.Names.TypeName)
                                                 sc1
                                                 sc2)
                                              sc3
                                              sc4
                                              sc5)
  = Language.PureScript.Environment.$sinsert_$s$w$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                          (sc2 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
                          (sc3 :: a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       (Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.ClassName))
                                    a)
                          (sc5 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.Qualified
                                       (Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.ClassName))
                                    a)
                          (sc6 :: a)
                          (sc7 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
                          (sc8 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                          (sc9 :: Language.PureScript.Names.Qualified
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ClassName))
  Language.PureScript.Environment.$w$sgo1 @ a
                                          sc9
                                          sc8
                                          sc7
                                          sc6
                                          (Data.Map.Internal.Bin
                                             @ (Language.PureScript.Names.Qualified
                                                  (Language.PureScript.Names.ProperName
                                                     'Language.PureScript.Names.ClassName))
                                             @ a
                                             sc
                                             (Language.PureScript.Names.Qualified
                                                @ (Language.PureScript.Names.ProperName
                                                     'Language.PureScript.Names.ClassName)
                                                sc1
                                                sc2)
                                             sc3
                                             sc4
                                             sc5)
  = Language.PureScript.Environment.$sinsert_$s$w$sgo1
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo30" [0] forall (sc :: GHC.Prim.Int#)
                         (sc1 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                         (sc2 :: Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.KindName)
                         (sc3 :: Data.Set.Internal.Set
                                   (Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.KindName)))
                         (sc4 :: Data.Set.Internal.Set
                                   (Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.KindName)))
                         (sc5 :: Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.KindName)
                         (sc6 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                         (sc7 :: Language.PureScript.Names.Qualified
                                   (Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.KindName))
  Language.PureScript.Environment.$w$sgo3 sc7
                                          sc6
                                          sc5
                                          (Data.Set.Internal.Bin
                                             @ (Language.PureScript.Names.Qualified
                                                  (Language.PureScript.Names.ProperName
                                                     'Language.PureScript.Names.KindName))
                                             sc
                                             (Language.PureScript.Names.Qualified
                                                @ (Language.PureScript.Names.ProperName
                                                     'Language.PureScript.Names.KindName)
                                                sc1
                                                sc2)
                                             sc3
                                             sc4)
  = Language.PureScript.Environment.$sinsert_$s$w$sgo3
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
"SC:$wpoly_go130" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         Language.PureScript.Names.Ident)
                                      a)
                             (sc1 :: Language.PureScript.Names.Ident)
  Language.PureScript.Environment.$wpoly_go13 @ a
                                              (GHC.Base.Nothing
                                                 @ Language.PureScript.Names.ModuleName)
                                              sc1
                                              sc
  = Language.PureScript.Environment.$slookup_$s$wpoly_go1 @ a sc sc1
"SC:$wpoly_go130" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                      a)
                             (sc1 :: Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName)
  Language.PureScript.Environment.$wpoly_go1 @ a
                                             (GHC.Base.Nothing
                                                @ Language.PureScript.Names.ModuleName)
                                             sc1
                                             sc
  = Language.PureScript.Environment.$slookup_$s$wpoly_go3 @ a sc sc1
"SC:$wpoly_go131" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         Language.PureScript.Names.Ident)
                                      a)
                             (sc1 :: Language.PureScript.Names.Ident)
                             (sc2 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Environment.$wpoly_go13 @ a
                                              (GHC.Base.Just
                                                 @ Language.PureScript.Names.ModuleName
                                                 sc2)
                                              sc1
                                              sc
  = Language.PureScript.Environment.$slookup_$s$wpoly_go13
      @ a
      sc
      sc1
      sc2
"SC:$wpoly_go131" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                      a)
                             (sc1 :: Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName)
                             (sc2 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Environment.$wpoly_go1 @ a
                                             (GHC.Base.Just
                                                @ Language.PureScript.Names.ModuleName
                                                sc2)
                                             sc1
                                             sc
  = Language.PureScript.Environment.$slookup_$s$wpoly_go2
      @ a
      sc
      sc1
      sc2
"SC:$wpoly_go132" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                      a)
                             (sc1 :: GHC.Prim.ByteArray#)
                             (sc2 :: GHC.Prim.Int#)
                             (sc3 :: GHC.Prim.Int#)
                             (sg :: (Data.Text.Internal.Text :: *)
                                    ~R# (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ConstructorName :: *))
  Language.PureScript.Environment.$wpoly_go1 @ a
                                             (GHC.Base.Nothing
                                                @ Language.PureScript.Names.ModuleName)
                                             (Data.Text.Internal.Text sc1 sc2 sc3) `cast` sg
                                             sc
  = Language.PureScript.Environment.$slookup_$s$wpoly_go4
      @ a
      sc
      sc1
      sc2
      sc3
      @~ sg
"SPEC/Language.PureScript.Environment $fEq(,) @ (ProperName
                                                  'ConstructorName) @ [SourceType]" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                                                                                                         [Language.PureScript.Types.SourceType])
                                                                                                                                                                (v :: GHC.Classes.Eq
                                                                                                                                                                        (Language.PureScript.Names.ProperName
                                                                                                                                                                           'Language.PureScript.Names.ConstructorName))
  GHC.Classes.$fEq(,) @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ConstructorName)
                      @ [Language.PureScript.Types.SourceType]
                      v
                      v1
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)
"SPEC/Language.PureScript.Environment $fEq(,) @ Text @ (Maybe
                                                         SourceKind)" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                                                                                             (GHC.Base.Maybe
                                                                                                                                                                Language.PureScript.Kinds.SourceKind))
                                                                                                                                                    (v :: GHC.Classes.Eq
                                                                                                                                                            Data.Text.Internal.Text)
  GHC.Classes.$fEq(,) @ Data.Text.Internal.Text
                      @ (GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                      v
                      v1
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)1
"SPEC/Language.PureScript.Environment $fEq(,)_$c/= @ (ProperName
                                                       'ConstructorName) @ [SourceType]" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                                                                                      [Language.PureScript.Types.SourceType])
                                                                                                                                                                          ($dEq :: GHC.Classes.Eq
                                                                                                                                                                                     (Language.PureScript.Names.ProperName
                                                                                                                                                                                        'Language.PureScript.Names.ConstructorName))
  GHC.Classes.$fEq(,)_$c/= @ (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)
                           @ [Language.PureScript.Types.SourceType]
                           $dEq
                           $dEq1
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)_$c/=
"SPEC/Language.PureScript.Environment $fEq(,)_$c/= @ Text @ (Maybe
                                                              SourceKind)" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                                                                          (GHC.Base.Maybe
                                                                                                                                                                             Language.PureScript.Kinds.SourceKind))
                                                                                                                                                              ($dEq :: GHC.Classes.Eq
                                                                                                                                                                         Data.Text.Internal.Text)
  GHC.Classes.$fEq(,)_$c/= @ Data.Text.Internal.Text
                           @ (GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)
                           $dEq
                           $dEq1
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEq(,)_$c/=1
"SPEC/Language.PureScript.Environment $fEqMaybe @ (Kind SourceAnn)" [orphan] forall (v :: GHC.Classes.Eq
                                                                                            (Language.PureScript.Kinds.Kind
                                                                                               Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Base.$fEqMaybe @ (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     v
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEqMaybe
"SPEC/Language.PureScript.Environment $fEqMaybe_$c/= @ (Kind
                                                         SourceAnn)" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                                                                                             (Language.PureScript.Kinds.Kind
                                                                                                                                                                Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Base.$fEqMaybe_$c/= @ (Language.PureScript.Kinds.Kind
                               Language.PureScript.AST.SourcePos.SourceAnn)
                          $dEq
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEqMaybe_$c/=
"SPEC/Language.PureScript.Environment $fEq[] @ (Type SourceAnn)" [orphan] forall (v :: GHC.Classes.Eq
                                                                                         (Language.PureScript.Types.Type
                                                                                            Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Classes.$fEq[] @ (Language.PureScript.Types.Type
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     v
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEq[]
"SPEC/Language.PureScript.Environment $fEq[]_$c/= @ (Type SourceAnn)" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                                 (Language.PureScript.Types.Type
                                                                                                    Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Classes.$fEq[]_$c/= @ (Language.PureScript.Types.Type
                               Language.PureScript.AST.SourcePos.SourceAnn)
                          $dEq
  = Language.PureScript.Environment.$fEqTypeKind_$s$fEq[]_$c/=
"SPEC/Language.PureScript.Environment $fFromJSONMaybe @ (Kind
                                                          SourceAnn)" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                            (Language.PureScript.Kinds.Kind
                                                                                                                                                               Language.PureScript.AST.SourcePos.SourceAnn))
  Data.Aeson.Types.FromJSON.$fFromJSONMaybe @ (Language.PureScript.Kinds.Kind
                                                 Language.PureScript.AST.SourcePos.SourceAnn)
                                            v
  = Language.PureScript.Environment.$s$fFromJSONMaybe
"SPEC/Language.PureScript.Environment $fFromJSON[] @ (Type
                                                       SourceAnn)" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                      (Language.PureScript.Types.Type
                                                                                                                                                         Language.PureScript.AST.SourcePos.SourceAnn))
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ (Language.PureScript.Types.Type
                                              Language.PureScript.AST.SourcePos.SourceAnn)
                                         v
  = Language.PureScript.Environment.$s$fFromJSON[]
"SPEC/Language.PureScript.Environment $fShow(,) @ SourceSpan @ [Comment]" [orphan] forall (v1 :: GHC.Show.Show
                                                                                                   [Language.PureScript.Comments.Comment])
                                                                                          (v :: GHC.Show.Show
                                                                                                  Language.PureScript.AST.SourcePos.SourceSpan)
  GHC.Show.$fShow(,) @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     v
                     v1
  = Language.PureScript.Environment.$fShowTypeKind_$s$fShow(,)
"SPEC/Language.PureScript.Environment $fShow(,,) @ (Type
                                                     SourceAnn) @ NameKind @ NameVisibility" forall (v2 :: GHC.Show.Show
                                                                                                                                                                      Language.PureScript.Environment.NameVisibility)
                                                                                                                                                             (v1 :: GHC.Show.Show
                                                                                                                                                                      Language.PureScript.Environment.NameKind)
                                                                                                                                                             (v :: GHC.Show.Show
                                                                                                                                                                     (Language.PureScript.Types.Type
                                                                                                                                                                        Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Show.$fShow(,,) @ (Language.PureScript.Types.Type
                           Language.PureScript.AST.SourcePos.SourceAnn)
                      @ Language.PureScript.Environment.NameKind
                      @ Language.PureScript.Environment.NameVisibility
                      v
                      v1
                      v2
  = Language.PureScript.Environment.$s$fShow(,,)
"SPEC/Language.PureScript.Environment $fShow(,,,) @ DataDeclType @ (ProperName
                                                                     'TypeName) @ (Type
                                                                                     SourceAnn) @ [Ident]" forall (v3 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                  [Language.PureScript.Names.Ident])
                                                                                                                                                                                                                                                                                         (v2 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                  (Language.PureScript.Types.Type
                                                                                                                                                                                                                                                                                                     Language.PureScript.AST.SourcePos.SourceAnn))
                                                                                                                                                                                                                                                                                         (v1 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                                                     'Language.PureScript.Names.TypeName))
                                                                                                                                                                                                                                                                                         (v :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                 Language.PureScript.Environment.DataDeclType)
  GHC.Show.$fShow(,,,) @ Language.PureScript.Environment.DataDeclType
                       @ (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.TypeName)
                       @ (Language.PureScript.Types.Type
                            Language.PureScript.AST.SourcePos.SourceAnn)
                       @ [Language.PureScript.Names.Ident]
                       v
                       v1
                       v2
                       v3
  = Language.PureScript.Environment.$s$fShow(,,,)
"SPEC/Language.PureScript.Environment $fShowKind @ (SourceSpan,
                                                   [Comment])" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                       (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                        [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                          [Language.PureScript.Comments.Comment])
                                       v
  = Language.PureScript.Environment.$fShowTypeKind_$s$fShowKind
"SPEC/Language.PureScript.Environment $fShowKind_$cshow @ (SourceSpan,
                                                          [Comment])" [orphan] forall ($dShow :: GHC.Show.Show
                                                                                                                                                                          (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                           [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind_$cshow @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                 [Language.PureScript.Comments.Comment])
                                              $dShow
  = Language.PureScript.Environment.$s$fShowKind_$cshow
"SPEC/Language.PureScript.Environment $fShowKind_$cshowList @ (SourceSpan,
                                                              [Comment])" [orphan] forall ($dShow :: GHC.Show.Show
                                                                                                                                                                                  (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                                   [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind_$cshowList @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                     [Language.PureScript.Comments.Comment])
                                                  $dShow
  = Language.PureScript.Environment.$s$fShowKind_$cshowList
"SPEC/Language.PureScript.Environment $fShowKind_$cshowsPrec @ (SourceSpan,
                                                               [Comment])" [orphan] [0] forall (w :: GHC.Show.Show
                                                                                                                                                                                   (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                                    [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind_$cshowsPrec @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                      [Language.PureScript.Comments.Comment])
                                                   w
  = Language.PureScript.Environment.$s$fShowKind_$cshowsPrec
"SPEC/Language.PureScript.Environment $fShowMap @ (Qualified
                                                    Ident) @ (NonEmpty NamedDict)" [orphan] forall (v1 :: GHC.Show.Show
                                                                                                                                                                         (GHC.Base.NonEmpty
                                                                                                                                                                            Language.PureScript.TypeClassDictionaries.NamedDict))
                                                                                                                                                                (v :: GHC.Show.Show
                                                                                                                                                                        (Language.PureScript.Names.Qualified
                                                                                                                                                                           Language.PureScript.Names.Ident))
  Data.Map.Internal.$fShowMap @ (Language.PureScript.Names.Qualified
                                   Language.PureScript.Names.Ident)
                              @ (GHC.Base.NonEmpty
                                   Language.PureScript.TypeClassDictionaries.NamedDict)
                              v
                              v1
  = Language.PureScript.Environment.$s$fShowMap
"SPEC/Language.PureScript.Environment $fShowMap_$cshow @ (Qualified
                                                           Ident) @ (NonEmpty NamedDict)" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                            (GHC.Base.NonEmpty
                                                                                                                                                                                               Language.PureScript.TypeClassDictionaries.NamedDict))
                                                                                                                                                                              ($dShow :: GHC.Show.Show
                                                                                                                                                                                           (Language.PureScript.Names.Qualified
                                                                                                                                                                                              Language.PureScript.Names.Ident))
  Data.Map.Internal.$fShowMap_$cshow @ (Language.PureScript.Names.Qualified
                                          Language.PureScript.Names.Ident)
                                     @ (GHC.Base.NonEmpty
                                          Language.PureScript.TypeClassDictionaries.NamedDict)
                                     $dShow
                                     $dShow1
  = Language.PureScript.Environment.$s$fShowMap_$cshow
"SPEC/Language.PureScript.Environment $fShowMap_$cshowList @ (Qualified
                                                               Ident) @ (NonEmpty NamedDict)" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                    (GHC.Base.NonEmpty
                                                                                                                                                                                                       Language.PureScript.TypeClassDictionaries.NamedDict))
                                                                                                                                                                                      ($dShow :: GHC.Show.Show
                                                                                                                                                                                                   (Language.PureScript.Names.Qualified
                                                                                                                                                                                                      Language.PureScript.Names.Ident))
  Data.Map.Internal.$fShowMap_$cshowList @ (Language.PureScript.Names.Qualified
                                              Language.PureScript.Names.Ident)
                                         @ (GHC.Base.NonEmpty
                                              Language.PureScript.TypeClassDictionaries.NamedDict)
                                         $dShow
                                         $dShow1
  = Language.PureScript.Environment.$s$fShowMap_$cshowList
"SPEC/Language.PureScript.Environment $fShowMap_$cshowsPrec @ (Qualified
                                                                Ident) @ (NonEmpty NamedDict)" [orphan] [0] forall (w1 :: GHC.Show.Show
                                                                                                                                                                                                     (GHC.Base.NonEmpty
                                                                                                                                                                                                        Language.PureScript.TypeClassDictionaries.NamedDict))
                                                                                                                                                                                            (w :: GHC.Show.Show
                                                                                                                                                                                                    (Language.PureScript.Names.Qualified
                                                                                                                                                                                                       Language.PureScript.Names.Ident))
  Data.Map.Internal.$fShowMap_$cshowsPrec @ (Language.PureScript.Names.Qualified
                                               Language.PureScript.Names.Ident)
                                          @ (GHC.Base.NonEmpty
                                               Language.PureScript.TypeClassDictionaries.NamedDict)
                                          w
                                          w1
  = Language.PureScript.Environment.$s$fShowMap_$cshowsPrec
"SPEC/Language.PureScript.Environment $fShowMaybe @ (Kind SourceAnn)" [orphan] forall (v :: GHC.Show.Show
                                                                                              (Language.PureScript.Kinds.Kind
                                                                                                 Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Show.$fShowMaybe @ (Language.PureScript.Kinds.Kind
                            Language.PureScript.AST.SourcePos.SourceAnn)
                       v
  = Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowMaybe
"SPEC/Language.PureScript.Environment $fShowMaybe @ ModuleName" [orphan] forall (v :: GHC.Show.Show
                                                                                        Language.PureScript.Names.ModuleName)
  GHC.Show.$fShowMaybe @ Language.PureScript.Names.ModuleName v
  = Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowMaybe1
"SPEC/Language.PureScript.Environment $fShowMaybe_$cshowList @ (Kind
                                                                 SourceAnn)" [orphan] forall ($dShow :: GHC.Show.Show
                                                                                                                                                                               (Language.PureScript.Kinds.Kind
                                                                                                                                                                                  Language.PureScript.AST.SourcePos.SourceAnn))
  GHC.Show.$fShowMaybe_$cshowList @ (Language.PureScript.Kinds.Kind
                                       Language.PureScript.AST.SourcePos.SourceAnn)
                                  $dShow
  = Language.PureScript.Environment.$s$fShowMaybe_$cshowList
"SPEC/Language.PureScript.Environment $fShowNonEmpty @ (TypeClassDictionaryInScope
                                                         (Qualified Ident))" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                                                        (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                                                                                                                                                                           (Language.PureScript.Names.Qualified
                                                                                                                                                                                              Language.PureScript.Names.Ident)))
  GHC.Show.$fShowNonEmpty @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                               (Language.PureScript.Names.Qualified
                                  Language.PureScript.Names.Ident))
                          v
  = Language.PureScript.Environment.$s$fShowMap_$s$fShowNonEmpty
"SPEC/Language.PureScript.Environment $fShowNonEmpty_$cshowList @ (TypeClassDictionaryInScope
                                                                    (Qualified Ident))" [orphan] forall ($dShow :: GHC.Show.Show
                                                                                                                                                                                                                   (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                                                                                                                                                                                                      (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                         Language.PureScript.Names.Ident)))
  GHC.Show.$fShowNonEmpty_$cshowList @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                          (Language.PureScript.Names.Qualified
                                             Language.PureScript.Names.Ident))
                                     $dShow
  = Language.PureScript.Environment.$s$fShowNonEmpty_$cshowList
"SPEC/Language.PureScript.Environment $fShowNonEmpty_$cshowsPrec @ (TypeClassDictionaryInScope
                                                                     (Qualified Ident))" [orphan] [0] forall (w :: GHC.Show.Show
                                                                                                                                                                                                                    (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                                                                                                                                                                                                       (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                          Language.PureScript.Names.Ident)))
  GHC.Show.$fShowNonEmpty_$cshowsPrec @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                           (Language.PureScript.Names.Qualified
                                              Language.PureScript.Names.Ident))
                                      w
  = Language.PureScript.Environment.$s$fShowNonEmpty_$cshowsPrec
"SPEC/Language.PureScript.Environment $fShowQualified @ (ProperName
                                                          'ClassName)" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                                   (Language.PureScript.Names.ProperName
                                                                                                                                                                      'Language.PureScript.Names.ClassName))
  Language.PureScript.Names.$fShowQualified @ (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.ClassName)
                                            v
  = Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowQualified2
"SPEC/Language.PureScript.Environment $fShowQualified @ (ProperName
                                                          'ConstructorName)" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                                         (Language.PureScript.Names.ProperName
                                                                                                                                                                            'Language.PureScript.Names.ConstructorName))
  Language.PureScript.Names.$fShowQualified @ (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.ConstructorName)
                                            v
  = Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowQualified1
"SPEC/Language.PureScript.Environment $fShowQualified @ (ProperName
                                                          'KindName)" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                     'Language.PureScript.Names.KindName))
  Language.PureScript.Names.$fShowQualified @ (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.KindName)
                                            v
  = Language.PureScript.Environment.$s$fShowQualified
"SPEC/Language.PureScript.Environment $fShowQualified @ (ProperName
                                                          'TypeName)" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                     'Language.PureScript.Names.TypeName))
  Language.PureScript.Names.$fShowQualified @ (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.TypeName)
                                            v
  = Language.PureScript.Environment.$s$fShowMap_$cshowsPrec_$s$fShowQualified
"SPEC/Language.PureScript.Environment $fShowQualified @ Ident" [orphan] forall (v :: GHC.Show.Show
                                                                                       Language.PureScript.Names.Ident)
  Language.PureScript.Names.$fShowQualified @ Language.PureScript.Names.Ident
                                            v
  = Language.PureScript.Environment.$s$fShowMap_$s$fShowQualified
"SPEC/Language.PureScript.Environment $fShowSet @ Int" [orphan] forall (v :: GHC.Show.Show
                                                                               GHC.Types.Int)
  Data.Set.Internal.$fShowSet @ GHC.Types.Int v
  = Language.PureScript.Environment.$s$fShowSet
"SPEC/Language.PureScript.Environment $fShowType @ (SourceSpan,
                                                   [Comment])" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                       (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                        [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowType @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                          [Language.PureScript.Comments.Comment])
                                       v
  = Language.PureScript.Environment.$s$fShow(,,)_$s$fShowType
"SPEC/Language.PureScript.Environment $fShowTypeClassDictionaryInScope @ (Qualified
                                                                           Ident)" [orphan] forall (v1 :: GHC.Show.Show
                                                                                                                                                                                                (Language.PureScript.Names.Qualified
                                                                                                                                                                                                   Language.PureScript.Names.Ident))
  Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope @ (Language.PureScript.Names.Qualified
                                                                                  Language.PureScript.Names.Ident)
                                                                             v1
  = Language.PureScript.Environment.$s$fShowMap_$s$fShowTypeClassDictionaryInScope
"SPEC/Language.PureScript.Environment $fShowType_$cshow @ (SourceSpan,
                                                          [Comment])" [orphan] forall ($dShow :: GHC.Show.Show
                                                                                                                                                                          (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                           [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowType_$cshow @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                 [Language.PureScript.Comments.Comment])
                                              $dShow
  = Language.PureScript.Environment.$s$fShowType_$cshow
"SPEC/Language.PureScript.Environment $fShowType_$cshowList @ (SourceSpan,
                                                              [Comment])" [orphan] forall ($dShow :: GHC.Show.Show
                                                                                                                                                                                  (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                                   [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowType_$cshowList @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                     [Language.PureScript.Comments.Comment])
                                                  $dShow
  = Language.PureScript.Environment.$s$fShowType_$cshowList
"SPEC/Language.PureScript.Environment $fShowType_$cshowsPrec @ (SourceSpan,
                                                               [Comment])" [orphan] [0] forall (w :: GHC.Show.Show
                                                                                                                                                                                   (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                                    [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowType_$cshowsPrec @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                      [Language.PureScript.Comments.Comment])
                                                   w
  = Language.PureScript.Environment.$s$fShowType_$cshowsPrec
"SPEC/Language.PureScript.Environment $fShow[] @ Comment" [orphan] forall (v :: GHC.Show.Show
                                                                                  Language.PureScript.Comments.Comment)
  GHC.Show.$fShow[] @ Language.PureScript.Comments.Comment v
  = Language.PureScript.Environment.$fShowTypeKind_$s$fShow[]
"SPEC/Language.PureScript.Environment $fShow[] @ Ident" [orphan] forall (v :: GHC.Show.Show
                                                                                Language.PureScript.Names.Ident)
  GHC.Show.$fShow[] @ Language.PureScript.Names.Ident v
  = Language.PureScript.Environment.$s$fShow(,,,)_$s$fShow[]
"SPEC/Language.PureScript.Environment $wsplitS @ (Qualified
                                                   (ProperName 'KindName))" [orphan] [0] forall (w :: GHC.Classes.Ord
                                                                                                                                                                    (Language.PureScript.Names.Qualified
                                                                                                                                                                       (Language.PureScript.Names.ProperName
                                                                                                                                                                          'Language.PureScript.Names.KindName)))
  Data.Set.Internal.$wsplitS @ (Language.PureScript.Names.Qualified
                                  (Language.PureScript.Names.ProperName
                                     'Language.PureScript.Names.KindName))
                             w
  = Language.PureScript.Environment.$s$wsplitS
"SPEC/Language.PureScript.Environment fromList @ (Qualified
                                                   (ProperName 'ClassName)) _" [orphan] forall @ a
                                                                                                                                                           ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                       (Language.PureScript.Names.Qualified
                                                                                                                                                                          (Language.PureScript.Names.ProperName
                                                                                                                                                                             'Language.PureScript.Names.ClassName)))
  Data.Map.Internal.fromList @ (Language.PureScript.Names.Qualified
                                  (Language.PureScript.Names.ProperName
                                     'Language.PureScript.Names.ClassName))
                             @ a
                             $dOrd
  = Language.PureScript.Environment.$sfromList1 @ a
"SPEC/Language.PureScript.Environment fromList @ (Qualified
                                                   (ProperName 'KindName))" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                    (Language.PureScript.Names.Qualified
                                                                                                                                                                       (Language.PureScript.Names.ProperName
                                                                                                                                                                          'Language.PureScript.Names.KindName)))
  Data.Set.Internal.fromList @ (Language.PureScript.Names.Qualified
                                  (Language.PureScript.Names.ProperName
                                     'Language.PureScript.Names.KindName))
                             $dOrd
  = Language.PureScript.Environment.$sfromList4
"SPEC/Language.PureScript.Environment fromList @ (Qualified
                                                   (ProperName 'TypeName)) _" [orphan] forall @ a
                                                                                                                                                          ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                      (Language.PureScript.Names.Qualified
                                                                                                                                                                         (Language.PureScript.Names.ProperName
                                                                                                                                                                            'Language.PureScript.Names.TypeName)))
  Data.Map.Internal.fromList @ (Language.PureScript.Names.Qualified
                                  (Language.PureScript.Names.ProperName
                                     'Language.PureScript.Names.TypeName))
                             @ a
                             $dOrd
  = Language.PureScript.Environment.$sfromList @ a
"SPEC/Language.PureScript.Environment fromList @ (Set Int)" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                        (Data.Set.Internal.Set
                                                                                           GHC.Types.Int))
  Data.Set.Internal.fromList @ (Data.Set.Internal.Set GHC.Types.Int)
                             $dOrd
  = Language.PureScript.Environment.$sfromList3
"SPEC/Language.PureScript.Environment fromList @ Int" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                  GHC.Types.Int)
  Data.Set.Internal.fromList @ GHC.Types.Int $dOrd
  = Language.PureScript.Environment.$sfromList2
"SPEC/Language.PureScript.Environment union @ (Qualified
                                                (ProperName 'ClassName)) _" [orphan] forall @ a
                                                                                                                                                     ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                 (Language.PureScript.Names.Qualified
                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                       'Language.PureScript.Names.ClassName)))
  Data.Map.Internal.union @ (Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ClassName))
                          @ a
                          $dOrd
  = Language.PureScript.Environment.$sunion2 @ a
"SPEC/Language.PureScript.Environment union @ (Qualified
                                                (ProperName 'KindName))" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                                                                                              (Language.PureScript.Names.Qualified
                                                                                                                                                                 (Language.PureScript.Names.ProperName
                                                                                                                                                                    'Language.PureScript.Names.KindName)))
  Data.Set.Internal.union @ (Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.KindName))
                          $dOrd
  = Language.PureScript.Environment.$sunion
"SPEC/Language.PureScript.Environment union @ (Qualified
                                                (ProperName 'TypeName)) _" [orphan] forall @ a
                                                                                                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                (Language.PureScript.Names.Qualified
                                                                                                                                                                   (Language.PureScript.Names.ProperName
                                                                                                                                                                      'Language.PureScript.Names.TypeName)))
  Data.Map.Internal.union @ (Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.TypeName))
                          @ a
                          $dOrd
  = Language.PureScript.Environment.$sunion1 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

