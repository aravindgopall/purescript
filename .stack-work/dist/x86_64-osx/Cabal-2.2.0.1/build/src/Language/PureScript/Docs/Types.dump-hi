
==================== FINAL INTERFACE ====================
2019-01-24 14:17:09.281561 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.Types [family instance module] 8043
  interface hash: d8ef82b2e65da8f839f854ed5902d859
  ABI hash: 8ff7c3b28d1548ecbdf2d5a573cc163d
  export-list hash: b81c2b0b69c0f139e99069fb9794db69
  orphan hash: 65eb4cc496f651a47da2a931234703ba
  flag hash: 2260e9c32f6d58ebcb08ffa663943851
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Docs.RenderedCode.Types.asContainingModule
  Language.PureScript.Docs.RenderedCode.Types.asRenderedCode
  Language.PureScript.Docs.RenderedCode.Types.asRenderedCodeElement
  Language.PureScript.Docs.Types.asAssociativity
  Language.PureScript.Docs.Types.asChildDeclaration
  Language.PureScript.Docs.Types.asChildDeclarationInfo
  Language.PureScript.Docs.Types.asConstraint
  Language.PureScript.Docs.Types.asDataDeclType
  Language.PureScript.Docs.Types.asDeclaration
  Language.PureScript.Docs.Types.asDeclarationInfo
  Language.PureScript.Docs.Types.asFixity
  Language.PureScript.Docs.Types.asFixityAlias
  Language.PureScript.Docs.Types.asFunDeps
  Language.PureScript.Docs.Types.asGithub
  Language.PureScript.Docs.Types.asGithubUser
  Language.PureScript.Docs.Types.asInPackage
  Language.PureScript.Docs.Types.asKind
  Language.PureScript.Docs.Types.asModule
  Language.PureScript.Docs.Types.asModuleMap
  Language.PureScript.Docs.Types.asNotYetKnown
  Language.PureScript.Docs.Types.asPackage
  Language.PureScript.Docs.Types.asQualifiedIdent
  Language.PureScript.Docs.Types.asQualifiedProperName
  Language.PureScript.Docs.Types.asReExport
  Language.PureScript.Docs.Types.asResolvedDependencies
  Language.PureScript.Docs.Types.asSourceAnn
  Language.PureScript.Docs.Types.asSourcePos
  Language.PureScript.Docs.Types.asSourceSpan
  Language.PureScript.Docs.Types.asType
  Language.PureScript.Docs.Types.asTypeArguments
  Language.PureScript.Docs.Types.asUploadedPackage
  Language.PureScript.Docs.Types.asVerifiedPackage
  Language.PureScript.Docs.Types.asVersion
  Language.PureScript.Docs.Types.assocListToJSON
  Language.PureScript.Docs.Types.bookmarksAsModuleMap
  Language.PureScript.Docs.Types.childDeclInfoNamespace
  Language.PureScript.Docs.Types.childDeclInfoToString
  Language.PureScript.Docs.Types.convertFundepsToStrings
  Language.PureScript.Docs.Types.declInfoNamespace
  Language.PureScript.Docs.Types.declInfoToString
  Language.PureScript.Docs.Types.displayPackageError
  Language.PureScript.Docs.Types.filterChildren
  Language.PureScript.Docs.Types.formatTime
  Language.PureScript.Docs.Types.getLink
  Language.PureScript.Docs.Types.getLinksContext
  Language.PureScript.Docs.Types.ignorePackage
  Language.PureScript.Docs.Types.isDataConstructor
  Language.PureScript.Docs.Types.isKind
  Language.PureScript.Docs.Types.isType
  Language.PureScript.Docs.Types.isTypeAlias
  Language.PureScript.Docs.Types.isTypeClass
  Language.PureScript.Docs.Types.isTypeClassMember
  Language.PureScript.Docs.Types.isValue
  Language.PureScript.Docs.Types.isValueAlias
  Language.PureScript.Docs.Types.jsonTimeFormat
  Language.PureScript.Docs.Types.mapLeft
  Language.PureScript.Docs.Types.pOr
  Language.PureScript.Docs.Types.packageName
  Language.PureScript.Docs.Types.parseAssociativity
  Language.PureScript.Docs.Types.parsePackageName'
  Language.PureScript.Docs.Types.parseTime
  Language.PureScript.Docs.Types.parseTimeEither
  Language.PureScript.Docs.Types.parseUploadedPackage
  Language.PureScript.Docs.Types.parseVerifiedPackage
  Language.PureScript.Docs.Types.parseVersion'
  Language.PureScript.Docs.Types.takeLocal
  Language.PureScript.Docs.Types.takeLocals
  Language.PureScript.Docs.Types.verifyPackage
  Language.PureScript.Docs.RenderedCode.Types.ContainingModule{Language.PureScript.Docs.RenderedCode.Types.OtherModule Language.PureScript.Docs.RenderedCode.Types.ThisModule}
  Language.PureScript.Docs.RenderedCode.Types.FixityAlias
  Language.PureScript.Docs.RenderedCode.Types.Namespace{Language.PureScript.Docs.RenderedCode.Types.KindLevel Language.PureScript.Docs.RenderedCode.Types.TypeLevel Language.PureScript.Docs.RenderedCode.Types.ValueLevel}
  Language.PureScript.Docs.RenderedCode.Types.RenderedCode
  Language.PureScript.Docs.RenderedCode.Types.RenderedCodeElement{Language.PureScript.Docs.RenderedCode.Types.Keyword Language.PureScript.Docs.RenderedCode.Types.Space Language.PureScript.Docs.RenderedCode.Types.Symbol Language.PureScript.Docs.RenderedCode.Types.Syntax}
  Language.PureScript.Docs.Types.ChildDeclaration{Language.PureScript.Docs.Types.ChildDeclaration cdeclComments cdeclInfo cdeclSourceSpan cdeclTitle}
  Language.PureScript.Docs.Types.ChildDeclarationInfo{Language.PureScript.Docs.Types.ChildDataConstructor Language.PureScript.Docs.Types.ChildInstance Language.PureScript.Docs.Types.ChildTypeClassMember}
  Language.PureScript.Docs.Types.Constraint'
  Language.PureScript.Docs.Types.Declaration{Language.PureScript.Docs.Types.Declaration declChildren declComments declInfo declSourceSpan declTitle}
  Language.PureScript.Docs.Types.DeclarationInfo{Language.PureScript.Docs.Types.AliasDeclaration Language.PureScript.Docs.Types.DataDeclaration Language.PureScript.Docs.Types.ExternDataDeclaration Language.PureScript.Docs.Types.ExternKindDeclaration Language.PureScript.Docs.Types.TypeClassDeclaration Language.PureScript.Docs.Types.TypeSynonymDeclaration Language.PureScript.Docs.Types.ValueDeclaration}
  Language.PureScript.Docs.Types.DocLink{Language.PureScript.Docs.Types.DocLink linkLocation linkNamespace linkTitle}
  Language.PureScript.Docs.Types.GithubRepo{Language.PureScript.Docs.Types.GithubRepo runGithubRepo}
  Language.PureScript.Docs.Types.GithubUser{Language.PureScript.Docs.Types.GithubUser runGithubUser}
  Language.PureScript.Docs.Types.InPackage{Language.PureScript.Docs.Types.FromDep Language.PureScript.Docs.Types.Local}
  Language.PureScript.Docs.Types.Kind'
  Language.PureScript.Docs.Types.LinkLocation{Language.PureScript.Docs.Types.BuiltinModule Language.PureScript.Docs.Types.DepsModule Language.PureScript.Docs.Types.LocalModule}
  Language.PureScript.Docs.Types.LinksContext{Language.PureScript.Docs.Types.LinksContext ctxGithub ctxModuleMap ctxPackageName ctxResolvedDependencies ctxVersion ctxVersionTag}
  Language.PureScript.Docs.Types.ManifestError
  Language.PureScript.Docs.Types.Module{Language.PureScript.Docs.Types.Module modComments modDeclarations modName modReExports}
  Language.PureScript.Docs.Types.NotYetKnown{Language.PureScript.Docs.Types.NotYetKnown}
  Language.PureScript.Docs.Types.Package{Language.PureScript.Docs.Types.Package pkgCompilerVersion pkgGithub pkgMeta pkgModuleMap pkgModules pkgResolvedDependencies pkgTagTime pkgUploader pkgVersion pkgVersionTag}
  Language.PureScript.Docs.Types.PackageError{Language.PureScript.Docs.Types.CompilerTooOld Language.PureScript.Docs.Types.ErrorInPackageMeta Language.PureScript.Docs.Types.InvalidChildDeclarationType Language.PureScript.Docs.Types.InvalidDataDeclType Language.PureScript.Docs.Types.InvalidDeclarationType Language.PureScript.Docs.Types.InvalidFixity Language.PureScript.Docs.Types.InvalidKind Language.PureScript.Docs.Types.InvalidTime Language.PureScript.Docs.Types.InvalidVersion}
  Language.PureScript.Docs.Types.Type'
  Language.PureScript.Docs.Types.UploadedPackage
  Language.PureScript.Docs.Types.VerifiedPackage
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Docs.RenderedCode
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.RenderType
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Errors
                     Language.PureScript.Externs Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: colour-2.3.4:Data.Colour syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors ff0e80615ece0f0dd064c946f929132c
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors.Internal 066898b2dd92d5d1cfd1d0f21692c75d
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:Text.ParserCombinators.ReadP 6ba7b82665924b40554b8e8a5beab3ed
import  -/  bower-json-1.0.0.1:Web.Bower.PackageMeta 762fc9d54b3452d3ab89a9561af46cd3
import  -/  bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal 2e82adc50425e6a0d9ef6a12e29999f7
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
  version 340cbf275db4649c75aa4914e549ba5b
import  -/  Language.PureScript.AST.Operators 615a873c5f62908f354b9d4840cbeb63
  Associativity 228a0ef1b3774b11d1a92fae92fb43a0
  Fixity 141f87a59136c90c1be577c19942dfd4
  Fixity 228a0ef1b3774b11d1a92fae92fb43a0
  Infix acee26fe4e59790dddcfdcb22d39c630
  Infixl 7a053ccfe48a809d0f2fd5ed84616765
  Infixr bbdac94db5d55a0387eb84cc7a57bedf
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceAnn f5708ed135df009dfa0254486771ef74
  SourcePos 1f89874c7dcd77e53f0f74e4d28f0a8c
  SourcePos 1e0cf2bd3ea18f97a2ff152297f09219
  SourceSpan 153dcf157f0acf76a2cdcf153aac30d3
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Docs.RenderedCode be3d746558a5dc6cd329381776634da0
  exports: a74931cbe482565a8bfb82d89c3dabe0
import  -/  Language.PureScript.Docs.RenderedCode.Types a63cc6a5cb22a8a549b2d76ebcbc879a
  ContainingModule 5e9b2b25a94f6bc04ac9258fb2be1c52
  FixityAlias 122fdd14b482e92974e48cc6ae5de54a
  Keyword 886ce9d6a4cb292f8115c4f0728e6fed
  KindLevel 31a31a3b9a456afb02c23d41dc52ac02
  Namespace e686c6add7c243d229f3b74d733eb7d2
  OtherModule d35932100c4ff30acdc43de25f71d3b8
  RenderedCode b76660a0424da31964a78f3df8712e5d
  RenderedCodeElement 8d7e5831b8ea3cae37734f270bdcdcc0
  Space efd4240233d77313df55a85cd409d255
  Symbol b116f0430e01419d4078175962e452f1
  Syntax fae5a4f045388851de0eb7fd7a6cd279
  ThisModule 60ba7352a44aae9cd4002b742d4788f1
  TypeLevel b1e0b4527b5ecfc5cddf2c95ff747772
  ValueLevel 574088894488a955ab2db1b5af4f2159
  asContainingModule 5e9b2b25a94f6bc04ac9258fb2be1c52
  asRenderedCode 90a261fbc98a867b411e086f7dba08c7
  asRenderedCodeElement cef3b418ac32aa002eda0badfbb2ffdd
import  -/  Language.PureScript.Environment 467b25d81b890e1aaabe28d0f09d192d
  Data 91308ce2b2a3063225e4488a3df159f8
  DataDeclType 7eb61fe78108d98d82e39145869b2402
  FunctionalDependency fdda36e4e3ca0bf8ea7e193459ee342a
  FunctionalDependency 181e7295489b314c6c042d61e80bb6b9
  Newtype 429106735f422306de0d5ec4acbf7fb1
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  Kind 5e0361ee324aa435f4976ea2eac1777d
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  Ident bad3562aa6138b6192713ac281080869
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  disqualify bf1cc3b0e6c1ffc0008a6113bf8116c0
  isBuiltinModuleName eaf9d299339def0b7cc5606f802f45a1
  moduleNameFromString 58dbc4d6b97c8eb6012ccda72d203acf
  runModuleName 58b788b37f600c0f34fa85241d7748ad
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  Constraint a0b1e737f9fdb5b2f711c97dd5895f69
  Constraint d5fc19231e8a71936895da17eade4f5b
  Type d5fc19231e8a71936895da17eade4f5b
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  time-1.8.0.2:Data.Time.Clock 38823c785626821df1f9ec84dba1c4d7
import  -/  time-1.8.0.2:Data.Time.Clock.Internal.UTCTime 509e80f9ead2e875ca9536acb5e422cc
import  -/  time-1.8.0.2:Data.Time.Format 0be9af11a87aabf6a7db1574da39eaef
import  -/  time-1.8.0.2:Data.Time.Format.Locale cfefcb6e99dfada030bc5635d650a0a5
import  -/  time-1.8.0.2:Data.Time.Format.Parse de18b2399d849a545aee6cdfd0dbc5a1
import  -/  vector-0.12.0.1:Data.Vector f729e70597cc595442dc4fc6c91177bf
cce819b6566f028d040fc57bb265fd8d
  $fEqChildDeclaration ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.ChildDeclaration
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclaration
                  Language.PureScript.Docs.Types.$fEqChildDeclaration_$c==
                  Language.PureScript.Docs.Types.$fEqChildDeclaration_$c/= -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fEqChildDeclarationInfo ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.ChildDeclarationInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                  Language.PureScript.Docs.Types.$fEqChildDeclaration_$c==1
                  Language.PureScript.Docs.Types.$fEqChildDeclarationInfo_$c/= -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fEqChildDeclarationInfo_$c/= ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fEqChildDeclaration_$c==1
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqChildDeclaration_$c/= ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(LLS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (y :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case Language.PureScript.Docs.Types.$fEqChildDeclaration_$c==
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqChildDeclaration_$c== ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(LLS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (ds1 :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration a1 a2 a3 a4 ->
                 case ds1 of wild1 { Language.PureScript.Docs.Types.ChildDeclaration b1 b2 b3 b4 ->
                 case a1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Prim.==# dt2 dt5 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Prim.narrow32Int# ds3 of wild4 {
                        DEFAULT -> GHC.Types.False
                        0#
                        -> let {
                             $j :: GHC.Types.Bool <join 0>
                             = case a3 of wild6 {
                                 GHC.Base.Nothing
                                 -> case b3 of wild7 {
                                      GHC.Base.Nothing
                                      -> Language.PureScript.Docs.Types.$fEqChildDeclaration_$c==1
                                           a4
                                           b4
                                      GHC.Base.Just ipv -> GHC.Types.False }
                                 GHC.Base.Just a7
                                 -> case b3 of wild7 {
                                      GHC.Base.Nothing -> GHC.Types.False
                                      GHC.Base.Just b7
                                      -> case a7 of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                                         case b7 of ww4 { Language.PureScript.AST.SourcePos.SourceSpan ww5 ww6 ww7 ->
                                         case Language.PureScript.AST.SourcePos.$w$c==1
                                                ww1
                                                ww2
                                                ww3
                                                ww5
                                                ww6
                                                ww7 of wild8 {
                                           GHC.Types.False -> GHC.Types.False
                                           GHC.Types.True
                                           -> Language.PureScript.Docs.Types.$fEqChildDeclaration_$c==1
                                                a4
                                                b4 } } } } }
                           } in
                           case a2 of wild6 {
                             GHC.Base.Nothing
                             -> case b2 of wild7 {
                                  GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a7
                             -> case b2 of wild7 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b7
                                  -> case a7 of wild8 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                                     case b7 of wild9 { Data.Text.Internal.Text dt10 dt11 dt12 ->
                                     case GHC.Prim.==# dt9 dt12 of lwild1 {
                                       DEFAULT -> GHC.Types.False
                                       1#
                                       -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.ByteArray#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Int# #)}
                                                 dt7
                                                 (GHC.Prim.int2Word# dt8)
                                                 dt10
                                                 (GHC.Prim.int2Word# dt11)
                                                 (GHC.Prim.int2Word# dt9)
                                                 GHC.Prim.realWorld# of wild10 { (#,#) ds5 ds6 ->
                                          case GHC.Prim.narrow32Int# ds6 of wild11 {
                                            DEFAULT -> GHC.Types.False
                                            0# -> $j } } } } } } } } } } } } } }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fEqChildDeclaration_$c==1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (ds1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.ChildInstance a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.ChildInstance b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (Language.PureScript.Types.Constraint ())
                                  (Language.PureScript.Types.$fEqConstraint @ ())
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> Language.PureScript.Types.eqType @ () @ () a2 b2 } }
                   Language.PureScript.Docs.Types.ChildDataConstructor a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.ChildDataConstructor b1
                        -> GHC.Classes.$fEq[]_$c==
                             @ (Language.PureScript.Types.Type ())
                             (Language.PureScript.Types.$fEqType @ ())
                             a1
                             b1 }
                   Language.PureScript.Docs.Types.ChildTypeClassMember a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.ChildTypeClassMember b1
                        -> Language.PureScript.Types.eqType @ () @ () a1 b1 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqDeclaration ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.Declaration
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Declaration
                  Language.PureScript.Docs.Types.$fEqDeclaration_$c==
                  Language.PureScript.Docs.Types.$fEqDeclaration_$c/= -}
c62d7485313366a589e4ef3d4cdd5b98
  $fEqDeclarationInfo ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.DeclarationInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DeclarationInfo
                  Language.PureScript.Docs.Types.$fEqDeclaration_$c==1
                  Language.PureScript.Docs.Types.$fEqDeclarationInfo_$c/= -}
c62d7485313366a589e4ef3d4cdd5b98
  $fEqDeclarationInfo_$c/= ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fEqDeclaration_$c==1
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqDeclaration_$c/= ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)><S(S(LLS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Declaration)
                   (y :: Language.PureScript.Docs.Types.Declaration) ->
                 case Language.PureScript.Docs.Types.$fEqDeclaration_$c==
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqDeclaration_$c== ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)><S(S(LLS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.Declaration)
                   (ds1 :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration a1 a2 a3 a4 a5 ->
                 case ds1 of wild1 { Language.PureScript.Docs.Types.Declaration b1 b2 b3 b4 b5 ->
                 case a1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Prim.==# dt2 dt5 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Prim.narrow32Int# ds3 of wild4 {
                        DEFAULT -> GHC.Types.False
                        0#
                        -> let {
                             $j :: GHC.Types.Bool <join 0>
                             = let {
                                 $j1 :: GHC.Types.Bool <join 0>
                                 = case GHC.Classes.$fEq[]_$c==
                                          @ Language.PureScript.Docs.Types.ChildDeclaration
                                          Language.PureScript.Docs.Types.$fEqChildDeclaration
                                          a4
                                          b4 of wild6 {
                                     GHC.Types.False -> GHC.Types.False
                                     GHC.Types.True
                                     -> Language.PureScript.Docs.Types.$fEqDeclaration_$c==1 a5 b5 }
                               } in
                               case a3 of wild6 {
                                 GHC.Base.Nothing
                                 -> case b3 of wild7 {
                                      GHC.Base.Nothing -> $j1 GHC.Base.Just ipv -> GHC.Types.False }
                                 GHC.Base.Just a7
                                 -> case b3 of wild7 {
                                      GHC.Base.Nothing -> GHC.Types.False
                                      GHC.Base.Just b7
                                      -> case a7 of ww { Language.PureScript.AST.SourcePos.SourceSpan ww1 ww2 ww3 ->
                                         case b7 of ww4 { Language.PureScript.AST.SourcePos.SourceSpan ww5 ww6 ww7 ->
                                         case Language.PureScript.AST.SourcePos.$w$c==1
                                                ww1
                                                ww2
                                                ww3
                                                ww5
                                                ww6
                                                ww7 of wild8 {
                                           GHC.Types.False -> GHC.Types.False
                                           GHC.Types.True -> $j1 } } } } }
                           } in
                           case a2 of wild6 {
                             GHC.Base.Nothing
                             -> case b2 of wild7 {
                                  GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a7
                             -> case b2 of wild7 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b7
                                  -> case a7 of wild8 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                                     case b7 of wild9 { Data.Text.Internal.Text dt10 dt11 dt12 ->
                                     case GHC.Prim.==# dt9 dt12 of lwild1 {
                                       DEFAULT -> GHC.Types.False
                                       1#
                                       -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.ByteArray#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Int# #)}
                                                 dt7
                                                 (GHC.Prim.int2Word# dt8)
                                                 dt10
                                                 (GHC.Prim.int2Word# dt11)
                                                 (GHC.Prim.int2Word# dt9)
                                                 GHC.Prim.realWorld# of wild10 { (#,#) ds5 ds6 ->
                                          case GHC.Prim.narrow32Int# ds6 of wild11 {
                                            DEFAULT -> GHC.Types.False
                                            0# -> $j } } } } } } } } } } } } } }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fEqDeclaration_$c==1 ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
8b305838d47692238020364c584ab76f
  $fEqDocLink ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.DocLink
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DocLink
                  Language.PureScript.Docs.Types.$fEqDocLink_$c==
                  Language.PureScript.Docs.Types.$fEqDocLink_$c/= -}
8b305838d47692238020364c584ab76f
  $fEqDocLink_$c/= ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DocLink)
                   (y :: Language.PureScript.Docs.Types.DocLink) ->
                 case Language.PureScript.Docs.Types.$fEqDocLink_$c== x1 y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8b305838d47692238020364c584ab76f
  $fEqDocLink_$c== ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Types.DocLink)
                   (w2 :: Language.PureScript.Docs.Types.DocLink) ->
                 case w of ww { Language.PureScript.Docs.Types.DocLink ww1 ww2 ww3 ->
                 case w2 of ww4 { Language.PureScript.Docs.Types.DocLink ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Types.$w$c==
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
465f85673aa60d600eec7529c7b12dab
  $fEqDocLink_$c==1 ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.LinkLocation)
                   (ds1 :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.LocalModule a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.LocalModule b1
                        -> GHC.Classes.$fEq[]_$c==
                             @ (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.Namespace)
                             (Language.PureScript.Names.$fEqProperName
                                @ 'Language.PureScript.Names.Namespace)
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) }
                   Language.PureScript.Docs.Types.DepsModule a1 a2 a3
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.DepsModule b1 b2 b3
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.==# dt2 dt5 of lwild {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                                case GHC.Prim.narrow32Int# ds3 of wild4 {
                                  DEFAULT -> GHC.Types.False
                                  0#
                                  -> case a2 of ww { Data.Version.Version ww1 ww2 ->
                                     case b2 of ww3 { Data.Version.Version ww4 ww5 ->
                                     case Data.Version.$w$c== ww1 ww2 ww4 ww5 of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.$fEq[]_$c==
                                            @ (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.Namespace)
                                            (Language.PureScript.Names.$fEqProperName
                                               @ 'Language.PureScript.Names.Namespace)
                                            a3 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                            b3
                                              `cast`
                                            (Language.PureScript.Names.N:ModuleName[0]) } } } } } } } } }
                   Language.PureScript.Docs.Types.BuiltinModule a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.BuiltinModule b1
                        -> GHC.Classes.$fEq[]_$c==
                             @ (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.Namespace)
                             (Language.PureScript.Names.$fEqProperName
                                @ 'Language.PureScript.Names.Namespace)
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqGithubRepo ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.GithubRepo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubRepo
                  Data.Text.$fEqText_$c==
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fEqText_$c/=
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Bool>_R) -}
614d849a4354c290b33f6ef62142889d
  $fEqGithubUser ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubUser
                  Data.Text.$fEqText_$c==
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fEqText_$c/=
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Bool>_R) -}
14acea96459ae0ba0727319f74cb7f69
  $fEqInPackage ::
    GHC.Classes.Eq a =>
    GHC.Classes.Eq (Language.PureScript.Docs.Types.InPackage a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a).
                  @ (Language.PureScript.Docs.Types.InPackage a)
                  (Language.PureScript.Docs.Types.$fEqInPackage_$c== @ a v)
                  (Language.PureScript.Docs.Types.$fEqInPackage_$c/= @ a v) -}
14acea96459ae0ba0727319f74cb7f69
  $fEqInPackage_$c/= ::
    GHC.Classes.Eq a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*C1(C1(U)),A)><S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x1 :: Language.PureScript.Docs.Types.InPackage a)
                   (y :: Language.PureScript.Docs.Types.InPackage a) ->
                 case Language.PureScript.Docs.Types.$fEqInPackage_$c==
                        @ a
                        $dEq
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
14acea96459ae0ba0727319f74cb7f69
  $fEqInPackage_$c== ::
    GHC.Classes.Eq a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*C1(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (ds :: Language.PureScript.Docs.Types.InPackage a)
                   (ds1 :: Language.PureScript.Docs.Types.InPackage a) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case ds1 of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> GHC.Classes.== @ a $dEq a1 b1
                        Language.PureScript.Docs.Types.FromDep ipv ipv1
                        -> GHC.Types.False }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case ds1 of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.False
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.==# dt2 dt5 of lwild {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                                case GHC.Prim.narrow32Int# ds3 of wild4 {
                                  DEFAULT -> GHC.Types.False
                                  0# -> GHC.Classes.== @ a $dEq a2 b2 } } } } } } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fEqInPackage_$s$c/= ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.InPackage
                            Language.PureScript.Names.ModuleName)
                   (y :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case Language.PureScript.Docs.Types.$fEqInPackage_$s$c==
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
14acea96459ae0ba0727319f74cb7f69
  $fEqInPackage_$s$c== ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.InPackage
                            Language.PureScript.Names.ModuleName)
                   (ds1 :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case ds1 of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> GHC.Classes.$fEq[]_$c==
                             @ (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.Namespace)
                             (Language.PureScript.Names.$fEqProperName
                                @ 'Language.PureScript.Names.Namespace)
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                        Language.PureScript.Docs.Types.FromDep ipv ipv1
                        -> GHC.Types.False }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case ds1 of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.False
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.==# dt2 dt5 of lwild {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                                case GHC.Prim.narrow32Int# ds3 of wild4 {
                                  DEFAULT -> GHC.Types.False
                                  0#
                                  -> GHC.Classes.$fEq[]_$c==
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fEqProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b2
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) } } } } } } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fEqInPackage_$s$fEqInPackage ::
    GHC.Classes.Eq
      (Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Docs.Types.InPackage
                       Language.PureScript.Names.ModuleName)
                  Language.PureScript.Docs.Types.$fEqInPackage_$s$c==
                  Language.PureScript.Docs.Types.$fEqInPackage_$s$c/= -}
465f85673aa60d600eec7529c7b12dab
  $fEqLinkLocation ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.LinkLocation
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinkLocation
                  Language.PureScript.Docs.Types.$fEqDocLink_$c==1
                  Language.PureScript.Docs.Types.$fEqLinkLocation_$c/= -}
465f85673aa60d600eec7529c7b12dab
  $fEqLinkLocation_$c/= ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinkLocation)
                   (y :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case Language.PureScript.Docs.Types.$fEqDocLink_$c==1
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqLinksContext ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.LinksContext
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinksContext
                  Language.PureScript.Docs.Types.$fEqLinksContext_$c==
                  Language.PureScript.Docs.Types.$fEqLinksContext_$c/= -}
94bdf7f5d586b08317986e73d7cd4b42
  $fEqLinksContext1 ::
    Data.Map.Internal.Map
      Language.PureScript.Names.ModuleName
      Web.Bower.PackageMeta.Internal.PackageName
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Web.Bower.PackageMeta.Internal.PackageName
    -> GHC.Types.Bool
  {- Unfolding: (Data.Map.Internal.$fEqMap_$c==
                   @ Language.PureScript.Names.ModuleName
                   @ Web.Bower.PackageMeta.Internal.PackageName
                   Language.PureScript.Names.$fEqModuleName
                   Web.Bower.PackageMeta.Internal.$fEqPackageName) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqLinksContext_$c/= ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(S(S(LLS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U,1*U(U,U,U),1*U(1*U,1*U),1*U(U,U,U))><S(S(S(LLS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U,1*U(U,U,U),1*U(1*U,1*U),1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinksContext)
                   (y :: Language.PureScript.Docs.Types.LinksContext) ->
                 case Language.PureScript.Docs.Types.$fEqLinksContext_$c==
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqLinksContext_$c== ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(S(S(LLS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U,1*U(U,U,U),1*U(1*U,1*U),1*U(U,U,U))><S(S(S(LLS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U,1*U(U,U,U),1*U(1*U,1*U),1*U(U,U,U))>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.LinksContext)
                   (ds1 :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext a1 a2 a3 a4 a5 a6 ->
                 case ds1 of wild1 { Language.PureScript.Docs.Types.LinksContext b1 b2 b3 b4 b5 b6 ->
                 case a1 of ww { (,) ww1 ww2 ->
                 case b1 of ww3 { (,) ww4 ww5 ->
                 case ww1
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case ww4
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Prim.==# dt2 dt5 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Prim.narrow32Int# ds3 of wild4 {
                        DEFAULT -> GHC.Types.False
                        0#
                        -> case ww2
                                  `cast`
                                (Language.PureScript.Docs.Types.N:GithubRepo[0]) of wild6 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                           case ww5
                                  `cast`
                                (Language.PureScript.Docs.Types.N:GithubRepo[0]) of wild7 { Data.Text.Internal.Text dt10 dt11 dt12 ->
                           case GHC.Prim.==# dt9 dt12 of lwild1 {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.ByteArray#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Int# #)}
                                       dt7
                                       (GHC.Prim.int2Word# dt8)
                                       dt10
                                       (GHC.Prim.int2Word# dt11)
                                       (GHC.Prim.int2Word# dt9)
                                       GHC.Prim.realWorld# of wild8 { (#,#) ds5 ds6 ->
                                case GHC.Prim.narrow32Int# ds6 of wild9 {
                                  DEFAULT -> GHC.Types.False
                                  0#
                                  -> case Language.PureScript.Docs.Types.$fEqLinksContext1
                                            a2
                                            b2 of wild10 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Classes.$fEq[]_$c==
                                                 @ (Web.Bower.PackageMeta.Internal.PackageName,
                                                    Data.Version.Version)
                                                 Language.PureScript.Docs.Types.$fEqLinksContext_$s$fEq(,)
                                                 a3
                                                 b3 of wild11 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case a4
                                                      `cast`
                                                    (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild12 { Data.Text.Internal.Text dt13 dt14 dt15 ->
                                               case b4
                                                      `cast`
                                                    (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild13 { Data.Text.Internal.Text dt16 dt17 dt18 ->
                                               case GHC.Prim.==# dt15 dt18 of lwild2 {
                                                 DEFAULT -> GHC.Types.False
                                                 1#
                                                 -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                                                   -> GHC.Prim.Word#
                                                                                   -> GHC.Prim.ByteArray#
                                                                                   -> GHC.Prim.Word#
                                                                                   -> GHC.Prim.Word#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Int# #)}
                                                           dt13
                                                           (GHC.Prim.int2Word# dt14)
                                                           dt16
                                                           (GHC.Prim.int2Word# dt17)
                                                           (GHC.Prim.int2Word# dt15)
                                                           GHC.Prim.realWorld# of wild14 { (#,#) ds7 ds8 ->
                                                    case GHC.Prim.narrow32Int# ds8 of wild15 {
                                                      DEFAULT -> GHC.Types.False
                                                      0#
                                                      -> case a5 of ww7 { Data.Version.Version ww8 ww9 ->
                                                         case b5 of ww10 { Data.Version.Version ww11 ww12 ->
                                                         case Data.Version.$w$c==
                                                                ww8
                                                                ww9
                                                                ww11
                                                                ww12 of wild16 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> Data.Text.$fEqText_$c==
                                                                a6
                                                                b6 } } } } } } } } } } } } } } } } } } } } } } } }) -}
b0a81f2747cb3e9bf1af4bacb42a3449
  $fEqLinksContext_$s$fEq(,) ::
    GHC.Classes.Eq
      (Web.Bower.PackageMeta.Internal.PackageName, Data.Version.Version)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                     Data.Version.Version)
                  (GHC.Classes.$fEq(,)_$c==
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fEqPackageName
                     Data.Version.$fEqVersion)
                  Language.PureScript.Docs.Types.$fEqLinksContext_$s$fEq(,)_$c/= -}
34066acee87b8c352dade3031aa0d1a6
  $fEqLinksContext_$s$fEq(,)_$c/= ::
    (Web.Bower.PackageMeta.Internal.PackageName, Data.Version.Version)
    -> (Web.Bower.PackageMeta.Internal.PackageName,
        Data.Version.Version)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U(1*U,1*U))><S(S(LLS)L),1*U(1*U(U,U,U),1*U(1*U,1*U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                           Data.Version.Version))
                   (y :: (Web.Bower.PackageMeta.Internal.PackageName,
                          Data.Version.Version)) ->
                 case x1 of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case a1
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Classes.eqInt
                        (GHC.Types.I# dt2)
                        (GHC.Types.I# dt5) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Int.eqInt32
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                             (GHC.Int.I32# 0#) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case Data.Version.$fEqVersion_$c== a2 b2 of wild7 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } } } } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqModule :: GHC.Classes.Eq Language.PureScript.Docs.Types.Module
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Module
                  Language.PureScript.Docs.Types.$fEqModule_$c==
                  Language.PureScript.Docs.Types.$fEqModule_$c/= -}
cce819b6566f028d040fc57bb265fd8d
  $fEqModule1 ::
    GHC.Classes.Eq
      (Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName,
       [Language.PureScript.Docs.Types.Declaration])
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ (Language.PureScript.Docs.Types.InPackage
                        Language.PureScript.Names.ModuleName)
                   @ [Language.PureScript.Docs.Types.Declaration]
                   Language.PureScript.Docs.Types.$fEqInPackage_$s$fEqInPackage
                   Language.PureScript.Docs.Types.$fEqModule2) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqModule2 ::
    GHC.Classes.Eq [Language.PureScript.Docs.Types.Declaration]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ Language.PureScript.Docs.Types.Declaration
                   Language.PureScript.Docs.Types.$fEqDeclaration) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqModule_$c/= ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Module)
                   (y :: Language.PureScript.Docs.Types.Module) ->
                 case Language.PureScript.Docs.Types.$fEqModule_$c== x1 y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fEqModule_$c== ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Module)
                   (w2 :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { Language.PureScript.Docs.Types.Module ww1 ww2 ww3 ww4 ->
                 case w2 of ww5 { Language.PureScript.Docs.Types.Module ww6 ww7 ww8 ww9 ->
                 Language.PureScript.Docs.Types.$w$c==1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fEqNotYetKnown ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.NotYetKnown
                  Language.PureScript.Docs.Types.$fEqNotYetKnown_$c==
                  Language.PureScript.Docs.Types.$fEqNotYetKnown_$c/= -}
4171d1f05d5de1cd94713164f91b8004
  $fEqNotYetKnown_$c/= ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.NotYetKnown)
                   (y :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case x1 of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 case y of wild1 { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Types.False } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fEqNotYetKnown_$c== ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.NotYetKnown)
                   (ds1 :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case ds of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 case ds1 of wild1 { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Types.True } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqPackage ::
    GHC.Classes.Eq a =>
    GHC.Classes.Eq (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(U)),A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a).
                  @ (Language.PureScript.Docs.Types.Package a)
                  (Language.PureScript.Docs.Types.$fEqPackage_$c== @ a v)
                  (Language.PureScript.Docs.Types.$fEqPackage_$c/= @ a v) -}
f66d967ff562407ff6a522c1eb0528e6
  $fEqPackageError ::
    GHC.Classes.Eq Language.PureScript.Docs.Types.PackageError
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.PackageError
                  Language.PureScript.Docs.Types.$fEqPackageError_$c==
                  Language.PureScript.Docs.Types.$fEqPackageError_$c/= -}
f66d967ff562407ff6a522c1eb0528e6
  $fEqPackageError_$c/= ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fEqPackageError_$c==
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fEqPackageError_$c== ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.PackageError)
                   (ds1 :: Language.PureScript.Docs.Types.PackageError) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.CompilerTooOld a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.CompilerTooOld b1 b2
                        -> case a1 of ww { Data.Version.Version ww1 ww2 ->
                           case b1 of ww3 { Data.Version.Version ww4 ww5 ->
                           case Data.Version.$w$c== ww1 ww2 ww4 ww5 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> Data.Version.$fEqVersion_$c== a2 b2 } } } }
                   Language.PureScript.Docs.Types.ErrorInPackageMeta a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.ErrorInPackageMeta b1
                        -> Web.Bower.PackageMeta.Internal.$fEqBowerError_$c== a1 b1 }
                   Language.PureScript.Docs.Types.InvalidVersion
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidVersion -> GHC.Types.True }
                   Language.PureScript.Docs.Types.InvalidDeclarationType a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidDeclarationType b1
                        -> Data.Text.$fEqText_$c== a1 b1 }
                   Language.PureScript.Docs.Types.InvalidChildDeclarationType a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidChildDeclarationType b1
                        -> Data.Text.$fEqText_$c== a1 b1 }
                   Language.PureScript.Docs.Types.InvalidFixity
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidFixity -> GHC.Types.True }
                   Language.PureScript.Docs.Types.InvalidKind a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidKind b1
                        -> Data.Text.$fEqText_$c== a1 b1 }
                   Language.PureScript.Docs.Types.InvalidDataDeclType a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidDataDeclType b1
                        -> Data.Text.$fEqText_$c== a1 b1 }
                   Language.PureScript.Docs.Types.InvalidTime
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.InvalidTime
                        -> GHC.Types.True } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqPackage_$c/= ::
    GHC.Classes.Eq a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(U)),A)><S(S(S(LLS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,1*U),1*U(U,U,U),1*U,1*U,U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,1*U))><S(S(S(LLS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,1*U),1*U(U,U,U),1*U,1*U,U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,1*U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x1 :: Language.PureScript.Docs.Types.Package a)
                   (y :: Language.PureScript.Docs.Types.Package a) ->
                 case Language.PureScript.Docs.Types.$fEqPackage_$c==
                        @ a
                        $dEq
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fEqPackage_$c== ::
    GHC.Classes.Eq a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(U)),A)><S(S(S(LLS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,1*U),1*U(U,U,U),1*U,1*U,U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,1*U))><S(S(S(LLS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,1*U),1*U(U,U,U),1*U,1*U,U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,1*U))> -}
614d849a4354c290b33f6ef62142889d
  $fFromJSONGithubUser ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubUser
                  Language.PureScript.Docs.Types.$fFromJSONGithubUser_$cparseJSON
                  Language.PureScript.Docs.Types.$fFromJSONGithubUser_$cparseJSONList -}
09bc76f99bb8e9383985cabc70bc956a
  $fFromJSONGithubUser1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
55182bc7b247e7bd20ef2c3079adfa12
  $fFromJSONGithubUser2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
3e5e7ce5024f9dd1d50c241bdee3bb50
  $fFromJSONGithubUser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
614d849a4354c290b33f6ef62142889d
  $fFromJSONGithubUser4 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Language.PureScript.Docs.Types.GithubUser
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ e (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wm1 @ e ww1 ww2 }) -}
614d849a4354c290b33f6ef62142889d
  $fFromJSONGithubUser_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Docs.Types.GithubUser
  {- Arity: 1,
     Unfolding: (Data.Aeson.BetterErrors.Internal.toAesonParser
                   @ Data.Void.Void
                   @ Language.PureScript.Docs.Types.GithubUser
                   (Data.Void.absurd @ Data.Text.Internal.Text)
                   (Language.PureScript.Docs.Types.$fFromJSONGithubUser4
                      @ Data.Void.Void)
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      (Data.Aeson.BetterErrors.Internal.ParseError Data.Void.Void)
                                      Language.PureScript.Docs.Types.GithubUser>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                               <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                  Data.Void.Void>_N
                                                                                               <Data.Functor.Identity.Identity>_R
                                                                                               <Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                           <*>_N
                                                                                                                                                           <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                           <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                 Data.Void.Void)
                                                                                                                                                              Data.Functor.Identity.Identity>_R
                                                                                                                                                           <Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                     <Data.Void.Void>_N
                                                                                                                                                                                                                     <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.GithubUser>_N))) -}
614d849a4354c290b33f6ef62142889d
  $fFromJSONGithubUser_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Docs.Types.GithubUser]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Docs.Types.$fFromJSONGithubUser3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Docs.Types.$fFromJSONGithubUser2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Docs.Types.$fFromJSONGithubUser1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f21 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f21 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Docs.Types.GithubUser] f21 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Docs.Types.GithubUser]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Docs.Types.$fFromJSONGithubUser_go
                        0#
                        ($wgo 0#) } }) -}
614d849a4354c290b33f6ef62142889d
  $fFromJSONGithubUser_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Docs.Types.GithubUser]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
4171d1f05d5de1cd94713164f91b8004
  $fFromJSONNotYetKnown ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.NotYetKnown
                  Language.PureScript.Docs.Types.$fFromJSONNotYetKnown_$cparseJSON
                  Language.PureScript.Docs.Types.$fFromJSONNotYetKnown_$cparseJSONList -}
4171d1f05d5de1cd94713164f91b8004
  $fFromJSONNotYetKnown1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Language.PureScript.Docs.Types.NotYetKnown
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ e (x1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case x1 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 case ww2 of wild {
                   DEFAULT
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                        @ Language.PureScript.Docs.Types.NotYetKnown
                        (Data.Aeson.BetterErrors.Internal.BadSchema
                           @ e
                           (ww1
                              `cast`
                            (Data.DList.N:DList[0]
                                 <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                              (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                           (Data.Aeson.BetterErrors.Internal.WrongType
                              @ e
                              Data.Aeson.BetterErrors.Internal.TyNull
                              wild))
                   Data.Aeson.Types.Internal.Null
                   -> Language.PureScript.Docs.Types.$fFromJSONNotYetKnown_lvl18
                        @ e } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fFromJSONNotYetKnown_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Docs.Types.NotYetKnown
  {- Arity: 1,
     Unfolding: (Data.Aeson.BetterErrors.Internal.toAesonParser
                   @ Data.Void.Void
                   @ Language.PureScript.Docs.Types.NotYetKnown
                   (Data.Void.absurd @ Data.Text.Internal.Text)
                   (Language.PureScript.Docs.Types.$fFromJSONNotYetKnown1
                      @ Data.Void.Void)
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      (Data.Aeson.BetterErrors.Internal.ParseError Data.Void.Void)
                                      Language.PureScript.Docs.Types.NotYetKnown>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   Data.Void.Void>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <Language.PureScript.Docs.Types.NotYetKnown>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                             <*>_N
                                                                                                                                                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                   Data.Void.Void)
                                                                                                                                                                Data.Functor.Identity.Identity>_R
                                                                                                                                                             <Language.PureScript.Docs.Types.NotYetKnown>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                        <Data.Void.Void>_N
                                                                                                                                                                                                                        <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.NotYetKnown>_N))) -}
4171d1f05d5de1cd94713164f91b8004
  $fFromJSONNotYetKnown_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Docs.Types.NotYetKnown]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Docs.Types.$fFromJSONGithubUser3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Docs.Types.$fFromJSONGithubUser2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Docs.Types.$fFromJSONGithubUser1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f21 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f21 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Docs.Types.NotYetKnown] f21 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Docs.Types.NotYetKnown]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Docs.Types.$fFromJSONNotYetKnown_go
                        0#
                        ($wgo 0#) } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fFromJSONNotYetKnown_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Docs.Types.NotYetKnown]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
4171d1f05d5de1cd94713164f91b8004
  $fFromJSONNotYetKnown_lvl18 ::
    Data.Either.Either
      (Data.Aeson.BetterErrors.Internal.ParseError e)
      Language.PureScript.Docs.Types.NotYetKnown
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ e ->
                 Data.Either.Right
                   @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                   @ Language.PureScript.Docs.Types.NotYetKnown
                   Language.PureScript.Docs.Types.NotYetKnown) -}
fa1efe58f4e6215e05effe0c7820d641
  $fFromJSONPackage ::
    Data.Aeson.Types.FromJSON.FromJSON a =>
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C1(C1(U)))),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: Data.Aeson.Types.FromJSON.FromJSON a).
                  @ (Language.PureScript.Docs.Types.Package a)
                  (Language.PureScript.Docs.Types.$fFromJSONPackage_$cparseJSON
                     @ a
                     v)
                  (Language.PureScript.Docs.Types.$fFromJSONPackage_$cparseJSONList
                     @ a
                     v) -}
643b8c0d2570b3d0720a9d632e6065c0
  $fFromJSONPackage1 :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Language.PureScript.Docs.Types.$fFromJSONPackage2
                   (GHC.Types.[] @ GHC.Base.String)) -}
fa7b645a839bd98ef4578a07e95a5ed7
  $fFromJSONPackage2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   Language.PureScript.Docs.Types.$fFromJSONPackage3) -}
1abf43a1f9214395415ae880e2ed467a
  $fFromJSONPackage3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   Language.PureScript.Docs.Types.$fFromJSONPackage4) -}
9de9ce503d5e7ec24d95604e0962fe58
  $fFromJSONPackage4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   Language.PureScript.Docs.Types.$fFromJSONPackage5) -}
303b8428cdb13fad0e08e11c3b940ba9
  $fFromJSONPackage5 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   (GHC.Types.[] @ GHC.Types.Int)) -}
a1f8b97ffe6fbff9a0223bb2c5624255
  $fFromJSONPackage6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
fa1efe58f4e6215e05effe0c7820d641
  $fFromJSONPackage7 ::
    Data.Version.Version
    -> (forall e. Data.Aeson.BetterErrors.Internal.Parse e a)
    -> Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (Language.PureScript.Docs.Types.Package a))
  {- Arity: 3, Strictness: <L,1*U(U,U)><L,C(U)><L,U(U,U)> -}
fa1efe58f4e6215e05effe0c7820d641
  $fFromJSONPackage8 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success
         [Language.PureScript.Docs.Types.Package a] f4 r
    -> f4 r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   @ f21 :: * -> *
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f21 r)
                   (ks :: Data.Aeson.Types.Internal.Success
                            [Language.PureScript.Docs.Types.Package a] f21 r) ->
                 ks (GHC.Types.[] @ (Language.PureScript.Docs.Types.Package a))) -}
fa1efe58f4e6215e05effe0c7820d641
  $fFromJSONPackage_$cparseJSON ::
    Data.Aeson.Types.FromJSON.FromJSON a =>
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Docs.Types.Package a)
  {- Arity: 2, Strictness: <L,U(C(C1(C1(C1(U)))),A)><L,U>,
     Unfolding: (\ @ a
                   ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON a)
                   (eta :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.BetterErrors.Internal.toAesonParser
                   @ Language.PureScript.Docs.Types.PackageError
                   @ (Language.PureScript.Docs.Types.Package a)
                   Language.PureScript.Docs.Types.displayPackageError
                   (Language.PureScript.Docs.Types.$fFromJSONPackage7
                      @ a
                      Language.PureScript.Docs.Types.$fFromJSONPackage1
                      (\ @ e (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                       case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                       Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                         @ Data.Functor.Identity.Identity
                         @ a
                         @ e
                         Data.Functor.Identity.$fMonadIdentity
                         $dFromJSON
                         ww1
                         ww2 })
                        `cast`
                      (forall (e :: <*>_N).
                       Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                <*>_N
                                <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                <Control.Monad.Trans.Except.ExceptT
                                   (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   Data.Functor.Identity.Identity>_R
                                <a>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                  <e>_N <Data.Functor.Identity.Identity>_R) <a>_N))
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <Language.PureScript.Docs.Types.Package
                                      a>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                         <*>_N
                                                         <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                         <Control.Monad.Trans.Except.ExceptT
                                                            (Data.Aeson.BetterErrors.Internal.ParseError
                                                               Language.PureScript.Docs.Types.PackageError)
                                                            Data.Functor.Identity.Identity>_R
                                                         <Language.PureScript.Docs.Types.Package
                                                            a>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                             <Language.PureScript.Docs.Types.PackageError>_N
                                                                             <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Package
                                                                                                                    a>_N))
                   eta) -}
fa1efe58f4e6215e05effe0c7820d641
  $fFromJSONPackage_$cparseJSONList ::
    Data.Aeson.Types.FromJSON.FromJSON a =>
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Docs.Types.Package a]
  {- Arity: 2, Strictness: <L,U(C(C1(C1(C1(U)))),A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON a)
                   (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Docs.Types.$fFromJSONGithubUser3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Docs.Types.$fFromJSONGithubUser2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Docs.Types.$fFromJSONGithubUser1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f21 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f21 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Docs.Types.Package a] f21 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Docs.Types.Package a]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        go2 :: GHC.Prim.Int#
                               -> [Data.Aeson.Types.Internal.Value]
                               -> Data.Aeson.Types.Internal.Parser
                                    [Language.PureScript.Docs.Types.Package a]
                          {- Arity: 2, Strictness: <L,U><S,1*U> -}
                        = \ (x1 :: GHC.Prim.Int#)
                            (eta :: [Data.Aeson.Types.Internal.Value]) ->
                          case eta of wild2 {
                            []
                            -> (Language.PureScript.Docs.Types.$fFromJSONPackage8 @ a)
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <[Language.PureScript.Docs.Types.Package a]>_R))
                            : y ys
                            -> let {
                                 p1 :: Data.Aeson.Types.Internal.Parser
                                         (Language.PureScript.Docs.Types.Package a)
                                 = Language.PureScript.Docs.Types.$fFromJSONPackage_$cparseJSON
                                     @ a
                                     $dFromJSON
                                     y
                               } in
                               let {
                                 pathElem1 :: Data.Aeson.Types.Internal.JSONPathElement
                                 = Data.Aeson.Types.Internal.Index x1
                               } in
                               let {
                                 ys1 :: Data.Aeson.Types.Internal.Parser
                                          [Language.PureScript.Docs.Types.Package a]
                                 = case x1 of wild3 {
                                     DEFAULT -> go2 (GHC.Prim.+# wild3 1#) ys
                                     9223372036854775807#
                                     -> (Language.PureScript.Docs.Types.$fFromJSONPackage8 @ a)
                                          `cast`
                                        (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                  <[Language.PureScript.Docs.Types.Package a]>_R)) }
                               } in
                               (\ @ f21 :: * -> *
                                  @ r
                                  (eta1 :: Data.Aeson.Types.Internal.JSONPath)
                                  (eta2 :: Data.Aeson.Types.Internal.Failure f21 r)
                                  (eta3 :: Data.Aeson.Types.Internal.Success
                                             [Language.PureScript.Docs.Types.Package a] f21 r) ->
                                p1
                                  `cast`
                                (Data.Aeson.Types.Internal.N:Parser[0]
                                     <Language.PureScript.Docs.Types.Package a>_R)
                                  @ f21
                                  @ r
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.JSONPathElement
                                     pathElem1
                                     eta1)
                                  eta2
                                  (\ (a3 :: Language.PureScript.Docs.Types.Package a) ->
                                   ys1
                                     `cast`
                                   (Data.Aeson.Types.Internal.N:Parser[0]
                                        <[Language.PureScript.Docs.Types.Package a]>_R)
                                     @ f21
                                     @ r
                                     eta1
                                     eta2
                                     (\ (a4 :: [Language.PureScript.Docs.Types.Package a]) ->
                                      eta3
                                        (GHC.Types.:
                                           @ (Language.PureScript.Docs.Types.Package a)
                                           a3
                                           a4))))
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <[Language.PureScript.Docs.Types.Package a]>_R)) }
                      } in
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      go2 0# ($wgo 0#) } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fFunctorInPackage ::
    GHC.Base.Functor Language.PureScript.Docs.Types.InPackage
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.InPackage
                  Language.PureScript.Docs.Types.$fFunctorInPackage_$cfmap
                  Language.PureScript.Docs.Types.$fFunctorInPackage_$c<$ -}
14acea96459ae0ba0727319f74cb7f69
  $fFunctorInPackage_$c<$ ::
    a
    -> Language.PureScript.Docs.Types.InPackage b
    -> Language.PureScript.Docs.Types.InPackage a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   (x1 :: a)
                   (eta :: Language.PureScript.Docs.Types.InPackage b) ->
                 case eta of wild {
                   Language.PureScript.Docs.Types.Local x2
                   -> Language.PureScript.Docs.Types.Local @ a x1
                   Language.PureScript.Docs.Types.FromDep pkgName x2
                   -> Language.PureScript.Docs.Types.FromDep @ a pkgName x1 }) -}
14acea96459ae0ba0727319f74cb7f69
  $fFunctorInPackage_$cfmap ::
    (a -> b)
    -> Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   (f21 :: a -> b)
                   (ds :: Language.PureScript.Docs.Types.InPackage a) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.Local x1
                   -> Language.PureScript.Docs.Types.Local @ b (f21 x1)
                   Language.PureScript.Docs.Types.FromDep pkgName x1
                   -> Language.PureScript.Docs.Types.FromDep
                        @ b
                        pkgName
                        (f21 x1) }) -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericChildDeclaration ::
    GHC.Generics.Generic
      Language.PureScript.Docs.Types.ChildDeclaration
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclaration
                  Language.PureScript.Docs.Types.$fGenericChildDeclaration1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.ChildDeclaration>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "ChildDeclaration"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "ChildDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "cdeclTitle")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "cdeclComments")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Data.Text.Internal.Text)))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "cdeclSourceSpan")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Language.PureScript.AST.SourcePos.SourceSpan))
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "cdeclInfo")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Docs.Types.ChildDeclarationInfo)))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_ChildDeclaration[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericChildDeclaration_$cto -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericChildDeclaration1 ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ChildDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "cdeclTitle")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "cdeclComments")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "cdeclSourceSpan")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R
                                 (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "cdeclInfo")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Language.PureScript.Docs.Types.ChildDeclarationInfo)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case x2 of wild { Language.PureScript.Docs.Types.ChildDeclaration g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "cdeclTitle")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "cdeclComments")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             (GHC.Base.Maybe Data.Text.Internal.Text)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "cdeclSourceSpan")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan))
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "cdeclInfo")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             Language.PureScript.Docs.Types.ChildDeclarationInfo))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cdeclTitle")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cdeclComments")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                       @ x1
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "cdeclTitle")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N)
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "cdeclComments")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (GHC.Base.Maybe
                                                          Data.Text.Internal.Text)>_R) <x1>_N))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cdeclSourceSpan")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cdeclInfo")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               Language.PureScript.Docs.Types.ChildDeclarationInfo))
                       @ x1
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "cdeclSourceSpan")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (GHC.Base.Maybe
                                                          Language.PureScript.AST.SourcePos.SourceSpan)>_R) <x1>_N)
                       g4
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Language.PureScript.Docs.Types.ChildDeclarationInfo>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "cdeclInfo")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.ChildDeclarationInfo>_R) <x1>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "ChildDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "cdeclTitle")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "cdeclComments")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe Data.Text.Internal.Text)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "cdeclSourceSpan")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe
                                                      Language.PureScript.AST.SourcePos.SourceSpan))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "cdeclInfo")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Language.PureScript.Docs.Types.ChildDeclarationInfo))>_R) <x1>_N) }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fGenericChildDeclarationInfo ::
    GHC.Generics.Generic
      Language.PureScript.Docs.Types.ChildDeclarationInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                  Language.PureScript.Docs.Types.$fGenericChildDeclarationInfo1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.ChildDeclarationInfo>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "ChildDeclarationInfo"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           [Language.PureScript.Docs.Types.Constraint'])
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Language.PureScript.Docs.Types.Type'))
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "ChildDataConstructor"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [Language.PureScript.Docs.Types.Type']))
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "ChildTypeClassMember"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        (GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Docs.Types.Type')))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_ChildDeclarationInfo[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericChildDeclarationInfo_$cto -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fGenericChildDeclarationInfo1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R [Language.PureScript.Docs.Types.Constraint'])
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type')))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R [Language.PureScript.Docs.Types.Type']))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildTypeClassMember" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type')))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (x2 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case x2 of wild {
                   Language.PureScript.Docs.Types.ChildInstance g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Constraint'])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.Type')))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Type']))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "ChildTypeClassMember"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.Type')))
                        @ x1
                        (GHC.Generics.:*:
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Constraint']))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           @ x1
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <[Language.PureScript.Docs.Types.Constraint']>_R
                                     <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           [Language.PureScript.Docs.Types.Constraint']>_R) <x1>_N)
                           g2
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Docs.Types.Type'>_R
                                     <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           Language.PureScript.Docs.Types.Type'>_R) <x1>_N))
                          `cast`
                        (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.C>_P
                                  <'GHC.Generics.MetaCons
                                     "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R [Language.PureScript.Docs.Types.Constraint'])
                                   GHC.Generics.:*: GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R
                                                         Language.PureScript.Docs.Types.Type')>_R) <x1>_N)
                   Language.PureScript.Docs.Types.ChildDataConstructor g1
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Constraint'])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.Type')))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Type']))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "ChildTypeClassMember"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.Type')))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R [Language.PureScript.Docs.Types.Type'])))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ChildTypeClassMember" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Docs.Types.Type')))
                           @ x1
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <[Language.PureScript.Docs.Types.Type']>_R
                                     <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                         <*>_N
                                                         <GHC.Generics.S>_P
                                                         <'GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy>_P
                                                         <GHC.Generics.K1
                                                            GHC.Generics.R
                                                            [Language.PureScript.Docs.Types.Type']>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                  <*>_N
                                                                                                                  <GHC.Generics.C>_P
                                                                                                                  <'GHC.Generics.MetaCons
                                                                                                                     "ChildDataConstructor"
                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                     'GHC.Types.False>_P
                                                                                                                  <GHC.Generics.M1
                                                                                                                     GHC.Generics.S
                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                        'GHC.Base.Nothing
                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                     (GHC.Generics.K1
                                                                                                                        GHC.Generics.R
                                                                                                                        [Language.PureScript.Docs.Types.Type'])>_R)) <x1>_N))
                   Language.PureScript.Docs.Types.ChildTypeClassMember g1
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Constraint'])
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.Type')))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R [Language.PureScript.Docs.Types.Type']))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "ChildTypeClassMember"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.Type')))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R [Language.PureScript.Docs.Types.Type'])))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ChildTypeClassMember" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Docs.Types.Type')))
                           @ x1
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Docs.Types.Type'>_R
                                     <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                         <*>_N
                                                         <GHC.Generics.S>_P
                                                         <'GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy>_P
                                                         <GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Language.PureScript.Docs.Types.Type'>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                <*>_N
                                                                                                                <GHC.Generics.C>_P
                                                                                                                <'GHC.Generics.MetaCons
                                                                                                                   "ChildTypeClassMember"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False>_P
                                                                                                                <GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Language.PureScript.Docs.Types.Type')>_R)) <x1>_N)) }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fGenericChildDeclarationInfo_$cto ::
    GHC.Generics.Rep
      Language.PureScript.Docs.Types.ChildDeclarationInfo x
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.ChildDeclarationInfo x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_ChildDeclarationInfo[0]) ; GHC.Generics.N:M1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.D>_P
                                                                                               <'GHC.Generics.MetaData
                                                                                                  "ChildDeclarationInfo"
                                                                                                  "Language.PureScript.Docs.Types"
                                                                                                  "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                                  'GHC.Types.False>_P
                                                                                               <GHC.Generics.M1
                                                                                                  GHC.Generics.C
                                                                                                  ('GHC.Generics.MetaCons
                                                                                                     "ChildInstance"
                                                                                                     'GHC.Generics.PrefixI
                                                                                                     'GHC.Types.False)
                                                                                                  (GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        'GHC.Base.Nothing
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        [Language.PureScript.Docs.Types.Constraint'])
                                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                                      GHC.Generics.S
                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                         'GHC.Base.Nothing
                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                      (GHC.Generics.K1
                                                                                                                         GHC.Generics.R
                                                                                                                         Language.PureScript.Docs.Types.Type'))
                                                                                                GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                    GHC.Generics.C
                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                       "ChildDataConstructor"
                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                       'GHC.Types.False)
                                                                                                                    (GHC.Generics.M1
                                                                                                                       GHC.Generics.S
                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                          'GHC.Base.Nothing
                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                       (GHC.Generics.K1
                                                                                                                          GHC.Generics.R
                                                                                                                          [Language.PureScript.Docs.Types.Type']))
                                                                                                                  GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                     GHC.Generics.C
                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                        "ChildTypeClassMember"
                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                        'GHC.Types.False)
                                                                                                                                     (GHC.Generics.M1
                                                                                                                                        GHC.Generics.S
                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                           'GHC.Base.Nothing
                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                        (GHC.Generics.K1
                                                                                                                                           GHC.Generics.R
                                                                                                                                           Language.PureScript.Docs.Types.Type')))>_R) <x1>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R [Language.PureScript.Docs.Types.Constraint'])
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Type')>_R <x1>_N) of wild1 { GHC.Generics.:*: ds2 ds3 ->
                      Language.PureScript.Docs.Types.ChildInstance
                        ds2
                          `cast`
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                [Language.PureScript.Docs.Types.Constraint']>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                             <*>_N
                                                                                             <GHC.Generics.R>_P
                                                                                             <[Language.PureScript.Docs.Types.Constraint']>_R
                                                                                             <x1>_P)
                        ds3
                          `cast`
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                Language.PureScript.Docs.Types.Type'>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.R>_P
                                                                                     <Language.PureScript.Docs.Types.Type'>_R
                                                                                     <x1>_P) }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> Language.PureScript.Docs.Types.ChildDataConstructor
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "ChildDataConstructor"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [Language.PureScript.Docs.Types.Type'])>_R ; GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.S>_P
                                                                                          <'GHC.Generics.MetaSel
                                                                                             'GHC.Base.Nothing
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy>_P
                                                                                          <GHC.Generics.K1
                                                                                             GHC.Generics.R
                                                                                             [Language.PureScript.Docs.Types.Type']>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                     <*>_N
                                                                                                                                                     <GHC.Generics.R>_P
                                                                                                                                                     <[Language.PureScript.Docs.Types.Type']>_R
                                                                                                                                                     <x1>_P)
                        GHC.Generics.R1 ds2
                        -> Language.PureScript.Docs.Types.ChildTypeClassMember
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "ChildTypeClassMember"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Docs.Types.Type')>_R ; GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.S>_P
                                                                                        <'GHC.Generics.MetaSel
                                                                                           'GHC.Base.Nothing
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy>_P
                                                                                        <GHC.Generics.K1
                                                                                           GHC.Generics.R
                                                                                           Language.PureScript.Docs.Types.Type'>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                 <*>_N
                                                                                                                                                 <GHC.Generics.R>_P
                                                                                                                                                 <Language.PureScript.Docs.Types.Type'>_R
                                                                                                                                                 <x1>_P) } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericChildDeclaration_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.ChildDeclaration x
    -> Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.ChildDeclaration x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_ChildDeclaration[0]) ; (GHC.Generics.N:M1[0]
                                                                                            <*>_N
                                                                                            <GHC.Generics.D>_P
                                                                                            <'GHC.Generics.MetaData
                                                                                               "ChildDeclaration"
                                                                                               "Language.PureScript.Docs.Types"
                                                                                               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                               'GHC.Types.False>_P
                                                                                            <GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "ChildDeclaration"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.True)
                                                                                               ((GHC.Generics.M1
                                                                                                   GHC.Generics.S
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "cdeclTitle")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.K1
                                                                                                      GHC.Generics.R
                                                                                                      Data.Text.Internal.Text)
                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "cdeclComments")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       (GHC.Base.Maybe
                                                                                                                          Data.Text.Internal.Text)))
                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Base.Just
                                                                                                                          "cdeclSourceSpan")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       (GHC.Base.Maybe
                                                                                                                          Language.PureScript.AST.SourcePos.SourceSpan))
                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                     GHC.Generics.S
                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                        ('GHC.Base.Just
                                                                                                                                           "cdeclInfo")
                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                     (GHC.Generics.K1
                                                                                                                                        GHC.Generics.R
                                                                                                                                        Language.PureScript.Docs.Types.ChildDeclarationInfo)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                                        <*>_N
                                                                                                                                                                                                        <GHC.Generics.C>_P
                                                                                                                                                                                                        <'GHC.Generics.MetaCons
                                                                                                                                                                                                           "ChildDeclaration"
                                                                                                                                                                                                           'GHC.Generics.PrefixI
                                                                                                                                                                                                           'GHC.Types.True>_P
                                                                                                                                                                                                        <(GHC.Generics.M1
                                                                                                                                                                                                            GHC.Generics.S
                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "cdeclTitle")
                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                            (GHC.Generics.K1
                                                                                                                                                                                                               GHC.Generics.R
                                                                                                                                                                                                               Data.Text.Internal.Text)
                                                                                                                                                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                             GHC.Generics.S
                                                                                                                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                                   "cdeclComments")
                                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                             (GHC.Generics.K1
                                                                                                                                                                                                                                GHC.Generics.R
                                                                                                                                                                                                                                (GHC.Base.Maybe
                                                                                                                                                                                                                                   Data.Text.Internal.Text)))
                                                                                                                                                                                                         GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                             GHC.Generics.S
                                                                                                                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                                   "cdeclSourceSpan")
                                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                             (GHC.Generics.K1
                                                                                                                                                                                                                                GHC.Generics.R
                                                                                                                                                                                                                                (GHC.Base.Maybe
                                                                                                                                                                                                                                   Language.PureScript.AST.SourcePos.SourceSpan))
                                                                                                                                                                                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                              GHC.Generics.S
                                                                                                                                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                                                    "cdeclInfo")
                                                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                              (GHC.Generics.K1
                                                                                                                                                                                                                                                 GHC.Generics.R
                                                                                                                                                                                                                                                 Language.PureScript.Docs.Types.ChildDeclarationInfo))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Language.PureScript.Docs.Types.ChildDeclaration
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "cdeclTitle")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "cdeclComments")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              Data.Text.Internal.Text)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Base.Maybe
                                                                          Data.Text.Internal.Text>_R
                                                                       <x1>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "cdeclSourceSpan")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              Language.PureScript.AST.SourcePos.SourceSpan)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                            <*>_N
                                                                                            <GHC.Generics.R>_P
                                                                                            <GHC.Base.Maybe
                                                                                               Language.PureScript.AST.SourcePos.SourceSpan>_R
                                                                                            <x1>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "cdeclInfo")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.Docs.Types.ChildDeclarationInfo>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.R>_P
                                                                                               <Language.PureScript.Docs.Types.ChildDeclarationInfo>_R
                                                                                               <x1>_P) } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericDeclaration ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.Declaration
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Declaration
                  Language.PureScript.Docs.Types.$fGenericDeclaration1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.Declaration>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Declaration"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Declaration" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "declTitle")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "declComments")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Data.Text.Internal.Text)))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "declSourceSpan")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Language.PureScript.AST.SourcePos.SourceSpan))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "declChildren")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [Language.PureScript.Docs.Types.ChildDeclaration])
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "declInfo")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Language.PureScript.Docs.Types.DeclarationInfo))))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_Declaration[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericDeclaration_$cto -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericDeclaration1 ::
    Language.PureScript.Docs.Types.Declaration
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Declaration" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "declTitle")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "declComments")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "declSourceSpan")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R
                                 (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "declChildren")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Language.PureScript.Docs.Types.ChildDeclaration])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "declInfo")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Language.PureScript.Docs.Types.DeclarationInfo))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.Declaration) ->
                 case x2 of wild { Language.PureScript.Docs.Types.Declaration g1 g2 g3 g4 g5 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "declTitle")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "declComments")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             (GHC.Base.Maybe Data.Text.Internal.Text)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "declSourceSpan")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "declChildren")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              [Language.PureScript.Docs.Types.ChildDeclaration])
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "declInfo")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Language.PureScript.Docs.Types.DeclarationInfo)))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "declTitle")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "declComments")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                       @ x1
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "declTitle")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N)
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "declComments")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (GHC.Base.Maybe
                                                          Data.Text.Internal.Text)>_R) <x1>_N))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "declSourceSpan")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "declChildren")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R [Language.PureScript.Docs.Types.ChildDeclaration])
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "declInfo")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Docs.Types.DeclarationInfo))
                       @ x1
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "declSourceSpan")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (GHC.Base.Maybe
                                                          Language.PureScript.AST.SourcePos.SourceSpan)>_R) <x1>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "declChildren")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R [Language.PureScript.Docs.Types.ChildDeclaration]))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "declInfo")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Language.PureScript.Docs.Types.DeclarationInfo))
                          @ x1
                          g4
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[Language.PureScript.Docs.Types.ChildDeclaration]>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "declChildren")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          [Language.PureScript.Docs.Types.ChildDeclaration]>_R) <x1>_N)
                          g5
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Language.PureScript.Docs.Types.DeclarationInfo>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "declInfo")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Language.PureScript.Docs.Types.DeclarationInfo>_R) <x1>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Declaration" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "declTitle")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "declComments")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe Data.Text.Internal.Text)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "declSourceSpan")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe
                                                      Language.PureScript.AST.SourcePos.SourceSpan))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "declChildren")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     [Language.PureScript.Docs.Types.ChildDeclaration])
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "declInfo")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Language.PureScript.Docs.Types.DeclarationInfo)))>_R) <x1>_N) }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fGenericDeclarationInfo ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.DeclarationInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DeclarationInfo
                  Language.PureScript.Docs.Types.$fGenericDeclarationInfo1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.DeclarationInfo>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "DeclarationInfo"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <(GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                                    GHC.Generics.:+: (GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "DataDeclaration"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              Language.PureScript.Environment.DataDeclType)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [(Data.Text.Internal.Text,
                                                                                 GHC.Base.Maybe
                                                                                   Language.PureScript.Docs.Types.Kind')]))
                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "ExternDataDeclaration"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Language.PureScript.Docs.Types.Kind'))))
                                   GHC.Generics.:+: ((GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "TypeSynonymDeclaration"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              [(Data.Text.Internal.Text,
                                                                GHC.Base.Maybe
                                                                  Language.PureScript.Docs.Types.Kind')])
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Language.PureScript.Docs.Types.Type'))
                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "TypeClassDeclaration"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [(Data.Text.Internal.Text,
                                                                                 GHC.Base.Maybe
                                                                                   Language.PureScript.Docs.Types.Kind')])
                                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 'GHC.Base.Nothing
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 [Language.PureScript.Docs.Types.Constraint'])
                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                               GHC.Generics.S
                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                  'GHC.Base.Nothing
                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                               (GHC.Generics.K1
                                                                                                                  GHC.Generics.R
                                                                                                                  [([Data.Text.Internal.Text],
                                                                                                                    [Data.Text.Internal.Text])]))))
                                                     GHC.Generics.:+: (GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "AliasDeclaration"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Language.PureScript.AST.Operators.Fixity)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                'GHC.Base.Nothing
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                                                       GHC.Generics.:+: GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "ExternKindDeclaration"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.False)
                                                                                          GHC.Generics.U1))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_DeclarationInfo[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericDeclarationInfo_$cto -}
c62d7485313366a589e4ef3d4cdd5b98
  $fGenericDeclarationInfo1 ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Language.PureScript.Docs.Types.Type'))
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Language.PureScript.Environment.DataDeclType)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')]))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ExternDataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Kind'))))
         ((GHC.Generics.M1
             GHC.Generics.C
             ('GHC.Generics.MetaCons
                "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
             (GHC.Generics.M1
                GHC.Generics.S
                ('GHC.Generics.MetaSel
                   'GHC.Base.Nothing
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.NoSourceStrictness
                   'GHC.Generics.DecidedLazy)
                (GHC.Generics.K1
                   GHC.Generics.R
                   [(Data.Text.Internal.Text,
                     GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
              GHC.Generics.:*: GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Language.PureScript.Docs.Types.Type'))
           GHC.Generics.:+: GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeClassDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      'GHC.Base.Nothing
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [Language.PureScript.Docs.Types.Constraint'])
                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [([Data.Text.Internal.Text],
                                                                         [Data.Text.Internal.Text])]))))
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ExternKindDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (x2 :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case x2 of wild {
                   Language.PureScript.Docs.Types.ValueDeclaration g1
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "DataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Environment.DataDeclType)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [(Data.Text.Internal.Text,
                                                                        GHC.Base.Maybe
                                                                          Language.PureScript.Docs.Types.Kind')]))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternDataDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.Types.Kind'))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Type'))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "TypeClassDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')])
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Language.PureScript.Docs.Types.Constraint'])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [([Data.Text.Internal.Text],
                                                                                          [Data.Text.Internal.Text])]))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "AliasDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.AST.Operators.Fixity)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternKindDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Docs.Types.Type')))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Environment.DataDeclType)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Data.Text.Internal.Text,
                                                         GHC.Base.Maybe
                                                           Language.PureScript.Docs.Types.Kind')]))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ExternDataDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Kind')))
                           @ x1
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Docs.Types.Type'>_R
                                     <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                         <*>_N
                                                         <GHC.Generics.S>_P
                                                         <'GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy>_P
                                                         <GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Language.PureScript.Docs.Types.Type'>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                <*>_N
                                                                                                                <GHC.Generics.C>_P
                                                                                                                <'GHC.Generics.MetaCons
                                                                                                                   "ValueDeclaration"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False>_P
                                                                                                                <GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Language.PureScript.Docs.Types.Type')>_R)) <x1>_N))
                   Language.PureScript.Docs.Types.DataDeclaration g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "DataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Environment.DataDeclType)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [(Data.Text.Internal.Text,
                                                                        GHC.Base.Maybe
                                                                          Language.PureScript.Docs.Types.Kind')]))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternDataDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.Types.Kind'))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Type'))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "TypeClassDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')])
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Language.PureScript.Docs.Types.Constraint'])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [([Data.Text.Internal.Text],
                                                                                          [Data.Text.Internal.Text])]))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "AliasDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.AST.Operators.Fixity)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternKindDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Docs.Types.Type')))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Environment.DataDeclType)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Data.Text.Internal.Text,
                                                         GHC.Base.Maybe
                                                           Language.PureScript.Docs.Types.Kind')]))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ExternDataDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Kind')))
                           @ x1
                           (GHC.Generics.L1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Environment.DataDeclType)
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R
                                                          [(Data.Text.Internal.Text,
                                                            GHC.Base.Maybe
                                                              Language.PureScript.Docs.Types.Kind')])))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ExternDataDeclaration"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.Docs.Types.Kind')))
                              @ x1
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Environment.DataDeclType))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]))
                                 @ x1
                                 g1
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Environment.DataDeclType>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Environment.DataDeclType>_R) <x1>_N)
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <[(Data.Text.Internal.Text,
                                              GHC.Base.Maybe
                                                Language.PureScript.Docs.Types.Kind')]>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [(Data.Text.Internal.Text,
                                                                   GHC.Base.Maybe
                                                                     Language.PureScript.Docs.Types.Kind')]>_R) <x1>_N))
                                `cast`
                              (Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "DataDeclaration"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Language.PureScript.Environment.DataDeclType)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               [(Data.Text.Internal.Text,
                                                                 GHC.Base.Maybe
                                                                   Language.PureScript.Docs.Types.Kind')])>_R) <x1>_N)))
                   Language.PureScript.Docs.Types.ExternDataDeclaration g1
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "DataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Environment.DataDeclType)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [(Data.Text.Internal.Text,
                                                                        GHC.Base.Maybe
                                                                          Language.PureScript.Docs.Types.Kind')]))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternDataDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.Types.Kind'))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Type'))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "TypeClassDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')])
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Language.PureScript.Docs.Types.Constraint'])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [([Data.Text.Internal.Text],
                                                                                          [Data.Text.Internal.Text])]))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "AliasDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.AST.Operators.Fixity)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternKindDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Docs.Types.Type')))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Environment.DataDeclType)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Data.Text.Internal.Text,
                                                         GHC.Base.Maybe
                                                           Language.PureScript.Docs.Types.Kind')]))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ExternDataDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Kind')))
                           @ x1
                           (GHC.Generics.R1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Environment.DataDeclType)
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R
                                                          [(Data.Text.Internal.Text,
                                                            GHC.Base.Maybe
                                                              Language.PureScript.Docs.Types.Kind')])))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ExternDataDeclaration"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.Docs.Types.Kind')))
                              @ x1
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Language.PureScript.Docs.Types.Kind'>_R
                                        <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                            <*>_N
                                                            <GHC.Generics.S>_P
                                                            <'GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy>_P
                                                            <GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Language.PureScript.Docs.Types.Kind'>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                   <*>_N
                                                                                                                   <GHC.Generics.C>_P
                                                                                                                   <'GHC.Generics.MetaCons
                                                                                                                      "ExternDataDeclaration"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False>_P
                                                                                                                   <GHC.Generics.M1
                                                                                                                      GHC.Generics.S
                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                         'GHC.Base.Nothing
                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                      (GHC.Generics.K1
                                                                                                                         GHC.Generics.R
                                                                                                                         Language.PureScript.Docs.Types.Kind')>_R)) <x1>_N)))
                   Language.PureScript.Docs.Types.TypeSynonymDeclaration g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "DataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Environment.DataDeclType)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [(Data.Text.Internal.Text,
                                                                        GHC.Base.Maybe
                                                                          Language.PureScript.Docs.Types.Kind')]))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternDataDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.Types.Kind'))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Type'))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "TypeClassDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')])
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Language.PureScript.Docs.Types.Constraint'])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [([Data.Text.Internal.Text],
                                                                                          [Data.Text.Internal.Text])]))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "AliasDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.AST.Operators.Fixity)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternKindDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      [(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Type'))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "TypeClassDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Data.Text.Internal.Text,
                                                         GHC.Base.Maybe
                                                           Language.PureScript.Docs.Types.Kind')])
                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         [Language.PureScript.Docs.Types.Constraint'])
                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                       GHC.Generics.S
                                                                                       ('GHC.Generics.MetaSel
                                                                                          'GHC.Base.Nothing
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          [([Data.Text.Internal.Text],
                                                                                            [Data.Text.Internal.Text])]))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ExternKindDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ x1
                           (GHC.Generics.L1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "TypeSynonymDeclaration"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Language.PureScript.Docs.Types.Type')))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "TypeClassDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                    GHC.Generics.:*: (GHC.Generics.M1
                                                        GHC.Generics.S
                                                        ('GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.K1
                                                           GHC.Generics.R
                                                           [Language.PureScript.Docs.Types.Constraint'])
                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                         GHC.Generics.S
                                                                         ('GHC.Generics.MetaSel
                                                                            'GHC.Base.Nothing
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.K1
                                                                            GHC.Generics.R
                                                                            [([Data.Text.Internal.Text],
                                                                              [Data.Text.Internal.Text])]))))
                              @ x1
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                                 @ x1
                                 g1
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <[(Data.Text.Internal.Text,
                                              GHC.Base.Maybe
                                                Language.PureScript.Docs.Types.Kind')]>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [(Data.Text.Internal.Text,
                                                                   GHC.Base.Maybe
                                                                     Language.PureScript.Docs.Types.Kind')]>_R) <x1>_N)
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Docs.Types.Type'>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Docs.Types.Type'>_R) <x1>_N))
                                `cast`
                              (Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "TypeSynonymDeclaration"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              [(Data.Text.Internal.Text,
                                                GHC.Base.Maybe
                                                  Language.PureScript.Docs.Types.Kind')])
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Language.PureScript.Docs.Types.Type')>_R) <x1>_N)))
                   Language.PureScript.Docs.Types.TypeClassDeclaration g1 g2 g3
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "DataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Environment.DataDeclType)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [(Data.Text.Internal.Text,
                                                                        GHC.Base.Maybe
                                                                          Language.PureScript.Docs.Types.Kind')]))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternDataDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.Types.Kind'))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Type'))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "TypeClassDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')])
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Language.PureScript.Docs.Types.Constraint'])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [([Data.Text.Internal.Text],
                                                                                          [Data.Text.Internal.Text])]))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "AliasDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.AST.Operators.Fixity)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternKindDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      [(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Type'))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "TypeClassDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Data.Text.Internal.Text,
                                                         GHC.Base.Maybe
                                                           Language.PureScript.Docs.Types.Kind')])
                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         [Language.PureScript.Docs.Types.Constraint'])
                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                       GHC.Generics.S
                                                                                       ('GHC.Generics.MetaSel
                                                                                          'GHC.Base.Nothing
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          [([Data.Text.Internal.Text],
                                                                                            [Data.Text.Internal.Text])]))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ExternKindDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ x1
                           (GHC.Generics.R1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "TypeSynonymDeclaration"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Language.PureScript.Docs.Types.Type')))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "TypeClassDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                    GHC.Generics.:*: (GHC.Generics.M1
                                                        GHC.Generics.S
                                                        ('GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.K1
                                                           GHC.Generics.R
                                                           [Language.PureScript.Docs.Types.Constraint'])
                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                         GHC.Generics.S
                                                                         ('GHC.Generics.MetaSel
                                                                            'GHC.Base.Nothing
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.K1
                                                                            GHC.Generics.R
                                                                            [([Data.Text.Internal.Text],
                                                                              [Data.Text.Internal.Text])]))))
                              @ x1
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [(Data.Text.Internal.Text,
                                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         [Language.PureScript.Docs.Types.Constraint'])
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R
                                                          [([Data.Text.Internal.Text],
                                                            [Data.Text.Internal.Text])]))
                                 @ x1
                                 g1
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <[(Data.Text.Internal.Text,
                                              GHC.Base.Maybe
                                                Language.PureScript.Docs.Types.Kind')]>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [(Data.Text.Internal.Text,
                                                                   GHC.Base.Maybe
                                                                     Language.PureScript.Docs.Types.Kind')]>_R) <x1>_N)
                                 (GHC.Generics.:*:
                                    @ *
                                    @ (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            [Language.PureScript.Docs.Types.Constraint']))
                                    @ (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            [([Data.Text.Internal.Text],
                                              [Data.Text.Internal.Text])]))
                                    @ x1
                                    g2
                                      `cast`
                                    (Sym (GHC.Generics.N:K1[0]
                                              <*>_N
                                              <GHC.Generics.R>_P
                                              <[Language.PureScript.Docs.Types.Constraint']>_R
                                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                 <*>_N
                                                                 <GHC.Generics.S>_P
                                                                 <'GHC.Generics.MetaSel
                                                                    'GHC.Base.Nothing
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy>_P
                                                                 <GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Language.PureScript.Docs.Types.Constraint']>_R) <x1>_N)
                                    g3
                                      `cast`
                                    (Sym (GHC.Generics.N:K1[0]
                                              <*>_N
                                              <GHC.Generics.R>_P
                                              <[([Data.Text.Internal.Text],
                                                 [Data.Text.Internal.Text])]>_R
                                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                 <*>_N
                                                                 <GHC.Generics.S>_P
                                                                 <'GHC.Generics.MetaSel
                                                                    'GHC.Base.Nothing
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy>_P
                                                                 <GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [([Data.Text.Internal.Text],
                                                                      [Data.Text.Internal.Text])]>_R) <x1>_N)))
                                `cast`
                              (Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "TypeClassDeclaration"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              [(Data.Text.Internal.Text,
                                                GHC.Base.Maybe
                                                  Language.PureScript.Docs.Types.Kind')])
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                'GHC.Base.Nothing
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                [Language.PureScript.Docs.Types.Constraint'])
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 'GHC.Base.Nothing
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [([Data.Text.Internal.Text],
                                                                                   [Data.Text.Internal.Text])]))>_R) <x1>_N)))
                   Language.PureScript.Docs.Types.AliasDeclaration g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "DataDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Environment.DataDeclType)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      [(Data.Text.Internal.Text,
                                                                        GHC.Base.Maybe
                                                                          Language.PureScript.Docs.Types.Kind')]))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternDataDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.Types.Kind'))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    [(Data.Text.Internal.Text,
                                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.Type'))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "TypeClassDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     [(Data.Text.Internal.Text,
                                                       GHC.Base.Maybe
                                                         Language.PureScript.Docs.Types.Kind')])
                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       [Language.PureScript.Docs.Types.Constraint'])
                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        [([Data.Text.Internal.Text],
                                                                                          [Data.Text.Internal.Text])]))))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "AliasDeclaration"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.AST.Operators.Fixity)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ExternKindDeclaration"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      [(Data.Text.Internal.Text,
                                        GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.Type'))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "TypeClassDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Data.Text.Internal.Text,
                                                         GHC.Base.Maybe
                                                           Language.PureScript.Docs.Types.Kind')])
                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         [Language.PureScript.Docs.Types.Constraint'])
                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                       GHC.Generics.S
                                                                                       ('GHC.Generics.MetaSel
                                                                                          'GHC.Base.Nothing
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          [([Data.Text.Internal.Text],
                                                                                            [Data.Text.Internal.Text])]))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ExternKindDeclaration"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ x1
                           (GHC.Generics.L1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Language.PureScript.Docs.RenderedCode.Types.FixityAlias)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ExternKindDeclaration"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ x1
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.AST.Operators.Fixity))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                 @ x1
                                 g1
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.AST.Operators.Fixity>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.AST.Operators.Fixity>_R) <x1>_N)
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_R) <x1>_N))
                                `cast`
                              (Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "AliasDeclaration"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Language.PureScript.AST.Operators.Fixity)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Language.PureScript.Docs.RenderedCode.Types.FixityAlias)>_R) <x1>_N)))
                   Language.PureScript.Docs.Types.ExternKindDeclaration
                   -> Language.PureScript.Docs.Types.$fGenericDeclarationInfo2
                        @ x1 }) -}
6bffcbe51cfc1535e94b4848f0a54360
  $fGenericDeclarationInfo2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R Language.PureScript.Docs.Types.Type'))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.Environment.DataDeclType)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  [(Data.Text.Internal.Text,
                                                    GHC.Base.Maybe
                                                      Language.PureScript.Docs.Types.Kind')]))
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "ExternDataDeclaration"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Language.PureScript.Docs.Types.Kind'))))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R
                [(Data.Text.Internal.Text,
                  GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.Docs.Types.Type'))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "TypeClassDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R
                                 [(Data.Text.Internal.Text,
                                   GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Language.PureScript.Docs.Types.Constraint'])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    'GHC.Base.Nothing
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [([Data.Text.Internal.Text],
                                                                      [Data.Text.Internal.Text])]))))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "ExternKindDeclaration"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "DataDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Environment.DataDeclType)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [(Data.Text.Internal.Text,
                                                                   GHC.Base.Maybe
                                                                     Language.PureScript.Docs.Types.Kind')]))
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "ExternDataDeclaration"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Docs.Types.Kind'))))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [(Data.Text.Internal.Text,
                                 GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Docs.Types.Type'))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "TypeClassDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Data.Text.Internal.Text,
                                                  GHC.Base.Maybe
                                                    Language.PureScript.Docs.Types.Kind')])
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  [Language.PureScript.Docs.Types.Constraint'])
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   [([Data.Text.Internal.Text],
                                                                                     [Data.Text.Internal.Text])]))))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "AliasDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.AST.Operators.Fixity)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "ExternKindDeclaration"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericDeclarationInfo3 @ x1)) -}
b9cadf1cf4849ffc07e2e6de99b81b90
  $fGenericDeclarationInfo3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R
               [(Data.Text.Internal.Text,
                 GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Language.PureScript.Docs.Types.Type'))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "TypeClassDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                [(Data.Text.Internal.Text,
                                  GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                           GHC.Generics.:*: (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  [Language.PureScript.Docs.Types.Constraint'])
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Base.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   [([Data.Text.Internal.Text],
                                                                     [Data.Text.Internal.Text])]))))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "ExternKindDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "TypeSynonymDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R
                              [(Data.Text.Internal.Text,
                                GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R Language.PureScript.Docs.Types.Type'))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "TypeClassDeclaration"
                                            'GHC.Generics.PrefixI
                                            'GHC.Types.False)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Data.Text.Internal.Text,
                                                 GHC.Base.Maybe
                                                   Language.PureScript.Docs.Types.Kind')])
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [Language.PureScript.Docs.Types.Constraint'])
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  'GHC.Base.Nothing
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  [([Data.Text.Internal.Text],
                                                                                    [Data.Text.Internal.Text])]))))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "ExternKindDeclaration"
                                            'GHC.Generics.PrefixI
                                            'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericDeclarationInfo4 @ x1)) -}
7d57e31fa2f36e7844080cae9947803c
  $fGenericDeclarationInfo4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R
                                Language.PureScript.Docs.RenderedCode.Types.FixityAlias)))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ExternKindDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "AliasDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1
                              GHC.Generics.R Language.PureScript.AST.Operators.Fixity)
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               Language.PureScript.Docs.RenderedCode.Types.FixityAlias)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ExternKindDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x1
                   (GHC.Generics.U1 @ * @ x1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "ExternKindDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x1>_N)) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fGenericDeclarationInfo_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.DeclarationInfo x
    -> Language.PureScript.Docs.Types.DeclarationInfo
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.DeclarationInfo x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_DeclarationInfo[0]) ; GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.D>_P
                                                                                          <'GHC.Generics.MetaData
                                                                                             "DeclarationInfo"
                                                                                             "Language.PureScript.Docs.Types"
                                                                                             "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                             'GHC.Types.False>_P
                                                                                          <(GHC.Generics.M1
                                                                                              GHC.Generics.C
                                                                                              ('GHC.Generics.MetaCons
                                                                                                 "ValueDeclaration"
                                                                                                 'GHC.Generics.PrefixI
                                                                                                 'GHC.Types.False)
                                                                                              (GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    'GHC.Base.Nothing
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    Language.PureScript.Docs.Types.Type'))
                                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                GHC.Generics.C
                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                   "DataDeclaration"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False)
                                                                                                                (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Language.PureScript.Environment.DataDeclType)
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       'GHC.Base.Nothing
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       [(Data.Text.Internal.Text,
                                                                                                                                         GHC.Base.Maybe
                                                                                                                                           Language.PureScript.Docs.Types.Kind')]))
                                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                 GHC.Generics.C
                                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                                    "ExternDataDeclaration"
                                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                                    'GHC.Types.False)
                                                                                                                                 (GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       'GHC.Base.Nothing
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       Language.PureScript.Docs.Types.Kind'))))
                                                                                           GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                                GHC.Generics.C
                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                   "TypeSynonymDeclaration"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False)
                                                                                                                (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      [(Data.Text.Internal.Text,
                                                                                                                        GHC.Base.Maybe
                                                                                                                          Language.PureScript.Docs.Types.Kind')])
                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       'GHC.Base.Nothing
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       Language.PureScript.Docs.Types.Type'))
                                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                 GHC.Generics.C
                                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                                    "TypeClassDeclaration"
                                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                                    'GHC.Types.False)
                                                                                                                                 (GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       'GHC.Base.Nothing
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       [(Data.Text.Internal.Text,
                                                                                                                                         GHC.Base.Maybe
                                                                                                                                           Language.PureScript.Docs.Types.Kind')])
                                                                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                      GHC.Generics.S
                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                         'GHC.Base.Nothing
                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                      (GHC.Generics.K1
                                                                                                                                                         GHC.Generics.R
                                                                                                                                                         [Language.PureScript.Docs.Types.Constraint'])
                                                                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                          'GHC.Base.Nothing
                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                          [([Data.Text.Internal.Text],
                                                                                                                                                                            [Data.Text.Internal.Text])]))))
                                                                                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                 GHC.Generics.C
                                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                                    "AliasDeclaration"
                                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                                    'GHC.Types.False)
                                                                                                                                 (GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       'GHC.Base.Nothing
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       Language.PureScript.AST.Operators.Fixity)
                                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.S
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        'GHC.Base.Nothing
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                        GHC.Generics.R
                                                                                                                                                        Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                                                                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                  GHC.Generics.C
                                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                                     "ExternKindDeclaration"
                                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                                     'GHC.Types.False)
                                                                                                                                                  GHC.Generics.U1))>_R) <x1>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> Language.PureScript.Docs.Types.ValueDeclaration
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Docs.Types.Type')>_R ; GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.S>_P
                                                                                        <'GHC.Generics.MetaSel
                                                                                           'GHC.Base.Nothing
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy>_P
                                                                                        <GHC.Generics.K1
                                                                                           GHC.Generics.R
                                                                                           Language.PureScript.Docs.Types.Type'>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                 <*>_N
                                                                                                                                                 <GHC.Generics.R>_P
                                                                                                                                                 <Language.PureScript.Docs.Types.Type'>_R
                                                                                                                                                 <x1>_P)
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "DataDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Environment.DataDeclType)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [(Data.Text.Internal.Text,
                                                                   GHC.Base.Maybe
                                                                     Language.PureScript.Docs.Types.Kind')])>_R <x1>_N) of wild3 { GHC.Generics.:*: ds4 ds5 ->
                                Language.PureScript.Docs.Types.DataDeclaration
                                  ds4
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Language.PureScript.Environment.DataDeclType>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.R>_P
                                                                                                       <Language.PureScript.Environment.DataDeclType>_R
                                                                                                       <x1>_P)
                                  ds5
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [(Data.Text.Internal.Text,
                                            GHC.Base.Maybe
                                              Language.PureScript.Docs.Types.Kind')]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                     <*>_N
                                                                                                     <GHC.Generics.R>_P
                                                                                                     <[(Data.Text.Internal.Text,
                                                                                                        GHC.Base.Maybe
                                                                                                          Language.PureScript.Docs.Types.Kind')]>_R
                                                                                                     <x1>_P) }
                             GHC.Generics.R1 ds3
                             -> Language.PureScript.Docs.Types.ExternDataDeclaration
                                  ds3
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "ExternDataDeclaration"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Language.PureScript.Docs.Types.Kind')>_R ; GHC.Generics.N:M1[0]
                                                                                             <*>_N
                                                                                             <GHC.Generics.S>_P
                                                                                             <'GHC.Generics.MetaSel
                                                                                                'GHC.Base.Nothing
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy>_P
                                                                                             <GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Language.PureScript.Docs.Types.Kind'>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                      <*>_N
                                                                                                                                                      <GHC.Generics.R>_P
                                                                                                                                                      <Language.PureScript.Docs.Types.Kind'>_R
                                                                                                                                                      <x1>_P) } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "TypeSynonymDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Data.Text.Internal.Text,
                                                  GHC.Base.Maybe
                                                    Language.PureScript.Docs.Types.Kind')])
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Docs.Types.Type')>_R <x1>_N) of wild3 { GHC.Generics.:*: ds4 ds5 ->
                                Language.PureScript.Docs.Types.TypeSynonymDeclaration
                                  ds4
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [(Data.Text.Internal.Text,
                                            GHC.Base.Maybe
                                              Language.PureScript.Docs.Types.Kind')]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                     <*>_N
                                                                                                     <GHC.Generics.R>_P
                                                                                                     <[(Data.Text.Internal.Text,
                                                                                                        GHC.Base.Maybe
                                                                                                          Language.PureScript.Docs.Types.Kind')]>_R
                                                                                                     <x1>_P)
                                  ds5
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Language.PureScript.Docs.Types.Type'>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.R>_P
                                                                                               <Language.PureScript.Docs.Types.Type'>_R
                                                                                               <x1>_P) }
                             GHC.Generics.R1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "TypeClassDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Data.Text.Internal.Text,
                                                  GHC.Base.Maybe
                                                    Language.PureScript.Docs.Types.Kind')])
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  [Language.PureScript.Docs.Types.Constraint'])
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   [([Data.Text.Internal.Text],
                                                                                     [Data.Text.Internal.Text])]))>_R <x1>_N) of wild3 { GHC.Generics.:*: ds4 ds5 ->
                                case ds5 of wild4 { GHC.Generics.:*: ds6 ds7 ->
                                Language.PureScript.Docs.Types.TypeClassDeclaration
                                  ds4
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [(Data.Text.Internal.Text,
                                            GHC.Base.Maybe
                                              Language.PureScript.Docs.Types.Kind')]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                     <*>_N
                                                                                                     <GHC.Generics.R>_P
                                                                                                     <[(Data.Text.Internal.Text,
                                                                                                        GHC.Base.Maybe
                                                                                                          Language.PureScript.Docs.Types.Kind')]>_R
                                                                                                     <x1>_P)
                                  ds6
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [Language.PureScript.Docs.Types.Constraint']>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.R>_P
                                                                                                       <[Language.PureScript.Docs.Types.Constraint']>_R
                                                                                                       <x1>_P)
                                  ds7
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [([Data.Text.Internal.Text],
                                            [Data.Text.Internal.Text])]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.R>_P
                                                                                        <[([Data.Text.Internal.Text],
                                                                                           [Data.Text.Internal.Text])]>_R
                                                                                        <x1>_P) } } }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "AliasDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.AST.Operators.Fixity)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Docs.RenderedCode.Types.FixityAlias)>_R <x1>_N) of wild3 { GHC.Generics.:*: ds4 ds5 ->
                                Language.PureScript.Docs.Types.AliasDeclaration
                                  ds4
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Language.PureScript.AST.Operators.Fixity>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                   <*>_N
                                                                                                   <GHC.Generics.R>_P
                                                                                                   <Language.PureScript.AST.Operators.Fixity>_R
                                                                                                   <x1>_P)
                                  ds5
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                  <*>_N
                                                                                                                  <GHC.Generics.R>_P
                                                                                                                  <Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_R
                                                                                                                  <x1>_P) }
                             GHC.Generics.R1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "ExternKindDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <x1>_N) of wild3 { GHC.Generics.U1 ->
                                Language.PureScript.Docs.Types.ExternKindDeclaration } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericDeclaration_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.Declaration x
    -> Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS(LS)),1*U(1*U(U,U),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.Declaration x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_Declaration[0]) ; (GHC.Generics.N:M1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.D>_P
                                                                                       <'GHC.Generics.MetaData
                                                                                          "Declaration"
                                                                                          "Language.PureScript.Docs.Types"
                                                                                          "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                          'GHC.Types.False>_P
                                                                                       <GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "Declaration"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.True)
                                                                                          ((GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 ('GHC.Base.Just
                                                                                                    "declTitle")
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 Data.Text.Internal.Text)
                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                               GHC.Generics.S
                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                  ('GHC.Base.Just
                                                                                                                     "declComments")
                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                               (GHC.Generics.K1
                                                                                                                  GHC.Generics.R
                                                                                                                  (GHC.Base.Maybe
                                                                                                                     Data.Text.Internal.Text)))
                                                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                                                               GHC.Generics.S
                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                  ('GHC.Base.Just
                                                                                                                     "declSourceSpan")
                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                               (GHC.Generics.K1
                                                                                                                  GHC.Generics.R
                                                                                                                  (GHC.Base.Maybe
                                                                                                                     Language.PureScript.AST.SourcePos.SourceSpan))
                                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Base.Just
                                                                                                                                       "declChildren")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    [Language.PureScript.Docs.Types.ChildDeclaration])
                                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                  GHC.Generics.S
                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                        "declInfo")
                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                     GHC.Generics.R
                                                                                                                                                     Language.PureScript.Docs.Types.DeclarationInfo))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                                                 <*>_N
                                                                                                                                                                                                                 <GHC.Generics.C>_P
                                                                                                                                                                                                                 <'GHC.Generics.MetaCons
                                                                                                                                                                                                                    "Declaration"
                                                                                                                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                                                                                                                    'GHC.Types.True>_P
                                                                                                                                                                                                                 <(GHC.Generics.M1
                                                                                                                                                                                                                     GHC.Generics.S
                                                                                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                                                           "declTitle")
                                                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                                                                                        GHC.Generics.R
                                                                                                                                                                                                                        Data.Text.Internal.Text)
                                                                                                                                                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                      GHC.Generics.S
                                                                                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                                                            "declComments")
                                                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                      (GHC.Generics.K1
                                                                                                                                                                                                                                         GHC.Generics.R
                                                                                                                                                                                                                                         (GHC.Base.Maybe
                                                                                                                                                                                                                                            Data.Text.Internal.Text)))
                                                                                                                                                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                                      GHC.Generics.S
                                                                                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                                                            "declSourceSpan")
                                                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                      (GHC.Generics.K1
                                                                                                                                                                                                                                         GHC.Generics.R
                                                                                                                                                                                                                                         (GHC.Base.Maybe
                                                                                                                                                                                                                                            Language.PureScript.AST.SourcePos.SourceSpan))
                                                                                                                                                                                                                                    GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                                                        GHC.Generics.S
                                                                                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                                                                                              "declChildren")
                                                                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                        (GHC.Generics.K1
                                                                                                                                                                                                                                                           GHC.Generics.R
                                                                                                                                                                                                                                                           [Language.PureScript.Docs.Types.ChildDeclaration])
                                                                                                                                                                                                                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                                                         GHC.Generics.S
                                                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                                                                                               "declInfo")
                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                         (GHC.Generics.K1
                                                                                                                                                                                                                                                                            GHC.Generics.R
                                                                                                                                                                                                                                                                            Language.PureScript.Docs.Types.DeclarationInfo)))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds6 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 Language.PureScript.Docs.Types.Declaration
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "declTitle")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "declComments")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              Data.Text.Internal.Text)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Base.Maybe
                                                                          Data.Text.Internal.Text>_R
                                                                       <x1>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "declSourceSpan")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              Language.PureScript.AST.SourcePos.SourceSpan)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                            <*>_N
                                                                                            <GHC.Generics.R>_P
                                                                                            <GHC.Base.Maybe
                                                                                               Language.PureScript.AST.SourcePos.SourceSpan>_R
                                                                                            <x1>_P)
                   ds7
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "declChildren")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Docs.Types.ChildDeclaration]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                             <*>_N
                                                                                             <GHC.Generics.R>_P
                                                                                             <[Language.PureScript.Docs.Types.ChildDeclaration]>_R
                                                                                             <x1>_P)
                   ds8
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "declInfo")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.Docs.Types.DeclarationInfo>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <Language.PureScript.Docs.Types.DeclarationInfo>_R
                                                                                          <x1>_P) } } } }) -}
8b305838d47692238020364c584ab76f
  $fGenericDocLink ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.DocLink
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DocLink
                  Language.PureScript.Docs.Types.$fGenericDocLink1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.DocLink>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "DocLink"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "DocLink" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "linkLocation")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           Language.PureScript.Docs.Types.LinkLocation)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "linkTitle")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Text.Internal.Text)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "linkNamespace")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Docs.RenderedCode.Types.Namespace)))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_DocLink[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericDocLink_$cto -}
8b305838d47692238020364c584ab76f
  $fGenericDocLink1 ::
    Language.PureScript.Docs.Types.DocLink
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "DocLink" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "linkLocation")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1
               GHC.Generics.R Language.PureScript.Docs.Types.LinkLocation)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "linkTitle")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "linkNamespace")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Language.PureScript.Docs.RenderedCode.Types.Namespace)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.DocLink) ->
                 case x2 of wild { Language.PureScript.Docs.Types.DocLink g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "linkLocation")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R Language.PureScript.Docs.Types.LinkLocation))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "linkTitle")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkNamespace")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             Language.PureScript.Docs.RenderedCode.Types.Namespace))
                    @ x1
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <Language.PureScript.Docs.Types.LinkLocation>_R
                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                 <*>_N
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "linkLocation")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Docs.Types.LinkLocation>_R) <x1>_N)
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "linkTitle")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "linkNamespace")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               Language.PureScript.Docs.RenderedCode.Types.Namespace))
                       @ x1
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "linkTitle")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N)
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Language.PureScript.Docs.RenderedCode.Types.Namespace>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "linkNamespace")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.RenderedCode.Types.Namespace>_R) <x1>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "DocLink" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "linkLocation")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.Docs.Types.LinkLocation)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "linkTitle")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "linkNamespace")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Language.PureScript.Docs.RenderedCode.Types.Namespace))>_R) <x1>_N) }) -}
8b305838d47692238020364c584ab76f
  $fGenericDocLink_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.DocLink x
    -> Language.PureScript.Docs.Types.DocLink
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.DocLink x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_DocLink[0]) ; (GHC.Generics.N:M1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.D>_P
                                                                                   <'GHC.Generics.MetaData
                                                                                      "DocLink"
                                                                                      "Language.PureScript.Docs.Types"
                                                                                      "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                      'GHC.Types.False>_P
                                                                                   <GHC.Generics.M1
                                                                                      GHC.Generics.C
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "DocLink"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.True)
                                                                                      (GHC.Generics.M1
                                                                                         GHC.Generics.S
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "linkLocation")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.K1
                                                                                            GHC.Generics.R
                                                                                            Language.PureScript.Docs.Types.LinkLocation)
                                                                                       GHC.Generics.:*: (GHC.Generics.M1
                                                                                                           GHC.Generics.S
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "linkTitle")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.K1
                                                                                                              GHC.Generics.R
                                                                                                              Data.Text.Internal.Text)
                                                                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                                                                            GHC.Generics.S
                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                               ('GHC.Base.Just
                                                                                                                                  "linkNamespace")
                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                            (GHC.Generics.K1
                                                                                                                               GHC.Generics.R
                                                                                                                               Language.PureScript.Docs.RenderedCode.Types.Namespace)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                                 <*>_N
                                                                                                                                                                                                 <GHC.Generics.C>_P
                                                                                                                                                                                                 <'GHC.Generics.MetaCons
                                                                                                                                                                                                    "DocLink"
                                                                                                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                                                                                                    'GHC.Types.True>_P
                                                                                                                                                                                                 <GHC.Generics.M1
                                                                                                                                                                                                    GHC.Generics.S
                                                                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                                          "linkLocation")
                                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                    (GHC.Generics.K1
                                                                                                                                                                                                       GHC.Generics.R
                                                                                                                                                                                                       Language.PureScript.Docs.Types.LinkLocation)
                                                                                                                                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                      GHC.Generics.S
                                                                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                                            "linkTitle")
                                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                      (GHC.Generics.K1
                                                                                                                                                                                                                         GHC.Generics.R
                                                                                                                                                                                                                         Data.Text.Internal.Text)
                                                                                                                                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                                                             "linkNamespace")
                                                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                                                                                          Language.PureScript.Docs.RenderedCode.Types.Namespace))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Language.PureScript.Docs.Types.DocLink
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "linkLocation")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.Docs.Types.LinkLocation>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.R>_P
                                                                                       <Language.PureScript.Docs.Types.LinkLocation>_R
                                                                                       <x1>_P)
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "linkTitle")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "linkNamespace")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.Docs.RenderedCode.Types.Namespace>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                 <*>_N
                                                                                                 <GHC.Generics.R>_P
                                                                                                 <Language.PureScript.Docs.RenderedCode.Types.Namespace>_R
                                                                                                 <x1>_P) } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericGithubRepo ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.GithubRepo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubRepo
                  Language.PureScript.Docs.Types.$fGenericGithubRepo2
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.GithubRepo>_R
                   ->_R Language.PureScript.Docs.Types.N:GithubRepo[0] ; (Sym (GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <Data.Text.Internal.Text>_R
                                                                                   <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.S>_P
                                                                                                       <'GHC.Generics.MetaSel
                                                                                                          ('GHC.Base.Just
                                                                                                             "runGithubRepo")
                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                          'GHC.Generics.DecidedLazy>_P
                                                                                                       <GHC.Generics.K1
                                                                                                          GHC.Generics.R
                                                                                                          Data.Text.Internal.Text>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                  <*>_N
                                                                                                                                                  <GHC.Generics.C>_P
                                                                                                                                                  <'GHC.Generics.MetaCons
                                                                                                                                                     "GithubRepo"
                                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                                     'GHC.Types.True>_P
                                                                                                                                                  <GHC.Generics.M1
                                                                                                                                                     GHC.Generics.S
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                           "runGithubRepo")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                        GHC.Generics.R
                                                                                                                                                        Data.Text.Internal.Text)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                 <*>_N
                                                                                                                                                                                                 <GHC.Generics.D>_P
                                                                                                                                                                                                 <'GHC.Generics.MetaData
                                                                                                                                                                                                    "GithubRepo"
                                                                                                                                                                                                    "Language.PureScript.Docs.Types"
                                                                                                                                                                                                    "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                                                                                                                                    'GHC.Types.True>_P
                                                                                                                                                                                                 <GHC.Generics.M1
                                                                                                                                                                                                    GHC.Generics.C
                                                                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                                                                       "GithubRepo"
                                                                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                                                                       'GHC.Types.True)
                                                                                                                                                                                                    (GHC.Generics.M1
                                                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "runGithubRepo")
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                                                          Data.Text.Internal.Text))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_GithubRepo[0]))))) <x1>_N))
                  Language.PureScript.Docs.Types.$fGenericGithubRepo1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <GHC.Generics.Rep Language.PureScript.Docs.Types.GithubRepo x1>_R
                   ->_R (Sub (Language.PureScript.Docs.Types.Rep_GithubRepo[0]) ; (GHC.Generics.N:M1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.D>_P
                                                                                       <'GHC.Generics.MetaData
                                                                                          "GithubRepo"
                                                                                          "Language.PureScript.Docs.Types"
                                                                                          "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                          'GHC.Types.True>_P
                                                                                       <GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "GithubRepo"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.True)
                                                                                          (GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "runGithubRepo")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.Text.Internal.Text))>_R ; (GHC.Generics.N:M1[0]
                                                                                                                                    <*>_N
                                                                                                                                    <GHC.Generics.C>_P
                                                                                                                                    <'GHC.Generics.MetaCons
                                                                                                                                       "GithubRepo"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.True>_P
                                                                                                                                    <GHC.Generics.M1
                                                                                                                                       GHC.Generics.S
                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                          ('GHC.Base.Just
                                                                                                                                             "runGithubRepo")
                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                       (GHC.Generics.K1
                                                                                                                                          GHC.Generics.R
                                                                                                                                          Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                            <*>_N
                                                                                                                                                                            <GHC.Generics.S>_P
                                                                                                                                                                            <'GHC.Generics.MetaSel
                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                  "runGithubRepo")
                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                               'GHC.Generics.DecidedLazy>_P
                                                                                                                                                                            <GHC.Generics.K1
                                                                                                                                                                               GHC.Generics.R
                                                                                                                                                                               Data.Text.Internal.Text>_R))) <x1>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                                                                                           <*>_N
                                                                                                                                                                                                                           <GHC.Generics.R>_P
                                                                                                                                                                                                                           <Data.Text.Internal.Text>_R
                                                                                                                                                                                                                           <x1>_P ; Sym (Language.PureScript.Docs.Types.N:GithubRepo[0]))) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericGithubRepo1 ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.GithubRepo x
    -> GHC.Generics.Rep Language.PureScript.Docs.Types.GithubRepo x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.GithubRepo x1) ->
                 ds) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericGithubRepo2 ::
    Language.PureScript.Docs.Types.GithubRepo
    -> Language.PureScript.Docs.Types.GithubRepo
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.GithubRepo) -> x2) -}
614d849a4354c290b33f6ef62142889d
  $fGenericGithubUser ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubUser
                  Language.PureScript.Docs.Types.$fGenericGithubUser2
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.GithubUser>_R
                   ->_R Language.PureScript.Docs.Types.N:GithubUser[0] ; (Sym (GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <Data.Text.Internal.Text>_R
                                                                                   <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.S>_P
                                                                                                       <'GHC.Generics.MetaSel
                                                                                                          ('GHC.Base.Just
                                                                                                             "runGithubUser")
                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                          'GHC.Generics.DecidedLazy>_P
                                                                                                       <GHC.Generics.K1
                                                                                                          GHC.Generics.R
                                                                                                          Data.Text.Internal.Text>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                  <*>_N
                                                                                                                                                  <GHC.Generics.C>_P
                                                                                                                                                  <'GHC.Generics.MetaCons
                                                                                                                                                     "GithubUser"
                                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                                     'GHC.Types.True>_P
                                                                                                                                                  <GHC.Generics.M1
                                                                                                                                                     GHC.Generics.S
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                           "runGithubUser")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                        GHC.Generics.R
                                                                                                                                                        Data.Text.Internal.Text)>_R) ; (Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                 <*>_N
                                                                                                                                                                                                 <GHC.Generics.D>_P
                                                                                                                                                                                                 <'GHC.Generics.MetaData
                                                                                                                                                                                                    "GithubUser"
                                                                                                                                                                                                    "Language.PureScript.Docs.Types"
                                                                                                                                                                                                    "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                                                                                                                                    'GHC.Types.True>_P
                                                                                                                                                                                                 <GHC.Generics.M1
                                                                                                                                                                                                    GHC.Generics.C
                                                                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                                                                       "GithubUser"
                                                                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                                                                       'GHC.Types.True)
                                                                                                                                                                                                    (GHC.Generics.M1
                                                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "runGithubUser")
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                                                          Data.Text.Internal.Text))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_GithubUser[0]))))) <x1>_N))
                  Language.PureScript.Docs.Types.$fGenericGithubUser1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <GHC.Generics.Rep Language.PureScript.Docs.Types.GithubUser x1>_R
                   ->_R (Sub (Language.PureScript.Docs.Types.Rep_GithubUser[0]) ; (GHC.Generics.N:M1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.D>_P
                                                                                       <'GHC.Generics.MetaData
                                                                                          "GithubUser"
                                                                                          "Language.PureScript.Docs.Types"
                                                                                          "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                          'GHC.Types.True>_P
                                                                                       <GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "GithubUser"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.True)
                                                                                          (GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "runGithubUser")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.Text.Internal.Text))>_R ; (GHC.Generics.N:M1[0]
                                                                                                                                    <*>_N
                                                                                                                                    <GHC.Generics.C>_P
                                                                                                                                    <'GHC.Generics.MetaCons
                                                                                                                                       "GithubUser"
                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                       'GHC.Types.True>_P
                                                                                                                                    <GHC.Generics.M1
                                                                                                                                       GHC.Generics.S
                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                          ('GHC.Base.Just
                                                                                                                                             "runGithubUser")
                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                       (GHC.Generics.K1
                                                                                                                                          GHC.Generics.R
                                                                                                                                          Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                            <*>_N
                                                                                                                                                                            <GHC.Generics.S>_P
                                                                                                                                                                            <'GHC.Generics.MetaSel
                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                  "runGithubUser")
                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                               'GHC.Generics.DecidedLazy>_P
                                                                                                                                                                            <GHC.Generics.K1
                                                                                                                                                                               GHC.Generics.R
                                                                                                                                                                               Data.Text.Internal.Text>_R))) <x1>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                                                                                           <*>_N
                                                                                                                                                                                                                           <GHC.Generics.R>_P
                                                                                                                                                                                                                           <Data.Text.Internal.Text>_R
                                                                                                                                                                                                                           <x1>_P ; Sym (Language.PureScript.Docs.Types.N:GithubUser[0]))) -}
614d849a4354c290b33f6ef62142889d
  $fGenericGithubUser1 ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.GithubUser x
    -> GHC.Generics.Rep Language.PureScript.Docs.Types.GithubUser x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.GithubUser x1) ->
                 ds) -}
614d849a4354c290b33f6ef62142889d
  $fGenericGithubUser2 ::
    Language.PureScript.Docs.Types.GithubUser
    -> Language.PureScript.Docs.Types.GithubUser
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.GithubUser) -> x2) -}
14acea96459ae0ba0727319f74cb7f69
  $fGenericInPackage ::
    GHC.Generics.Generic (Language.PureScript.Docs.Types.InPackage a)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Language.PureScript.Docs.Types.InPackage a)
                  (Language.PureScript.Docs.Types.$fGenericInPackage1 @ a)
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.InPackage a>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "InPackage"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Local" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a))
                                   GHC.Generics.:+: GHC.Generics.M1
                                                      GHC.Generics.C
                                                      ('GHC.Generics.MetaCons
                                                         "FromDep"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      (GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Web.Bower.PackageMeta.Internal.PackageName)
                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                          GHC.Generics.S
                                                                          ('GHC.Generics.MetaSel
                                                                             'GHC.Base.Nothing
                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                             'GHC.Generics.NoSourceStrictness
                                                                             'GHC.Generics.DecidedLazy)
                                                                          (GHC.Generics.K1
                                                                             GHC.Generics.R
                                                                             a))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_InPackage[0]
                                                                                                     <a>_N))) <x1>_N)
                  (Language.PureScript.Docs.Types.$fGenericInPackage_$cto @ a) -}
14acea96459ae0ba0727319f74cb7f69
  $fGenericInPackage1 ::
    Language.PureScript.Docs.Types.InPackage a
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Local" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R a)))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FromDep" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ x1 (x2 :: Language.PureScript.Docs.Types.InPackage a) ->
                 case x2 of wild {
                   Language.PureScript.Docs.Types.Local g1
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Local" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FromDep" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)))
                        @ x1
                        g1
                          `cast`
                        (Sym (GHC.Generics.N:K1[0]
                                  <*>_N
                                  <GHC.Generics.R>_P
                                  <a>_R
                                  <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         a>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                          <*>_N
                                                                          <GHC.Generics.C>_P
                                                                          <'GHC.Generics.MetaCons
                                                                             "Local"
                                                                             'GHC.Generics.PrefixI
                                                                             'GHC.Types.False>_P
                                                                          <GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                'GHC.Base.Nothing
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                a)>_R)) <x1>_N)
                   Language.PureScript.Docs.Types.FromDep g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Local" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FromDep" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)))
                        @ x1
                        (GHC.Generics.:*:
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a))
                           @ x1
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Web.Bower.PackageMeta.Internal.PackageName>_R
                                     <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           Web.Bower.PackageMeta.Internal.PackageName>_R) <x1>_N)
                           g2
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <a>_R
                                     <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R a>_R) <x1>_N))
                          `cast`
                        (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.C>_P
                                  <'GHC.Generics.MetaCons
                                     "FromDep" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                   GHC.Generics.:*: GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R a)>_R) <x1>_N) }) -}
14acea96459ae0ba0727319f74cb7f69
  $fGenericInPackage_$cto ::
    GHC.Generics.Rep (Language.PureScript.Docs.Types.InPackage a) x
    -> Language.PureScript.Docs.Types.InPackage a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   @ x1
                   (ds :: GHC.Generics.Rep
                            (Language.PureScript.Docs.Types.InPackage a) x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_InPackage[0]
                                 <a>_N) ; GHC.Generics.N:M1[0]
                                              <*>_N
                                              <GHC.Generics.D>_P
                                              <'GHC.Generics.MetaData
                                                 "InPackage"
                                                 "Language.PureScript.Docs.Types"
                                                 "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                 'GHC.Types.False>_P
                                              <GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Local" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1 GHC.Generics.R a))
                                               GHC.Generics.:+: GHC.Generics.M1
                                                                  GHC.Generics.C
                                                                  ('GHC.Generics.MetaCons
                                                                     "FromDep"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.False)
                                                                  (GHC.Generics.M1
                                                                     GHC.Generics.S
                                                                     ('GHC.Generics.MetaSel
                                                                        'GHC.Base.Nothing
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.K1
                                                                        GHC.Generics.R
                                                                        Web.Bower.PackageMeta.Internal.PackageName)
                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                      GHC.Generics.S
                                                                                      ('GHC.Generics.MetaSel
                                                                                         'GHC.Base.Nothing
                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                         'GHC.Generics.DecidedLazy)
                                                                                      (GHC.Generics.K1
                                                                                         GHC.Generics.R
                                                                                         a))>_R) <x1>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> Language.PureScript.Docs.Types.Local
                        @ a
                        ds1
                          `cast`
                        ((GHC.Generics.N:M1[0]
                              <*>_N
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "Local" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R a)>_R ; GHC.Generics.N:M1[0]
                                                                             <*>_N
                                                                             <GHC.Generics.S>_P
                                                                             <'GHC.Generics.MetaSel
                                                                                'GHC.Base.Nothing
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy>_P
                                                                             <GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                a>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                   <*>_N
                                                                                                   <GHC.Generics.R>_P
                                                                                                   <a>_R
                                                                                                   <x1>_P)
                   GHC.Generics.R1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "FromDep" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       a)>_R <x1>_N) of wild1 { GHC.Generics.:*: ds2 ds3 ->
                      Language.PureScript.Docs.Types.FromDep
                        @ a
                        ds2
                          `cast`
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                Web.Bower.PackageMeta.Internal.PackageName>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                           <*>_N
                                                                                           <GHC.Generics.R>_P
                                                                                           <Web.Bower.PackageMeta.Internal.PackageName>_R
                                                                                           <x1>_P)
                        ds3
                          `cast`
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R a>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                               <*>_N
                                                                               <GHC.Generics.R>_P
                                                                               <a>_R
                                                                               <x1>_P) } }) -}
465f85673aa60d600eec7529c7b12dab
  $fGenericLinkLocation ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.LinkLocation
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinkLocation
                  Language.PureScript.Docs.Types.$fGenericLinkLocation1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.LinkLocation>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "LinkLocation"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R Language.PureScript.Names.ModuleName))
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "DepsModule"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Web.Bower.PackageMeta.Internal.PackageName)
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Data.Version.Version)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                'GHC.Base.Nothing
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Language.PureScript.Names.ModuleName)))
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "BuiltinModule"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        (GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Names.ModuleName)))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_LinkLocation[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericLinkLocation_$cto -}
465f85673aa60d600eec7529c7b12dab
  $fGenericLinkLocation1 ::
    Language.PureScript.Docs.Types.LinkLocation
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Language.PureScript.Names.ModuleName)))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1
                  GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Names.ModuleName)))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Names.ModuleName)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (x2 :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case x2 of wild {
                   Language.PureScript.Docs.Types.LocalModule g1
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Names.ModuleName)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Names.ModuleName)))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "BuiltinModule"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Names.ModuleName)))
                        @ x1
                        g1
                          `cast`
                        (Sym (GHC.Generics.N:K1[0]
                                  <*>_N
                                  <GHC.Generics.R>_P
                                  <Language.PureScript.Names.ModuleName>_R
                                  <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         Language.PureScript.Names.ModuleName>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                             <*>_N
                                                                                                             <GHC.Generics.C>_P
                                                                                                             <'GHC.Generics.MetaCons
                                                                                                                "LocalModule"
                                                                                                                'GHC.Generics.PrefixI
                                                                                                                'GHC.Types.False>_P
                                                                                                             <GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   'GHC.Base.Nothing
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Language.PureScript.Names.ModuleName)>_R)) <x1>_N)
                   Language.PureScript.Docs.Types.DepsModule g1 g2 g3
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Names.ModuleName)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Names.ModuleName)))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "BuiltinModule"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Names.ModuleName)))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Version.Version)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Language.PureScript.Names.ModuleName))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Names.ModuleName)))
                           @ x1
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Names.ModuleName))
                              @ x1
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Web.Bower.PackageMeta.Internal.PackageName>_R
                                        <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                           <*>_N
                                                           <GHC.Generics.S>_P
                                                           <'GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy>_P
                                                           <GHC.Generics.K1
                                                              GHC.Generics.R
                                                              Web.Bower.PackageMeta.Internal.PackageName>_R) <x1>_N)
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.Names.ModuleName))
                                 @ x1
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Data.Version.Version>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Version.Version>_R) <x1>_N)
                                 g3
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Names.ModuleName>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Language.PureScript.Names.ModuleName>_R) <x1>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           Web.Bower.PackageMeta.Internal.PackageName)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Version.Version)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Names.ModuleName))>_R) <x1>_N))
                   Language.PureScript.Docs.Types.BuiltinModule g1
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Language.PureScript.Names.ModuleName)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Language.PureScript.Names.ModuleName)))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "BuiltinModule"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    Language.PureScript.Names.ModuleName)))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Version.Version)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Language.PureScript.Names.ModuleName))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Names.ModuleName)))
                           @ x1
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Names.ModuleName>_R
                                     <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                         <*>_N
                                                         <GHC.Generics.S>_P
                                                         <'GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy>_P
                                                         <GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Language.PureScript.Names.ModuleName>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                <*>_N
                                                                                                                <GHC.Generics.C>_P
                                                                                                                <'GHC.Generics.MetaCons
                                                                                                                   "BuiltinModule"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False>_P
                                                                                                                <GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Language.PureScript.Names.ModuleName)>_R)) <x1>_N)) }) -}
465f85673aa60d600eec7529c7b12dab
  $fGenericLinkLocation_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.LinkLocation x
    -> Language.PureScript.Docs.Types.LinkLocation
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.LinkLocation x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_LinkLocation[0]) ; GHC.Generics.N:M1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.D>_P
                                                                                       <'GHC.Generics.MetaData
                                                                                          "LinkLocation"
                                                                                          "Language.PureScript.Docs.Types"
                                                                                          "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                          'GHC.Types.False>_P
                                                                                       <GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "LocalModule"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.False)
                                                                                          (GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                'GHC.Base.Nothing
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Language.PureScript.Names.ModuleName))
                                                                                        GHC.Generics.:+: (GHC.Generics.M1
                                                                                                            GHC.Generics.C
                                                                                                            ('GHC.Generics.MetaCons
                                                                                                               "DepsModule"
                                                                                                               'GHC.Generics.PrefixI
                                                                                                               'GHC.Types.False)
                                                                                                            (GHC.Generics.M1
                                                                                                               GHC.Generics.S
                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                  'GHC.Base.Nothing
                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                               (GHC.Generics.K1
                                                                                                                  GHC.Generics.R
                                                                                                                  Web.Bower.PackageMeta.Internal.PackageName)
                                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    'GHC.Base.Nothing
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    Data.Version.Version)
                                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                  GHC.Generics.S
                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                     'GHC.Base.Nothing
                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                     GHC.Generics.R
                                                                                                                                                     Language.PureScript.Names.ModuleName)))
                                                                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                                                                             GHC.Generics.C
                                                                                                                             ('GHC.Generics.MetaCons
                                                                                                                                "BuiltinModule"
                                                                                                                                'GHC.Generics.PrefixI
                                                                                                                                'GHC.Types.False)
                                                                                                                             (GHC.Generics.M1
                                                                                                                                GHC.Generics.S
                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                   'GHC.Base.Nothing
                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                (GHC.Generics.K1
                                                                                                                                   GHC.Generics.R
                                                                                                                                   Language.PureScript.Names.ModuleName)))>_R) <x1>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> Language.PureScript.Docs.Types.LocalModule
                        ds1
                          `cast`
                        ((GHC.Generics.N:M1[0]
                              <*>_N
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    Language.PureScript.Names.ModuleName)>_R ; GHC.Generics.N:M1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.S>_P
                                                                                   <'GHC.Generics.MetaSel
                                                                                      'GHC.Base.Nothing
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy>_P
                                                                                   <GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Language.PureScript.Names.ModuleName>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                            <*>_N
                                                                                                                                            <GHC.Generics.R>_P
                                                                                                                                            <Language.PureScript.Names.ModuleName>_R
                                                                                                                                            <x1>_P)
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           Web.Bower.PackageMeta.Internal.PackageName)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Version.Version)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Names.ModuleName))>_R <x1>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           case ds4 of wild3 { GHC.Generics.:*: ds5 ds6 ->
                           Language.PureScript.Docs.Types.DepsModule
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Web.Bower.PackageMeta.Internal.PackageName>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                <*>_N
                                                                                                <GHC.Generics.R>_P
                                                                                                <Web.Bower.PackageMeta.Internal.PackageName>_R
                                                                                                <x1>_P)
                             ds5
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Data.Version.Version>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                          <*>_N
                                                                          <GHC.Generics.R>_P
                                                                          <Data.Version.Version>_R
                                                                          <x1>_P)
                             ds6
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Language.PureScript.Names.ModuleName>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <Language.PureScript.Names.ModuleName>_R
                                                                                          <x1>_P) } }
                        GHC.Generics.R1 ds2
                        -> Language.PureScript.Docs.Types.BuiltinModule
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Names.ModuleName)>_R ; GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.S>_P
                                                                                        <'GHC.Generics.MetaSel
                                                                                           'GHC.Base.Nothing
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy>_P
                                                                                        <GHC.Generics.K1
                                                                                           GHC.Generics.R
                                                                                           Language.PureScript.Names.ModuleName>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                 <*>_N
                                                                                                                                                 <GHC.Generics.R>_P
                                                                                                                                                 <Language.PureScript.Names.ModuleName>_R
                                                                                                                                                 <x1>_P) } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericLinksContext ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.LinksContext
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinksContext
                  Language.PureScript.Docs.Types.$fGenericLinksContext1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.LinksContext>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "LinksContext"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "LinksContext" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "ctxGithub")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            (Language.PureScript.Docs.Types.GithubUser,
                                             Language.PureScript.Docs.Types.GithubRepo))
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "ctxModuleMap")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              (Data.Map.Internal.Map
                                                                 Language.PureScript.Names.ModuleName
                                                                 Web.Bower.PackageMeta.Internal.PackageName))
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "ctxResolvedDependencies")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                                 Data.Version.Version)])))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "ctxPackageName")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Web.Bower.PackageMeta.Internal.PackageName)
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "ctxVersion")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Data.Version.Version)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "ctxVersionTag")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Data.Text.Internal.Text))))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_LinksContext[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericLinksContext_$cto -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericLinksContext1 ::
    Language.PureScript.Docs.Types.LinksContext
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LinksContext" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "ctxGithub")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R
                (Language.PureScript.Docs.Types.GithubUser,
                 Language.PureScript.Docs.Types.GithubRepo))
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "ctxModuleMap")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     Language.PureScript.Names.ModuleName
                                     Web.Bower.PackageMeta.Internal.PackageName))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "ctxResolvedDependencies")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [(Web.Bower.PackageMeta.Internal.PackageName,
                                                     Data.Version.Version)])))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "ctxPackageName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "ctxVersion")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Version.Version)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "ctxVersionTag")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.Text.Internal.Text))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.LinksContext) ->
                 case x2 of wild { Language.PureScript.Docs.Types.LinksContext g1 g2 g3 g4 g5 g6 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "ctxGithub")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            (Language.PureScript.Docs.Types.GithubUser,
                             Language.PureScript.Docs.Types.GithubRepo))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "ctxModuleMap")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (Data.Map.Internal.Map
                                                 Language.PureScript.Names.ModuleName
                                                 Web.Bower.PackageMeta.Internal.PackageName))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just
                                                                  "ctxResolvedDependencies")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                 Data.Version.Version)])))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "ctxPackageName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "ctxVersion")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "ctxVersionTag")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.Text.Internal.Text)))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "ctxGithub")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Language.PureScript.Docs.Types.GithubUser,
                                Language.PureScript.Docs.Types.GithubRepo)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "ctxModuleMap")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Data.Map.Internal.Map
                                  Language.PureScript.Names.ModuleName
                                  Web.Bower.PackageMeta.Internal.PackageName))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "ctxResolvedDependencies")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Web.Bower.PackageMeta.Internal.PackageName,
                                                  Data.Version.Version)]))
                       @ x1
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <(Language.PureScript.Docs.Types.GithubUser,
                                   Language.PureScript.Docs.Types.GithubRepo)>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "ctxGithub")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (Language.PureScript.Docs.Types.GithubUser,
                                                        Language.PureScript.Docs.Types.GithubRepo)>_R) <x1>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "ctxModuleMap")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     Language.PureScript.Names.ModuleName
                                     Web.Bower.PackageMeta.Internal.PackageName)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "ctxResolvedDependencies")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Web.Bower.PackageMeta.Internal.PackageName,
                                    Data.Version.Version)]))
                          @ x1
                          g2
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       Language.PureScript.Names.ModuleName
                                       Web.Bower.PackageMeta.Internal.PackageName>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "ctxModuleMap")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          (Data.Map.Internal.Map
                                                             Language.PureScript.Names.ModuleName
                                                             Web.Bower.PackageMeta.Internal.PackageName)>_R) <x1>_N)
                          g3
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[(Web.Bower.PackageMeta.Internal.PackageName,
                                       Data.Version.Version)]>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "ctxResolvedDependencies")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          [(Web.Bower.PackageMeta.Internal.PackageName,
                                                            Data.Version.Version)]>_R) <x1>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "ctxPackageName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "ctxVersion")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "ctxVersionTag")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))
                       @ x1
                       g4
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Web.Bower.PackageMeta.Internal.PackageName>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "ctxPackageName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Web.Bower.PackageMeta.Internal.PackageName>_R) <x1>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "ctxVersion")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "ctxVersionTag")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                          @ x1
                          g5
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Version.Version>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "ctxVersion")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Data.Version.Version>_R) <x1>_N)
                          g6
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Text.Internal.Text>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "ctxVersionTag")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Data.Text.Internal.Text>_R) <x1>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "LinksContext" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "ctxGithub")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Language.PureScript.Docs.Types.GithubUser,
                                   Language.PureScript.Docs.Types.GithubRepo))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "ctxModuleMap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Data.Map.Internal.Map
                                                       Language.PureScript.Names.ModuleName
                                                       Web.Bower.PackageMeta.Internal.PackageName))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "ctxResolvedDependencies")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                       Data.Version.Version)])))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "ctxPackageName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   Web.Bower.PackageMeta.Internal.PackageName)
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "ctxVersion")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     Data.Version.Version)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "ctxVersionTag")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Data.Text.Internal.Text)))>_R) <x1>_N) }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericLinksContext_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.LinksContext x
    -> Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(LS)),1*U(1*U(U,1*U(U,U)),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.LinksContext x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_LinksContext[0]) ; (GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.D>_P
                                                                                        <'GHC.Generics.MetaData
                                                                                           "LinksContext"
                                                                                           "Language.PureScript.Docs.Types"
                                                                                           "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                           'GHC.Types.False>_P
                                                                                        <GHC.Generics.M1
                                                                                           GHC.Generics.C
                                                                                           ('GHC.Generics.MetaCons
                                                                                              "LinksContext"
                                                                                              'GHC.Generics.PrefixI
                                                                                              'GHC.Types.True)
                                                                                           ((GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "ctxGithub")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  (Language.PureScript.Docs.Types.GithubUser,
                                                                                                   Language.PureScript.Docs.Types.GithubRepo))
                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                 GHC.Generics.S
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Base.Just
                                                                                                                       "ctxModuleMap")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.K1
                                                                                                                    GHC.Generics.R
                                                                                                                    (Data.Map.Internal.Map
                                                                                                                       Language.PureScript.Names.ModuleName
                                                                                                                       Web.Bower.PackageMeta.Internal.PackageName))
                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                  GHC.Generics.S
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Base.Just
                                                                                                                                        "ctxResolvedDependencies")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.K1
                                                                                                                                     GHC.Generics.R
                                                                                                                                     [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                                                                                       Data.Version.Version)])))
                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Base.Just
                                                                                                                      "ctxPackageName")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Web.Bower.PackageMeta.Internal.PackageName)
                                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                  GHC.Generics.S
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Base.Just
                                                                                                                                        "ctxVersion")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.K1
                                                                                                                                     GHC.Generics.R
                                                                                                                                     Data.Version.Version)
                                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                   GHC.Generics.S
                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                         "ctxVersionTag")
                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                      GHC.Generics.R
                                                                                                                                                      Data.Text.Internal.Text))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                           <*>_N
                                                                                                                                                                                           <GHC.Generics.C>_P
                                                                                                                                                                                           <'GHC.Generics.MetaCons
                                                                                                                                                                                              "LinksContext"
                                                                                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                                                                                              'GHC.Types.True>_P
                                                                                                                                                                                           <(GHC.Generics.M1
                                                                                                                                                                                               GHC.Generics.S
                                                                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "ctxGithub")
                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               (GHC.Generics.K1
                                                                                                                                                                                                  GHC.Generics.R
                                                                                                                                                                                                  (Language.PureScript.Docs.Types.GithubUser,
                                                                                                                                                                                                   Language.PureScript.Docs.Types.GithubRepo))
                                                                                                                                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                 GHC.Generics.S
                                                                                                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                                       "ctxModuleMap")
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                 (GHC.Generics.K1
                                                                                                                                                                                                                    GHC.Generics.R
                                                                                                                                                                                                                    (Data.Map.Internal.Map
                                                                                                                                                                                                                       Language.PureScript.Names.ModuleName
                                                                                                                                                                                                                       Web.Bower.PackageMeta.Internal.PackageName))
                                                                                                                                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                                        "ctxResolvedDependencies")
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                                                                                                     GHC.Generics.R
                                                                                                                                                                                                                                     [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                                                                                                                                                                                       Data.Version.Version)])))
                                                                                                                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                GHC.Generics.S
                                                                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "ctxPackageName")
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                                                                                   GHC.Generics.R
                                                                                                                                                                                                                   Web.Bower.PackageMeta.Internal.PackageName)
                                                                                                                                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                                        "ctxVersion")
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                                                                                                     GHC.Generics.R
                                                                                                                                                                                                                                     Data.Version.Version)
                                                                                                                                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                                   GHC.Generics.S
                                                                                                                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                                                         "ctxVersionTag")
                                                                                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                                                                                                                      GHC.Generics.R
                                                                                                                                                                                                                                                      Data.Text.Internal.Text)))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds4 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds2 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds8 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 Language.PureScript.Docs.Types.LinksContext
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "ctxGithub")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Language.PureScript.Docs.Types.GithubUser,
                            Language.PureScript.Docs.Types.GithubRepo)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.R>_P
                                                                                       <(Language.PureScript.Docs.Types.GithubUser,
                                                                                         Language.PureScript.Docs.Types.GithubRepo)>_R
                                                                                       <x1>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "ctxModuleMap")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName
                              Web.Bower.PackageMeta.Internal.PackageName)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <Data.Map.Internal.Map
                                                                                             Language.PureScript.Names.ModuleName
                                                                                             Web.Bower.PackageMeta.Internal.PackageName>_R
                                                                                          <x1>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "ctxResolvedDependencies")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Version.Version)]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                    <*>_N
                                                                    <GHC.Generics.R>_P
                                                                    <[(Web.Bower.PackageMeta.Internal.PackageName,
                                                                       Data.Version.Version)]>_R
                                                                    <x1>_P)
                   ds7
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "ctxPackageName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Web.Bower.PackageMeta.Internal.PackageName>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                      <*>_N
                                                                                      <GHC.Generics.R>_P
                                                                                      <Web.Bower.PackageMeta.Internal.PackageName>_R
                                                                                      <x1>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "ctxVersion")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Version.Version>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                <*>_N
                                                                <GHC.Generics.R>_P
                                                                <Data.Version.Version>_R
                                                                <x1>_P)
                   ds10
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "ctxVersionTag")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P) } } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericModule ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.Module
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Module
                  Language.PureScript.Docs.Types.$fGenericModule1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.Module>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Module"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Module" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "modName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R Language.PureScript.Names.ModuleName)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "modComments")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Data.Text.Internal.Text)))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "modDeclarations")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [Language.PureScript.Docs.Types.Declaration])
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "modReExports")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [(Language.PureScript.Docs.Types.InPackage
                                                                                  Language.PureScript.Names.ModuleName,
                                                                                [Language.PureScript.Docs.Types.Declaration])])))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_Module[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericModule_$cto -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericModule1 ::
    Language.PureScript.Docs.Types.Module
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Module" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "modName")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R Language.PureScript.Names.ModuleName)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "modComments")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "modDeclarations")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R [Language.PureScript.Docs.Types.Declaration])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "modReExports")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  [(Language.PureScript.Docs.Types.InPackage
                                                      Language.PureScript.Names.ModuleName,
                                                    [Language.PureScript.Docs.Types.Declaration])])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.Module) ->
                 case x2 of wild { Language.PureScript.Docs.Types.Module g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "modName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R Language.PureScript.Names.ModuleName)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "modComments")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             (GHC.Base.Maybe Data.Text.Internal.Text)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "modDeclarations")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R [Language.PureScript.Docs.Types.Declaration])
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "modReExports")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             [(Language.PureScript.Docs.Types.InPackage
                                                 Language.PureScript.Names.ModuleName,
                                               [Language.PureScript.Docs.Types.Declaration])]))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "modName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Language.PureScript.Names.ModuleName))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "modComments")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe Data.Text.Internal.Text)))
                       @ x1
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Language.PureScript.Names.ModuleName>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "modName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Names.ModuleName>_R) <x1>_N)
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.Maybe Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "modComments")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (GHC.Base.Maybe
                                                          Data.Text.Internal.Text)>_R) <x1>_N))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "modDeclarations")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R [Language.PureScript.Docs.Types.Declaration]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "modReExports")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [(Language.PureScript.Docs.Types.InPackage
                                   Language.PureScript.Names.ModuleName,
                                 [Language.PureScript.Docs.Types.Declaration])]))
                       @ x1
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[Language.PureScript.Docs.Types.Declaration]>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "modDeclarations")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [Language.PureScript.Docs.Types.Declaration]>_R) <x1>_N)
                       g4
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[(Language.PureScript.Docs.Types.InPackage
                                      Language.PureScript.Names.ModuleName,
                                    [Language.PureScript.Docs.Types.Declaration])]>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "modReExports")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       [(Language.PureScript.Docs.Types.InPackage
                                                           Language.PureScript.Names.ModuleName,
                                                         [Language.PureScript.Docs.Types.Declaration])]>_R) <x1>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Module" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "modName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Language.PureScript.Names.ModuleName)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "modComments")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe Data.Text.Internal.Text)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "modDeclarations")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Language.PureScript.Docs.Types.Declaration])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "modReExports")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [(Language.PureScript.Docs.Types.InPackage
                                                                        Language.PureScript.Names.ModuleName,
                                                                      [Language.PureScript.Docs.Types.Declaration])]))>_R) <x1>_N) }) -}
cce819b6566f028d040fc57bb265fd8d
  $fGenericModule_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.Module x
    -> Language.PureScript.Docs.Types.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.Module x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_Module[0]) ; (GHC.Generics.N:M1[0]
                                                                                  <*>_N
                                                                                  <GHC.Generics.D>_P
                                                                                  <'GHC.Generics.MetaData
                                                                                     "Module"
                                                                                     "Language.PureScript.Docs.Types"
                                                                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                     'GHC.Types.False>_P
                                                                                  <GHC.Generics.M1
                                                                                     GHC.Generics.C
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Module"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.True)
                                                                                     ((GHC.Generics.M1
                                                                                         GHC.Generics.S
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "modName")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.K1
                                                                                            GHC.Generics.R
                                                                                            Language.PureScript.Names.ModuleName)
                                                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                                                          GHC.Generics.S
                                                                                                          ('GHC.Generics.MetaSel
                                                                                                             ('GHC.Base.Just
                                                                                                                "modComments")
                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                          (GHC.Generics.K1
                                                                                                             GHC.Generics.R
                                                                                                             (GHC.Base.Maybe
                                                                                                                Data.Text.Internal.Text)))
                                                                                      GHC.Generics.:*: (GHC.Generics.M1
                                                                                                          GHC.Generics.S
                                                                                                          ('GHC.Generics.MetaSel
                                                                                                             ('GHC.Base.Just
                                                                                                                "modDeclarations")
                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                          (GHC.Generics.K1
                                                                                                             GHC.Generics.R
                                                                                                             [Language.PureScript.Docs.Types.Declaration])
                                                                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                                                                           GHC.Generics.S
                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                              ('GHC.Base.Just
                                                                                                                                 "modReExports")
                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                           (GHC.Generics.K1
                                                                                                                              GHC.Generics.R
                                                                                                                              [(Language.PureScript.Docs.Types.InPackage
                                                                                                                                  Language.PureScript.Names.ModuleName,
                                                                                                                                [Language.PureScript.Docs.Types.Declaration])])))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                                           <*>_N
                                                                                                                                                                                           <GHC.Generics.C>_P
                                                                                                                                                                                           <'GHC.Generics.MetaCons
                                                                                                                                                                                              "Module"
                                                                                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                                                                                              'GHC.Types.True>_P
                                                                                                                                                                                           <(GHC.Generics.M1
                                                                                                                                                                                               GHC.Generics.S
                                                                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "modName")
                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               (GHC.Generics.K1
                                                                                                                                                                                                  GHC.Generics.R
                                                                                                                                                                                                  Language.PureScript.Names.ModuleName)
                                                                                                                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                GHC.Generics.S
                                                                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "modComments")
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                                                                                   GHC.Generics.R
                                                                                                                                                                                                                   (GHC.Base.Maybe
                                                                                                                                                                                                                      Data.Text.Internal.Text)))
                                                                                                                                                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                                GHC.Generics.S
                                                                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "modDeclarations")
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                                                                                   GHC.Generics.R
                                                                                                                                                                                                                   [Language.PureScript.Docs.Types.Declaration])
                                                                                                                                                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                                 GHC.Generics.S
                                                                                                                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                                                       "modReExports")
                                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                 (GHC.Generics.K1
                                                                                                                                                                                                                                    GHC.Generics.R
                                                                                                                                                                                                                                    [(Language.PureScript.Docs.Types.InPackage
                                                                                                                                                                                                                                        Language.PureScript.Names.ModuleName,
                                                                                                                                                                                                                                      [Language.PureScript.Docs.Types.Declaration])]))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Language.PureScript.Docs.Types.Module
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "modName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Language.PureScript.Names.ModuleName>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.R>_P
                                                                                <Language.PureScript.Names.ModuleName>_R
                                                                                <x1>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "modComments")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              Data.Text.Internal.Text)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Base.Maybe
                                                                          Data.Text.Internal.Text>_R
                                                                       <x1>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "modDeclarations")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Docs.Types.Declaration]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.R>_P
                                                                                        <[Language.PureScript.Docs.Types.Declaration]>_R
                                                                                        <x1>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "modReExports")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                            <*>_N
                                                                                            <GHC.Generics.R>_P
                                                                                            <[(Language.PureScript.Docs.Types.InPackage
                                                                                                 Language.PureScript.Names.ModuleName,
                                                                                               [Language.PureScript.Docs.Types.Declaration])]>_R
                                                                                            <x1>_P) } } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fGenericNotYetKnown ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.NotYetKnown
                  Language.PureScript.Docs.Types.$fGenericNotYetKnown1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.NotYetKnown>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "NotYetKnown"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "NotYetKnown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_NotYetKnown[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericNotYetKnown_$cto -}
4171d1f05d5de1cd94713164f91b8004
  $fGenericNotYetKnown1 ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "NotYetKnown" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case x2 of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 (GHC.Generics.U1 @ * @ x1)
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "NotYetKnown" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                           <GHC.Generics.U1>_R) <x1>_N) }) -}
4171d1f05d5de1cd94713164f91b8004
  $fGenericNotYetKnown_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.NotYetKnown x
    -> Language.PureScript.Docs.Types.NotYetKnown
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.NotYetKnown x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_NotYetKnown[0]) ; (GHC.Generics.N:M1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.D>_P
                                                                                       <'GHC.Generics.MetaData
                                                                                          "NotYetKnown"
                                                                                          "Language.PureScript.Docs.Types"
                                                                                          "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                          'GHC.Types.False>_P
                                                                                       <GHC.Generics.M1
                                                                                          GHC.Generics.C
                                                                                          ('GHC.Generics.MetaCons
                                                                                             "NotYetKnown"
                                                                                             'GHC.Generics.PrefixI
                                                                                             'GHC.Types.False)
                                                                                          GHC.Generics.U1>_R ; GHC.Generics.N:M1[0]
                                                                                                                   <*>_N
                                                                                                                   <GHC.Generics.C>_P
                                                                                                                   <'GHC.Generics.MetaCons
                                                                                                                      "NotYetKnown"
                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                      'GHC.Types.False>_P
                                                                                                                   <GHC.Generics.U1>_R)) <x1>_N) of wild { GHC.Generics.U1 ->
                 Language.PureScript.Docs.Types.NotYetKnown }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericPackage ::
    GHC.Generics.Generic (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Language.PureScript.Docs.Types.Package a)
                  (Language.PureScript.Docs.Types.$fGenericPackage1 @ a)
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.Package a>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Package"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (((GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "pkgMeta")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R
                                             Web.Bower.PackageMeta.Internal.PackageMeta)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "pkgVersion")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R Data.Version.Version))
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "pkgVersionTag")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              Data.Text.Internal.Text)
                                                         GHC.Generics.:*: (GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "pkgTagTime")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                (GHC.Base.Maybe
                                                                                   Data.Time.Clock.Internal.UTCTime.UTCTime))
                                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 ('GHC.Base.Just
                                                                                                    "pkgModules")
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 [Language.PureScript.Docs.Types.Module]))))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "pkgModuleMap")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              (Data.Map.Internal.Map
                                                                 Language.PureScript.Names.ModuleName
                                                                 Web.Bower.PackageMeta.Internal.PackageName))
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "pkgResolvedDependencies")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                                 Data.Version.Version)]))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "pkgGithub")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Language.PureScript.Docs.Types.GithubUser,
                                                                                Language.PureScript.Docs.Types.GithubRepo))
                                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 ('GHC.Base.Just
                                                                                                    "pkgUploader")
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 a)
                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                               GHC.Generics.S
                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                  ('GHC.Base.Just
                                                                                                                     "pkgCompilerVersion")
                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                               (GHC.Generics.K1
                                                                                                                  GHC.Generics.R
                                                                                                                  Data.Version.Version)))))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_Package[0]
                                                                                                                                                                <a>_N))) <x1>_N)
                  (Language.PureScript.Docs.Types.$fGenericPackage_$cto @ a) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericPackage1 ::
    Language.PureScript.Docs.Types.Package a
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (((GHC.Generics.M1
              GHC.Generics.S
              ('GHC.Generics.MetaSel
                 ('GHC.Base.Just "pkgMeta")
                 'GHC.Generics.NoSourceUnpackedness
                 'GHC.Generics.NoSourceStrictness
                 'GHC.Generics.DecidedLazy)
              (GHC.Generics.K1
                 GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageMeta)
            GHC.Generics.:*: GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgVersion")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgVersionTag")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pkgTagTime")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Base.Maybe
                                                       Data.Time.Clock.Internal.UTCTime.UTCTime))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "pkgModules")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     [Language.PureScript.Docs.Types.Module]))))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgModuleMap")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     Language.PureScript.Names.ModuleName
                                     Web.Bower.PackageMeta.Internal.PackageName))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "pkgResolvedDependencies")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [(Web.Bower.PackageMeta.Internal.PackageName,
                                                     Data.Version.Version)]))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "pkgGithub")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (Language.PureScript.Docs.Types.GithubUser,
                                                    Language.PureScript.Docs.Types.GithubRepo))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "pkgUploader")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1 GHC.Generics.R a)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "pkgCompilerVersion")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Data.Version.Version)))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U)>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ x1 (w :: Language.PureScript.Docs.Types.Package a) ->
                 case w of ww { Language.PureScript.Docs.Types.Package ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 (GHC.Generics.:*:
                    @ *
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "pkgMeta")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1
                             GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageMeta)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "pkgVersion")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "pkgVersionTag")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pkgTagTime")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe
                                                                   Data.Time.Clock.Internal.UTCTime.UTCTime))
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pkgModules")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Language.PureScript.Docs.Types.Module]))))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "pkgModuleMap")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1
                             GHC.Generics.R
                             (Data.Map.Internal.Map
                                Language.PureScript.Names.ModuleName
                                Web.Bower.PackageMeta.Internal.PackageName))
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "pkgResolvedDependencies")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              [(Web.Bower.PackageMeta.Internal.PackageName,
                                                Data.Version.Version)]))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "pkgGithub")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (Language.PureScript.Docs.Types.GithubUser,
                                               Language.PureScript.Docs.Types.GithubRepo))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "pkgUploader")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1 GHC.Generics.R a)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "pkgCompilerVersion")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Data.Version.Version))))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "pkgMeta")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageMeta)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pkgVersion")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "pkgVersionTag")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                          GHC.Generics.:*: (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "pkgTagTime")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1
                                                 GHC.Generics.R
                                                 (GHC.Base.Maybe
                                                    Data.Time.Clock.Internal.UTCTime.UTCTime))
                                            GHC.Generics.:*: GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "pkgModules")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  [Language.PureScript.Docs.Types.Module])))
                       @ x1
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgMeta")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageMeta))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgVersion")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                          @ x1
                          ww1
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Web.Bower.PackageMeta.Internal.PackageMeta>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgMeta")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Web.Bower.PackageMeta.Internal.PackageMeta>_R) <x1>_N)
                          ww2
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Version.Version>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgVersion")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Data.Version.Version>_R) <x1>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgVersionTag")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgTagTime")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (GHC.Base.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "pkgModules")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Language.PureScript.Docs.Types.Module]))
                          @ x1
                          ww3
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Text.Internal.Text>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgVersionTag")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          Data.Text.Internal.Text>_R) <x1>_N)
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pkgTagTime")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R
                                     (GHC.Base.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime)))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pkgModules")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1
                                     GHC.Generics.R [Language.PureScript.Docs.Types.Module]))
                             @ x1
                             ww4
                               `cast`
                             (Sym (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                                       <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "pkgTagTime")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe
                                                                Data.Time.Clock.Internal.UTCTime.UTCTime)>_R) <x1>_N)
                             ww5
                               `cast`
                             (Sym (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <[Language.PureScript.Docs.Types.Module]>_R
                                       <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "pkgModules")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             [Language.PureScript.Docs.Types.Module]>_R) <x1>_N))))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "pkgModuleMap")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Data.Map.Internal.Map
                                  Language.PureScript.Names.ModuleName
                                  Web.Bower.PackageMeta.Internal.PackageName))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "pkgResolvedDependencies")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Web.Bower.PackageMeta.Internal.PackageName,
                                                  Data.Version.Version)]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "pkgGithub")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               (Language.PureScript.Docs.Types.GithubUser,
                                Language.PureScript.Docs.Types.GithubRepo))
                          GHC.Generics.:*: (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "pkgUploader")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1 GHC.Generics.R a)
                                            GHC.Generics.:*: GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just
                                                                     "pkgCompilerVersion")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Version.Version)))
                       @ x1
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgModuleMap")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Data.Map.Internal.Map
                                     Language.PureScript.Names.ModuleName
                                     Web.Bower.PackageMeta.Internal.PackageName)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgResolvedDependencies")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Web.Bower.PackageMeta.Internal.PackageName,
                                    Data.Version.Version)]))
                          @ x1
                          ww6
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Data.Map.Internal.Map
                                       Language.PureScript.Names.ModuleName
                                       Web.Bower.PackageMeta.Internal.PackageName>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgModuleMap")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          (Data.Map.Internal.Map
                                                             Language.PureScript.Names.ModuleName
                                                             Web.Bower.PackageMeta.Internal.PackageName)>_R) <x1>_N)
                          ww7
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[(Web.Bower.PackageMeta.Internal.PackageName,
                                       Data.Version.Version)]>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgResolvedDependencies")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          [(Web.Bower.PackageMeta.Internal.PackageName,
                                                            Data.Version.Version)]>_R) <x1>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgGithub")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Language.PureScript.Docs.Types.GithubUser,
                                   Language.PureScript.Docs.Types.GithubRepo)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "pkgUploader")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R a)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "pkgCompilerVersion")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Version.Version))
                          @ x1
                          ww8
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <(Language.PureScript.Docs.Types.GithubUser,
                                      Language.PureScript.Docs.Types.GithubRepo)>_R
                                    <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.S>_P
                                                       <'GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgGithub")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy>_P
                                                       <GHC.Generics.K1
                                                          GHC.Generics.R
                                                          (Language.PureScript.Docs.Types.GithubUser,
                                                           Language.PureScript.Docs.Types.GithubRepo)>_R) <x1>_N)
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pkgUploader")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R a))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "pkgCompilerVersion")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                             @ x1
                             ww9
                               `cast`
                             (Sym (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <a>_R
                                       <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "pkgUploader")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R a>_R) <x1>_N)
                             ww10
                               `cast`
                             (Sym (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <Data.Version.Version>_R
                                       <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "pkgCompilerVersion")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Data.Version.Version>_R) <x1>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Package" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "pkgMeta")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageMeta)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pkgVersion")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Data.Version.Version))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pkgVersionTag")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Data.Text.Internal.Text)
                                               GHC.Generics.:*: (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "pkgTagTime")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      (GHC.Base.Maybe
                                                                         Data.Time.Clock.Internal.UTCTime.UTCTime))
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "pkgModules")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       [Language.PureScript.Docs.Types.Module]))))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "pkgModuleMap")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Data.Map.Internal.Map
                                                       Language.PureScript.Names.ModuleName
                                                       Web.Bower.PackageMeta.Internal.PackageName))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "pkgResolvedDependencies")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                       Data.Version.Version)]))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "pkgGithub")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Docs.Types.GithubUser,
                                                                      Language.PureScript.Docs.Types.GithubRepo))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Base.Just
                                                                                          "pkgUploader")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       a)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Base.Just
                                                                                                           "pkgCompilerVersion")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        Data.Version.Version))))>_R) <x1>_N) }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fGenericPackageError ::
    GHC.Generics.Generic Language.PureScript.Docs.Types.PackageError
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.PackageError
                  Language.PureScript.Docs.Types.$fGenericPackageError1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Language.PureScript.Docs.Types.PackageError>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "PackageError"
                                     "Language.PureScript.Docs.Types"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <((GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             'GHC.Base.Nothing
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R Data.Version.Version))
                                     GHC.Generics.:+: GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "ErrorInPackageMeta"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              Language.PureScript.Docs.Types.ManifestError)))
                                    GHC.Generics.:+: (GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "InvalidVersion"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1
                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "InvalidDeclarationType"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Data.Text.Internal.Text))))
                                   GHC.Generics.:+: ((GHC.Generics.M1
                                                        GHC.Generics.C
                                                        ('GHC.Generics.MetaCons
                                                           "InvalidChildDeclarationType"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              'GHC.Base.Nothing
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              Data.Text.Internal.Text))
                                                      GHC.Generics.:+: GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "InvalidFixity"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1)
                                                     GHC.Generics.:+: (GHC.Generics.M1
                                                                         GHC.Generics.C
                                                                         ('GHC.Generics.MetaCons
                                                                            "InvalidKind"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               Data.Text.Internal.Text))
                                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                                           GHC.Generics.C
                                                                                           ('GHC.Generics.MetaCons
                                                                                              "InvalidDataDeclType"
                                                                                              'GHC.Generics.PrefixI
                                                                                              'GHC.Types.False)
                                                                                           (GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 'GHC.Base.Nothing
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 Data.Text.Internal.Text))
                                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                                            GHC.Generics.C
                                                                                                            ('GHC.Generics.MetaCons
                                                                                                               "InvalidTime"
                                                                                                               'GHC.Generics.PrefixI
                                                                                                               'GHC.Types.False)
                                                                                                            GHC.Generics.U1)))>_R) ; Sub (Sym (Language.PureScript.Docs.Types.Rep_PackageError[0]))) <x1>_N)
                  Language.PureScript.Docs.Types.$fGenericPackageError_$cto -}
f66d967ff562407ff6a522c1eb0528e6
  $fGenericPackageError1 ::
    Language.PureScript.Docs.Types.PackageError
    -> (GHC.Generics.:+:)
         ((GHC.Generics.M1
             GHC.Generics.C
             ('GHC.Generics.MetaCons
                "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
             (GHC.Generics.M1
                GHC.Generics.S
                ('GHC.Generics.MetaSel
                   'GHC.Base.Nothing
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.NoSourceStrictness
                   'GHC.Generics.DecidedLazy)
                (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
              GHC.Generics.:*: GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
           GHC.Generics.:+: GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R Language.PureScript.Docs.Types.ManifestError)))
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidDeclarationType"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))))
         ((GHC.Generics.M1
             GHC.Generics.C
             ('GHC.Generics.MetaCons
                "InvalidChildDeclarationType"
                'GHC.Generics.PrefixI
                'GHC.Types.False)
             (GHC.Generics.M1
                GHC.Generics.S
                ('GHC.Generics.MetaSel
                   'GHC.Base.Nothing
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.NoSourceStrictness
                   'GHC.Generics.DecidedLazy)
                (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
           GHC.Generics.:+: GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: (GHC.Generics.M1
                                                GHC.Generics.C
                                                ('GHC.Generics.MetaCons
                                                   "InvalidDataDeclType"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                (GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      'GHC.Base.Nothing
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R Data.Text.Internal.Text))
                                              GHC.Generics.:+: GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidTime"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (x2 :: Language.PureScript.Docs.Types.PackageError) ->
                 case x2 of wild {
                   Language.PureScript.Docs.Types.CompilerTooOld g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ErrorInPackageMeta"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.ManifestError)))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidVersion"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "InvalidDeclarationType"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidChildDeclarationType"
                                 'GHC.Generics.PrefixI
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidFixity"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidKind"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidDataDeclType"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "InvalidTime"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Version.Version))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ErrorInPackageMeta"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.ManifestError)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "InvalidDeclarationType"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Text.Internal.Text)))
                           @ x1
                           (GHC.Generics.L1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R Data.Version.Version)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Docs.Types.ManifestError)))
                              @ x1
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                                 @ x1
                                 g1
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Data.Version.Version>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Version.Version>_R) <x1>_N)
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Data.Version.Version>_R
                                           <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Version.Version>_R) <x1>_N))
                                `cast`
                              (Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "CompilerTooOld"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.Version.Version)>_R) <x1>_N)))
                   Language.PureScript.Docs.Types.ErrorInPackageMeta g1
                   -> GHC.Generics.L1
                        @ *
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ErrorInPackageMeta"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.ManifestError)))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidVersion"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "InvalidDeclarationType"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidChildDeclarationType"
                                 'GHC.Generics.PrefixI
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidFixity"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidKind"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidDataDeclType"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "InvalidTime"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Version.Version))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ErrorInPackageMeta"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.ManifestError)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "InvalidDeclarationType"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Text.Internal.Text)))
                           @ x1
                           (GHC.Generics.R1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          'GHC.Base.Nothing
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R Data.Version.Version)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Docs.Types.ManifestError)))
                              @ x1
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Language.PureScript.Docs.Types.ManifestError>_R
                                        <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                            <*>_N
                                                            <GHC.Generics.S>_P
                                                            <'GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy>_P
                                                            <GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Language.PureScript.Docs.Types.ManifestError>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                           <*>_N
                                                                                                                           <GHC.Generics.C>_P
                                                                                                                           <'GHC.Generics.MetaCons
                                                                                                                              "ErrorInPackageMeta"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False>_P
                                                                                                                           <GHC.Generics.M1
                                                                                                                              GHC.Generics.S
                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                 'GHC.Base.Nothing
                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                              (GHC.Generics.K1
                                                                                                                                 GHC.Generics.R
                                                                                                                                 Language.PureScript.Docs.Types.ManifestError)>_R)) <x1>_N)))
                   Language.PureScript.Docs.Types.InvalidVersion
                   -> Language.PureScript.Docs.Types.$fGenericPackageError9 @ x1
                   Language.PureScript.Docs.Types.InvalidDeclarationType g1
                   -> GHC.Generics.L1
                        @ *
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ErrorInPackageMeta"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.ManifestError)))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidVersion"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "InvalidDeclarationType"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidChildDeclarationType"
                                 'GHC.Generics.PrefixI
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidFixity"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidKind"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidDataDeclType"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "InvalidTime"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Version.Version))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "ErrorInPackageMeta"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Docs.Types.ManifestError)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "InvalidDeclarationType"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Text.Internal.Text)))
                           @ x1
                           (GHC.Generics.R1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidDeclarationType"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                              @ x1
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Data.Text.Internal.Text>_R
                                        <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                            <*>_N
                                                            <GHC.Generics.S>_P
                                                            <'GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy>_P
                                                            <GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.Text.Internal.Text>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                      <*>_N
                                                                                                      <GHC.Generics.C>_P
                                                                                                      <'GHC.Generics.MetaCons
                                                                                                         "InvalidDeclarationType"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False>_P
                                                                                                      <GHC.Generics.M1
                                                                                                         GHC.Generics.S
                                                                                                         ('GHC.Generics.MetaSel
                                                                                                            'GHC.Base.Nothing
                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                         (GHC.Generics.K1
                                                                                                            GHC.Generics.R
                                                                                                            Data.Text.Internal.Text)>_R)) <x1>_N)))
                   Language.PureScript.Docs.Types.InvalidChildDeclarationType g1
                   -> GHC.Generics.R1
                        @ *
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ErrorInPackageMeta"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.ManifestError)))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidVersion"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "InvalidDeclarationType"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidChildDeclarationType"
                                 'GHC.Generics.PrefixI
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidFixity"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidKind"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidDataDeclType"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "InvalidTime"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidChildDeclarationType"
                                   'GHC.Generics.PrefixI
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "InvalidFixity"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                              GHC.Generics.:+: (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "InvalidDataDeclType"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Text.Internal.Text))
                                                GHC.Generics.:+: GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "InvalidTime"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                           @ x1
                           (GHC.Generics.L1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidChildDeclarationType"
                                      'GHC.Generics.PrefixI
                                      'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ x1
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Data.Text.Internal.Text>_R
                                        <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                            <*>_N
                                                            <GHC.Generics.S>_P
                                                            <'GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy>_P
                                                            <GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.Text.Internal.Text>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                      <*>_N
                                                                                                      <GHC.Generics.C>_P
                                                                                                      <'GHC.Generics.MetaCons
                                                                                                         "InvalidChildDeclarationType"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False>_P
                                                                                                      <GHC.Generics.M1
                                                                                                         GHC.Generics.S
                                                                                                         ('GHC.Generics.MetaSel
                                                                                                            'GHC.Base.Nothing
                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                         (GHC.Generics.K1
                                                                                                            GHC.Generics.R
                                                                                                            Data.Text.Internal.Text)>_R)) <x1>_N)))
                   Language.PureScript.Docs.Types.InvalidFixity
                   -> Language.PureScript.Docs.Types.$fGenericPackageError6 @ x1
                   Language.PureScript.Docs.Types.InvalidKind g1
                   -> GHC.Generics.R1
                        @ *
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ErrorInPackageMeta"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.ManifestError)))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidVersion"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "InvalidDeclarationType"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidChildDeclarationType"
                                 'GHC.Generics.PrefixI
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidFixity"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidKind"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidDataDeclType"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "InvalidTime"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidChildDeclarationType"
                                   'GHC.Generics.PrefixI
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "InvalidFixity"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                              GHC.Generics.:+: (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "InvalidDataDeclType"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Text.Internal.Text))
                                                GHC.Generics.:+: GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "InvalidTime"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                           @ x1
                           (GHC.Generics.L1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                                 GHC.Generics.:+: GHC.Generics.M1
                                                    GHC.Generics.C
                                                    ('GHC.Generics.MetaCons
                                                       "InvalidTime"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                              @ x1
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Data.Text.Internal.Text>_R
                                        <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                            <*>_N
                                                            <GHC.Generics.S>_P
                                                            <'GHC.Generics.MetaSel
                                                               'GHC.Base.Nothing
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy>_P
                                                            <GHC.Generics.K1
                                                               GHC.Generics.R
                                                               Data.Text.Internal.Text>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                      <*>_N
                                                                                                      <GHC.Generics.C>_P
                                                                                                      <'GHC.Generics.MetaCons
                                                                                                         "InvalidKind"
                                                                                                         'GHC.Generics.PrefixI
                                                                                                         'GHC.Types.False>_P
                                                                                                      <GHC.Generics.M1
                                                                                                         GHC.Generics.S
                                                                                                         ('GHC.Generics.MetaSel
                                                                                                            'GHC.Base.Nothing
                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                         (GHC.Generics.K1
                                                                                                            GHC.Generics.R
                                                                                                            Data.Text.Internal.Text)>_R)) <x1>_N)))
                   Language.PureScript.Docs.Types.InvalidDataDeclType g1
                   -> GHC.Generics.R1
                        @ *
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Version.Version))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "ErrorInPackageMeta"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     Language.PureScript.Docs.Types.ManifestError)))
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidVersion"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "InvalidDeclarationType"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text))))
                        @ ((GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "InvalidChildDeclarationType"
                                 'GHC.Generics.PrefixI
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidFixity"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Generics.:+: (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "InvalidKind"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R Data.Text.Internal.Text))
                                             GHC.Generics.:+: (GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "InvalidDataDeclType"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text))
                                                               GHC.Generics.:+: GHC.Generics.M1
                                                                                  GHC.Generics.C
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "InvalidTime"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1)))
                        @ x1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidChildDeclarationType"
                                   'GHC.Generics.PrefixI
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "InvalidFixity"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                              GHC.Generics.:+: (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "InvalidDataDeclType"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Text.Internal.Text))
                                                GHC.Generics.:+: GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "InvalidTime"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                           @ x1
                           (GHC.Generics.R1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                                 GHC.Generics.:+: GHC.Generics.M1
                                                    GHC.Generics.C
                                                    ('GHC.Generics.MetaCons
                                                       "InvalidTime"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                              @ x1
                              (GHC.Generics.L1
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "InvalidDataDeclType"
                                         'GHC.Generics.PrefixI
                                         'GHC.Types.False)
                                      (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ x1
                                 g1
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Data.Text.Internal.Text>_R
                                           <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                               <*>_N
                                                               <GHC.Generics.S>_P
                                                               <'GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy>_P
                                                               <GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                         <*>_N
                                                                                                         <GHC.Generics.C>_P
                                                                                                         <'GHC.Generics.MetaCons
                                                                                                            "InvalidDataDeclType"
                                                                                                            'GHC.Generics.PrefixI
                                                                                                            'GHC.Types.False>_P
                                                                                                         <GHC.Generics.M1
                                                                                                            GHC.Generics.S
                                                                                                            ('GHC.Generics.MetaSel
                                                                                                               'GHC.Base.Nothing
                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                            (GHC.Generics.K1
                                                                                                               GHC.Generics.R
                                                                                                               Data.Text.Internal.Text)>_R)) <x1>_N))))
                   Language.PureScript.Docs.Types.InvalidTime
                   -> Language.PureScript.Docs.Types.$fGenericPackageError2 @ x1 }) -}
c395c2c8b93be6ad5c722e675abc319e
  $fGenericPackageError10 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1
                                GHC.Generics.R Language.PureScript.Docs.Types.ManifestError)))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "InvalidDeclarationType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "ErrorInPackageMeta"
                                            'GHC.Generics.PrefixI
                                            'GHC.Types.False)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R
                                               Language.PureScript.Docs.Types.ManifestError)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "InvalidDeclarationType"
                                            'GHC.Generics.PrefixI
                                            'GHC.Types.False)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R Data.Text.Internal.Text)))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError11 @ x1)) -}
97abc3d85214a96ae76911b250ce616d
  $fGenericPackageError11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidDeclarationType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidDeclarationType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                   @ x1
                   (GHC.Generics.U1 @ * @ x1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x1>_N)) -}
1bba592db5b5263fe8c9b2efee4cf9f0
  $fGenericPackageError2 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.Docs.Types.ManifestError)))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "InvalidDeclarationType"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "InvalidChildDeclarationType"
             'GHC.Generics.PrefixI
             'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "InvalidDataDeclType"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "InvalidTime"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "ErrorInPackageMeta"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Docs.Types.ManifestError)))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidVersion"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "InvalidDeclarationType"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "InvalidChildDeclarationType"
                            'GHC.Generics.PrefixI
                            'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "InvalidDataDeclType"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "InvalidTime"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError3 @ x1)) -}
06b4b1587497a0a06294a4f23db0a39e
  $fGenericPackageError3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidChildDeclarationType"
            'GHC.Generics.PrefixI
            'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidChildDeclarationType"
                           'GHC.Generics.PrefixI
                           'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidDataDeclType"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "InvalidTime"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError4 @ x1)) -}
11e34c0ee46ae04ba9a6dd7f1efd9801
  $fGenericPackageError4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError5 @ x1)) -}
32431fdefbbac8be1727af489c0bc06c
  $fGenericPackageError5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x1
                   (GHC.Generics.U1 @ * @ x1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x1>_N)) -}
63c5e61e8f4d40bc2bb21ed4e1c976df
  $fGenericPackageError6 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.Docs.Types.ManifestError)))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "InvalidDeclarationType"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "InvalidChildDeclarationType"
             'GHC.Generics.PrefixI
             'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "InvalidDataDeclType"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "InvalidTime"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "ErrorInPackageMeta"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Docs.Types.ManifestError)))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidVersion"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "InvalidDeclarationType"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "InvalidChildDeclarationType"
                            'GHC.Generics.PrefixI
                            'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "InvalidDataDeclType"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "InvalidTime"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError7 @ x1)) -}
9c2ed71589689097769a5312e4803a56
  $fGenericPackageError7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidChildDeclarationType"
            'GHC.Generics.PrefixI
            'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidDataDeclType" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "InvalidTime" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidChildDeclarationType"
                           'GHC.Generics.PrefixI
                           'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidDataDeclType"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "InvalidTime"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError8 @ x1)) -}
3d442e6c641f93a9d0451f92eba7ef73
  $fGenericPackageError8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidChildDeclarationType"
            'GHC.Generics.PrefixI
            'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidChildDeclarationType"
                           'GHC.Generics.PrefixI
                           'GHC.Types.False)
                        (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              'GHC.Base.Nothing
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x1
                   (GHC.Generics.U1 @ * @ x1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x1>_N)) -}
8cd58e689e2e2170458db14c82ab1d12
  $fGenericPackageError9 ::
    (GHC.Generics.:+:)
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1
                                 GHC.Generics.R Language.PureScript.Docs.Types.ManifestError)))
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "InvalidDeclarationType"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text))))
      ((GHC.Generics.M1
          GHC.Generics.C
          ('GHC.Generics.MetaCons
             "InvalidChildDeclarationType"
             'GHC.Generics.PrefixI
             'GHC.Types.False)
          (GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                'GHC.Base.Nothing
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
        GHC.Generics.:+: GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         GHC.Generics.:+: (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "InvalidDataDeclType"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))
                                           GHC.Generics.:+: GHC.Generics.M1
                                                              GHC.Generics.C
                                                              ('GHC.Generics.MetaCons
                                                                 "InvalidTime"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x1 ->
                 GHC.Generics.L1
                   @ *
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "ErrorInPackageMeta"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Docs.Types.ManifestError)))
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidVersion"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "InvalidDeclarationType"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text))))
                   @ ((GHC.Generics.M1
                         GHC.Generics.C
                         ('GHC.Generics.MetaCons
                            "InvalidChildDeclarationType"
                            'GHC.Generics.PrefixI
                            'GHC.Types.False)
                         (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               'GHC.Base.Nothing
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       GHC.Generics.:+: GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidFixity" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))
                                        GHC.Generics.:+: (GHC.Generics.M1
                                                            GHC.Generics.C
                                                            ('GHC.Generics.MetaCons
                                                               "InvalidDataDeclType"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  Data.Text.Internal.Text))
                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                             GHC.Generics.C
                                                                             ('GHC.Generics.MetaCons
                                                                                "InvalidTime"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1)))
                   @ x1
                   (Language.PureScript.Docs.Types.$fGenericPackageError10 @ x1)) -}
f66d967ff562407ff6a522c1eb0528e6
  $fGenericPackageError_$cto ::
    GHC.Generics.Rep Language.PureScript.Docs.Types.PackageError x
    -> Language.PureScript.Docs.Types.PackageError
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x1
                   (ds :: GHC.Generics.Rep
                            Language.PureScript.Docs.Types.PackageError x1) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_PackageError[0]) ; GHC.Generics.N:M1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.D>_P
                                                                                       <'GHC.Generics.MetaData
                                                                                          "PackageError"
                                                                                          "Language.PureScript.Docs.Types"
                                                                                          "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                                                          'GHC.Types.False>_P
                                                                                       <((GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "CompilerTooOld"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.False)
                                                                                            (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  'GHC.Base.Nothing
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Data.Version.Version)
                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   'GHC.Base.Nothing
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.Version.Version))
                                                                                          GHC.Generics.:+: GHC.Generics.M1
                                                                                                             GHC.Generics.C
                                                                                                             ('GHC.Generics.MetaCons
                                                                                                                "ErrorInPackageMeta"
                                                                                                                'GHC.Generics.PrefixI
                                                                                                                'GHC.Types.False)
                                                                                                             (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   'GHC.Base.Nothing
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Language.PureScript.Docs.Types.ManifestError)))
                                                                                         GHC.Generics.:+: (GHC.Generics.M1
                                                                                                             GHC.Generics.C
                                                                                                             ('GHC.Generics.MetaCons
                                                                                                                "InvalidVersion"
                                                                                                                'GHC.Generics.PrefixI
                                                                                                                'GHC.Types.False)
                                                                                                             GHC.Generics.U1
                                                                                                           GHC.Generics.:+: GHC.Generics.M1
                                                                                                                              GHC.Generics.C
                                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                                 "InvalidDeclarationType"
                                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                                 'GHC.Types.False)
                                                                                                                              (GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    'GHC.Base.Nothing
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    Data.Text.Internal.Text))))
                                                                                        GHC.Generics.:+: ((GHC.Generics.M1
                                                                                                             GHC.Generics.C
                                                                                                             ('GHC.Generics.MetaCons
                                                                                                                "InvalidChildDeclarationType"
                                                                                                                'GHC.Generics.PrefixI
                                                                                                                'GHC.Types.False)
                                                                                                             (GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   'GHC.Base.Nothing
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   Data.Text.Internal.Text))
                                                                                                           GHC.Generics.:+: GHC.Generics.M1
                                                                                                                              GHC.Generics.C
                                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                                 "InvalidFixity"
                                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                                 'GHC.Types.False)
                                                                                                                              GHC.Generics.U1)
                                                                                                          GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                              GHC.Generics.C
                                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                                 "InvalidKind"
                                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                                 'GHC.Types.False)
                                                                                                                              (GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    'GHC.Base.Nothing
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    Data.Text.Internal.Text))
                                                                                                                            GHC.Generics.:+: (GHC.Generics.M1
                                                                                                                                                GHC.Generics.C
                                                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                                                   "InvalidDataDeclType"
                                                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                                                   'GHC.Types.False)
                                                                                                                                                (GHC.Generics.M1
                                                                                                                                                   GHC.Generics.S
                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                      'GHC.Base.Nothing
                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                      GHC.Generics.R
                                                                                                                                                      Data.Text.Internal.Text))
                                                                                                                                              GHC.Generics.:+: GHC.Generics.M1
                                                                                                                                                                 GHC.Generics.C
                                                                                                                                                                 ('GHC.Generics.MetaCons
                                                                                                                                                                    "InvalidTime"
                                                                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                                                                    'GHC.Types.False)
                                                                                                                                                                 GHC.Generics.U1)))>_R) <x1>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "CompilerTooOld"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Version.Version)>_R <x1>_N) of wild3 { GHC.Generics.:*: ds4 ds5 ->
                                Language.PureScript.Docs.Types.CompilerTooOld
                                  ds4
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Data.Version.Version>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                               <*>_N
                                                                               <GHC.Generics.R>_P
                                                                               <Data.Version.Version>_R
                                                                               <x1>_P)
                                  ds5
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Data.Version.Version>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                               <*>_N
                                                                               <GHC.Generics.R>_P
                                                                               <Data.Version.Version>_R
                                                                               <x1>_P) }
                             GHC.Generics.R1 ds3
                             -> Language.PureScript.Docs.Types.ErrorInPackageMeta
                                  ds3
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "ErrorInPackageMeta"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Language.PureScript.Docs.Types.ManifestError)>_R ; GHC.Generics.N:M1[0]
                                                                                                     <*>_N
                                                                                                     <GHC.Generics.S>_P
                                                                                                     <'GHC.Generics.MetaSel
                                                                                                        'GHC.Base.Nothing
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy>_P
                                                                                                     <GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        Language.PureScript.Docs.Types.ManifestError>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                                      <*>_N
                                                                                                                                                                      <GHC.Generics.R>_P
                                                                                                                                                                      <Language.PureScript.Docs.Types.ManifestError>_R
                                                                                                                                                                      <x1>_P) }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "InvalidVersion"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <x1>_N) of wild3 { GHC.Generics.U1 ->
                                Language.PureScript.Docs.Types.InvalidVersion }
                             GHC.Generics.R1 ds3
                             -> Language.PureScript.Docs.Types.InvalidDeclarationType
                                  ds3
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "InvalidDeclarationType"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.Text.Internal.Text>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                            <*>_N
                                                                                                                            <GHC.Generics.R>_P
                                                                                                                            <Data.Text.Internal.Text>_R
                                                                                                                            <x1>_P) } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> Language.PureScript.Docs.Types.InvalidChildDeclarationType
                                  ds3
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "InvalidChildDeclarationType"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.Text.Internal.Text>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                            <*>_N
                                                                                                                            <GHC.Generics.R>_P
                                                                                                                            <Data.Text.Internal.Text>_R
                                                                                                                            <x1>_P)
                             GHC.Generics.R1 ds3
                             -> case ds3
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "InvalidFixity"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <x1>_N) of wild3 { GHC.Generics.U1 ->
                                Language.PureScript.Docs.Types.InvalidFixity } }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3
                             -> Language.PureScript.Docs.Types.InvalidKind
                                  ds3
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.Text.Internal.Text>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                            <*>_N
                                                                                                                            <GHC.Generics.R>_P
                                                                                                                            <Data.Text.Internal.Text>_R
                                                                                                                            <x1>_P)
                             GHC.Generics.R1 ds3
                             -> case ds3 of wild3 {
                                  GHC.Generics.L1 ds4
                                  -> Language.PureScript.Docs.Types.InvalidDataDeclType
                                       ds4
                                         `cast`
                                       ((GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.C>_P
                                             <'GHC.Generics.MetaCons
                                                "InvalidDataDeclType"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False>_P
                                             <GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.S>_P
                                                                                     <'GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy>_P
                                                                                     <GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.Text.Internal.Text>_R) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                 <*>_N
                                                                                                                                 <GHC.Generics.R>_P
                                                                                                                                 <Data.Text.Internal.Text>_R
                                                                                                                                 <x1>_P)
                                  GHC.Generics.R1 ds4
                                  -> case ds4
                                            `cast`
                                          (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.C>_P
                                               <'GHC.Generics.MetaCons
                                                  "InvalidTime"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False>_P
                                               <GHC.Generics.U1>_R <x1>_N) of wild4 { GHC.Generics.U1 ->
                                     Language.PureScript.Docs.Types.InvalidTime } } } } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fGenericPackage_$cto ::
    GHC.Generics.Rep (Language.PureScript.Docs.Types.Package a) x
    -> Language.PureScript.Docs.Types.Package a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS(LS))S(SS(LS))),1*U(1*U(1*U(U,U),1*U(U,1*U(U,U))),1*U(1*U(U,U),1*U(U,1*U(U,U))))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   @ x1
                   (w :: GHC.Generics.Rep
                           (Language.PureScript.Docs.Types.Package a) x1) ->
                 case w `cast`
                      ((Sub (Language.PureScript.Docs.Types.Rep_Package[0]
                                 <a>_N) ; (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.D>_P
                                               <'GHC.Generics.MetaData
                                                  "Package"
                                                  "Language.PureScript.Docs.Types"
                                                  "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                  'GHC.Types.False>_P
                                               <GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Package"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  (((GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgMeta")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0
                                                          Web.Bower.PackageMeta.Internal.PackageMeta)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "pkgVersion")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           Data.Version.Version))
                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "pkgVersionTag")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           Data.Text.Internal.Text)
                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "pkgTagTime")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.Rec0
                                                                                             (GHC.Base.Maybe
                                                                                                Data.Time.Clock.Internal.UTCTime.UTCTime))
                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "pkgModules")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              [Language.PureScript.Docs.Types.Module]))))
                                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "pkgModuleMap")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           (Data.Map.Internal.Map
                                                                              Language.PureScript.Names.ModuleName
                                                                              Web.Bower.PackageMeta.Internal.PackageName))
                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "pkgResolvedDependencies")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.Rec0
                                                                                            [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                                              Data.Version.Version)]))
                                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "pkgGithub")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.Rec0
                                                                                            (Language.PureScript.Docs.Types.GithubUser,
                                                                                             Language.PureScript.Docs.Types.GithubRepo))
                                                                                       GHC.Generics.:*: (GHC.Generics.S1
                                                                                                           ('GHC.Generics.MetaSel
                                                                                                              ('GHC.Base.Just
                                                                                                                 "pkgUploader")
                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                           (GHC.Generics.Rec0
                                                                                                              a)
                                                                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                               ('GHC.Base.Just
                                                                                                                                  "pkgCompilerVersion")
                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                            (GHC.Generics.Rec0
                                                                                                                               Data.Version.Version)))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                  <*>_N
                                                                                                                                                                  <GHC.Generics.C>_P
                                                                                                                                                                  <'GHC.Generics.MetaCons
                                                                                                                                                                     "Package"
                                                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                                                     'GHC.Types.True>_P
                                                                                                                                                                  <((GHC.Generics.S1
                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                             "pkgMeta")
                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                       (GHC.Generics.Rec0
                                                                                                                                                                          Web.Bower.PackageMeta.Internal.PackageMeta)
                                                                                                                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "pkgVersion")
                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                        (GHC.Generics.Rec0
                                                                                                                                                                                           Data.Version.Version))
                                                                                                                                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "pkgVersionTag")
                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                        (GHC.Generics.Rec0
                                                                                                                                                                                           Data.Text.Internal.Text)
                                                                                                                                                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "pkgTagTime")
                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                          (GHC.Generics.Rec0
                                                                                                                                                                                                             (GHC.Base.Maybe
                                                                                                                                                                                                                Data.Time.Clock.Internal.UTCTime.UTCTime))
                                                                                                                                                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                                                 "pkgModules")
                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                           (GHC.Generics.Rec0
                                                                                                                                                                                                                              [Language.PureScript.Docs.Types.Module]))))
                                                                                                                                                                   GHC.Generics.:*: ((GHC.Generics.S1
                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "pkgModuleMap")
                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                        (GHC.Generics.Rec0
                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                              Language.PureScript.Names.ModuleName
                                                                                                                                                                                              Web.Bower.PackageMeta.Internal.PackageName))
                                                                                                                                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                               "pkgResolvedDependencies")
                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                            [(Web.Bower.PackageMeta.Internal.PackageName,
                                                                                                                                                                                                              Data.Version.Version)]))
                                                                                                                                                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                               "pkgGithub")
                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                            (Language.PureScript.Docs.Types.GithubUser,
                                                                                                                                                                                                             Language.PureScript.Docs.Types.GithubRepo))
                                                                                                                                                                                                       GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                                                 "pkgUploader")
                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                           (GHC.Generics.Rec0
                                                                                                                                                                                                                              a)
                                                                                                                                                                                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                                                  "pkgCompilerVersion")
                                                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                            (GHC.Generics.Rec0
                                                                                                                                                                                                                                               Data.Version.Version))))>_R)) <x1>_N) of ww { GHC.Generics.:*: ww1 ww2 ->
                 case ww1 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                 case ww4 of ww6 { GHC.Generics.:*: ww7 ww8 ->
                 case ww5 of ww9 { GHC.Generics.:*: ww10 ww11 ->
                 case ww11 of ww12 { GHC.Generics.:*: ww13 ww14 ->
                 case ww2 of ww15 { GHC.Generics.:*: ww16 ww17 ->
                 case ww16 of ww18 { GHC.Generics.:*: ww19 ww20 ->
                 case ww17 of ww21 { GHC.Generics.:*: ww22 ww23 ->
                 case ww23 of ww24 { GHC.Generics.:*: ww25 ww26 ->
                 Language.PureScript.Docs.Types.Package
                   @ a
                   ww7
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgMeta")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Web.Bower.PackageMeta.Internal.PackageMeta>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                      <*>_N
                                                                                      <GHC.Generics.R>_P
                                                                                      <Web.Bower.PackageMeta.Internal.PackageMeta>_R
                                                                                      <x1>_P)
                   ww8
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgVersion")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Version.Version>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                <*>_N
                                                                <GHC.Generics.R>_P
                                                                <Data.Version.Version>_R
                                                                <x1>_P)
                   ww10
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgVersionTag")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ww13
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgTagTime")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              Data.Time.Clock.Internal.UTCTime.UTCTime)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.R>_P
                                                                                        <GHC.Base.Maybe
                                                                                           Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                                                                                        <x1>_P)
                   ww14
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgModules")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Docs.Types.Module]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <[Language.PureScript.Docs.Types.Module]>_R
                                                                                   <x1>_P)
                   ww19
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgModuleMap")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName
                              Web.Bower.PackageMeta.Internal.PackageName)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <Data.Map.Internal.Map
                                                                                             Language.PureScript.Names.ModuleName
                                                                                             Web.Bower.PackageMeta.Internal.PackageName>_R
                                                                                          <x1>_P)
                   ww20
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgResolvedDependencies")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Version.Version)]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                    <*>_N
                                                                    <GHC.Generics.R>_P
                                                                    <[(Web.Bower.PackageMeta.Internal.PackageName,
                                                                       Data.Version.Version)]>_R
                                                                    <x1>_P)
                   ww22
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgGithub")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Language.PureScript.Docs.Types.GithubUser,
                            Language.PureScript.Docs.Types.GithubRepo)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.R>_P
                                                                                       <(Language.PureScript.Docs.Types.GithubUser,
                                                                                         Language.PureScript.Docs.Types.GithubRepo)>_R
                                                                                       <x1>_P)
                   ww25
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgUploader")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1 GHC.Generics.R a>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                          <*>_N
                                                                          <GHC.Generics.R>_P
                                                                          <a>_R
                                                                          <x1>_P)
                   ww26
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "pkgCompilerVersion")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Version.Version>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                <*>_N
                                                                <GHC.Generics.R>_P
                                                                <Data.Version.Version>_R
                                                                <x1>_P) } } } } } } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataChildDeclaration ::
    Control.DeepSeq.NFData
      Language.PureScript.Docs.Types.ChildDeclaration
  DFunId
  {- Arity: 1, Strictness: <S(SSSS),1*U(1*H,1*U,1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataChildDeclaration_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.ChildDeclaration>_N)) -}
1e0d9f6ac8982edd2c084fc8890e93e1
  $fNFDataChildDeclaration1 ::
    Language.PureScript.Types.Constraint () -> ()
  {- Unfolding: (Language.PureScript.Types.$fNFDataConstraint_$crnf
                   @ ()
                   (Control.DeepSeq.rwhnf @ ())
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0] <()>_N))) -}
f16144380a0c24fb1eb8b728c29f81b2
  $fNFDataChildDeclaration2 ::
    Language.PureScript.Types.Type () -> ()
  {- Unfolding: (Language.PureScript.Types.$fNFDataConstraint_$crnf2
                   @ ()
                   (Control.DeepSeq.rwhnf @ ())
                     `cast`
                   (Sym (Control.DeepSeq.N:NFData[0] <()>_N))) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fNFDataChildDeclarationInfo ::
    Control.DeepSeq.NFData
      Language.PureScript.Docs.Types.ChildDeclarationInfo
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataChildDeclaration_$crnf1
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N)) -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataChildDeclaration_$crnf ::
    Language.PureScript.Docs.Types.ChildDeclaration -> ()
  {- Arity: 1, Strictness: <S(SSSS),1*U(1*H,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case w of ww { Language.PureScript.Docs.Types.ChildDeclaration ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Language.PureScript.Docs.Types.$w$crnf ww5 ww2 ww3 ww4 } }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fNFDataChildDeclaration_$crnf1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo -> ()
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case x1 of wild {
                   Language.PureScript.Docs.Types.ChildInstance g1 g2
                   -> let {
                        exit :: () <join 0>
                        = Language.PureScript.Docs.Types.$fNFDataChildDeclaration2 g2
                      } in
                      letrec {
                        go2 :: [Language.PureScript.Types.Constraint ()] -> ()
                          <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (ds :: [Language.PureScript.Types.Constraint ()]) ->
                          case ds of wild1 {
                            [] -> exit
                            : x2 xs
                            -> case Language.PureScript.Docs.Types.$fNFDataChildDeclaration1
                                      x2 of wild2 { () ->
                               go2 xs } }
                      } in
                      go2 g1
                   Language.PureScript.Docs.Types.ChildDataConstructor g1
                   -> Control.DeepSeq.$fNFData1NonEmpty_$cliftRnf1
                        @ (Language.PureScript.Types.Type ())
                        Language.PureScript.Docs.Types.$fNFDataChildDeclaration2
                        g1
                   Language.PureScript.Docs.Types.ChildTypeClassMember g1
                   -> Language.PureScript.Docs.Types.$fNFDataChildDeclaration2
                        g1 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataDeclaration ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.Declaration
  DFunId
  {- Arity: 1, Strictness: <S(SSSSS),1*U(1*H,1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataDeclaration_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.Declaration>_N)) -}
590135d73f24990786c48c40c8694789
  $fNFDataDeclaration1 ::
    Data.Either.Either
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
      (Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Either.Either
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.TypeName)
                            (Data.Either.Either
                               Language.PureScript.Names.Ident
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ConstructorName))) ->
                 case ds of wild {
                   Data.Either.Left x1
                   -> Data.Text.$fNFDataText_$crnf
                        x1
                          `cast`
                        (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.TypeName>_P)
                   Data.Either.Right y
                   -> case y of wild1 {
                        Data.Either.Left x1
                        -> Language.PureScript.Names.$fNFDataIdent_$crnf x1
                        Data.Either.Right y1
                        -> Data.Text.$fNFDataText_$crnf
                             y1
                               `cast`
                             (Language.PureScript.Names.N:ProperName[0]
                                  <'Language.PureScript.Names.ConstructorName>_P) } }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fNFDataDeclarationInfo ::
    Control.DeepSeq.NFData
      Language.PureScript.Docs.Types.DeclarationInfo
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataDeclaration_$crnf1
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.DeclarationInfo>_N)) -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataDeclaration_$crnf ::
    Language.PureScript.Docs.Types.Declaration -> ()
  {- Arity: 1, Strictness: <S(SSSSS),1*U(1*H,1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Declaration) ->
                 case w of ww { Language.PureScript.Docs.Types.Declaration ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of ww6 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Language.PureScript.Docs.Types.$w$crnf1 ww6 ww2 ww3 ww4 ww5 } }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fNFDataDeclaration_$crnf1 ::
    Language.PureScript.Docs.Types.DeclarationInfo -> ()
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fGenericDeclarationInfo1
                        @ GHC.Types.Any
                        x1 of wild {
                   GHC.Generics.L1 x2
                   -> case x2 of wild1 {
                        GHC.Generics.L1 x3
                        -> Language.PureScript.Docs.Types.$fNFDataChildDeclaration2
                             x3
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0
                                         Language.PureScript.Docs.Types.Type')>_R ; GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.S>_P
                                                                                        <'GHC.Generics.MetaSel
                                                                                           'GHC.Base.Nothing
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy>_P
                                                                                        <GHC.Generics.K1
                                                                                           GHC.Generics.R
                                                                                           Language.PureScript.Docs.Types.Type'>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                            <*>_N
                                                                                                                                                            <GHC.Generics.R>_P
                                                                                                                                                            <Language.PureScript.Types.Type
                                                                                                                                                               ()>_R
                                                                                                                                                            <GHC.Types.Any>_P)
                        GHC.Generics.R1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "DataDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                Language.PureScript.Environment.DataDeclType)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [(Data.Text.Internal.Text,
                                                                   GHC.Base.Maybe
                                                                     (Language.PureScript.Kinds.Kind
                                                                        ()))])>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.:*: x5 y ->
                                case x5
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             'GHC.Base.Nothing
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             Language.PureScript.Environment.DataDeclType>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                     <*>_N
                                                                                                                     <GHC.Generics.R>_P
                                                                                                                     <Language.PureScript.Environment.DataDeclType>_R
                                                                                                                     <GHC.Types.Any>_P) of wild4 { DEFAULT ->
                                Language.PureScript.Docs.Types.$fNFDataDeclaration_go1
                                  y `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [(Data.Text.Internal.Text,
                                            GHC.Base.Maybe
                                              Language.PureScript.Docs.Types.Kind')]>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                <*>_N
                                                                                                                <GHC.Generics.R>_P
                                                                                                                <[(Data.Text.Internal.Text,
                                                                                                                   GHC.Base.Maybe
                                                                                                                     Language.PureScript.Docs.Types.Kind')]>_R
                                                                                                                <GHC.Types.Any>_P) } }
                             GHC.Generics.R1 x4
                             -> Language.PureScript.Kinds.$fNFDataKind_$crnf
                                  @ ()
                                  (Control.DeepSeq.rwhnf @ ())
                                    `cast`
                                  (Sym (Control.DeepSeq.N:NFData[0] <()>_N))
                                  x4
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "ExternDataDeclaration"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0
                                              Language.PureScript.Docs.Types.Kind')>_R ; GHC.Generics.N:M1[0]
                                                                                             <*>_N
                                                                                             <GHC.Generics.S>_P
                                                                                             <'GHC.Generics.MetaSel
                                                                                                'GHC.Base.Nothing
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy>_P
                                                                                             <GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                Language.PureScript.Docs.Types.Kind'>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                                 <*>_N
                                                                                                                                                                 <GHC.Generics.R>_P
                                                                                                                                                                 <Language.PureScript.Kinds.Kind
                                                                                                                                                                    ()>_R
                                                                                                                                                                 <GHC.Types.Any>_P) } }
                   GHC.Generics.R1 x2
                   -> case x2 of wild1 {
                        GHC.Generics.L1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "TypeSynonymDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Data.Text.Internal.Text,
                                                  GHC.Base.Maybe
                                                    (Language.PureScript.Kinds.Kind ()))])
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 (Language.PureScript.Types.Type
                                                                    ()))>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.:*: x5 y ->
                                case Language.PureScript.Docs.Types.$fNFDataDeclaration_go1
                                       x5
                                         `cast`
                                       (GHC.Generics.N:M1[0]
                                            <*>_N
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Data.Text.Internal.Text,
                                                 GHC.Base.Maybe
                                                   Language.PureScript.Docs.Types.Kind')]>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                     <*>_N
                                                                                                                     <GHC.Generics.R>_P
                                                                                                                     <[(Data.Text.Internal.Text,
                                                                                                                        GHC.Base.Maybe
                                                                                                                          Language.PureScript.Docs.Types.Kind')]>_R
                                                                                                                     <GHC.Types.Any>_P) of wild4 { () ->
                                Language.PureScript.Docs.Types.$fNFDataChildDeclaration2
                                  y `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Language.PureScript.Docs.Types.Type'>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                          <*>_N
                                                                                                          <GHC.Generics.R>_P
                                                                                                          <Language.PureScript.Types.Type
                                                                                                             ()>_R
                                                                                                          <GHC.Types.Any>_P) } }
                             GHC.Generics.R1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "TypeClassDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                [(Data.Text.Internal.Text,
                                                  GHC.Base.Maybe
                                                    (Language.PureScript.Kinds.Kind ()))])
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  'GHC.Base.Nothing
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  [Language.PureScript.Types.Constraint
                                                                     ()])
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   [([Data.Text.Internal.Text],
                                                                                     [Data.Text.Internal.Text])]))>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.:*: x5 y ->
                                case Language.PureScript.Docs.Types.$fNFDataDeclaration_go1
                                       x5
                                         `cast`
                                       (GHC.Generics.N:M1[0]
                                            <*>_N
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               'GHC.Base.Nothing
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               [(Data.Text.Internal.Text,
                                                 GHC.Base.Maybe
                                                   Language.PureScript.Docs.Types.Kind')]>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                     <*>_N
                                                                                                                     <GHC.Generics.R>_P
                                                                                                                     <[(Data.Text.Internal.Text,
                                                                                                                        GHC.Base.Maybe
                                                                                                                          Language.PureScript.Docs.Types.Kind')]>_R
                                                                                                                     <GHC.Types.Any>_P) of wild4 { () ->
                                case y of wild5 { GHC.Generics.:*: x6 y1 ->
                                let {
                                  exit :: () <join 0>
                                  = Language.PureScript.Docs.Types.$fNFDataDeclaration_go
                                      y1
                                        `cast`
                                      (GHC.Generics.N:M1[0]
                                           <*>_N
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R
                                              [([Data.Text.Internal.Text],
                                                [Data.Text.Internal.Text])]>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.R>_P
                                                                                                       <[([Data.Text.Internal.Text],
                                                                                                          [Data.Text.Internal.Text])]>_R
                                                                                                       <GHC.Types.Any>_P)
                                } in
                                letrec {
                                  go2 :: [Language.PureScript.Types.Constraint ()] -> ()
                                    <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                  = \ (ds :: [Language.PureScript.Types.Constraint ()]) ->
                                    case ds of wild6 {
                                      [] -> exit
                                      : x7 xs
                                      -> case Language.PureScript.Docs.Types.$fNFDataChildDeclaration1
                                                x7 of wild7 { () ->
                                         go2 xs } }
                                } in
                                go2
                                  x6
                                    `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          [Language.PureScript.Docs.Types.Constraint']>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                  <*>_N
                                                                                                                  <GHC.Generics.R>_P
                                                                                                                  <[Language.PureScript.Docs.Types.Constraint']>_R
                                                                                                                  <GHC.Types.Any>_P) } } } }
                        GHC.Generics.R1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "AliasDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0
                                                Language.PureScript.AST.Operators.Fixity)
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 Language.PureScript.Docs.RenderedCode.Types.FixityAlias)>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.:*: x5 y ->
                                case x5
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             'GHC.Base.Nothing
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             Language.PureScript.AST.Operators.Fixity>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                 <*>_N
                                                                                                                 <GHC.Generics.R>_P
                                                                                                                 <Language.PureScript.AST.Operators.Fixity>_R
                                                                                                                 <GHC.Types.Any>_P) of wild4 { Language.PureScript.AST.Operators.Fixity g1 g2 ->
                                case g1 of wild5 { DEFAULT ->
                                case g2 of ds1 { DEFAULT ->
                                case y `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             'GHC.Base.Nothing
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                <*>_N
                                                                                                                                <GHC.Generics.R>_P
                                                                                                                                <Language.PureScript.Names.Qualified
                                                                                                                                   (Data.Either.Either
                                                                                                                                      (Language.PureScript.Names.ProperName
                                                                                                                                         'Language.PureScript.Names.TypeName)
                                                                                                                                      (Data.Either.Either
                                                                                                                                         Language.PureScript.Names.Ident
                                                                                                                                         (Language.PureScript.Names.ProperName
                                                                                                                                            'Language.PureScript.Names.ConstructorName)))>_R
                                                                                                                                <GHC.Types.Any>_P) of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                                case ww1 of wild6 {
                                  GHC.Base.Nothing
                                  -> Language.PureScript.Docs.Types.$fNFDataDeclaration1 ww2
                                  GHC.Base.Just x6
                                  -> case Language.PureScript.Names.$fNFDataModuleName_go
                                            x6
                                              `cast`
                                            (Language.PureScript.Names.N:ModuleName[0]) of wild7 { () ->
                                     Language.PureScript.Docs.Types.$fNFDataDeclaration1
                                       ww2 } } } } } } }
                             GHC.Generics.R1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "ExternKindDeclaration"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.U1 ->
                                GHC.Tuple.() } } } }) -}
3ad2908be21a734fae498dce85a5bb03
  $fNFDataDeclaration_go ::
    [([Data.Text.Internal.Text], [Data.Text.Internal.Text])] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3a030cedbe95d1d57a96a6e65b498361
  $fNFDataDeclaration_go1 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataDeclaration_go2 ::
    [Language.PureScript.Docs.Types.ChildDeclaration] -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
8b305838d47692238020364c584ab76f
  $fNFDataDocLink ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.DocLink
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSS),1*U(1*U,1*H,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataDocLink_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.DocLink>_N)) -}
fd9787484efa258ff56c6212ce71b510
  $fNFDataDocLink1 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 Web.Bower.PackageMeta.Internal.PackageName)
          GHC.Generics.:*: (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 'GHC.Base.Nothing
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 Data.Version.Version)
                            GHC.Generics.:*: GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  'GHC.Base.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0
                                                  Language.PureScript.Names.ModuleName))))
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               'GHC.Base.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 Language.PureScript.Names.ModuleName)))
      GHC.Types.Any
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 Web.Bower.PackageMeta.Internal.PackageName)
                                GHC.Generics.:*: (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Data.Version.Version)
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        'GHC.Base.Nothing
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        Language.PureScript.Names.ModuleName))))
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 Language.PureScript.Names.ModuleName)))
                            GHC.Types.Any)[OneShot] ->
                 case x1 of wild {
                   GHC.Generics.L1 x2
                   -> case x2
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Version.Version)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Language.PureScript.Names.ModuleName))>_R <GHC.Types.Any>_N) of wild1 { GHC.Generics.:*: x3 y ->
                      case x3
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R
                                   Web.Bower.PackageMeta.Internal.PackageName>_R <GHC.Types.Any>_N ; (GHC.Generics.N:K1[0]
                                                                                                          <*>_N
                                                                                                          <GHC.Generics.R>_P
                                                                                                          <Web.Bower.PackageMeta.Internal.PackageName>_R
                                                                                                          <GHC.Types.Any>_P ; Web.Bower.PackageMeta.Internal.N:PackageName[0])) of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      case y of wild2 { GHC.Generics.:*: x4 y1 ->
                      case x4
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy>_P
                                <GHC.Generics.K1
                                   GHC.Generics.R
                                   Data.Version.Version>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <Data.Version.Version>_R
                                                                                   <GHC.Types.Any>_P) of wild3 { Data.Version.Version branch tags ->
                      case Control.DeepSeq.$fNFDataVersion_go1 branch of wild4 { () ->
                      case Control.DeepSeq.$fNFDataVersion_go tags of wild5 { () ->
                      Language.PureScript.Names.$fNFDataModuleName_go
                        y1
                          `cast`
                        (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                'GHC.Base.Nothing
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                Language.PureScript.Names.ModuleName>_R <GHC.Types.Any>_N ; (GHC.Generics.N:K1[0]
                                                                                                 <*>_N
                                                                                                 <GHC.Generics.R>_P
                                                                                                 <Language.PureScript.Names.ModuleName>_R
                                                                                                 <GHC.Types.Any>_P ; Language.PureScript.Names.N:ModuleName[0])) } } } } } }
                   GHC.Generics.R1 x2
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        x2
                          `cast`
                        ((GHC.Generics.N:M1[0]
                              <*>_N
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1
                                    GHC.Generics.R
                                    Language.PureScript.Names.ModuleName)>_R ; GHC.Generics.N:M1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.S>_P
                                                                                   <'GHC.Generics.MetaSel
                                                                                      'GHC.Base.Nothing
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy>_P
                                                                                   <GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      Language.PureScript.Names.ModuleName>_R) <GHC.Types.Any>_N ; (GHC.Generics.N:K1[0]
                                                                                                                                                        <*>_N
                                                                                                                                                        <GHC.Generics.R>_P
                                                                                                                                                        <Language.PureScript.Names.ModuleName>_R
                                                                                                                                                        <GHC.Types.Any>_P ; Language.PureScript.Names.N:ModuleName[0])) }) -}
8b305838d47692238020364c584ab76f
  $fNFDataDocLink_$crnf ::
    Language.PureScript.Docs.Types.DocLink -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSS),1*U(1*U,1*H,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DocLink) ->
                 case x1 of wild { Language.PureScript.Docs.Types.DocLink g1 g2 g3 ->
                 case Language.PureScript.Docs.Types.$fNFDataDocLink_$crnf1
                        g1 of wild1 { () ->
                 case g2 of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Language.PureScript.Docs.RenderedCode.Types.$fNFDataNamespace_$crnf
                   g3 } } }) -}
465f85673aa60d600eec7529c7b12dab
  $fNFDataDocLink_$crnf1 ::
    Language.PureScript.Docs.Types.LinkLocation -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case x1 of wild {
                   Language.PureScript.Docs.Types.LocalModule g1
                   -> Language.PureScript.Names.$fNFDataModuleName_go
                        g1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                   Language.PureScript.Docs.Types.DepsModule g1 g2 g3
                   -> Language.PureScript.Docs.Types.$fNFDataDocLink1
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Version.Version)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Language.PureScript.Names.ModuleName))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Names.ModuleName)))
                           @ GHC.Types.Any
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Data.Version.Version)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Names.ModuleName))
                              @ GHC.Types.Any
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Web.Bower.PackageMeta.Internal.PackageName>_R
                                        <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                      <*>_N
                                                                      <GHC.Generics.S>_P
                                                                      <'GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy>_P
                                                                      <GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Web.Bower.PackageMeta.Internal.PackageName>_R) <GHC.Types.Any>_N)
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R Data.Version.Version))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R Language.PureScript.Names.ModuleName))
                                 @ GHC.Types.Any
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Data.Version.Version>_R
                                           <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.S>_P
                                                                         <'GHC.Generics.MetaSel
                                                                            'GHC.Base.Nothing
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy>_P
                                                                         <GHC.Generics.K1
                                                                            GHC.Generics.R
                                                                            Data.Version.Version>_R) <GHC.Types.Any>_N)
                                 g3
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Names.ModuleName>_R
                                           <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.S>_P
                                                                         <'GHC.Generics.MetaSel
                                                                            'GHC.Base.Nothing
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy>_P
                                                                         <GHC.Generics.K1
                                                                            GHC.Generics.R
                                                                            Language.PureScript.Names.ModuleName>_R) <GHC.Types.Any>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           Web.Bower.PackageMeta.Internal.PackageName)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Version.Version)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Names.ModuleName))>_R) <GHC.Types.Any>_N))
                   Language.PureScript.Docs.Types.BuiltinModule g1
                   -> Language.PureScript.Docs.Types.$fNFDataDocLink1
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Data.Version.Version)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         Language.PureScript.Names.ModuleName))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "BuiltinModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R Language.PureScript.Names.ModuleName)))
                           @ GHC.Types.Any
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Names.ModuleName>_R
                                     <GHC.Types.Any>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                                    <*>_N
                                                                    <GHC.Generics.S>_P
                                                                    <'GHC.Generics.MetaSel
                                                                       'GHC.Base.Nothing
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy>_P
                                                                    <GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Language.PureScript.Names.ModuleName>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                           <*>_N
                                                                                                                           <GHC.Generics.C>_P
                                                                                                                           <'GHC.Generics.MetaCons
                                                                                                                              "BuiltinModule"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.False>_P
                                                                                                                           <GHC.Generics.M1
                                                                                                                              GHC.Generics.S
                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                 'GHC.Base.Nothing
                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                              (GHC.Generics.K1
                                                                                                                                 GHC.Generics.R
                                                                                                                                 Language.PureScript.Names.ModuleName)>_R)) <GHC.Types.Any>_N)) }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fNFDataGithubRepo ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.GithubRepo
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Data.Text.$fNFDataText_$crnf
                  `cast`
                ((Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                  ->_R <()>_R) ; Sym (Control.DeepSeq.N:NFData[0]
                                          <Language.PureScript.Docs.Types.GithubRepo>_N)) -}
614d849a4354c290b33f6ef62142889d
  $fNFDataGithubUser ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Data.Text.$fNFDataText_$crnf
                  `cast`
                ((Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                  ->_R <()>_R) ; Sym (Control.DeepSeq.N:NFData[0]
                                          <Language.PureScript.Docs.Types.GithubUser>_N)) -}
14acea96459ae0ba0727319f74cb7f69
  $fNFDataInPackage ::
    Control.DeepSeq.NFData a =>
    Control.DeepSeq.NFData (Language.PureScript.Docs.Types.InPackage a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U())><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Language.PureScript.Docs.Types.$fNFDataInPackage_$crnf
                  `cast`
                (forall (a :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R Sym (Control.DeepSeq.N:NFData[0]
                               <Language.PureScript.Docs.Types.InPackage a>_N)) -}
14acea96459ae0ba0727319f74cb7f69
  $fNFDataInPackage_$crnf ::
    Control.DeepSeq.NFData a =>
    Language.PureScript.Docs.Types.InPackage a -> ()
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U())><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNFData :: Control.DeepSeq.NFData a)
                   (eta :: Language.PureScript.Docs.Types.InPackage a) ->
                 case eta of wild {
                   Language.PureScript.Docs.Types.Local g1
                   -> $dNFData `cast` (Control.DeepSeq.N:NFData[0] <a>_N) g1
                   Language.PureScript.Docs.Types.FromDep g1 g2
                   -> case g1
                             `cast`
                           (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      $dNFData `cast` (Control.DeepSeq.N:NFData[0] <a>_N) g2 } }) -}
465f85673aa60d600eec7529c7b12dab
  $fNFDataLinkLocation ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.LinkLocation
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataDocLink_$crnf1
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.LinkLocation>_N)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fNFDataLinksContext ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.LinksContext
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS)SSSS(SS)S),1*U(1*U(1*H,1*H),1*U,1*U,1*H,1*U(1*U,1*U),1*H)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataLinksContext_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.LinksContext>_N)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fNFDataLinksContext_$crnf ::
    Language.PureScript.Docs.Types.LinksContext -> ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS)SSSS(SS)S),1*U(1*U(1*H,1*H),1*U,1*U,1*H,1*U(1*U,1*U),1*H)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.LinksContext) ->
                 case w of ww { Language.PureScript.Docs.Types.LinksContext ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case ww1 of ww7 { (,) ww8 ww9 ->
                 case ww8
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case ww9
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubRepo[0]) of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case ww4
                        `cast`
                      (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case ww5 of ww10 { Data.Version.Version ww11 ww12 ->
                 case ww6 of ww13 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Data.Map.Internal.$fNFDataMap_$crnf
                        @ Language.PureScript.Names.ModuleName
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        Language.PureScript.Names.$fNFDataModuleName_$crnf
                          `cast`
                        (Sym (Control.DeepSeq.N:NFData[0]
                                  <Language.PureScript.Names.ModuleName>_N))
                        Data.Text.$fNFDataText_$crnf
                          `cast`
                        ((Sym (Web.Bower.PackageMeta.Internal.N:PackageName[0])
                          ->_R <()>_R) ; Sym (Control.DeepSeq.N:NFData[0]
                                                  <Web.Bower.PackageMeta.Internal.PackageName>_N))
                        ww2 of wild1 { () ->
                 case Language.PureScript.Docs.Types.$fNFDataLinksContext_go
                        ww3 of wild2 { () ->
                 case Control.DeepSeq.$fNFDataVersion_go1 ww11 of wild3 { () ->
                 Control.DeepSeq.$fNFDataVersion_go ww12 } } } } } } } } } }) -}
d58a36c04a4145f6b3b1408b0efec882
  $fNFDataLinksContext_go ::
    [(Web.Bower.PackageMeta.Internal.PackageName,
      Data.Version.Version)]
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataModule ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.Module
  DFunId
  {- Arity: 1, Strictness: <S(SSSS),1*U(1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataModule_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.Module>_N)) -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataModule_$crnf :: Language.PureScript.Docs.Types.Module -> ()
  {- Arity: 1, Strictness: <S(SSSS),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { Language.PureScript.Docs.Types.Module ww1 ww2 ww3 ww4 ->
                 Language.PureScript.Docs.Types.$w$crnf2 ww1 ww2 ww3 ww4 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataModule_go ::
    [(Language.PureScript.Docs.Types.InPackage
        Language.PureScript.Names.ModuleName,
      [Language.PureScript.Docs.Types.Declaration])]
    -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
cce819b6566f028d040fc57bb265fd8d
  $fNFDataModule_go1 ::
    [Language.PureScript.Docs.Types.Declaration] -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
4171d1f05d5de1cd94713164f91b8004
  $fNFDataNotYetKnown ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataNotYetKnown_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.NotYetKnown>_N)) -}
4171d1f05d5de1cd94713164f91b8004
  $fNFDataNotYetKnown_$crnf ::
    Language.PureScript.Docs.Types.NotYetKnown -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case x1 of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Tuple.() }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fNFDataPackage ::
    Control.DeepSeq.NFData a =>
    Control.DeepSeq.NFData (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- Arity: 2,
     Strictness: <C(S),1*C1(H)><S(SS(SS)SSSSSS(SS)LS(SS)),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(1*U,1*U),1*H,1*U,1*U,1*U,1*U,1*U(1*H,1*H),U,1*U(1*U,1*U))>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Language.PureScript.Docs.Types.$fNFDataPackage_$crnf
                  `cast`
                (forall (a :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R Sym (Control.DeepSeq.N:NFData[0]
                               <Language.PureScript.Docs.Types.Package a>_N)) -}
f66d967ff562407ff6a522c1eb0528e6
  $fNFDataPackageError ::
    Control.DeepSeq.NFData Language.PureScript.Docs.Types.PackageError
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Docs.Types.$fNFDataPackageError_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Docs.Types.PackageError>_N)) -}
f66d967ff562407ff6a522c1eb0528e6
  $fNFDataPackageError_$crnf ::
    Language.PureScript.Docs.Types.PackageError -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fGenericPackageError1
                        @ GHC.Types.Any
                        x1 of wild {
                   GHC.Generics.L1 x2
                   -> case x2 of wild1 {
                        GHC.Generics.L1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "CompilerTooOld"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                'GHC.Base.Nothing
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 Data.Version.Version)
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 'GHC.Base.Nothing
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 Data.Version.Version)>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.:*: x5 y ->
                                case x5
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             'GHC.Base.Nothing
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             Data.Version.Version>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                             <*>_N
                                                                                             <GHC.Generics.R>_P
                                                                                             <Data.Version.Version>_R
                                                                                             <GHC.Types.Any>_P) of wild4 { Data.Version.Version branch tags ->
                                case Control.DeepSeq.$fNFDataVersion_go1 branch of wild5 { () ->
                                case Control.DeepSeq.$fNFDataVersion_go tags of wild6 { () ->
                                Control.DeepSeq.$fNFDataVersion_$crnf
                                  y `cast`
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          'GHC.Base.Nothing
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R
                                          Data.Version.Version>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <Data.Version.Version>_R
                                                                                          <GHC.Types.Any>_P) } } } }
                             GHC.Generics.R1 x4
                             -> Web.Bower.PackageMeta.Internal.$fNFDataBowerError_$crnf
                                  x4
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "ErrorInPackageMeta"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Web.Bower.PackageMeta.Internal.BowerError)>_R ; GHC.Generics.N:M1[0]
                                                                                                  <*>_N
                                                                                                  <GHC.Generics.S>_P
                                                                                                  <'GHC.Generics.MetaSel
                                                                                                     'GHC.Base.Nothing
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy>_P
                                                                                                  <GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Web.Bower.PackageMeta.Internal.BowerError>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                                           <*>_N
                                                                                                                                                                           <GHC.Generics.R>_P
                                                                                                                                                                           <Web.Bower.PackageMeta.Internal.BowerError>_R
                                                                                                                                                                           <GHC.Types.Any>_P) }
                        GHC.Generics.R1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "InvalidVersion"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.U1 ->
                                GHC.Tuple.() }
                             GHC.Generics.R1 x4
                             -> Data.Text.$fNFDataText_$crnf
                                  x4
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "InvalidDeclarationType"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.Text.Internal.Text>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                       <*>_N
                                                                                                                                       <GHC.Generics.R>_P
                                                                                                                                       <Data.Text.Internal.Text>_R
                                                                                                                                       <GHC.Types.Any>_P) } }
                   GHC.Generics.R1 x2
                   -> case x2 of wild1 {
                        GHC.Generics.L1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> Data.Text.$fNFDataText_$crnf
                                  x4
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "InvalidChildDeclarationType"
                                           'GHC.Generics.PrefixI
                                           'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.Text.Internal.Text>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                       <*>_N
                                                                                                                                       <GHC.Generics.R>_P
                                                                                                                                       <Data.Text.Internal.Text>_R
                                                                                                                                       <GHC.Types.Any>_P)
                             GHC.Generics.R1 x4
                             -> case x4
                                       `cast`
                                     (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "InvalidFixity"
                                             'GHC.Generics.PrefixI
                                             'GHC.Types.False>_P
                                          <GHC.Generics.U1>_R <GHC.Types.Any>_N) of wild3 { GHC.Generics.U1 ->
                                GHC.Tuple.() } }
                        GHC.Generics.R1 x3
                        -> case x3 of wild2 {
                             GHC.Generics.L1 x4
                             -> Data.Text.$fNFDataText_$crnf
                                  x4
                                    `cast`
                                  ((GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "InvalidKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              'GHC.Base.Nothing
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   Data.Text.Internal.Text>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                       <*>_N
                                                                                                                                       <GHC.Generics.R>_P
                                                                                                                                       <Data.Text.Internal.Text>_R
                                                                                                                                       <GHC.Types.Any>_P)
                             GHC.Generics.R1 x4
                             -> case x4 of wild3 {
                                  GHC.Generics.L1 x5
                                  -> Data.Text.$fNFDataText_$crnf
                                       x5
                                         `cast`
                                       ((GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.C>_P
                                             <'GHC.Generics.MetaCons
                                                "InvalidDataDeclType"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False>_P
                                             <GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   'GHC.Base.Nothing
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.S>_P
                                                                                     <'GHC.Generics.MetaSel
                                                                                        'GHC.Base.Nothing
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy>_P
                                                                                     <GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.Text.Internal.Text>_R) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                                                                            <*>_N
                                                                                                                                            <GHC.Generics.R>_P
                                                                                                                                            <Data.Text.Internal.Text>_R
                                                                                                                                            <GHC.Types.Any>_P)
                                  GHC.Generics.R1 x5
                                  -> case x5
                                            `cast`
                                          (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.C>_P
                                               <'GHC.Generics.MetaCons
                                                  "InvalidTime"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False>_P
                                               <GHC.Generics.U1>_R <GHC.Types.Any>_N) of wild4 { GHC.Generics.U1 ->
                                     GHC.Tuple.() } } } } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fNFDataPackage_$crnf ::
    Control.DeepSeq.NFData a =>
    Language.PureScript.Docs.Types.Package a -> ()
  {- Arity: 2,
     Strictness: <C(S),1*C1(H)><S(SS(SS)SSSSSS(SS)LS(SS)),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),1*U(1*U,1*U),1*H,1*U,1*U,1*U,1*U,1*U(1*H,1*H),U,1*U(1*U,1*U))>,
     Unfolding: (\ @ a
                   ($dNFData :: Control.DeepSeq.NFData a)
                   (eta :: Language.PureScript.Docs.Types.Package a) ->
                 case eta of wild { Language.PureScript.Docs.Types.Package g1 g2 g3 g4 g5 g6 g7 g8 g9 g10 ->
                 case Web.Bower.PackageMeta.Internal.$fNFDataPackageMeta_$crnf
                        g1 of wild1 { () ->
                 case g2 of wild2 { Data.Version.Version branch tags ->
                 case Control.DeepSeq.$fNFDataVersion_go1 branch of wild3 { () ->
                 case Control.DeepSeq.$fNFDataVersion_go tags of wild4 { () ->
                 case g3 of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 let {
                   $j :: () <join 0>
                   = case Language.PureScript.Docs.Types.$fNFDataPackage_go
                            g5 of wild5 { () ->
                     case Data.Map.Internal.$fNFDataMap_$crnf
                            @ Language.PureScript.Names.ModuleName
                            @ Web.Bower.PackageMeta.Internal.PackageName
                            Language.PureScript.Names.$fNFDataModuleName_$crnf
                              `cast`
                            (Sym (Control.DeepSeq.N:NFData[0]
                                      <Language.PureScript.Names.ModuleName>_N))
                            Data.Text.$fNFDataText_$crnf
                              `cast`
                            ((Sym (Web.Bower.PackageMeta.Internal.N:PackageName[0])
                              ->_R <()>_R) ; Sym (Control.DeepSeq.N:NFData[0]
                                                      <Web.Bower.PackageMeta.Internal.PackageName>_N))
                            g6 of wild6 { () ->
                     case Language.PureScript.Docs.Types.$fNFDataLinksContext_go
                            g7 of wild7 { () ->
                     case g8 of wild8 { (,) x1 y ->
                     case x1
                            `cast`
                          (Language.PureScript.Docs.Types.N:GithubUser[0]) of ds2 { Data.Text.Internal.Text ipv4 ipv5 ipv6 ->
                     case y `cast`
                          (Language.PureScript.Docs.Types.N:GithubRepo[0]) of ds3 { Data.Text.Internal.Text ipv7 ipv8 ipv9 ->
                     case $dNFData `cast` (Control.DeepSeq.N:NFData[0] <a>_N)
                            g9 of wild9 { () ->
                     Control.DeepSeq.$fNFDataVersion_$crnf g10 } } } } } } }
                 } in
                 case g4 of wild5 {
                   GHC.Base.Nothing -> $j
                   GHC.Base.Just x1
                   -> case x1 of wild6 { Data.Time.Clock.Internal.UTCTime.UTCTime d t ->
                      case d `cast`
                           (Data.Time.Calendar.Days.N:Day[0]) of ds2 { DEFAULT ->
                      case t `cast`
                           (Data.Time.Clock.Internal.DiffTime.N:DiffTime[0] ; Data.Fixed.N:Fixed[0]
                                                                                  <Data.Fixed.E12>_P) of nt { DEFAULT ->
                      $j } } } } } } } } } }) -}
b785471748da5a1d8d2b3f19f2a0190b
  $fNFDataPackage_go :: [Language.PureScript.Docs.Types.Module] -> ()
  {- Arity: 1, Strictness: <S,1*U> -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.ChildDeclaration
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclaration
                  Language.PureScript.Docs.Types.$fEqChildDeclaration
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$ccompare
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<=
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c>
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c>=
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$cmax
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$cmin -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclarationInfo ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.ChildDeclarationInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                  Language.PureScript.Docs.Types.$fEqChildDeclarationInfo
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$ccompare1
                  Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1
                  Language.PureScript.Docs.Types.$fOrdChildDeclarationInfo_$c<=
                  Language.PureScript.Docs.Types.$fOrdChildDeclarationInfo_$c>
                  Language.PureScript.Docs.Types.$fOrdChildDeclarationInfo_$c>=
                  Language.PureScript.Docs.Types.$fOrdChildDeclarationInfo_$cmax
                  Language.PureScript.Docs.Types.$fOrdChildDeclarationInfo_$cmin -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclarationInfo_$c<= ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (b :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclarationInfo_$c> ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (b :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1 b a) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclarationInfo_$c>= ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (b :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclarationInfo_$cmax ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclarationInfo_$cmin ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$c< ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (b :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case a of wild { Language.PureScript.Docs.Types.ChildDeclaration a1 a2 a3 a4 ->
                 case b of wild1 { Language.PureScript.Docs.Types.ChildDeclaration b1 b2 b3 b4 ->
                 case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                 case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> let {
                        $j :: GHC.Types.Bool <join 0>
                        = case a3 of wild3 {
                            GHC.Base.Nothing
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing
                                 -> Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1 a4 b4
                                 GHC.Base.Just ipv -> GHC.Types.True }
                            GHC.Base.Just a7
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing -> GHC.Types.False
                                 GHC.Base.Just b7
                                 -> case a7 of ww11 { Language.PureScript.AST.SourcePos.SourceSpan ww12 ww13 ww14 ->
                                    case b7 of ww15 { Language.PureScript.AST.SourcePos.SourceSpan ww16 ww17 ww18 ->
                                    case Language.PureScript.AST.SourcePos.$w$ccompare1
                                           ww12
                                           ww13
                                           ww14
                                           ww16
                                           ww17
                                           ww18 of wild5 {
                                      GHC.Types.LT -> GHC.Types.True
                                      GHC.Types.EQ
                                      -> Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<1
                                           a4
                                           b4
                                      GHC.Types.GT -> GHC.Types.False } } } } }
                      } in
                      case a2 of wild3 {
                        GHC.Base.Nothing
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.True }
                        GHC.Base.Just a7
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just b7
                             -> case a7 of ww11 { Data.Text.Internal.Text ww12 ww13 ww14 ->
                                case b7 of ww15 { Data.Text.Internal.Text ww16 ww17 ww18 ->
                                case Data.Text.$w$ccompare ww12 ww13 ww14 ww16 ww17 ww18 of wild5 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ -> $j
                                  GHC.Types.GT -> GHC.Types.False } } } } }
                   GHC.Types.GT -> GHC.Types.False } } } } }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclaration_$c<1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (b :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.ChildInstance a1 a2
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Language.PureScript.Docs.Types.ChildInstance b1 b2
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Types.Constraint ())
                                  (Language.PureScript.Types.$fOrdConstraint @ ())
                                  a1
                                  b1 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ -> Language.PureScript.Types.$fOrdType_$c< @ () a2 b2
                             GHC.Types.GT -> GHC.Types.False } }
                   Language.PureScript.Docs.Types.ChildDataConstructor a1
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.ChildInstance ds ds1
                        -> GHC.Types.False
                        Language.PureScript.Docs.Types.ChildDataConstructor b1
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Types.Type ())
                                  (Language.PureScript.Types.$fOrdType @ ())
                                  a1
                                  b1 of wild2 {
                             DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }
                        Language.PureScript.Docs.Types.ChildTypeClassMember ipv
                        -> GHC.Types.True }
                   Language.PureScript.Docs.Types.ChildTypeClassMember a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.ChildTypeClassMember b1
                        -> Language.PureScript.Types.$fOrdType_$c< @ () a1 b1 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$c<= ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (b :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$c> ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (b :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c< b a) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$c>= ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (b :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$ccompare ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)><S(S(SSS)LLL),1*U(1*U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (b :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case a of wild { Language.PureScript.Docs.Types.ChildDeclaration a1 a2 a3 a4 ->
                 case b of wild1 { Language.PureScript.Docs.Types.ChildDeclaration b1 b2 b3 b4 ->
                 case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                 case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> let {
                        $j :: GHC.Types.Ordering <join 0>
                        = case a3 of wild3 {
                            GHC.Base.Nothing
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing
                                 -> Language.PureScript.Docs.Types.$fOrdChildDeclaration_$ccompare1
                                      a4
                                      b4
                                 GHC.Base.Just ipv -> GHC.Types.LT }
                            GHC.Base.Just a7
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing -> GHC.Types.GT
                                 GHC.Base.Just b7
                                 -> case a7 of ww11 { Language.PureScript.AST.SourcePos.SourceSpan ww12 ww13 ww14 ->
                                    case b7 of ww15 { Language.PureScript.AST.SourcePos.SourceSpan ww16 ww17 ww18 ->
                                    case Language.PureScript.AST.SourcePos.$w$ccompare1
                                           ww12
                                           ww13
                                           ww14
                                           ww16
                                           ww17
                                           ww18 of wild5 {
                                      GHC.Types.LT -> GHC.Types.LT
                                      GHC.Types.EQ
                                      -> Language.PureScript.Docs.Types.$fOrdChildDeclaration_$ccompare1
                                           a4
                                           b4
                                      GHC.Types.GT -> GHC.Types.GT } } } } }
                      } in
                      case a2 of wild3 {
                        GHC.Base.Nothing
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.LT }
                        GHC.Base.Just a7
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> GHC.Types.GT
                             GHC.Base.Just b7
                             -> case a7 of ww11 { Data.Text.Internal.Text ww12 ww13 ww14 ->
                                case b7 of ww15 { Data.Text.Internal.Text ww16 ww17 ww18 ->
                                case Data.Text.$w$ccompare ww12 ww13 ww14 ww16 ww17 ww18 of wild5 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> $j
                                  GHC.Types.GT -> GHC.Types.GT } } } } }
                   GHC.Types.GT -> GHC.Types.GT } } } } }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fOrdChildDeclaration_$ccompare1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.ChildDeclarationInfo)
                   (b :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.ChildInstance a1 a2
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Language.PureScript.Docs.Types.ChildInstance b1 b2
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Types.Constraint ())
                                  (Language.PureScript.Types.$fOrdConstraint @ ())
                                  a1
                                  b1 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> Language.PureScript.Types.compareType @ () @ () a2 b2
                             GHC.Types.GT -> GHC.Types.GT } }
                   Language.PureScript.Docs.Types.ChildDataConstructor a1
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.ChildInstance ds ds1 -> GHC.Types.GT
                        Language.PureScript.Docs.Types.ChildDataConstructor b1
                        -> GHC.Classes.$fOrd[]_$ccompare
                             @ (Language.PureScript.Types.Type ())
                             (Language.PureScript.Types.$fOrdType @ ())
                             a1
                             b1
                        Language.PureScript.Docs.Types.ChildTypeClassMember ipv
                        -> GHC.Types.LT }
                   Language.PureScript.Docs.Types.ChildTypeClassMember a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Language.PureScript.Docs.Types.ChildTypeClassMember b1
                        -> Language.PureScript.Types.compareType @ () @ () a1 b1 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$cmax ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),U(U(U,U,U),U,U,U)><S(S(SSS)LLL),U(U(U,U,U),U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (y :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdChildDeclaration_$cmin ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLL),U(U(U,U,U),U,U,U)><S(S(SSS)LLL),U(U(U,U,U),U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclaration)
                   (y :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case Language.PureScript.Docs.Types.$fOrdChildDeclaration_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.Declaration
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Declaration
                  Language.PureScript.Docs.Types.$fEqDeclaration
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare1
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$c<
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$c<=
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$c>
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$c>=
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$cmax
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$cmin -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclarationInfo ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.DeclarationInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DeclarationInfo
                  Language.PureScript.Docs.Types.$fEqDeclarationInfo
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                  Language.PureScript.Docs.Types.$fOrdDeclaration_$c<1
                  Language.PureScript.Docs.Types.$fOrdDeclarationInfo_$c<=
                  Language.PureScript.Docs.Types.$fOrdDeclarationInfo_$c>
                  Language.PureScript.Docs.Types.$fOrdDeclarationInfo_$c>=
                  Language.PureScript.Docs.Types.$fOrdDeclarationInfo_$cmax
                  Language.PureScript.Docs.Types.$fOrdDeclarationInfo_$cmin -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclarationInfo_$c<= ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclarationInfo_$c> ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclarationInfo_$c>= ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclarationInfo_$cmax ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x1 }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclarationInfo_$cmin ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> x1 GHC.Types.GT -> y }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$c< ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)><S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.Declaration)
                   (b :: Language.PureScript.Docs.Types.Declaration) ->
                 case a of wild { Language.PureScript.Docs.Types.Declaration a1 a2 a3 a4 a5 ->
                 case b of wild1 { Language.PureScript.Docs.Types.Declaration b1 b2 b3 b4 b5 ->
                 case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                 case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> let {
                        $j :: GHC.Types.Bool <join 0>
                        = let {
                            $j1 :: GHC.Types.Bool <join 0>
                            = case GHC.Classes.$fOrd[]_$ccompare
                                     @ Language.PureScript.Docs.Types.ChildDeclaration
                                     Language.PureScript.Docs.Types.$fOrdChildDeclaration
                                     a4
                                     b4 of wild3 {
                                GHC.Types.LT -> GHC.Types.True
                                GHC.Types.EQ
                                -> Language.PureScript.Docs.Types.$fOrdDeclaration_$c<1 a5 b5
                                GHC.Types.GT -> GHC.Types.False }
                          } in
                          case a3 of wild3 {
                            GHC.Base.Nothing
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing -> $j1 GHC.Base.Just ipv -> GHC.Types.True }
                            GHC.Base.Just a7
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing -> GHC.Types.False
                                 GHC.Base.Just b7
                                 -> case a7 of ww11 { Language.PureScript.AST.SourcePos.SourceSpan ww12 ww13 ww14 ->
                                    case b7 of ww15 { Language.PureScript.AST.SourcePos.SourceSpan ww16 ww17 ww18 ->
                                    case Language.PureScript.AST.SourcePos.$w$ccompare1
                                           ww12
                                           ww13
                                           ww14
                                           ww16
                                           ww17
                                           ww18 of wild5 {
                                      GHC.Types.LT -> GHC.Types.True
                                      GHC.Types.EQ -> $j1
                                      GHC.Types.GT -> GHC.Types.False } } } } }
                      } in
                      case a2 of wild3 {
                        GHC.Base.Nothing
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.True }
                        GHC.Base.Just a7
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just b7
                             -> case a7 of ww11 { Data.Text.Internal.Text ww12 ww13 ww14 ->
                                case b7 of ww15 { Data.Text.Internal.Text ww16 ww17 ww18 ->
                                case Data.Text.$w$ccompare ww12 ww13 ww14 ww16 ww17 ww18 of wild5 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ -> $j
                                  GHC.Types.GT -> GHC.Types.False } } } } }
                   GHC.Types.GT -> GHC.Types.False } } } } }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclaration_$c<1 ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo)
                   (y :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$c<= ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)><S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.Declaration)
                   (b :: Language.PureScript.Docs.Types.Declaration) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$c> ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)><S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.Declaration)
                   (b :: Language.PureScript.Docs.Types.Declaration) ->
                 Language.PureScript.Docs.Types.$fOrdDeclaration_$c< b a) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$c>= ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)><S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.Declaration)
                   (b :: Language.PureScript.Docs.Types.Declaration) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fOrdDeclaration_$ccompare ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.Types.DeclarationInfo
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$ccompare1 ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,1*U)><S(S(SSS)LLLL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.Declaration)
                   (b :: Language.PureScript.Docs.Types.Declaration) ->
                 case a of wild { Language.PureScript.Docs.Types.Declaration a1 a2 a3 a4 a5 ->
                 case b of wild1 { Language.PureScript.Docs.Types.Declaration b1 b2 b3 b4 b5 ->
                 case a1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case b1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                 case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> let {
                        $j :: GHC.Types.Ordering <join 0>
                        = let {
                            $j1 :: GHC.Types.Ordering <join 0>
                            = case GHC.Classes.$fOrd[]_$ccompare
                                     @ Language.PureScript.Docs.Types.ChildDeclaration
                                     Language.PureScript.Docs.Types.$fOrdChildDeclaration
                                     a4
                                     b4 of wild3 {
                                GHC.Types.LT -> GHC.Types.LT
                                GHC.Types.EQ
                                -> Language.PureScript.Docs.Types.$fOrdDeclaration_$ccompare a5 b5
                                GHC.Types.GT -> GHC.Types.GT }
                          } in
                          case a3 of wild3 {
                            GHC.Base.Nothing
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing -> $j1 GHC.Base.Just ipv -> GHC.Types.LT }
                            GHC.Base.Just a7
                            -> case b3 of wild4 {
                                 GHC.Base.Nothing -> GHC.Types.GT
                                 GHC.Base.Just b7
                                 -> case a7 of ww11 { Language.PureScript.AST.SourcePos.SourceSpan ww12 ww13 ww14 ->
                                    case b7 of ww15 { Language.PureScript.AST.SourcePos.SourceSpan ww16 ww17 ww18 ->
                                    case Language.PureScript.AST.SourcePos.$w$ccompare1
                                           ww12
                                           ww13
                                           ww14
                                           ww16
                                           ww17
                                           ww18 of wild5 {
                                      GHC.Types.LT -> GHC.Types.LT
                                      GHC.Types.EQ -> $j1
                                      GHC.Types.GT -> GHC.Types.GT } } } } }
                      } in
                      case a2 of wild3 {
                        GHC.Base.Nothing
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.LT }
                        GHC.Base.Just a7
                        -> case b2 of wild4 {
                             GHC.Base.Nothing -> GHC.Types.GT
                             GHC.Base.Just b7
                             -> case a7 of ww11 { Data.Text.Internal.Text ww12 ww13 ww14 ->
                                case b7 of ww15 { Data.Text.Internal.Text ww16 ww17 ww18 ->
                                case Data.Text.$w$ccompare ww12 ww13 ww14 ww16 ww17 ww18 of wild5 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> $j
                                  GHC.Types.GT -> GHC.Types.GT } } } } }
                   GHC.Types.GT -> GHC.Types.GT } } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$cmax ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),U(U(U,U,U),U,U,U,U)><S(S(SSS)LLLL),U(U(U,U,U),U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Declaration)
                   (y :: Language.PureScript.Docs.Types.Declaration) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdDeclaration_$cmin ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SSS)LLLL),U(U(U,U,U),U,U,U,U)><S(S(SSS)LLLL),U(U(U,U,U),U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Declaration)
                   (y :: Language.PureScript.Docs.Types.Declaration) ->
                 case Language.PureScript.Docs.Types.$fOrdDeclaration_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.DocLink
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DocLink
                  Language.PureScript.Docs.Types.$fEqDocLink
                  Language.PureScript.Docs.Types.$fOrdDocLink_$ccompare1
                  Language.PureScript.Docs.Types.$fOrdDocLink_$c<
                  Language.PureScript.Docs.Types.$fOrdDocLink_$c<=
                  Language.PureScript.Docs.Types.$fOrdDocLink_$c>
                  Language.PureScript.Docs.Types.$fOrdDocLink_$c>=
                  Language.PureScript.Docs.Types.$fOrdDocLink_$cmax
                  Language.PureScript.Docs.Types.$fOrdDocLink_$cmin -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$c< ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Types.DocLink)
                   (w2 :: Language.PureScript.Docs.Types.DocLink) ->
                 case w of ww { Language.PureScript.Docs.Types.DocLink ww1 ww2 ww3 ->
                 case w2 of ww4 { Language.PureScript.Docs.Types.DocLink ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Types.$w$c<
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$c<= ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.DocLink)
                   (b :: Language.PureScript.Docs.Types.DocLink) ->
                 case Language.PureScript.Docs.Types.$fOrdDocLink_$c< b a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$c> ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.DocLink)
                   (b :: Language.PureScript.Docs.Types.DocLink) ->
                 Language.PureScript.Docs.Types.$fOrdDocLink_$c< b a) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$c>= ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.DocLink)
                   (b :: Language.PureScript.Docs.Types.DocLink) ->
                 case Language.PureScript.Docs.Types.$fOrdDocLink_$c< a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdDocLink_$ccompare ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.LinkLocation)
                   (b :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.LocalModule a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Language.PureScript.Docs.Types.LocalModule b1
                        -> GHC.Classes.$fOrd[]_$ccompare
                             @ (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.Namespace)
                             (Language.PureScript.Names.$fOrdProperName
                                @ 'Language.PureScript.Names.Namespace)
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) }
                   Language.PureScript.Docs.Types.DepsModule a1 a2 a3
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.LocalModule ds -> GHC.Types.GT
                        Language.PureScript.Docs.Types.DepsModule b1 b2 b3
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case a2 of wild3 { Data.Version.Version ds3 ds4 ->
                                case b2 of wild4 { Data.Version.Version ds5 ds6 ->
                                case GHC.Classes.$fOrd[]_$s$ccompare ds3 ds5 of wild5 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ
                                  -> GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a3 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b3 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  GHC.Types.GT -> GHC.Types.GT } } }
                             GHC.Types.GT -> GHC.Types.GT } } }
                        Language.PureScript.Docs.Types.BuiltinModule ipv -> GHC.Types.LT }
                   Language.PureScript.Docs.Types.BuiltinModule a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Language.PureScript.Docs.Types.BuiltinModule b1
                        -> GHC.Classes.$fOrd[]_$ccompare
                             @ (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.Namespace)
                             (Language.PureScript.Names.$fOrdProperName
                                @ 'Language.PureScript.Names.Namespace)
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) } }) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$ccompare1 ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U,U,U),1*U)><S(SLL),1*U(1*U,1*U(U,U,U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Types.DocLink)
                   (w2 :: Language.PureScript.Docs.Types.DocLink) ->
                 case w of ww { Language.PureScript.Docs.Types.DocLink ww1 ww2 ww3 ->
                 case w2 of ww4 { Language.PureScript.Docs.Types.DocLink ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Types.$w$ccompare
                   ww1
                   ww2
                   ww3
                   ww5
                   ww6
                   ww7 } }) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$cmax ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U,U,U),U)><S(SLL),1*U(U,U(U,U,U),U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DocLink)
                   (y :: Language.PureScript.Docs.Types.DocLink) ->
                 case Language.PureScript.Docs.Types.$fOrdDocLink_$c< y x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
8b305838d47692238020364c584ab76f
  $fOrdDocLink_$cmin ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.DocLink
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U,U,U),U)><S(SLL),1*U(U,U(U,U,U),U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DocLink)
                   (y :: Language.PureScript.Docs.Types.DocLink) ->
                 case Language.PureScript.Docs.Types.$fOrdDocLink_$c< y x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdGithubRepo ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.GithubRepo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubRepo
                  Language.PureScript.Docs.Types.$fEqGithubRepo
                  Data.Text.$fOrdText_$ccompare
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Ordering>_R)
                  Data.Text.$fOrdText_$c<
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$c<=
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$c>
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$c>=
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$cmax
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0]))
                  Data.Text.$fOrdText_$cmin
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])) -}
614d849a4354c290b33f6ef62142889d
  $fOrdGithubUser ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubUser
                  Language.PureScript.Docs.Types.$fEqGithubUser
                  Data.Text.$fOrdText_$ccompare
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Ordering>_R)
                  Data.Text.$fOrdText_$c<
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$c<=
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$c>
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$c>=
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <GHC.Types.Bool>_R)
                  Data.Text.$fOrdText_$cmax
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0]))
                  Data.Text.$fOrdText_$cmin
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R Sym (Language.PureScript.Docs.Types.N:GithubUser[0])) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage ::
    GHC.Classes.Ord a =>
    GHC.Classes.Ord (Language.PureScript.Docs.Types.InPackage a)
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Ord a).
                  @ (Language.PureScript.Docs.Types.InPackage a)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$cp1Ord @ a v)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$ccompare @ a v)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$c< @ a v)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$c<= @ a v)
                  (\ (a1 :: Language.PureScript.Docs.Types.InPackage a)
                     (b :: Language.PureScript.Docs.Types.InPackage a) ->
                   Language.PureScript.Docs.Types.$fOrdInPackage_$c< @ a v b a1)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$c>= @ a v)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$cmax @ a v)
                  (Language.PureScript.Docs.Types.$fOrdInPackage_$cmin @ a v) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$c< ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Language.PureScript.Docs.Types.InPackage a)
                   (b :: Language.PureScript.Docs.Types.InPackage a) ->
                 case a1 of wild {
                   Language.PureScript.Docs.Types.Local a2
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> GHC.Classes.< @ a $dOrd a2 b1
                        Language.PureScript.Docs.Types.FromDep ipv ipv1 -> GHC.Types.True }
                   Language.PureScript.Docs.Types.FromDep a2 a3
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.False
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a2
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ -> GHC.Classes.< @ a $dOrd a3 b2
                             GHC.Types.GT -> GHC.Types.False } } } } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$c<= ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Language.PureScript.Docs.Types.InPackage a)
                   (b :: Language.PureScript.Docs.Types.InPackage a) ->
                 case Language.PureScript.Docs.Types.$fOrdInPackage_$c<
                        @ a
                        $dOrd
                        b
                        a1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$c>= ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Language.PureScript.Docs.Types.InPackage a)
                   (b :: Language.PureScript.Docs.Types.InPackage a) ->
                 case Language.PureScript.Docs.Types.$fOrdInPackage_$c<
                        @ a
                        $dOrd
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$ccompare ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Types.Ordering
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Language.PureScript.Docs.Types.InPackage a)
                   (b :: Language.PureScript.Docs.Types.InPackage a) ->
                 case a1 of wild {
                   Language.PureScript.Docs.Types.Local a2
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> GHC.Classes.compare @ a $dOrd a2 b1
                        Language.PureScript.Docs.Types.FromDep ipv ipv1 -> GHC.Types.LT }
                   Language.PureScript.Docs.Types.FromDep a2 a3
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.GT
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a2
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> GHC.Classes.compare @ a $dOrd a3 b2
                             GHC.Types.GT -> GHC.Types.GT } } } } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$cmax ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C1(U)),A,A,A,A,A)><S,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x1 :: Language.PureScript.Docs.Types.InPackage a)
                   (y :: Language.PureScript.Docs.Types.InPackage a) ->
                 case Language.PureScript.Docs.Types.$fOrdInPackage_$c<
                        @ a
                        $dOrd
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$cmin ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a
    -> Language.PureScript.Docs.Types.InPackage a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C1(U)),A,A,A,A,A)><S,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x1 :: Language.PureScript.Docs.Types.InPackage a)
                   (y :: Language.PureScript.Docs.Types.InPackage a) ->
                 case Language.PureScript.Docs.Types.$fOrdInPackage_$c<
                        @ a
                        $dOrd
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$cp1Ord ::
    GHC.Classes.Ord a =>
    GHC.Classes.Eq (Language.PureScript.Docs.Types.InPackage a)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 Language.PureScript.Docs.Types.$fEqInPackage
                   @ a
                   (GHC.Classes.$p1Ord @ a $dOrd)) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$s$c< ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName)
                   (b :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> Language.PureScript.Names.$fOrdModuleName6
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                        Language.PureScript.Docs.Types.FromDep ipv ipv1 -> GHC.Types.True }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.False
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> Language.PureScript.Names.$fOrdModuleName6
                                  a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  b2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             GHC.Types.GT -> GHC.Types.False } } } } }) -}
04273b20d63250d5ba87cfa5302712e7
  $fOrdInPackage_$s$c<= ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName)
                   (b :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case b of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case a of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fOrdProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                        Language.PureScript.Docs.Types.FromDep ipv ipv1
                        -> GHC.Types.False }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case a of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.True
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b2
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                             GHC.Types.GT -> GHC.Types.True } } } } }) -}
72e1fd73a8c3be33cbc57a51fcd2e585
  $fOrdInPackage_$s$c>= ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName)
                   (b :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fOrdProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                        Language.PureScript.Docs.Types.FromDep ipv ipv1
                        -> GHC.Types.False }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.True
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.False
                             GHC.Types.EQ
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b2
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                             GHC.Types.GT -> GHC.Types.True } } } } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$s$ccompare ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName)
                   (b :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> GHC.Classes.$fOrd[]_$ccompare
                             @ (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.Namespace)
                             (Language.PureScript.Names.$fOrdProperName
                                @ 'Language.PureScript.Names.Namespace)
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                        Language.PureScript.Docs.Types.FromDep ipv ipv1 -> GHC.Types.LT }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> GHC.Types.GT
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fOrdProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  b2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             GHC.Types.GT -> GHC.Types.GT } } } } }) -}
d0dd289b26cd574f15bb5d885332ba66
  $fOrdInPackage_$s$cmax ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.InPackage
                            Language.PureScript.Names.ModuleName)
                   (y :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case y of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case x1 of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fOrdProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                             DEFAULT -> wild GHC.Types.LT -> wild1 }
                        Language.PureScript.Docs.Types.FromDep ipv ipv1 -> wild1 }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case x1 of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> wild
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> wild1
                             GHC.Types.EQ
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b2
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  DEFAULT -> wild GHC.Types.LT -> wild1 }
                             GHC.Types.GT -> wild } } } } }) -}
b72dce6dc7c2cecbf915dab0db40869c
  $fOrdInPackage_$s$cmin ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.InPackage
                            Language.PureScript.Names.ModuleName)
                   (y :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case y of wild {
                   Language.PureScript.Docs.Types.Local a1
                   -> case x1 of wild1 {
                        Language.PureScript.Docs.Types.Local b1
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fOrdProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                             DEFAULT -> wild1 GHC.Types.LT -> wild }
                        Language.PureScript.Docs.Types.FromDep ipv ipv1 -> wild }
                   Language.PureScript.Docs.Types.FromDep a1 a2
                   -> case x1 of wild1 {
                        Language.PureScript.Docs.Types.Local ipv -> wild1
                        Language.PureScript.Docs.Types.FromDep b1 b2
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> wild
                             GHC.Types.EQ
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b2
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  DEFAULT -> wild1 GHC.Types.LT -> wild }
                             GHC.Types.GT -> wild1 } } } } }) -}
14acea96459ae0ba0727319f74cb7f69
  $fOrdInPackage_$s$fOrdInPackage ::
    GHC.Classes.Ord
      (Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Docs.Types.InPackage
                       Language.PureScript.Names.ModuleName)
                  Language.PureScript.Docs.Types.$fEqInPackage_$s$fEqInPackage
                  Language.PureScript.Docs.Types.$fOrdInPackage_$s$ccompare
                  Language.PureScript.Docs.Types.$fOrdInPackage_$s$c<
                  (\ (a :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName)
                     (b :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName) ->
                   case b of wild {
                     Language.PureScript.Docs.Types.Local a1
                     -> case a of wild1 {
                          Language.PureScript.Docs.Types.Local b1
                          -> case GHC.Classes.$fOrd[]_$ccompare
                                    @ (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.Namespace)
                                    (Language.PureScript.Names.$fOrdProperName
                                       @ 'Language.PureScript.Names.Namespace)
                                    a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                    b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                               DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                          Language.PureScript.Docs.Types.FromDep ipv ipv1
                          -> GHC.Types.False }
                     Language.PureScript.Docs.Types.FromDep a1 a2
                     -> case a of wild1 {
                          Language.PureScript.Docs.Types.Local ipv -> GHC.Types.True
                          Language.PureScript.Docs.Types.FromDep b1 b2
                          -> case Data.Text.$fOrdText_$ccompare
                                    a1 `cast` (Web.Bower.PackageMeta.Internal.N:PackageName[0])
                                    b1
                                      `cast`
                                    (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 {
                               GHC.Types.LT -> GHC.Types.False
                               GHC.Types.EQ
                               -> case GHC.Classes.$fOrd[]_$ccompare
                                         @ (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.Namespace)
                                         (Language.PureScript.Names.$fOrdProperName
                                            @ 'Language.PureScript.Names.Namespace)
                                         a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                         b2
                                           `cast`
                                         (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                    DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                               GHC.Types.GT -> GHC.Types.True } } })
                  (\ (a :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName)
                     (b :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName) ->
                   Language.PureScript.Docs.Types.$fOrdInPackage_$s$c< b a)
                  (\ (a :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName)
                     (b :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName) ->
                   case a of wild {
                     Language.PureScript.Docs.Types.Local a1
                     -> case b of wild1 {
                          Language.PureScript.Docs.Types.Local b1
                          -> case GHC.Classes.$fOrd[]_$ccompare
                                    @ (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.Namespace)
                                    (Language.PureScript.Names.$fOrdProperName
                                       @ 'Language.PureScript.Names.Namespace)
                                    a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                    b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                               DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                          Language.PureScript.Docs.Types.FromDep ipv ipv1
                          -> GHC.Types.False }
                     Language.PureScript.Docs.Types.FromDep a1 a2
                     -> case b of wild1 {
                          Language.PureScript.Docs.Types.Local ipv -> GHC.Types.True
                          Language.PureScript.Docs.Types.FromDep b1 b2
                          -> case Data.Text.$fOrdText_$ccompare
                                    a1 `cast` (Web.Bower.PackageMeta.Internal.N:PackageName[0])
                                    b1
                                      `cast`
                                    (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 {
                               GHC.Types.LT -> GHC.Types.False
                               GHC.Types.EQ
                               -> case GHC.Classes.$fOrd[]_$ccompare
                                         @ (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.Namespace)
                                         (Language.PureScript.Names.$fOrdProperName
                                            @ 'Language.PureScript.Names.Namespace)
                                         a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                         b2
                                           `cast`
                                         (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                    DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }
                               GHC.Types.GT -> GHC.Types.True } } })
                  (\ (x1 :: Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName)
                     (y :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName) ->
                   case y of wild {
                     Language.PureScript.Docs.Types.Local a1
                     -> case x1 of wild1 {
                          Language.PureScript.Docs.Types.Local b1
                          -> case GHC.Classes.$fOrd[]_$ccompare
                                    @ (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.Namespace)
                                    (Language.PureScript.Names.$fOrdProperName
                                       @ 'Language.PureScript.Names.Namespace)
                                    a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                    b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                               DEFAULT -> wild GHC.Types.LT -> wild1 }
                          Language.PureScript.Docs.Types.FromDep ipv ipv1 -> wild1 }
                     Language.PureScript.Docs.Types.FromDep a1 a2
                     -> case x1 of wild1 {
                          Language.PureScript.Docs.Types.Local ipv -> wild
                          Language.PureScript.Docs.Types.FromDep b1 b2
                          -> case Data.Text.$fOrdText_$ccompare
                                    a1 `cast` (Web.Bower.PackageMeta.Internal.N:PackageName[0])
                                    b1
                                      `cast`
                                    (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 {
                               GHC.Types.LT -> wild1
                               GHC.Types.EQ
                               -> case GHC.Classes.$fOrd[]_$ccompare
                                         @ (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.Namespace)
                                         (Language.PureScript.Names.$fOrdProperName
                                            @ 'Language.PureScript.Names.Namespace)
                                         a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                         b2
                                           `cast`
                                         (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                    DEFAULT -> wild GHC.Types.LT -> wild1 }
                               GHC.Types.GT -> wild } } })
                  (\ (x1 :: Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName)
                     (y :: Language.PureScript.Docs.Types.InPackage
                             Language.PureScript.Names.ModuleName) ->
                   case y of wild {
                     Language.PureScript.Docs.Types.Local a1
                     -> case x1 of wild1 {
                          Language.PureScript.Docs.Types.Local b1
                          -> case GHC.Classes.$fOrd[]_$ccompare
                                    @ (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.Namespace)
                                    (Language.PureScript.Names.$fOrdProperName
                                       @ 'Language.PureScript.Names.Namespace)
                                    a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                    b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                               DEFAULT -> wild1 GHC.Types.LT -> wild }
                          Language.PureScript.Docs.Types.FromDep ipv ipv1 -> wild }
                     Language.PureScript.Docs.Types.FromDep a1 a2
                     -> case x1 of wild1 {
                          Language.PureScript.Docs.Types.Local ipv -> wild1
                          Language.PureScript.Docs.Types.FromDep b1 b2
                          -> case Data.Text.$fOrdText_$ccompare
                                    a1 `cast` (Web.Bower.PackageMeta.Internal.N:PackageName[0])
                                    b1
                                      `cast`
                                    (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild2 {
                               GHC.Types.LT -> wild
                               GHC.Types.EQ
                               -> case GHC.Classes.$fOrd[]_$ccompare
                                         @ (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.Namespace)
                                         (Language.PureScript.Names.$fOrdProperName
                                            @ 'Language.PureScript.Names.Namespace)
                                         a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                         b2
                                           `cast`
                                         (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                    DEFAULT -> wild1 GHC.Types.LT -> wild }
                               GHC.Types.GT -> wild1 } } }) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.LinkLocation
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinkLocation
                  Language.PureScript.Docs.Types.$fEqLinkLocation
                  Language.PureScript.Docs.Types.$fOrdDocLink_$ccompare
                  Language.PureScript.Docs.Types.$fOrdLinkLocation_$c<
                  Language.PureScript.Docs.Types.$fOrdLinkLocation_$c<=
                  Language.PureScript.Docs.Types.$fOrdLinkLocation_$c>
                  Language.PureScript.Docs.Types.$fOrdLinkLocation_$c>=
                  Language.PureScript.Docs.Types.$fOrdLinkLocation_$cmax
                  Language.PureScript.Docs.Types.$fOrdLinkLocation_$cmin -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation_$c< ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.LinkLocation)
                   (b :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case a of wild {
                   Language.PureScript.Docs.Types.LocalModule a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Language.PureScript.Docs.Types.LocalModule b1
                        -> Language.PureScript.Names.$fOrdModuleName6
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) }
                   Language.PureScript.Docs.Types.DepsModule a1 a2 a3
                   -> case b of wild1 {
                        Language.PureScript.Docs.Types.LocalModule ds -> GHC.Types.False
                        Language.PureScript.Docs.Types.DepsModule b1 b2 b3
                        -> case a1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case b1
                                  `cast`
                                (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> case a2 of wild3 { Data.Version.Version ds3 ds4 ->
                                case b2 of wild4 { Data.Version.Version ds5 ds6 ->
                                case GHC.Classes.$fOrd[]_$s$ccompare ds3 ds5 of wild5 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ
                                  -> Language.PureScript.Names.$fOrdModuleName6
                                       a3 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b3 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  GHC.Types.GT -> GHC.Types.False } } }
                             GHC.Types.GT -> GHC.Types.False } } }
                        Language.PureScript.Docs.Types.BuiltinModule ipv
                        -> GHC.Types.True }
                   Language.PureScript.Docs.Types.BuiltinModule a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Language.PureScript.Docs.Types.BuiltinModule b1
                        -> Language.PureScript.Names.$fOrdModuleName6
                             a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                             b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) } }) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation_$c<= ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.LinkLocation)
                   (b :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case Language.PureScript.Docs.Types.$fOrdLinkLocation_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation_$c> ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.LinkLocation)
                   (b :: Language.PureScript.Docs.Types.LinkLocation) ->
                 Language.PureScript.Docs.Types.$fOrdLinkLocation_$c< b a) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation_$c>= ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.LinkLocation)
                   (b :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case Language.PureScript.Docs.Types.$fOrdLinkLocation_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation_$cmax ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinkLocation)
                   (y :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case Language.PureScript.Docs.Types.$fOrdLinkLocation_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
465f85673aa60d600eec7529c7b12dab
  $fOrdLinkLocation_$cmin ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation
    -> Language.PureScript.Docs.Types.LinkLocation
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinkLocation)
                   (y :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case Language.PureScript.Docs.Types.$fOrdLinkLocation_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.LinksContext
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinksContext
                  Language.PureScript.Docs.Types.$fEqLinksContext
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$ccompare
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$c<
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$c<=
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$c>
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$c>=
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$cmax
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$cmin -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$c< ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))><S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.LinksContext)
                   (b :: Language.PureScript.Docs.Types.LinksContext) ->
                 case a of wild { Language.PureScript.Docs.Types.LinksContext a1 a2 a3 a4 a5 a6 ->
                 case b of wild1 { Language.PureScript.Docs.Types.LinksContext b1 b2 b3 b4 b5 b6 ->
                 case a1 of ww { (,) ww1 ww2 ->
                 case b1 of ww3 { (,) ww4 ww5 ->
                 case ww1
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of ww11 { Data.Text.Internal.Text ww12 ww6 ww13 ->
                 case Data.Text.$w$ccompare ww8 ww9 ww10 ww12 ww6 ww13 of wild2 {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case ww2
                             `cast`
                           (Language.PureScript.Docs.Types.N:GithubRepo[0]) of ww14 { Data.Text.Internal.Text ww15 ww16 ww17 ->
                      case ww5
                             `cast`
                           (Language.PureScript.Docs.Types.N:GithubRepo[0]) of ww18 { Data.Text.Internal.Text ww19 ww20 ww21 ->
                      case Data.Text.$w$ccompare ww15 ww16 ww17 ww19 ww20 ww21 of wild3 {
                        GHC.Types.LT -> GHC.Types.True
                        GHC.Types.EQ
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ModuleName,
                                     Web.Bower.PackageMeta.Internal.PackageName)
                                  Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fOrd(,)1
                                  (Data.Map.Internal.$fDataMap_go
                                     @ Language.PureScript.Names.ModuleName
                                     @ Web.Bower.PackageMeta.Internal.PackageName
                                     (GHC.Types.[]
                                        @ (Language.PureScript.Names.ModuleName,
                                           Web.Bower.PackageMeta.Internal.PackageName))
                                     a2)
                                  (Data.Map.Internal.$fDataMap_go
                                     @ Language.PureScript.Names.ModuleName
                                     @ Web.Bower.PackageMeta.Internal.PackageName
                                     (GHC.Types.[]
                                        @ (Language.PureScript.Names.ModuleName,
                                           Web.Bower.PackageMeta.Internal.PackageName))
                                     b2) of wild4 {
                             GHC.Types.LT -> GHC.Types.True
                             GHC.Types.EQ
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Web.Bower.PackageMeta.Internal.PackageName,
                                          Data.Version.Version)
                                       Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fOrd(,)
                                       a3
                                       b3 of wild5 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ
                                  -> case a4
                                            `cast`
                                          (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww22 { Data.Text.Internal.Text ww23 ww24 ww25 ->
                                     case b4
                                            `cast`
                                          (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww26 { Data.Text.Internal.Text ww27 ww28 ww29 ->
                                     case Data.Text.$w$ccompare
                                            ww23
                                            ww24
                                            ww25
                                            ww27
                                            ww28
                                            ww29 of wild6 {
                                       GHC.Types.LT -> GHC.Types.True
                                       GHC.Types.EQ
                                       -> case a5 of wild7 { Data.Version.Version ds3 ds4 ->
                                          case b5 of wild8 { Data.Version.Version ds5 ds6 ->
                                          case GHC.Classes.$fOrd[]_$s$ccompare ds3 ds5 of wild9 {
                                            GHC.Types.LT -> GHC.Types.True
                                            GHC.Types.EQ -> Data.Text.$fOrdText_$c< a6 b6
                                            GHC.Types.GT -> GHC.Types.False } } }
                                       GHC.Types.GT -> GHC.Types.False } } }
                                  GHC.Types.GT -> GHC.Types.False }
                             GHC.Types.GT -> GHC.Types.False }
                        GHC.Types.GT -> GHC.Types.False } } }
                   GHC.Types.GT -> GHC.Types.False } } } } } } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$c<= ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))><S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.LinksContext)
                   (b :: Language.PureScript.Docs.Types.LinksContext) ->
                 case Language.PureScript.Docs.Types.$fOrdLinksContext_$c<
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$c> ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))><S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.LinksContext)
                   (b :: Language.PureScript.Docs.Types.LinksContext) ->
                 Language.PureScript.Docs.Types.$fOrdLinksContext_$c< b a) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$c>= ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))><S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.LinksContext)
                   (b :: Language.PureScript.Docs.Types.LinksContext) ->
                 case Language.PureScript.Docs.Types.$fOrdLinksContext_$c<
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$ccompare ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))><S(S(S(SSS)L)LLLLL),1*U(1*U(1*U(U,U,U),1*U(U,U,U)),1*U,1*U,1*U(U,U,U),1*U(1*U,A),1*U(U,U,U))>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.LinksContext)
                   (b :: Language.PureScript.Docs.Types.LinksContext) ->
                 case a of wild { Language.PureScript.Docs.Types.LinksContext a1 a2 a3 a4 a5 a6 ->
                 case b of wild1 { Language.PureScript.Docs.Types.LinksContext b1 b2 b3 b4 b5 b6 ->
                 case a1 of ww { (,) ww1 ww2 ->
                 case b1 of ww3 { (,) ww4 ww5 ->
                 case ww1
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (Language.PureScript.Docs.Types.N:GithubUser[0]) of ww11 { Data.Text.Internal.Text ww12 ww6 ww13 ->
                 case Data.Text.$w$ccompare ww8 ww9 ww10 ww12 ww6 ww13 of wild2 {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> case ww2
                             `cast`
                           (Language.PureScript.Docs.Types.N:GithubRepo[0]) of ww14 { Data.Text.Internal.Text ww15 ww16 ww17 ->
                      case ww5
                             `cast`
                           (Language.PureScript.Docs.Types.N:GithubRepo[0]) of ww18 { Data.Text.Internal.Text ww19 ww20 ww21 ->
                      case Data.Text.$w$ccompare ww15 ww16 ww17 ww19 ww20 ww21 of wild3 {
                        GHC.Types.LT -> GHC.Types.LT
                        GHC.Types.EQ
                        -> case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ModuleName,
                                     Web.Bower.PackageMeta.Internal.PackageName)
                                  Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fOrd(,)1
                                  (Data.Map.Internal.$fDataMap_go
                                     @ Language.PureScript.Names.ModuleName
                                     @ Web.Bower.PackageMeta.Internal.PackageName
                                     (GHC.Types.[]
                                        @ (Language.PureScript.Names.ModuleName,
                                           Web.Bower.PackageMeta.Internal.PackageName))
                                     a2)
                                  (Data.Map.Internal.$fDataMap_go
                                     @ Language.PureScript.Names.ModuleName
                                     @ Web.Bower.PackageMeta.Internal.PackageName
                                     (GHC.Types.[]
                                        @ (Language.PureScript.Names.ModuleName,
                                           Web.Bower.PackageMeta.Internal.PackageName))
                                     b2) of wild4 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Web.Bower.PackageMeta.Internal.PackageName,
                                          Data.Version.Version)
                                       Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fOrd(,)
                                       a3
                                       b3 of wild5 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ
                                  -> case a4
                                            `cast`
                                          (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww22 { Data.Text.Internal.Text ww23 ww24 ww25 ->
                                     case b4
                                            `cast`
                                          (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of ww26 { Data.Text.Internal.Text ww27 ww28 ww29 ->
                                     case Data.Text.$w$ccompare
                                            ww23
                                            ww24
                                            ww25
                                            ww27
                                            ww28
                                            ww29 of wild6 {
                                       GHC.Types.LT -> GHC.Types.LT
                                       GHC.Types.EQ
                                       -> case a5 of wild7 { Data.Version.Version ds3 ds4 ->
                                          case b5 of wild8 { Data.Version.Version ds5 ds6 ->
                                          case GHC.Classes.$fOrd[]_$s$ccompare ds3 ds5 of wild9 {
                                            GHC.Types.LT -> GHC.Types.LT
                                            GHC.Types.EQ -> Data.Text.$fOrdText_$ccompare a6 b6
                                            GHC.Types.GT -> GHC.Types.GT } } }
                                       GHC.Types.GT -> GHC.Types.GT } } }
                                  GHC.Types.GT -> GHC.Types.GT }
                             GHC.Types.GT -> GHC.Types.GT }
                        GHC.Types.GT -> GHC.Types.GT } } }
                   GHC.Types.GT -> GHC.Types.GT } } } } } } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$cmax ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),U(U(U(U,U,U),U(U,U,U)),U,U,U(U,U,U),U(U,U),U(U,U,U))><S(S(S(SSS)L)LLLLL),U(U(U(U,U,U),U(U,U,U)),U,U,U(U,U,U),U(U,U),U(U,U,U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinksContext)
                   (y :: Language.PureScript.Docs.Types.LinksContext) ->
                 case Language.PureScript.Docs.Types.$fOrdLinksContext_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdLinksContext_$cmin ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Docs.Types.LinksContext
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(SSS)L)LLLLL),U(U(U(U,U,U),U(U,U,U)),U,U,U(U,U,U),U(U,U),U(U,U,U))><S(S(S(SSS)L)LLLLL),U(U(U(U,U,U),U(U,U,U)),U,U,U(U,U,U),U(U,U),U(U,U,U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinksContext)
                   (y :: Language.PureScript.Docs.Types.LinksContext) ->
                 case Language.PureScript.Docs.Types.$fOrdLinksContext_$c<
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
ae046899ad206a1efe13811c958994d7
  $fOrdLinksContext_$s$fEq(,) ::
    GHC.Classes.Eq
      (Language.PureScript.Names.ModuleName,
       Web.Bower.PackageMeta.Internal.PackageName)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.ModuleName,
                     Web.Bower.PackageMeta.Internal.PackageName)
                  (GHC.Classes.$fEq(,)_$c==
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fEqModuleName
                     Web.Bower.PackageMeta.Internal.$fEqPackageName)
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fEq(,)_$c/= -}
304b960386f7218a0c010869f578ebe6
  $fOrdLinksContext_$s$fEq(,)_$c/= ::
    (Language.PureScript.Names.ModuleName,
     Web.Bower.PackageMeta.Internal.PackageName)
    -> (Language.PureScript.Names.ModuleName,
        Web.Bower.PackageMeta.Internal.PackageName)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U,U,U))><S(SL),1*U(1*U,1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: (Language.PureScript.Names.ModuleName,
                           Web.Bower.PackageMeta.Internal.PackageName))
                   (y :: (Language.PureScript.Names.ModuleName,
                          Web.Bower.PackageMeta.Internal.PackageName)) ->
                 case x1 of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.Namespace)
                        (Language.PureScript.Names.$fEqProperName
                           @ 'Language.PureScript.Names.Namespace)
                        a1 `cast` (Language.PureScript.Names.N:ModuleName[0])
                        b1 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case a2
                             `cast`
                           (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild4 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case b2
                             `cast`
                           (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of wild5 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      case GHC.Classes.eqInt
                             (GHC.Types.I# dt2)
                             (GHC.Types.I# dt5) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild7 { (#,#) ds2 ds3 ->
                           case GHC.Int.eqInt32
                                  (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                                  (GHC.Int.I32# 0#) of wild3 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } } } } } } }) -}
6ac4dcfb0c4c47c106bd7eb8e7499193
  $fOrdLinksContext_$s$fOrd(,) ::
    GHC.Classes.Ord
      (Web.Bower.PackageMeta.Internal.PackageName, Data.Version.Version)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Web.Bower.PackageMeta.Internal.PackageName,
                     Data.Version.Version)
                  Language.PureScript.Docs.Types.$fEqLinksContext_$s$fEq(,)
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion)
                  (\ (a1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Version.Version))
                     (b1 :: (Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Version.Version)) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     @ Data.Version.Version
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     Data.Version.$fOrdVersion) -}
c845e1e7f4f90462c4ca3116f27ff668
  $fOrdLinksContext_$s$fOrd(,)1 ::
    GHC.Classes.Ord
      (Language.PureScript.Names.ModuleName,
       Web.Bower.PackageMeta.Internal.PackageName)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.ModuleName,
                     Web.Bower.PackageMeta.Internal.PackageName)
                  Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fEq(,)
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName)
                  (\ (a1 :: (Language.PureScript.Names.ModuleName,
                             Web.Bower.PackageMeta.Internal.PackageName))
                     (b1 :: (Language.PureScript.Names.ModuleName,
                             Web.Bower.PackageMeta.Internal.PackageName)) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ Language.PureScript.Names.ModuleName
                     @ Web.Bower.PackageMeta.Internal.PackageName
                     Language.PureScript.Names.$fOrdModuleName
                     Web.Bower.PackageMeta.Internal.$fOrdPackageName) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.Module
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Module
                  Language.PureScript.Docs.Types.$fEqModule
                  Language.PureScript.Docs.Types.$fOrdModule_$ccompare
                  Language.PureScript.Docs.Types.$fOrdModule_$c<
                  Language.PureScript.Docs.Types.$fOrdModule_$c<=
                  Language.PureScript.Docs.Types.$fOrdModule_$c>
                  Language.PureScript.Docs.Types.$fOrdModule_$c>=
                  Language.PureScript.Docs.Types.$fOrdModule_$cmax
                  Language.PureScript.Docs.Types.$fOrdModule_$cmin -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule1 ::
    GHC.Classes.Ord
      (Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName,
       [Language.PureScript.Docs.Types.Declaration])
  {- Unfolding: (GHC.Classes.$fOrd(,)
                   @ (Language.PureScript.Docs.Types.InPackage
                        Language.PureScript.Names.ModuleName)
                   @ [Language.PureScript.Docs.Types.Declaration]
                   Language.PureScript.Docs.Types.$fOrdInPackage_$s$fOrdInPackage
                   Language.PureScript.Docs.Types.$fOrdModule2) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule2 ::
    GHC.Classes.Ord [Language.PureScript.Docs.Types.Declaration]
  {- Unfolding: (GHC.Classes.$fOrd[]
                   @ Language.PureScript.Docs.Types.Declaration
                   Language.PureScript.Docs.Types.$fOrdDeclaration) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$c< ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Module)
                   (w2 :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { Language.PureScript.Docs.Types.Module ww1 ww2 ww3 ww4 ->
                 case w2 of ww5 { Language.PureScript.Docs.Types.Module ww6 ww7 ww8 ww9 ->
                 Language.PureScript.Docs.Types.$w$c<1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$c<= ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.Module)
                   (b :: Language.PureScript.Docs.Types.Module) ->
                 case Language.PureScript.Docs.Types.$fOrdModule_$c< b a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$c> ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: Language.PureScript.Docs.Types.Module)
                   (b :: Language.PureScript.Docs.Types.Module) ->
                 Language.PureScript.Docs.Types.$fOrdModule_$c< b a) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$c>= ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.Module)
                   (b :: Language.PureScript.Docs.Types.Module) ->
                 case Language.PureScript.Docs.Types.$fOrdModule_$c< a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$ccompare ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module -> GHC.Types.Ordering
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Module)
                   (w2 :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { Language.PureScript.Docs.Types.Module ww1 ww2 ww3 ww4 ->
                 case w2 of ww5 { Language.PureScript.Docs.Types.Module ww6 ww7 ww8 ww9 ->
                 Language.PureScript.Docs.Types.$w$ccompare1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$cmax ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Module)
                   (y :: Language.PureScript.Docs.Types.Module) ->
                 case Language.PureScript.Docs.Types.$fOrdModule_$c< y x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fOrdModule_$cmin ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Docs.Types.Module
  {- Arity: 2,
     Strictness: <S(SLLL),1*U(U,U,U,U)><S(SLLL),1*U(U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Module)
                   (y :: Language.PureScript.Docs.Types.Module) ->
                 case Language.PureScript.Docs.Types.$fOrdModule_$c< y x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
4171d1f05d5de1cd94713164f91b8004
  $fOrdNotYetKnown ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.NotYetKnown
                  Language.PureScript.Docs.Types.$fEqNotYetKnown
                  Language.PureScript.Docs.Types.$fOrdNotYetKnown_$ccompare
                  Language.PureScript.Docs.Types.$fOrdNotYetKnown_$c<
                  Language.PureScript.Docs.Types.$fOrdNotYetKnown_$c<=
                  Language.PureScript.Docs.Types.$fOrdNotYetKnown_$c>
                  Language.PureScript.Docs.Types.$fEqNotYetKnown_$c==
                  Language.PureScript.Docs.Types.$fOrdNotYetKnown_$cmax
                  Language.PureScript.Docs.Types.$fOrdNotYetKnown_$cmax -}
4171d1f05d5de1cd94713164f91b8004
  $fOrdNotYetKnown_$c< ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.NotYetKnown)
                   (b :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case a of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 case b of wild1 { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Types.False } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fOrdNotYetKnown_$c<= ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.NotYetKnown)
                   (b :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case b of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 case a of wild1 { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Types.True } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fOrdNotYetKnown_$c> ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.NotYetKnown)
                   (b :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case b of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 case a of wild1 { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Types.False } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fOrdNotYetKnown_$ccompare ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.PureScript.Docs.Types.NotYetKnown)
                   (b :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case a of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 case b of wild1 { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Types.EQ } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fOrdNotYetKnown_$cmax ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown
    -> Language.PureScript.Docs.Types.NotYetKnown
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U()><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.NotYetKnown)
                   (y :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case y of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 x1 }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage ::
    GHC.Classes.Ord a =>
    GHC.Classes.Ord (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- Arity: 1,
     Strictness: <L,U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Ord a).
                  @ (Language.PureScript.Docs.Types.Package a)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$cp1Ord @ a v)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$ccompare @ a v)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$c< @ a v)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$c<= @ a v)
                  (\ (a1 :: Language.PureScript.Docs.Types.Package a)
                     (b :: Language.PureScript.Docs.Types.Package a) ->
                   Language.PureScript.Docs.Types.$fOrdPackage_$c< @ a v b a1)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$c>= @ a v)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$cmax @ a v)
                  (Language.PureScript.Docs.Types.$fOrdPackage_$cmin @ a v) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError ::
    GHC.Classes.Ord Language.PureScript.Docs.Types.PackageError
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.PackageError
                  Language.PureScript.Docs.Types.$fEqPackageError
                  Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                  Language.PureScript.Docs.Types.$fOrdPackageError_$c<
                  Language.PureScript.Docs.Types.$fOrdPackageError_$c<=
                  Language.PureScript.Docs.Types.$fOrdPackageError_$c>
                  Language.PureScript.Docs.Types.$fOrdPackageError_$c>=
                  Language.PureScript.Docs.Types.$fOrdPackageError_$cmax
                  Language.PureScript.Docs.Types.$fOrdPackageError_$cmin -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$c< ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$c<= ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$c> ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$c>= ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$ccompare ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (a :: Language.PureScript.Docs.Types.PackageError)
                   (b :: Language.PureScript.Docs.Types.PackageError) ->
                 case a of wild {
                   DEFAULT
                   -> case GHC.Prim.dataToTag#
                             @ Language.PureScript.Docs.Types.PackageError
                             wild of a# { DEFAULT ->
                      case GHC.Prim.dataToTag#
                             @ Language.PureScript.Docs.Types.PackageError
                             b of b# { DEFAULT ->
                      case GHC.Prim.<# a# b# of lwild {
                        DEFAULT
                        -> case GHC.Prim.==# a# b# of lwild1 {
                             DEFAULT -> GHC.Types.GT 1# -> GHC.Types.EQ }
                        1# -> GHC.Types.LT } } }
                   Language.PureScript.Docs.Types.CompilerTooOld a1 a2
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Language.PureScript.Docs.Types.CompilerTooOld b1 b2
                        -> case a1 of wild2 { Data.Version.Version ds3 ds4 ->
                           case b1 of wild3 { Data.Version.Version ds5 ds6 ->
                           case GHC.Classes.$fOrd[]_$s$ccompare ds3 ds5 of wild4 {
                             GHC.Types.LT -> GHC.Types.LT
                             GHC.Types.EQ -> Data.Version.$fOrdVersion_$ccompare a2 b2
                             GHC.Types.GT -> GHC.Types.GT } } } }
                   Language.PureScript.Docs.Types.ErrorInPackageMeta a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Language.PureScript.Docs.Types.CompilerTooOld ds ds1
                        -> GHC.Types.GT
                        Language.PureScript.Docs.Types.ErrorInPackageMeta b1
                        -> Web.Bower.PackageMeta.Internal.$fOrdBowerError_$ccompare a1 b1 }
                   Language.PureScript.Docs.Types.InvalidDeclarationType a1
                   -> case GHC.Prim.dataToTag#
                             @ Language.PureScript.Docs.Types.PackageError
                             b of b# { DEFAULT ->
                      case GHC.Prim.># b# 3# of lwild {
                        DEFAULT
                        -> case b of wild1 {
                             DEFAULT -> GHC.Types.GT
                             Language.PureScript.Docs.Types.InvalidDeclarationType b1
                             -> Data.Text.$fOrdText_$ccompare a1 b1 }
                        1# -> GHC.Types.LT } }
                   Language.PureScript.Docs.Types.InvalidChildDeclarationType a1
                   -> case GHC.Prim.dataToTag#
                             @ Language.PureScript.Docs.Types.PackageError
                             b of b# { DEFAULT ->
                      case GHC.Prim.># b# 4# of lwild {
                        DEFAULT
                        -> case b of wild1 {
                             DEFAULT -> GHC.Types.GT
                             Language.PureScript.Docs.Types.InvalidChildDeclarationType b1
                             -> Data.Text.$fOrdText_$ccompare a1 b1 }
                        1# -> GHC.Types.LT } }
                   Language.PureScript.Docs.Types.InvalidKind a1
                   -> case GHC.Prim.dataToTag#
                             @ Language.PureScript.Docs.Types.PackageError
                             b of b# { DEFAULT ->
                      case GHC.Prim.<# b# 6# of lwild {
                        DEFAULT
                        -> case b of wild1 {
                             DEFAULT -> GHC.Types.LT
                             Language.PureScript.Docs.Types.InvalidKind b1
                             -> Data.Text.$fOrdText_$ccompare a1 b1 }
                        1# -> GHC.Types.GT } }
                   Language.PureScript.Docs.Types.InvalidDataDeclType a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Language.PureScript.Docs.Types.InvalidDataDeclType b1
                        -> Data.Text.$fOrdText_$ccompare a1 b1
                        Language.PureScript.Docs.Types.InvalidTime -> GHC.Types.LT } }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$cmax ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x1 }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fOrdPackageError_$cmin ::
    Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError
    -> Language.PureScript.Docs.Types.PackageError
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.PackageError)
                   (y :: Language.PureScript.Docs.Types.PackageError) ->
                 case Language.PureScript.Docs.Types.$fOrdPackageError_$ccompare
                        x1
                        y of wild {
                   DEFAULT -> x1 GHC.Types.GT -> y }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$c< ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))> -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$c<= ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Language.PureScript.Docs.Types.Package a)
                   (b :: Language.PureScript.Docs.Types.Package a) ->
                 case Language.PureScript.Docs.Types.$fOrdPackage_$c<
                        @ a
                        $dOrd
                        b
                        a1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$c>= ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Language.PureScript.Docs.Types.Package a)
                   (b :: Language.PureScript.Docs.Types.Package a) ->
                 case Language.PureScript.Docs.Types.$fOrdPackage_$c<
                        @ a
                        $dOrd
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$ccompare ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a -> GHC.Types.Ordering
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U),1*U(1*U,A),1*U(U,U,U),1*U,1*U,1*U,1*U,1*U(1*U(U,U,U),1*U(U,U,U)),U,1*U(1*U,A))> -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$cmax ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),U(U(U(U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U),U(U,U,U),U,U,U,U,U(U(U,U,U),U(U,U,U)),U,U(U,U))><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),U(U(U(U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U),U(U,U,U),U,U,U,U,U(U(U,U,U),U(U,U,U)),U,U(U,U))>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x1 :: Language.PureScript.Docs.Types.Package a)
                   (y :: Language.PureScript.Docs.Types.Package a) ->
                 case Language.PureScript.Docs.Types.$fOrdPackage_$c<
                        @ a
                        $dOrd
                        y
                        x1 of wild {
                   GHC.Types.False -> y GHC.Types.True -> x1 }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$cmin ::
    GHC.Classes.Ord a =>
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.Package a
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),U(U(U(U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U),U(U,U,U),U,U,U,U,U(U(U,U,U),U(U,U,U)),U,U(U,U))><S(S(S(SSS)LLLLLLLLLLLLL)LLLLLLLLL),U(U(U(U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U),U(U,U),U(U,U,U),U,U,U,U,U(U(U,U,U),U(U,U,U)),U,U(U,U))>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x1 :: Language.PureScript.Docs.Types.Package a)
                   (y :: Language.PureScript.Docs.Types.Package a) ->
                 case Language.PureScript.Docs.Types.$fOrdPackage_$c<
                        @ a
                        $dOrd
                        y
                        x1 of wild {
                   GHC.Types.False -> x1 GHC.Types.True -> y }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fOrdPackage_$cp1Ord ::
    GHC.Classes.Ord a =>
    GHC.Classes.Eq (Language.PureScript.Docs.Types.Package a)
  {- Arity: 1, Strictness: <L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 Language.PureScript.Docs.Types.$fEqPackage
                   @ a
                   (GHC.Classes.$p1Ord @ a $dOrd)) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowChildDeclaration ::
    GHC.Show.Show Language.PureScript.Docs.Types.ChildDeclaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclaration
                  Language.PureScript.Docs.Types.$fShowChildDeclaration_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowChildDeclaration_$cshow
                  Language.PureScript.Docs.Types.$fShowChildDeclaration_$cshowList -}
cce819b6566f028d040fc57bb265fd8d
  $fShowChildDeclaration1 ::
    Language.PureScript.Docs.Types.ChildDeclaration -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case w of ww { Language.PureScript.Docs.Types.ChildDeclaration ww1 ww2 ww3 ww4 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
0ab025705b5292af0c18849878d45bdd
  $fShowChildDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
77558b7adfce83092a189a9be55ae41b
  $fShowChildDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cdeclInfo = "#) -}
a84a8a614827c42cdde24f8bf6ed4916
  $fShowChildDeclaration4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cdeclSourceSpan = "#) -}
5e9bb3770d11fe97b80048bfe1741f20
  $fShowChildDeclaration5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cdeclComments = "#) -}
5b819eee826f5b7c04e3c1941ab53577
  $fShowChildDeclaration6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cdeclTitle = "#) -}
6234453d2df2bd9e414c855075498567
  $fShowChildDeclaration7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChildDeclaration {"#) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fShowChildDeclarationInfo ::
    GHC.Show.Show Language.PureScript.Docs.Types.ChildDeclarationInfo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                  Language.PureScript.Docs.Types.$fShowChildDeclarationInfo_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowChildDeclarationInfo_$cshow
                  Language.PureScript.Docs.Types.$fShowChildDeclarationInfo_$cshowList -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fShowChildDeclarationInfo1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec1 0# w) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fShowChildDeclarationInfo_$cshow ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 Language.PureScript.Docs.Types.$fShowChildDeclarationInfo_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fShowChildDeclarationInfo_$cshowList ::
    [Language.PureScript.Docs.Types.ChildDeclarationInfo]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.ChildDeclarationInfo])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                   Language.PureScript.Docs.Types.$fShowChildDeclarationInfo1
                   ls
                   s) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fShowChildDeclarationInfo_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec1 ww1 w2 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowChildDeclaration_$cshow ::
    Language.PureScript.Docs.Types.ChildDeclaration -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U,U,U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 Language.PureScript.Docs.Types.$fShowChildDeclaration_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowChildDeclaration_$cshowList ::
    [Language.PureScript.Docs.Types.ChildDeclaration] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.ChildDeclaration])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.ChildDeclaration
                   Language.PureScript.Docs.Types.$fShowChildDeclaration1
                   ls
                   s) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowChildDeclaration_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U,U,U),1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.Docs.Types.ChildDeclaration ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowDeclaration ::
    GHC.Show.Show Language.PureScript.Docs.Types.Declaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Declaration
                  Language.PureScript.Docs.Types.$fShowDeclaration_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowDeclaration_$cshow
                  Language.PureScript.Docs.Types.$fShowDeclaration_$cshowList -}
cce819b6566f028d040fc57bb265fd8d
  $fShowDeclaration1 ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U(U,U,U),1*U,1*U,U,1*U)>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.Declaration) ->
                 case w of ww { Language.PureScript.Docs.Types.Declaration ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec2
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5 }) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fShowDeclarationInfo ::
    GHC.Show.Show Language.PureScript.Docs.Types.DeclarationInfo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DeclarationInfo
                  Language.PureScript.Docs.Types.$fShowDeclarationInfo_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowDeclarationInfo_$cshow
                  Language.PureScript.Docs.Types.$fShowDeclarationInfo_$cshowList -}
c62d7485313366a589e4ef3d4cdd5b98
  $fShowDeclarationInfo1 ::
    Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Language.PureScript.Docs.Types.$fShowDeclarationInfo_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fShowDeclarationInfo_$cshow ::
    Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 Language.PureScript.Docs.Types.$fShowDeclarationInfo_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fShowDeclarationInfo_$cshowList ::
    [Language.PureScript.Docs.Types.DeclarationInfo] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.DeclarationInfo])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.DeclarationInfo
                   Language.PureScript.Docs.Types.$fShowDeclarationInfo1
                   ls
                   s) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fShowDeclarationInfo_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.DeclarationInfo -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
cce819b6566f028d040fc57bb265fd8d
  $fShowDeclaration_$cshow ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U,U,U),1*U,1*U,U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Declaration) ->
                 Language.PureScript.Docs.Types.$fShowDeclaration_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowDeclaration_$cshowList ::
    [Language.PureScript.Docs.Types.Declaration] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.Declaration])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.Declaration
                   Language.PureScript.Docs.Types.$fShowDeclaration1
                   ls
                   s) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowDeclaration_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.Declaration -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U,U,U),1*U,1*U,U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.Declaration) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.Docs.Types.Declaration ww3 ww4 ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7 } }) -}
8b305838d47692238020364c584ab76f
  $fShowDocLink ::
    GHC.Show.Show Language.PureScript.Docs.Types.DocLink
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DocLink
                  Language.PureScript.Docs.Types.$fShowDocLink_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowDocLink_$cshow
                  Language.PureScript.Docs.Types.$fShowDocLink_$cshowList -}
8b305838d47692238020364c584ab76f
  $fShowDocLink1 ::
    Language.PureScript.Docs.Types.DocLink -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U(U,U,U),1*U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.DocLink)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Docs.Types.DocLink ww1 ww2 ww3 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec3
                   0#
                   ww1
                   ww2
                   ww3
                   w2 }) -}
f915d5c4d8c7204f8765529ac6ad1b5a
  $fShowDocLink2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("linkNamespace = "#) -}
2dc02070d8ba8b30bb6b7c0b0202047a
  $fShowDocLink3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("linkTitle = "#) -}
ea6f15ce7d5a470113bf592bb880f5d4
  $fShowDocLink4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BuiltinModule "#) -}
66bec033e35bbd5a72fb4fea09d601e0
  $fShowDocLink5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DepsModule "#) -}
b470c8f13c239fc286bbbe626386ee96
  $fShowDocLink6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LocalModule "#) -}
957657be322e0f42c849316d4f112a98
  $fShowDocLink7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("linkLocation = "#) -}
f4077193302925760330c09aed461463
  $fShowDocLink8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DocLink {"#) -}
785e32da0b802764a80b67dcb05b74cb
  $fShowDocLink9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Language.PureScript.Docs.Types.$fShowChildDeclaration2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8b305838d47692238020364c584ab76f
  $fShowDocLink_$cshow ::
    Language.PureScript.Docs.Types.DocLink -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U,U,U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.DocLink) ->
                 case w of ww { Language.PureScript.Docs.Types.DocLink ww1 ww2 ww3 ->
                 Language.PureScript.Docs.Types.$w$cshow ww1 ww2 ww3 }) -}
8b305838d47692238020364c584ab76f
  $fShowDocLink_$cshowList ::
    [Language.PureScript.Docs.Types.DocLink] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.DocLink])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.DocLink
                   Language.PureScript.Docs.Types.$fShowDocLink1
                   ls
                   s) -}
8b305838d47692238020364c584ab76f
  $fShowDocLink_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.DocLink -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(U,U,U),1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.DocLink)
                   (w3 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.Docs.Types.DocLink ww3 ww4 ww5 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec3
                   ww1
                   ww3
                   ww4
                   ww5
                   w3 } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowGithubRepo ::
    GHC.Show.Show Language.PureScript.Docs.Types.GithubRepo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubRepo
                  Language.PureScript.Docs.Types.$fShowGithubRepo_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowGithubRepo_$cshow
                  Language.PureScript.Docs.Types.$fShowGithubRepo_$cshowList -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowGithubRepo1 ::
    Language.PureScript.Docs.Types.GithubRepo -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.GithubRepo)
                   (w2 :: GHC.Base.String) ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec5 0# w w2) -}
49eae8bf3aaf452a98e6d9bc310da910
  $fShowGithubRepo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("runGithubRepo = "#) -}
db8fdb58ecf0436324c112b5c02e6c94
  $fShowGithubRepo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GithubRepo {"#) -}
bb5004ae55575e80a5bc294d23fa5b54
  $fShowGithubRepo4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowChildDeclaration2) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowGithubRepo_$cshow ::
    Language.PureScript.Docs.Types.GithubRepo -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.GithubRepo) ->
                 GHC.CString.unpackAppendCString#
                   Language.PureScript.Docs.Types.$fShowGithubRepo3
                   (GHC.CString.unpackAppendCString#
                      Language.PureScript.Docs.Types.$fShowGithubRepo2
                      (case Data.Text.Show.$w$cshowsPrec
                              x1 `cast` (Language.PureScript.Docs.Types.N:GithubRepo[0])
                              Language.PureScript.Docs.Types.$fShowGithubRepo4 of ww { (#,#) ww1 ww2 ->
                       GHC.Types.: @ GHC.Types.Char ww1 ww2 }))) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowGithubRepo_$cshowList ::
    [Language.PureScript.Docs.Types.GithubRepo] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.GithubRepo])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.GithubRepo
                   Language.PureScript.Docs.Types.$fShowGithubRepo1
                   ls
                   s) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowGithubRepo_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.GithubRepo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U,U,U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.GithubRepo)
                   (w3 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec5 ww1 w2 w3 }) -}
614d849a4354c290b33f6ef62142889d
  $fShowGithubUser ::
    GHC.Show.Show Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubUser
                  Language.PureScript.Docs.Types.$fShowGithubUser_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowGithubUser_$cshow
                  Language.PureScript.Docs.Types.$fShowGithubUser_$cshowList -}
614d849a4354c290b33f6ef62142889d
  $fShowGithubUser1 ::
    Language.PureScript.Docs.Types.GithubUser -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.GithubUser)
                   (w2 :: GHC.Base.String) ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec6 0# w w2) -}
1c8b1e014fb604b67031e2a3ab5b4c60
  $fShowGithubUser2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("runGithubUser = "#) -}
0186f5d694aaebc02b7d9e4bfb36c53d
  $fShowGithubUser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GithubUser {"#) -}
614d849a4354c290b33f6ef62142889d
  $fShowGithubUser_$cshow ::
    Language.PureScript.Docs.Types.GithubUser -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.GithubUser) ->
                 GHC.CString.unpackAppendCString#
                   Language.PureScript.Docs.Types.$fShowGithubUser3
                   (GHC.CString.unpackAppendCString#
                      Language.PureScript.Docs.Types.$fShowGithubUser2
                      (case Data.Text.Show.$w$cshowsPrec
                              x1 `cast` (Language.PureScript.Docs.Types.N:GithubUser[0])
                              Language.PureScript.Docs.Types.$fShowGithubRepo4 of ww { (#,#) ww1 ww2 ->
                       GHC.Types.: @ GHC.Types.Char ww1 ww2 }))) -}
614d849a4354c290b33f6ef62142889d
  $fShowGithubUser_$cshowList ::
    [Language.PureScript.Docs.Types.GithubUser] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.GithubUser])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.GithubUser
                   Language.PureScript.Docs.Types.$fShowGithubUser1
                   ls
                   s) -}
614d849a4354c290b33f6ef62142889d
  $fShowGithubUser_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.GithubUser -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U,U,U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.GithubUser)
                   (w3 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec6 ww1 w2 w3 }) -}
14acea96459ae0ba0727319f74cb7f69
  $fShowInPackage ::
    GHC.Show.Show a =>
    GHC.Show.Show (Language.PureScript.Docs.Types.InPackage a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Language.PureScript.Docs.Types.InPackage a)
                  (Language.PureScript.Docs.Types.$fShowInPackage_$cshowsPrec @ a v)
                  (Language.PureScript.Docs.Types.$fShowInPackage_$cshow @ a v)
                  (Language.PureScript.Docs.Types.$fShowInPackage_$cshowList
                     @ a
                     v) -}
5db61b19961f887e20248ace0b559611
  $fShowInPackage3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowInPackage4) -}
27edf4d4f94540da29b7354b6bb6c91b
  $fShowInPackage4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Local "#) -}
cbc0da734ad9de192045992bf7d3fe99
  $fShowInPackage5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
2139671c925fa6fb78f527e534a4836e
  $fShowInPackage6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FromDep "#) -}
14acea96459ae0ba0727319f74cb7f69
  $fShowInPackage_$cshow ::
    GHC.Show.Show a =>
    Language.PureScript.Docs.Types.InPackage a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x1 :: Language.PureScript.Docs.Types.InPackage a) ->
                 Language.PureScript.Docs.Types.$fShowInPackage_$cshowsPrec
                   @ a
                   $dShow
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
14acea96459ae0ba0727319f74cb7f69
  $fShowInPackage_$cshowList ::
    GHC.Show.Show a =>
    [Language.PureScript.Docs.Types.InPackage a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Language.PureScript.Docs.Types.InPackage a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Docs.Types.InPackage a)
                   (Language.PureScript.Docs.Types.$fShowInPackage_$cshowsPrec
                      @ a
                      $dShow
                      Language.PureScript.Docs.Types.$fFromJSONPackage6)
                   ls
                   s) -}
14acea96459ae0ba0727319f74cb7f69
  $fShowInPackage_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Language.PureScript.Docs.Types.InPackage a) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec7 @ a w ww1 w3 }) -}
465f85673aa60d600eec7529c7b12dab
  $fShowLinkLocation ::
    GHC.Show.Show Language.PureScript.Docs.Types.LinkLocation
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinkLocation
                  Language.PureScript.Docs.Types.$fShowLinkLocation_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowLinkLocation_$cshow
                  Language.PureScript.Docs.Types.$fShowLinkLocation_$cshowList -}
465f85673aa60d600eec7529c7b12dab
  $fShowLinkLocation1 ::
    Language.PureScript.Docs.Types.LinkLocation -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.LinkLocation)
                   (w2 :: GHC.Base.String) ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec4 0# w w2) -}
465f85673aa60d600eec7529c7b12dab
  $fShowLinkLocation_$cshow ::
    Language.PureScript.Docs.Types.LinkLocation -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.LinkLocation) ->
                 case x1 of wild {
                   Language.PureScript.Docs.Types.LocalModule b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowDocLink6
                        (Language.PureScript.Names.$w$cshowsPrec
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Language.PureScript.Docs.Types.DepsModule b1 b2 b3
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowDocLink5
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                           11#
                           b1
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (case b2 of ww2 { Data.Version.Version ww3 ww4 ->
                               Data.Version.$w$cshowsPrec
                                 11#
                                 ww3
                                 ww4
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.showSpace1
                                    (Language.PureScript.Names.$w$cshowsPrec
                                       11#
                                       b3
                                       (GHC.Types.[] @ GHC.Types.Char))) })))
                   Language.PureScript.Docs.Types.BuiltinModule b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowDocLink4
                        (Language.PureScript.Names.$w$cshowsPrec
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
465f85673aa60d600eec7529c7b12dab
  $fShowLinkLocation_$cshowList ::
    [Language.PureScript.Docs.Types.LinkLocation] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.LinkLocation])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.LinkLocation
                   Language.PureScript.Docs.Types.$fShowLinkLocation1
                   ls
                   s) -}
465f85673aa60d600eec7529c7b12dab
  $fShowLinkLocation_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.LinkLocation -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.LinkLocation)
                   (w3 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec4 ww1 w2 w3 }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowLinksContext ::
    GHC.Show.Show Language.PureScript.Docs.Types.LinksContext
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.LinksContext
                  Language.PureScript.Docs.Types.$fShowLinksContext_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowLinksContext_$cshow
                  Language.PureScript.Docs.Types.$fShowLinksContext_$cshowList -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowLinksContext1 ::
    Language.PureScript.Docs.Types.LinksContext -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(U(U(U,U,U),U(U,U,U)),1*U,U,U(U,U,U),U(U,U),U(U,U,U))>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.LinksContext) ->
                 case w of ww { Language.PureScript.Docs.Types.LinksContext ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec8
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowLinksContext_$cshow ::
    Language.PureScript.Docs.Types.LinksContext -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U(U,U,U),U(U,U,U)),1*U,U,U(U,U,U),U(U,U),U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.LinksContext) ->
                 Language.PureScript.Docs.Types.$fShowLinksContext_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowLinksContext_$cshowList ::
    [Language.PureScript.Docs.Types.LinksContext] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.LinksContext])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.LinksContext
                   Language.PureScript.Docs.Types.$fShowLinksContext1
                   ls
                   s) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowLinksContext_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.LinksContext -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U(U,U,U),U(U,U,U)),1*U,U,U(U,U,U),U(U,U),U(U,U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.LinksContext) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.Docs.Types.LinksContext ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec8
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowModule :: GHC.Show.Show Language.PureScript.Docs.Types.Module
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Module
                  Language.PureScript.Docs.Types.$fShowModule_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowModule_$cshow
                  Language.PureScript.Docs.Types.$fShowModule_$cshowList -}
cce819b6566f028d040fc57bb265fd8d
  $fShowModule1 ::
    Language.PureScript.Docs.Types.Module -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U,U)>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { Language.PureScript.Docs.Types.Module ww1 ww2 ww3 ww4 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec9
                   0#
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowModule_$cshow ::
    Language.PureScript.Docs.Types.Module -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Module) ->
                 Language.PureScript.Docs.Types.$fShowModule_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowModule_$cshowList ::
    [Language.PureScript.Docs.Types.Module] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.Module])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.Module
                   Language.PureScript.Docs.Types.$fShowModule1
                   ls
                   s) -}
cce819b6566f028d040fc57bb265fd8d
  $fShowModule_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.Module -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.Docs.Types.Module ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Docs.Types.$w$cshowsPrec9
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
4171d1f05d5de1cd94713164f91b8004
  $fShowNotYetKnown ::
    GHC.Show.Show Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.NotYetKnown
                  Language.PureScript.Docs.Types.$fShowNotYetKnown_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowNotYetKnown_$cshow
                  Language.PureScript.Docs.Types.$fShowNotYetKnown_$cshowList -}
4171d1f05d5de1cd94713164f91b8004
  $fShowNotYetKnown1 ::
    Language.PureScript.Docs.Types.NotYetKnown -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.NotYetKnown)
                   (eta :: GHC.Base.String) ->
                 case ds of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      Language.PureScript.Docs.Types.$fShowNotYetKnown2)
                   eta }) -}
f82f9e24d114ed6cd353500a41e3686e
  $fShowNotYetKnown2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowNotYetKnown3) -}
bfe85d384b6b22e766ed9adbfc2db4c8
  $fShowNotYetKnown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NotYetKnown"#) -}
4171d1f05d5de1cd94713164f91b8004
  $fShowNotYetKnown_$cshow ::
    Language.PureScript.Docs.Types.NotYetKnown -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 case x1 of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 Language.PureScript.Docs.Types.$fShowNotYetKnown2 }) -}
4171d1f05d5de1cd94713164f91b8004
  $fShowNotYetKnown_$cshowList ::
    [Language.PureScript.Docs.Types.NotYetKnown] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.NotYetKnown])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.NotYetKnown
                   Language.PureScript.Docs.Types.$fShowNotYetKnown1
                   ls
                   s) -}
4171d1f05d5de1cd94713164f91b8004
  $fShowNotYetKnown_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.NotYetKnown -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Language.PureScript.Docs.Types.NotYetKnown)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { Language.PureScript.Docs.Types.NotYetKnown ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      Language.PureScript.Docs.Types.$fShowNotYetKnown2)
                   eta }) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowPackage ::
    GHC.Show.Show a =>
    GHC.Show.Show (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Language.PureScript.Docs.Types.Package a)
                  (Language.PureScript.Docs.Types.$fShowPackage_$cshowsPrec @ a v)
                  (Language.PureScript.Docs.Types.$fShowPackage_$cshow @ a v)
                  (Language.PureScript.Docs.Types.$fShowPackage_$cshowList @ a v) -}
f66d967ff562407ff6a522c1eb0528e6
  $fShowPackageError ::
    GHC.Show.Show Language.PureScript.Docs.Types.PackageError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.PackageError
                  Language.PureScript.Docs.Types.$fShowPackageError_$cshowsPrec
                  Language.PureScript.Docs.Types.$fShowPackageError_$cshow
                  Language.PureScript.Docs.Types.$fShowPackageError_$cshowList -}
f66d967ff562407ff6a522c1eb0528e6
  $fShowPackageError1 ::
    Language.PureScript.Docs.Types.PackageError -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.PureScript.Docs.Types.$fShowPackageError_$cshowsPrec
                   Language.PureScript.Docs.Types.$fFromJSONPackage6) -}
5f444b22722b119c906a737d24084e7c
  $fShowPackageError10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowPackageError11) -}
a2c99ab876ce44d133942ec7f0255658
  $fShowPackageError11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidVersion"#) -}
4436b06a824bf9c35a138f94d903b3e8
  $fShowPackageError12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ErrorInPackageMeta "#) -}
6935e097f35ea7ff1eb1d464eb901096
  $fShowPackageError13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowPackageError14) -}
ae3a35edfee0ea02d067059bbe5640b7
  $fShowPackageError14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CompilerTooOld "#) -}
c57964a684a10682317c25f42d228dee
  $fShowPackageError2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowPackageError3) -}
b9fa155f7251fde136ff06257d40f324
  $fShowPackageError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidTime"#) -}
d6017fd91e4e30bbfeda31248203b404
  $fShowPackageError4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidDataDeclType "#) -}
dcf68962dd9a32b063b1d1c6765368f1
  $fShowPackageError5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidKind "#) -}
b7f0f062eff479025b70d70666338e37
  $fShowPackageError6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.$fShowPackageError7) -}
d8cb119f10ebc7288f203199d04dc854
  $fShowPackageError7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidFixity"#) -}
5125a5743141e4fa56308a04efe9a1ff
  $fShowPackageError8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidChildDeclarationType "#) -}
272d1e4c18e3518f6b54c3725aece32f
  $fShowPackageError9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvalidDeclarationType "#) -}
f66d967ff562407ff6a522c1eb0528e6
  $fShowPackageError_$cshow ::
    Language.PureScript.Docs.Types.PackageError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x1 :: Language.PureScript.Docs.Types.PackageError) ->
                 case x1 of wild {
                   Language.PureScript.Docs.Types.CompilerTooOld b1 b2
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Language.PureScript.Docs.Types.$fShowPackageError13
                        (case b1 of ww2 { Data.Version.Version ww3 ww4 ->
                         Data.Version.$w$cshowsPrec
                           11#
                           ww3
                           ww4
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (case b2 of ww1 { Data.Version.Version ww5 ww6 ->
                               Data.Version.$w$cshowsPrec
                                 11#
                                 ww5
                                 ww6
                                 (GHC.Types.[] @ GHC.Types.Char) })) })
                   Language.PureScript.Docs.Types.ErrorInPackageMeta b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowPackageError12
                        (Web.Bower.PackageMeta.Internal.$w$cshowsPrec1
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Language.PureScript.Docs.Types.InvalidVersion
                   -> Language.PureScript.Docs.Types.$fShowPackageError10
                   Language.PureScript.Docs.Types.InvalidDeclarationType b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowPackageError9
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Language.PureScript.Docs.Types.InvalidChildDeclarationType b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowPackageError8
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Language.PureScript.Docs.Types.InvalidFixity
                   -> Language.PureScript.Docs.Types.$fShowPackageError6
                   Language.PureScript.Docs.Types.InvalidKind b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowPackageError5
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Language.PureScript.Docs.Types.InvalidDataDeclType b1
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowPackageError4
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Language.PureScript.Docs.Types.InvalidTime
                   -> Language.PureScript.Docs.Types.$fShowPackageError2 }) -}
f66d967ff562407ff6a522c1eb0528e6
  $fShowPackageError_$cshowList ::
    [Language.PureScript.Docs.Types.PackageError] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Types.PackageError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Types.PackageError
                   Language.PureScript.Docs.Types.$fShowPackageError1
                   ls
                   s) -}
f66d967ff562407ff6a522c1eb0528e6
  $fShowPackageError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.PackageError -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowPackage_$cshow ::
    GHC.Show.Show a =>
    Language.PureScript.Docs.Types.Package a -> GHC.Base.String
  {- Arity: 2,
     Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S,1*U(1*U(U(U,U,U),1*U,U,U,U,U,U,U,1*U,1*U,U,U,U,U),U(U,U),U(U,U,U),1*U,U,1*U,U,U(U(U,U,U),U(U,U,U)),U,U(U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x1 :: Language.PureScript.Docs.Types.Package a) ->
                 Language.PureScript.Docs.Types.$fShowPackage_$cshowsPrec
                   @ a
                   $dShow
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowPackage_$cshowList ::
    GHC.Show.Show a =>
    [Language.PureScript.Docs.Types.Package a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Language.PureScript.Docs.Types.Package a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Docs.Types.Package a)
                   (Language.PureScript.Docs.Types.$fShowPackage_$cshowsPrec
                      @ a
                      $dShow
                      Language.PureScript.Docs.Types.$fFromJSONPackage6)
                   ls
                   s) -}
fa1efe58f4e6215e05effe0c7820d641
  $fShowPackage_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int
    -> Language.PureScript.Docs.Types.Package a -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U(1*U(U(U,U,U),1*U,U,U,U,U,U,U,1*U,1*U,U,U,U,U),U(U,U),U(U,U,U),1*U,U,1*U,U,U(U(U,U,U),U(U,U,U)),U,U(U,U))> -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONChildDeclaration ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.ChildDeclaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclaration
                  Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON
                  Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoEncodingList -}
2fc3a4ec9ec31e89bc518e6f2a4d8c7c
  $fToJSONChildDeclaration1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration2) -}
876e687be095a6a3de050405a6e9fa16
  $fToJSONChildDeclaration10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dependencies"#) -}
18f12df6c7a20766cf7a5d30bf297f54
  $fToJSONChildDeclaration11 :: Data.Aeson.Types.Internal.Value
  {- Strictness: m3,
     Unfolding: (Data.Aeson.Types.Internal.String
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration12) -}
730213c812b0c1c9cbebdfff712b6d3d
  $fToJSONChildDeclaration12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration13) -}
dfc028a781306bdf7a293b978cb786de
  $fToJSONChildDeclaration13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("typeClassMember"#) -}
ce80c0cc4f54da123f24557de9acca54
  $fToJSONChildDeclaration14 :: Data.Aeson.Types.Internal.Value
  {- Strictness: m3,
     Unfolding: (Data.Aeson.Types.Internal.String
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration15) -}
d7d1107e0dcee4df979e4072c9566e43
  $fToJSONChildDeclaration15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration16) -}
16553657d93604b101781fc7024d79d6
  $fToJSONChildDeclaration16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dataConstructor"#) -}
12d0acae9cc37a9e4a8a44cdf5c92cd2
  $fToJSONChildDeclaration17 :: Data.Aeson.Types.Internal.Value
  {- Strictness: m3,
     Unfolding: (Data.Aeson.Types.Internal.String
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration18) -}
9bdef112f3ec5bac40a9d7eebf635c45
  $fToJSONChildDeclaration18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration19) -}
3cd7fe489a1ff8f0f505e35df63c05aa
  $fToJSONChildDeclaration19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("instance"#) -}
077df0f1bac767ade811f37ea07e7719
  $fToJSONChildDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("info"#) -}
05a85ea0bec93b699ff8a3c9c01b6c85
  $fToJSONChildDeclaration20 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration21) -}
aa02a3f03dd0bbf392801c71c78c34ad
  $fToJSONChildDeclaration21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("declType"#) -}
da43a2ed5c5bf6457ce29037dd04e004
  $fToJSONChildDeclaration22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration23) -}
cdf0d65578640cc1dd6c31a028722523
  $fToJSONChildDeclaration23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sourceSpan"#) -}
297aca956746a72da7cf0f5ba86fa705
  $fToJSONChildDeclaration24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration25) -}
d0e0d6914da9b51668cde3089395efb5
  $fToJSONChildDeclaration25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("comments"#) -}
fbaec90a0b5310fe3b752c1e931dbe6f
  $fToJSONChildDeclaration26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration27) -}
90baad52cd1dbf2f3b331c472e524869
  $fToJSONChildDeclaration27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("title"#) -}
6926c40c90704acfa9d8454fadb487c1
  $fToJSONChildDeclaration3 ::
    Language.PureScript.Types.Type ()
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Language.PureScript.Types.Type ()) ->
                 Language.PureScript.Types.typeToJSON
                   @ ()
                   Data.Aeson.Types.ToJSON.$fToJSON()_$ctoJSON
                   eta) -}
5bfdacaf9a1c7d90db8aa15d6b12fbb7
  $fToJSONChildDeclaration4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration5) -}
86649d0626c1866f61633d0606d31ae1
  $fToJSONChildDeclaration5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("arguments"#) -}
6cd7330d2388f3399f3cc50b886512fb
  $fToJSONChildDeclaration6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration7) -}
30e0ce575750d53cd3e8c018705dea45
  $fToJSONChildDeclaration7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("type"#) -}
c7ba7a5d516e7b10982aa46d06ff7e9c
  $fToJSONChildDeclaration8 ::
    Language.PureScript.Types.Constraint ()
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S(LSSL),1*U(U,1*U(1*U,U),1*U,1*U)>m1,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Types.Constraint ()) ->
                 case w of ww { Language.PureScript.Types.Constraint ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { Language.PureScript.Names.Qualified ww6 ww7 ->
                 case Language.PureScript.Types.$wconstraintToJSON
                        @ ()
                        Data.Aeson.Types.ToJSON.$fToJSON()_$ctoJSON
                        ww1
                        ww6
                        ww7
                        ww3
                        ww4 of ww8 { Unit# ww9 ->
                 Data.Aeson.Types.Internal.Object ww9 } } }) -}
3c82444e1a73e7f73cff4c858f5dad87
  $fToJSONChildDeclaration9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration10) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fToJSONChildDeclarationInfo ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.ChildDeclarationInfo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                  Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON1
                  Language.PureScript.Docs.Types.$fToJSONChildDeclarationInfo_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONChildDeclarationInfo_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONChildDeclarationInfo_$ctoEncodingList -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fToJSONChildDeclarationInfo_$ctoEncoding ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON1
                      x1))
                  `cast`
                (<Language.PureScript.Docs.Types.ChildDeclarationInfo>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fToJSONChildDeclarationInfo_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.ChildDeclarationInfo]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                   Language.PureScript.Docs.Types.$fToJSONChildDeclarationInfo_$ctoEncoding) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fToJSONChildDeclarationInfo_$ctoJSONList ::
    [Language.PureScript.Docs.Types.ChildDeclarationInfo]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.ChildDeclarationInfo]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                                     c
                                     Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON1)
                                  n1
                                  x1)))))) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONChildDeclaration_$ctoEncoding ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S(S(SSS)SSS),1*U(1*U(U,U,U),1*U,1*U,U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON
                      x1))
                  `cast`
                (<Language.PureScript.Docs.Types.ChildDeclaration>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONChildDeclaration_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.ChildDeclaration]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.ChildDeclaration
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoEncoding) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONChildDeclaration_$ctoJSON ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S(S(SSS)SSS),1*U(1*U(U,U,U),1*U,1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case w of ww { Language.PureScript.Docs.Types.ChildDeclaration ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                 Language.PureScript.Docs.Types.$w$ctoJSON
                   ww6
                   ww7
                   ww8
                   ww2
                   ww3
                   ww4 } }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $fToJSONChildDeclaration_$ctoJSON1 ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,U>m1,
     Unfolding: (\ (info :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$sgo
                   (Data.HashMap.Base.Empty
                      @ Data.Text.Internal.Text
                      @ Data.Aeson.Types.Internal.Value)
                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration20
                   (case info of wild {
                      Language.PureScript.Docs.Types.ChildInstance ds ds1
                      -> case Language.PureScript.Docs.Types.$fToJSONChildDeclaration18 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration17 }
                      Language.PureScript.Docs.Types.ChildDataConstructor ds
                      -> case Language.PureScript.Docs.Types.$fToJSONChildDeclaration15 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration14 }
                      Language.PureScript.Docs.Types.ChildTypeClassMember ds
                      -> case Language.PureScript.Docs.Types.$fToJSONChildDeclaration12 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration11 } })
                   (case info of wild {
                      Language.PureScript.Docs.Types.ChildInstance deps ty
                      -> GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Language.PureScript.Docs.Types.$fToJSONChildDeclaration9,
                            case GHC.Magic.runRW#
                                   @ ('GHC.Types.TupleRep
                                        '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                   @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newArray#
                                           @ Data.Aeson.Types.Internal.Value
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           0#
                                           (Data.Vector.Mutable.uninitialised
                                              @ Data.Aeson.Types.Internal.Value)
                                           s1
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                                    Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$s$wfoldlM_loop
                                      ipv
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N))_R
                                      (GHC.Base.map
                                         @ (Language.PureScript.Types.Constraint ())
                                         @ Data.Aeson.Types.Internal.Value
                                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration8
                                         deps)
                                      0#
                                      ipv1
                                        `cast`
                                      (GHC.Prim.MutableArray#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N)
                                         <Data.Aeson.Types.Internal.Value>_R)_R
                                      0#
                                      0# }) of ds1 { (#,#) ipv1 ipv2 ->
                            case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                            Data.Aeson.Types.Internal.Array dt } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Language.PureScript.Docs.Types.$fToJSONChildDeclaration6,
                               Language.PureScript.Types.typeToJSON
                                 @ ()
                                 Data.Aeson.Types.ToJSON.$fToJSON()_$ctoJSON
                                 ty)
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                      Language.PureScript.Docs.Types.ChildDataConstructor args
                      -> GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Language.PureScript.Docs.Types.$fToJSONChildDeclaration4,
                            case GHC.Magic.runRW#
                                   @ ('GHC.Types.TupleRep
                                        '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                   @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newArray#
                                           @ Data.Aeson.Types.Internal.Value
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           0#
                                           (Data.Vector.Mutable.uninitialised
                                              @ Data.Aeson.Types.Internal.Value)
                                           s1
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                                    Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$s$wfoldlM_loop
                                      ipv
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N))_R
                                      (GHC.Base.map
                                         @ (Language.PureScript.Types.Type ())
                                         @ Data.Aeson.Types.Internal.Value
                                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration3
                                         args)
                                      0#
                                      ipv1
                                        `cast`
                                      (GHC.Prim.MutableArray#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N)
                                         <Data.Aeson.Types.Internal.Value>_R)_R
                                      0#
                                      0# }) of ds1 { (#,#) ipv1 ipv2 ->
                            case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                            Data.Aeson.Types.Internal.Array dt } })
                           (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)
                      Language.PureScript.Docs.Types.ChildTypeClassMember ty
                      -> GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Language.PureScript.Docs.Types.$fToJSONChildDeclaration6,
                            Language.PureScript.Types.typeToJSON
                              @ ()
                              Data.Aeson.Types.ToJSON.$fToJSON()_$ctoJSON
                              ty)
                           (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair) })) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONChildDeclaration_$ctoJSONList ::
    [Language.PureScript.Docs.Types.ChildDeclaration]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.ChildDeclaration]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.ChildDeclaration
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.ChildDeclaration
                                     c
                                     Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON)
                                  n1
                                  x1)))))) -}
086eed97b79334c837aa9c3bacfed37f
  $fToJSONChildDeclaration_$s$wfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         GHC.Prim.RealWorld Data.Aeson.Types.Internal.Value
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
  {- Arity: 6, Strictness: <S,U><S,1*U><L,U><S,U><L,U><L,U> -}
9c05c301ab37d5f3429a8723f02dcebb
  $fToJSONChildDeclaration_$sgo ::
    Data.HashMap.Base.HashMap
      Data.Text.Internal.Text Data.Aeson.Types.Internal.Value
    -> Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 4,
     Strictness: <S,1*U><S(SSS),1*U(U,U,U)><S,1*U><S,1*U>m1 -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONDeclaration ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.Declaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Declaration
                  Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoJSON
                  Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoEncodingList -}
c62d7485313366a589e4ef3d4cdd5b98
  $fToJSONDeclarationInfo ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.DeclarationInfo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.DeclarationInfo
                  Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoJSON
                  Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoEncodingList -}
c62d7485313366a589e4ef3d4cdd5b98
  $fToJSONDeclarationInfo_$ctoEncoding ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoJSON
                      x1))
                  `cast`
                (<Language.PureScript.Docs.Types.DeclarationInfo>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fToJSONDeclarationInfo_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.DeclarationInfo]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.DeclarationInfo
                   Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoEncoding) -}
c62d7485313366a589e4ef3d4cdd5b98
  $fToJSONDeclarationInfo_$ctoJSON ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,U>m1 -}
c62d7485313366a589e4ef3d4cdd5b98
  $fToJSONDeclarationInfo_$ctoJSONList ::
    [Language.PureScript.Docs.Types.DeclarationInfo]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.DeclarationInfo]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.DeclarationInfo
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.DeclarationInfo
                                     c
                                     Language.PureScript.Docs.Types.$fToJSONDeclarationInfo_$ctoJSON)
                                  n1
                                  x1)))))) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONDeclaration_$ctoEncoding ::
    Language.PureScript.Docs.Types.Declaration
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1,
     Strictness: <S(S(SSS)SSSL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Declaration) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoJSON x1))
                  `cast`
                (<Language.PureScript.Docs.Types.Declaration>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONDeclaration_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.Declaration]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.Declaration
                   Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoEncoding) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONDeclaration_$ctoJSON ::
    Language.PureScript.Docs.Types.Declaration
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S(S(SSS)SSSL),1*U(1*U(U,U,U),1*U,1*U,1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Declaration) ->
                 case w of ww { Language.PureScript.Docs.Types.Declaration ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                 Language.PureScript.Docs.Types.$w$ctoJSON1
                   ww7
                   ww8
                   ww9
                   ww2
                   ww3
                   ww4
                   ww5 } }) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONDeclaration_$ctoJSONList ::
    [Language.PureScript.Docs.Types.Declaration]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.Declaration]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.Declaration
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.Declaration
                                     c
                                     Language.PureScript.Docs.Types.$fToJSONDeclaration_$ctoJSON)
                                  n1
                                  x1)))))) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONGithubRepo ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.GithubRepo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubRepo
                  Data.Aeson.Types.Internal.$WString
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Language.PureScript.Docs.Types.$fToJSONGithubRepo_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONGithubRepo_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONGithubRepo_$ctoEncodingList -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONGithubRepo_$ctoEncoding ::
    Language.PureScript.Docs.Types.GithubRepo
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.GithubRepo) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Data.Aeson.Types.Internal.$WString
                      x1 `cast` (Language.PureScript.Docs.Types.N:GithubRepo[0])))
                  `cast`
                (<Language.PureScript.Docs.Types.GithubRepo>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONGithubRepo_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.GithubRepo]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.GithubRepo
                   Language.PureScript.Docs.Types.$fToJSONGithubRepo_$ctoEncoding) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONGithubRepo_$ctoJSONList ::
    [Language.PureScript.Docs.Types.GithubRepo]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.GithubRepo]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.GithubRepo
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.GithubRepo
                                     c
                                     Data.Aeson.Types.Internal.$WString
                                       `cast`
                                     (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])
                                      ->_R <Data.Aeson.Types.Internal.Value>_R))
                                  n1
                                  x1)))))) -}
614d849a4354c290b33f6ef62142889d
  $fToJSONGithubUser ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.GithubUser
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.GithubUser
                  Data.Aeson.Types.Internal.$WString
                    `cast`
                  (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                   ->_R <Data.Aeson.Types.Internal.Value>_R)
                  Language.PureScript.Docs.Types.$fToJSONGithubUser_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONGithubUser_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONGithubUser_$ctoEncodingList -}
614d849a4354c290b33f6ef62142889d
  $fToJSONGithubUser_$ctoEncoding ::
    Language.PureScript.Docs.Types.GithubUser
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.GithubUser) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Data.Aeson.Types.Internal.$WString
                      x1 `cast` (Language.PureScript.Docs.Types.N:GithubUser[0])))
                  `cast`
                (<Language.PureScript.Docs.Types.GithubUser>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
614d849a4354c290b33f6ef62142889d
  $fToJSONGithubUser_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.GithubUser]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.GithubUser
                   Language.PureScript.Docs.Types.$fToJSONGithubUser_$ctoEncoding) -}
614d849a4354c290b33f6ef62142889d
  $fToJSONGithubUser_$ctoJSONList ::
    [Language.PureScript.Docs.Types.GithubUser]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.GithubUser]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.GithubUser
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.GithubUser
                                     c
                                     Data.Aeson.Types.Internal.$WString
                                       `cast`
                                     (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])
                                      ->_R <Data.Aeson.Types.Internal.Value>_R))
                                  n1
                                  x1)))))) -}
14acea96459ae0ba0727319f74cb7f69
  $fToJSONInPackage ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Data.Aeson.Types.ToJSON.ToJSON
      (Language.PureScript.Docs.Types.InPackage a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(U),A,A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: Data.Aeson.Types.ToJSON.ToJSON a).
                  @ (Language.PureScript.Docs.Types.InPackage a)
                  (Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoJSON @ a v)
                  (Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoEncoding
                     @ a
                     v)
                  (Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoJSONList
                     @ a
                     v)
                  (Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoEncodingList
                     @ a
                     v) -}
b642cb0c5f0ffed12044a8ae85850495
  $fToJSONInPackage1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONInPackage2) -}
cb2652f981a6d23e5af3330636fdc951
  $fToJSONInPackage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("item"#) -}
0c1a3305f2c6d105ba2873a59d67b451
  $fToJSONInPackage3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.$fToJSONInPackage4) -}
210562ab06c5c02d13e52d83431a885a
  $fToJSONInPackage4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("package"#) -}
14acea96459ae0ba0727319f74cb7f69
  $fToJSONInPackage_$ctoEncoding ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 2, Strictness: <S(C(S)LLL),1*U(1*C1(U),A,A,A)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a
                   ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (x1 :: Language.PureScript.Docs.Types.InPackage a) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoJSON
                      @ a
                      $dToJSON
                      x1))
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Aeson.Types.ToJSON.ToJSON a>_R
                 ->_R <Language.PureScript.Docs.Types.InPackage a>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
14acea96459ae0ba0727319f74cb7f69
  $fToJSONInPackage_$ctoEncodingList ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    [Language.PureScript.Docs.Types.InPackage a]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 2, Strictness: <L,U(C(U),A,A,A)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a) ->
                 Data.Aeson.Encoding.Internal.list
                   @ (Language.PureScript.Docs.Types.InPackage a)
                   (Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoEncoding
                      @ a
                      $dToJSON)) -}
14acea96459ae0ba0727319f74cb7f69
  $fToJSONInPackage_$ctoJSON ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Docs.Types.InPackage a
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <S(C(S)LLL),1*U(1*C1(U),A,A,A)><S,1*U>m1,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (w2 :: Language.PureScript.Docs.Types.InPackage a) ->
                 case Language.PureScript.Docs.Types.$w$ctoJSON2
                        @ a
                        w
                        w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
14acea96459ae0ba0727319f74cb7f69
  $fToJSONInPackage_$ctoJSONList ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    [Language.PureScript.Docs.Types.InPackage a]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U(C(U),A,A,A)><S,1*U>m2,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a) ->
                 let {
                   f21 :: Language.PureScript.Docs.Types.InPackage a
                          -> Data.Aeson.Types.Internal.Value
                     {- Arity: 1 -}
                   = Language.PureScript.Docs.Types.$fToJSONInPackage_$ctoJSON
                       @ a
                       $dToJSON
                 } in
                 \ (x1 :: [Language.PureScript.Docs.Types.InPackage a]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ (Language.PureScript.Docs.Types.InPackage a)
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ (Language.PureScript.Docs.Types.InPackage a)
                                     c
                                     f21)
                                  n1
                                  x1)))))) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONModule ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.Module
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.Module
                  Language.PureScript.Docs.Types.$fToJSONModule_$ctoJSON
                  Language.PureScript.Docs.Types.$fToJSONModule_$ctoEncoding
                  Language.PureScript.Docs.Types.$fToJSONModule_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONModule_$ctoEncodingList -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONModule_$ctoEncoding ::
    Language.PureScript.Docs.Types.Module
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S(SSSL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Language.PureScript.Docs.Types.Module) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONModule_$ctoJSON x1))
                  `cast`
                (<Language.PureScript.Docs.Types.Module>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONModule_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.Module]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.Module
                   Language.PureScript.Docs.Types.$fToJSONModule_$ctoEncoding) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONModule_$ctoJSON ::
    Language.PureScript.Docs.Types.Module
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S(SSSL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Docs.Types.Module) ->
                 case w of ww { Language.PureScript.Docs.Types.Module ww1 ww2 ww3 ww4 ->
                 Language.PureScript.Docs.Types.$w$ctoJSON3 ww1 ww2 ww3 ww4 }) -}
cce819b6566f028d040fc57bb265fd8d
  $fToJSONModule_$ctoJSONList ::
    [Language.PureScript.Docs.Types.Module]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.Module]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.Module
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.Module
                                     c
                                     Language.PureScript.Docs.Types.$fToJSONModule_$ctoJSON)
                                  n1
                                  x1)))))) -}
4171d1f05d5de1cd94713164f91b8004
  $fToJSONNotYetKnown ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Docs.Types.NotYetKnown
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Types.NotYetKnown
                  Language.PureScript.Docs.Types.$fToJSONNotYetKnown_$ctoJSON
                  (\ (x1 :: Language.PureScript.Docs.Types.NotYetKnown) ->
                   Data.Aeson.Encoding.Builder.encodeToBuilder
                     Data.Aeson.Types.Internal.Null)
                    `cast`
                  (<Language.PureScript.Docs.Types.NotYetKnown>_R
                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P))
                  Language.PureScript.Docs.Types.$fToJSONNotYetKnown_$ctoJSONList
                  Language.PureScript.Docs.Types.$fToJSONNotYetKnown_$ctoEncodingList -}
4171d1f05d5de1cd94713164f91b8004
  $fToJSONNotYetKnown_$ctoEncodingList ::
    [Language.PureScript.Docs.Types.NotYetKnown]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Docs.Types.NotYetKnown
                   (\ (x1 :: Language.PureScript.Docs.Types.NotYetKnown) ->
                    Data.Aeson.Encoding.Builder.encodeToBuilder
                      Data.Aeson.Types.Internal.Null)
                     `cast`
                   (<Language.PureScript.Docs.Types.NotYetKnown>_R
                    ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P))) -}
4171d1f05d5de1cd94713164f91b8004
  $fToJSONNotYetKnown_$ctoJSON ::
    Language.PureScript.Docs.Types.NotYetKnown
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Language.PureScript.Docs.Types.NotYetKnown) ->
                 Data.Aeson.Types.Internal.Null) -}
4171d1f05d5de1cd94713164f91b8004
  $fToJSONNotYetKnown_$ctoJSONList ::
    [Language.PureScript.Docs.Types.NotYetKnown]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Language.PureScript.Docs.Types.NotYetKnown]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Docs.Types.NotYetKnown
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Docs.Types.NotYetKnown
                                     c
                                     Language.PureScript.Docs.Types.$fToJSONNotYetKnown_$ctoJSON)
                                  n1
                                  x1)))))) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONPackage ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Data.Aeson.Types.ToJSON.ToJSON
      (Language.PureScript.Docs.Types.Package a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(U),A,A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: Data.Aeson.Types.ToJSON.ToJSON a).
                  @ (Language.PureScript.Docs.Types.Package a)
                  (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoJSON @ a v)
                  (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoEncoding @ a v)
                  (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoJSONList @ a v)
                  (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoEncodingList
                     @ a
                     v) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONPackage_$ctoEncoding ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Docs.Types.Package a
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 2,
     Strictness: <L,U(C(U),A,A,A)><S(S(SSSLLLLLLLLLLL)S(SL)LLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,U,U,U),1*U(1*U,1*U),1*U(U,U,U),U,1*U,1*U,1*U,U(U,U),U,A)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a
                   ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (x1 :: Language.PureScript.Docs.Types.Package a) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoJSON
                      @ a
                      $dToJSON
                      x1))
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Aeson.Types.ToJSON.ToJSON a>_R
                 ->_R <Language.PureScript.Docs.Types.Package a>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONPackage_$ctoEncodingList ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    [Language.PureScript.Docs.Types.Package a]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 2, Strictness: <L,U(C(U),A,A,A)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a) ->
                 Data.Aeson.Encoding.Internal.list
                   @ (Language.PureScript.Docs.Types.Package a)
                   (Language.PureScript.Docs.Types.$fToJSONPackage_$ctoEncoding
                      @ a
                      $dToJSON)) -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONPackage_$ctoJSON ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Docs.Types.Package a
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2,
     Strictness: <L,U(C(U),A,A,A)><S(S(SSSLLLLLLLLLLL)S(SL)LLLLLLLL),1*U(1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,U,U,U),1*U(1*U,1*U),1*U(U,U,U),U,1*U,1*U,1*U,U(U,U),U,A)> -}
fa1efe58f4e6215e05effe0c7820d641
  $fToJSONPackage_$ctoJSONList ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    [Language.PureScript.Docs.Types.Package a]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U(C(U),A,A,A)><S,1*U>m2,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a) ->
                 let {
                   f21 :: Language.PureScript.Docs.Types.Package a
                          -> Data.Aeson.Types.Internal.Value
                     {- Arity: 1 -}
                   = Language.PureScript.Docs.Types.$fToJSONPackage_$ctoJSON
                       @ a
                       $dToJSON
                 } in
                 \ (x1 :: [Language.PureScript.Docs.Types.Package a]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ (Language.PureScript.Docs.Types.Package a)
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ (Language.PureScript.Docs.Types.Package a)
                                     c
                                     f21)
                                  n1
                                  x1)))))) -}
878c7c17393d4897a11892bfe67159c2
  $s$fEq(,) ::
    GHC.Classes.Eq
      (Data.Text.Internal.Text,
       GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Text.Internal.Text,
                     GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                  (GHC.Classes.$fEq(,)_$c==
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fEqText
                     Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEqMaybe)
                  Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq(,)_$c/= -}
c5c8105b59aea7e9009a80d6712c3139
  $s$fEq(,)1 ::
    GHC.Classes.Eq
      ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                  (GHC.Classes.$fEq(,)_$c==
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq[]
                     Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq[])
                  Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq(,)_$c/=1 -}
6a32a29b15ac4dad293d60bb0053f648
  $s$fEq(,)_$s$fEq(,)_$c/= ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
    -> (Data.Text.Internal.Text,
        GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U)><S(S(LLS)L),1*U(1*U(U,U,U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: (Data.Text.Internal.Text,
                           GHC.Base.Maybe Language.PureScript.Docs.Types.Kind'))
                   (y :: (Data.Text.Internal.Text,
                          GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')) ->
                 case x1 of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case a1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                 case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                 case GHC.Classes.eqInt
                        (GHC.Types.I# dt2)
                        (GHC.Types.I# dt5) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.ByteArray#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.Word#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Prim.Int# #)}
                             dt
                             (GHC.Prim.int2Word# dt1)
                             dt3
                             (GHC.Prim.int2Word# dt4)
                             (GHC.Prim.int2Word# dt2)
                             GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                      case GHC.Int.eqInt32
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# ds3))
                             (GHC.Int.I32# 0#) of wild6 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case a2 of wild7 {
                             GHC.Base.Nothing
                             -> case b2 of wild8 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just ipv -> GHC.Types.True }
                             GHC.Base.Just a4
                             -> case b2 of wild8 {
                                  GHC.Base.Nothing -> GHC.Types.True
                                  GHC.Base.Just b4
                                  -> case Language.PureScript.Kinds.eqKind
                                            @ ()
                                            @ ()
                                            a4
                                            b4 of wild9 {
                                       GHC.Types.False -> GHC.Types.True
                                       GHC.Types.True -> GHC.Types.False } } } } } } } } } }) -}
7e58535631a0be4978ee11196eee132d
  $s$fEq(,)_$s$fEq(,)_$c/=1 ::
    ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
    -> ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: ([Data.Text.Internal.Text], [Data.Text.Internal.Text]))
                   (y :: ([Data.Text.Internal.Text], [Data.Text.Internal.Text])) ->
                 case x1 of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$c==
                             @ Data.Text.Internal.Text
                             Data.Text.$fEqText
                             a2
                             b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
69c73b799ee6b3c3ebb76de37cb97a3a
  $s$fEq(,)_$s$fEqMaybe ::
    GHC.Classes.Eq (GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                  (\ (ds :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (ds1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case ds of wild {
                     GHC.Base.Nothing
                     -> case ds1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just ipv -> GHC.Types.False }
                     GHC.Base.Just a1
                     -> case ds1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just b1
                          -> Language.PureScript.Kinds.eqKind @ () @ () a1 b1 } })
                  Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEqMaybe_$c/= -}
b9b866fa26c9c18a115b53dea79ed267
  $s$fEq(,)_$s$fEqMaybe_$c/= ::
    GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())
    -> GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                   (y :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                 case x1 of wild {
                   GHC.Base.Nothing
                   -> case y of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just ipv -> GHC.Types.True }
                   GHC.Base.Just a1
                   -> case y of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just b1
                        -> case Language.PureScript.Kinds.eqKind @ () @ () a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
6ffb7ac313be98d49cd1d5bc1d1f38aa
  $s$fEq(,)_$s$fEq[] :: GHC.Classes.Eq [Data.Text.Internal.Text]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Text.Internal.Text]
                  (GHC.Classes.$fEq[]_$c==
                     @ Data.Text.Internal.Text
                     Data.Text.$fEqText)
                  Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq[]_$c/= -}
7fa2b0abf5d40e2513219ea52b3f7603
  $s$fEq(,)_$s$fEq[]_$c/= ::
    [Data.Text.Internal.Text]
    -> [Data.Text.Internal.Text] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x1 :: [Data.Text.Internal.Text])
                   (y :: [Data.Text.Internal.Text]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        x1
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
09bb1f35192004e0ce49d724f05560e6
  $s$fFromJSON(,) ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.AST.SourcePos.SourceSpan,
                     [Language.PureScript.Comments.Comment])
                  (Data.Aeson.Types.FromJSON.withArray
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     (GHC.Base.build
                        @ GHC.Types.Char
                        (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: Data.Vector.Fusion.Util.Id GHC.Types.Int
                        = Data.Vector.Fusion.Bundle.Monadic.length
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Vector.Vector
                            @ Data.Aeson.Types.Internal.Value
                            Data.Vector.Fusion.Util.$fMonadId
                            (Data.Vector.Fusion.Bundle.Monadic.fromVector
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                               t)
                      } in
                      case GHC.Classes.eqInt
                             n `cast` (Data.Vector.Fusion.Util.N:Id[0] <GHC.Types.Int>_R)
                             (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> let {
                             msg19 :: GHC.Base.String
                             = GHC.Base.build
                                 @ GHC.Types.Char
                                 (\ @ b1
                                    (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                    (n1 :: b1)[OneShot] ->
                                  GHC.CString.unpackFoldrCString#
                                    @ b1
                                    "cannot unpack array of length "#
                                    c
                                    (GHC.Base.foldr
                                       @ GHC.Types.Char
                                       @ b1
                                       c
                                       (GHC.CString.unpackFoldrCString#
                                          @ b1
                                          " into a tuple of length 2"#
                                          c
                                          n1)
                                       (GHC.Show.showSignedInt
                                          GHC.Show.$fShow(,)1
                                          n `cast`
                                          (Data.Vector.Fusion.Util.N:Id[0] <GHC.Types.Int>_R)
                                          (GHC.Types.[] @ GHC.Types.Char))))
                           } in
                           (\ @ f21 :: * -> *
                              @ r
                              (path :: Data.Aeson.Types.Internal.JSONPath)
                              (kf :: Data.Aeson.Types.Internal.Failure f21 r)
                              (_ks :: Data.Aeson.Types.Internal.Success
                                        (Language.PureScript.AST.SourcePos.SourceSpan,
                                         [Language.PureScript.Comments.Comment])
                                        f21
                                        r) ->
                            kf
                              (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                              msg19)
                             `cast`
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(Language.PureScript.AST.SourcePos.SourceSpan,
                                       [Language.PureScript.Comments.Comment])>_R))
                        GHC.Types.True
                        -> let {
                             p :: Data.Aeson.Types.Internal.Parser
                                    Language.PureScript.AST.SourcePos.SourceSpan
                             = case Data.Vector.Generic.unsafeIndex
                                      @ Data.Vector.Vector
                                      @ Data.Aeson.Types.Internal.Value
                                      (Data.Vector.$fVectorVectora
                                         @ Data.Aeson.Types.Internal.Value)
                                      t
                                      (GHC.Types.I# 0#) of wild1 {
                                 DEFAULT
                                 -> let {
                                      msg19 :: GHC.Base.String
                                      = GHC.CString.unpackAppendCString#
                                          Data.Aeson.Types.FromJSON.typeMismatch4
                                          (GHC.Base.augment
                                             @ GHC.Types.Char
                                             (\ @ b
                                                (c :: GHC.Types.Char -> b -> b)[OneShot]
                                                (n1 :: b)[OneShot] ->
                                              GHC.Base.foldr
                                                @ GHC.Types.Char
                                                @ b
                                                c
                                                n1
                                                Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan2)
                                             (GHC.CString.unpackAppendCString#
                                                Data.Aeson.Types.FromJSON.typeMismatch3
                                                (case wild1 of wild2 {
                                                   Data.Aeson.Types.Internal.Array ds
                                                   -> Data.Aeson.Types.FromJSON.typeMismatch1
                                                   Data.Aeson.Types.Internal.String ds
                                                   -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                                   Data.Aeson.Types.Internal.Number ds
                                                   -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                                   Data.Aeson.Types.Internal.Bool ds
                                                   -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                                   Data.Aeson.Types.Internal.Null
                                                   -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                                    } in
                                    (\ @ f21 :: * -> *
                                       @ r
                                       (path :: Data.Aeson.Types.Internal.JSONPath)
                                       (kf :: Data.Aeson.Types.Internal.Failure f21 r)
                                       (_ks :: Data.Aeson.Types.Internal.Success
                                                 Language.PureScript.AST.SourcePos.SourceSpan
                                                 f21
                                                 r) ->
                                     kf
                                       (GHC.List.reverse
                                          @ Data.Aeson.Types.Internal.JSONPathElement
                                          path)
                                       msg19)
                                      `cast`
                                    (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                              <Language.PureScript.AST.SourcePos.SourceSpan>_R))
                                 Data.Aeson.Types.Internal.Object obj
                                 -> Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan1 obj }
                           } in
                           let {
                             pathElem1 :: Data.Aeson.Types.Internal.JSONPathElement
                             = Data.Aeson.Types.Internal.Index 0#
                           } in
                           let {
                             p1 :: Data.Aeson.Types.Internal.Parser
                                     [Language.PureScript.Comments.Comment]
                             = Language.PureScript.Comments.$fFromJSONComment_$cparseJSONList
                                 (Data.Vector.Generic.unsafeIndex
                                    @ Data.Vector.Vector
                                    @ Data.Aeson.Types.Internal.Value
                                    (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                    t
                                    (GHC.Types.I# 1#))
                           } in
                           let {
                             pathElem2 :: Data.Aeson.Types.Internal.JSONPathElement
                             = Data.Aeson.Types.Internal.Index 1#
                           } in
                           (\ @ f21 :: * -> *
                              @ r
                              (path :: Data.Aeson.Types.Internal.JSONPath)
                              (kf :: Data.Aeson.Types.Internal.Failure f21 r)
                              (ks :: Data.Aeson.Types.Internal.Success
                                       (Language.PureScript.AST.SourcePos.SourceSpan,
                                        [Language.PureScript.Comments.Comment])
                                       f21
                                       r) ->
                            p `cast`
                            (Data.Aeson.Types.Internal.N:Parser[0]
                                 <Language.PureScript.AST.SourcePos.SourceSpan>_R)
                              @ f21
                              @ r
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.JSONPathElement
                                 pathElem1
                                 path)
                              kf
                              (\ (a2 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                               p1
                                 `cast`
                               (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[Language.PureScript.Comments.Comment]>_R)
                                 @ f21
                                 @ r
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.JSONPathElement
                                    pathElem2
                                    path)
                                 kf
                                 (\ (a3 :: [Language.PureScript.Comments.Comment]) -> ks (a2, a3))))
                             `cast`
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(Language.PureScript.AST.SourcePos.SourceSpan,
                                       [Language.PureScript.Comments.Comment])>_R)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan
                     Language.PureScript.Docs.Types.$s$fFromJSON(,)_$s$fFromJSON[]) -}
8b5e160a659d8d7c3fce9365d61303ee
  $s$fFromJSON(,)_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON
      [Language.PureScript.Comments.Comment]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Comments.Comment]
                  Language.PureScript.Comments.$fFromJSONComment_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Language.PureScript.Comments.Comment
                     Language.PureScript.Comments.$fFromJSONComment) -}
37004a25bb1a1643651a058dc2dacb5e
  $s$fFromJSONEither ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Language.PureScript.Names.Ident
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName))
                  (Data.Aeson.Types.FromJSON.$fFromJSON1Either_$cliftParseJSON2
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fFromJSONIdent_$cparseJSON
                     Language.PureScript.Names.$fFromJSONIdent_$cparseJSONList
                     (Language.PureScript.Names.$fFromJSONProperName_$cparseJSON
                        @ 'Language.PureScript.Names.ConstructorName)
                     (Language.PureScript.Names.$fFromJSONModuleName_$cparseJSONList1
                        @ 'Language.PureScript.Names.ConstructorName))
                  (Data.Aeson.Types.FromJSON.$fFromJSONEither_$cparseJSONList
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fFromJSONIdent
                     (Language.PureScript.Names.$fFromJSONProperName
                        @ 'Language.PureScript.Names.ConstructorName)) -}
f363d8ffce1bc5ce65c9a4123a2d002c
  $s$fFromJSONQualified ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Names.Qualified
         (Data.Either.Either
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName)
            (Data.Either.Either
               Language.PureScript.Names.Ident
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ConstructorName))))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Data.Either.Either
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                          (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName))))
                  (Language.PureScript.Names.$fFromJSONQualified_$cparseJSON
                     @ (Data.Either.Either
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                          (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)))
                     Language.PureScript.Docs.Types.$s$fFromJSONQualified1)
                  (Language.PureScript.Names.$fFromJSONQualified_$cparseJSONList
                     @ (Data.Either.Either
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                          (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)))
                     Language.PureScript.Docs.Types.$s$fFromJSONQualified1) -}
6d54399ef71e30c4e1c0ee7e04e42227
  $s$fFromJSONQualified1 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Data.Either.Either
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName)))
  {- Unfolding: (Data.Aeson.Types.FromJSON.$fFromJSONEither
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   @ (Data.Either.Either
                        Language.PureScript.Names.Ident
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ConstructorName))
                   (Language.PureScript.Names.$fFromJSONProperName
                      @ 'Language.PureScript.Names.TypeName)
                   Language.PureScript.Docs.Types.$s$fFromJSONEither) -}
f2b2bf6472151d05b220b05948ec2267
  $s$fFromJSONQualified2 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       Language.PureScript.Names.Ident)
                  (Language.PureScript.Names.$fFromJSONQualified_$cparseJSON
                     @ Language.PureScript.Names.Ident
                     Language.PureScript.Names.$fFromJSONIdent)
                  (Language.PureScript.Names.$fFromJSONQualified_$cparseJSONList
                     @ Language.PureScript.Names.Ident
                     Language.PureScript.Names.$fFromJSONIdent) -}
b83641a5227c871029cea975bb09135d
  $s$fOrd(,) ::
    GHC.Classes.Ord
      (Data.Text.Internal.Text,
       GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Text.Internal.Text,
                     GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                  Language.PureScript.Docs.Types.$s$fEq(,)
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe)
                  (\ (a1 :: (Data.Text.Internal.Text,
                             GHC.Base.Maybe Language.PureScript.Docs.Types.Kind'))
                     (b1 :: (Data.Text.Internal.Text,
                             GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ Data.Text.Internal.Text
                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                     Data.Text.$fOrdText
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe) -}
eb846378d0f8091122e6abcfbd4a573f
  $s$fOrd(,)1 ::
    GHC.Classes.Ord
      ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                  Language.PureScript.Docs.Types.$s$fEq(,)1
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[])
                  (GHC.Classes.$fOrd(,)_$c<
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[])
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[])
                  (\ (a1 :: ([Data.Text.Internal.Text], [Data.Text.Internal.Text]))
                     (b1 :: ([Data.Text.Internal.Text], [Data.Text.Internal.Text])) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[])
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[])
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ [Data.Text.Internal.Text]
                     @ [Data.Text.Internal.Text]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
                     Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]) -}
4306ca91b89d155b63fce5a535fbe57f
  $s$fOrd(,)_$s$fOrdMaybe ::
    GHC.Classes.Ord
      (GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                  Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEqMaybe
                  (\ (a1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (b :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case a1 of wild {
                     GHC.Base.Nothing
                     -> case b of wild1 {
                          GHC.Base.Nothing -> GHC.Types.EQ
                          GHC.Base.Just ipv -> GHC.Types.LT }
                     GHC.Base.Just a2
                     -> case b of wild1 {
                          GHC.Base.Nothing -> GHC.Types.GT
                          GHC.Base.Just b1
                          -> Language.PureScript.Kinds.compareKind @ () @ () a2 b1 } })
                  (\ (a1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (b :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case a1 of wild {
                     GHC.Base.Nothing
                     -> case b of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just ipv -> GHC.Types.True }
                     GHC.Base.Just a2
                     -> case b of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just b1
                          -> Language.PureScript.Kinds.$fOrdKind_$c< @ () a2 b1 } })
                  (\ (a1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (b :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case b of wild {
                     GHC.Base.Nothing
                     -> case a1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just ipv -> GHC.Types.False }
                     GHC.Base.Just a2
                     -> case a1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just b1
                          -> case Language.PureScript.Kinds.compareKind
                                    @ ()
                                    @ ()
                                    a2
                                    b1 of wild2 {
                               DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } })
                  (\ (a1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (b :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case b of wild {
                     GHC.Base.Nothing
                     -> case a1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just ipv -> GHC.Types.True }
                     GHC.Base.Just a2
                     -> case a1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just b1
                          -> Language.PureScript.Kinds.$fOrdKind_$c< @ () a2 b1 } })
                  (\ (a1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (b :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case a1 of wild {
                     GHC.Base.Nothing
                     -> case b of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just ipv -> GHC.Types.False }
                     GHC.Base.Just a2
                     -> case b of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just b1
                          -> case Language.PureScript.Kinds.compareKind
                                    @ ()
                                    @ ()
                                    a2
                                    b1 of wild2 {
                               DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } })
                  (\ (x1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (y :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case y of wild {
                     GHC.Base.Nothing -> x1
                     GHC.Base.Just a1
                     -> case x1 of wild1 {
                          GHC.Base.Nothing -> wild
                          GHC.Base.Just b1
                          -> case Language.PureScript.Kinds.compareKind
                                    @ ()
                                    @ ()
                                    a1
                                    b1 of wild2 {
                               DEFAULT -> wild GHC.Types.LT -> wild1 } } })
                  (\ (x1 :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ()))
                     (y :: GHC.Base.Maybe (Language.PureScript.Kinds.Kind ())) ->
                   case y of wild {
                     GHC.Base.Nothing
                     -> case x1 of wild1 { DEFAULT ->
                        GHC.Base.Nothing @ (Language.PureScript.Kinds.Kind ()) }
                     GHC.Base.Just a1
                     -> case x1 of wild1 {
                          GHC.Base.Nothing
                          -> GHC.Base.Nothing @ (Language.PureScript.Kinds.Kind ())
                          GHC.Base.Just b1
                          -> case Language.PureScript.Kinds.compareKind
                                    @ ()
                                    @ ()
                                    a1
                                    b1 of wild2 {
                               DEFAULT -> wild1 GHC.Types.LT -> wild } } }) -}
fe6f39629384b073f2104baf8c1c01b7
  $s$fOrd(,)_$s$fOrd[] :: GHC.Classes.Ord [Data.Text.Internal.Text]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Text.Internal.Text]
                  Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq[]
                  (GHC.Classes.$fOrd[]_$ccompare
                     @ Data.Text.Internal.Text
                     Data.Text.$fOrdText)
                  (\ (x1 :: [Data.Text.Internal.Text])
                     (y :: [Data.Text.Internal.Text]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Data.Text.Internal.Text
                          Data.Text.$fOrdText
                          x1
                          y of wild {
                     DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True })
                  (\ (x1 :: [Data.Text.Internal.Text])
                     (y :: [Data.Text.Internal.Text]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Data.Text.Internal.Text
                          Data.Text.$fOrdText
                          x1
                          y of wild {
                     DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False })
                  (\ (x1 :: [Data.Text.Internal.Text])
                     (y :: [Data.Text.Internal.Text]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Data.Text.Internal.Text
                          Data.Text.$fOrdText
                          x1
                          y of wild {
                     DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True })
                  (\ (x1 :: [Data.Text.Internal.Text])
                     (y :: [Data.Text.Internal.Text]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Data.Text.Internal.Text
                          Data.Text.$fOrdText
                          x1
                          y of wild {
                     DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False })
                  (\ (x1 :: [Data.Text.Internal.Text])
                     (y :: [Data.Text.Internal.Text]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Data.Text.Internal.Text
                          Data.Text.$fOrdText
                          x1
                          y of wild {
                     DEFAULT -> y GHC.Types.GT -> x1 })
                  (\ (x1 :: [Data.Text.Internal.Text])
                     (y :: [Data.Text.Internal.Text]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Data.Text.Internal.Text
                          Data.Text.$fOrdText
                          x1
                          y of wild {
                     DEFAULT -> x1 GHC.Types.GT -> y }) -}
2bf65de2b655adbb71363b0eaa33ffef
  $s$fShow(,)_$cshowsPrec_$s$fShowKind ::
    GHC.Show.Show (Language.PureScript.Kinds.Kind ())
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Kinds.Kind ())
                  (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                     @ ()
                     GHC.Show.$fShow())
                  (\ (x1 :: Language.PureScript.Kinds.Kind ()) ->
                   Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                     @ ()
                     GHC.Show.$fShow()
                     Language.PureScript.Kinds.$fFoldableKind7
                     x1
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Kinds.Kind ()])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Kinds.Kind ())
                     (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                        @ ()
                        GHC.Show.$fShow()
                        Language.PureScript.Kinds.$fFoldableKind7)
                     ls
                     s) -}
f82c75a739c09392655dacf7478701bf
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Language.PureScript.Names.Ident
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fShowIdent
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.ConstructorName))
                  (\ (x1 :: Data.Either.Either
                              Language.PureScript.Names.Ident
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)) ->
                   case x1 of wild {
                     Data.Either.Left b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither4)
                          (Language.PureScript.Names.$fShowIdent_$cshowsPrec
                             Data.Either.$fReadEither6
                             b1
                             (GHC.Types.[] @ GHC.Types.Char))
                     Data.Either.Right b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither2)
                          (Language.PureScript.Names.$fShowProperName_$cshowsPrec
                             @ 'Language.PureScript.Names.ConstructorName
                             Data.Either.$fReadEither6
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [Data.Either.Either
                               Language.PureScript.Names.Ident
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ConstructorName)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Either.Either
                          Language.PureScript.Names.Ident
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName))
                     (Data.Either.$fShowEither_$cshowsPrec
                        @ Language.PureScript.Names.Ident
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                        Language.PureScript.Names.$fShowIdent
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.ConstructorName)
                        Data.Either.$fShowEither1)
                     ls
                     s) -}
e7df8efb454796bed82b6948679095d1
  $s$fShowQualified_$cshowsPrec1 ::
    GHC.Show.Show
      (Data.Either.Either
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName)))
  {- Unfolding: (Data.Either.$fShowEither
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   @ (Data.Either.Either
                        Language.PureScript.Names.Ident
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ConstructorName))
                   (Language.PureScript.Names.$fShowProperName
                      @ 'Language.PureScript.Names.TypeName)
                   Language.PureScript.Docs.Types.$s$fShowEither) -}
f9693a3d653dfca791bb599dae78497f
  $s$fToJSONEither1 ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Data.Either.Either
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName)))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                       (Data.Either.Either
                          Language.PureScript.Names.Ident
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)))
                  (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                     @ (Data.Either.Either
                          Language.PureScript.Names.Ident
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName))
                     Data.Aeson.Types.Internal.$WString
                       `cast`
                     (Sym (Language.PureScript.Names.N:ProperName[0]
                               <'Language.PureScript.Names.TypeName>_P)
                      ->_R <Data.Aeson.Types.Internal.Value>_R)
                     (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                        @ 'Language.PureScript.Names.TypeName)
                     (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                        @ Language.PureScript.Names.Ident
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                        Language.PureScript.Names.$fToJSONIdent_$ctoJSON
                        Language.PureScript.Names.$fToJSONIdent_$ctoJSONList
                        Data.Aeson.Types.Internal.$WString
                          `cast`
                        (Sym (Language.PureScript.Names.N:ProperName[0]
                                  <'Language.PureScript.Names.ConstructorName>_P)
                         ->_R <Data.Aeson.Types.Internal.Value>_R)
                        (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                           @ 'Language.PureScript.Names.ConstructorName))
                     (let {
                        f21 :: Data.Either.Either
                                 Language.PureScript.Names.Ident
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName)
                               -> Data.Aeson.Types.Internal.Value
                          {- Arity: 1 -}
                        = Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                            @ Language.PureScript.Names.Ident
                            @ (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)
                            Language.PureScript.Names.$fToJSONIdent_$ctoJSON
                            Language.PureScript.Names.$fToJSONIdent_$ctoJSONList
                            Data.Aeson.Types.Internal.$WString
                              `cast`
                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                      <'Language.PureScript.Names.ConstructorName>_P)
                             ->_R <Data.Aeson.Types.Internal.Value>_R)
                            (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                               @ 'Language.PureScript.Names.ConstructorName)
                      } in
                      \ (x1 :: [Data.Either.Either
                                  Language.PureScript.Names.Ident
                                  (Language.PureScript.Names.ProperName
                                     'Language.PureScript.Names.ConstructorName)]) ->
                      Data.Aeson.Types.Internal.$WArray
                        (Data.Vector.Generic.new
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Generic.New.unstream
                              @ Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                              (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                 @ Data.Vector.Fusion.Util.Id
                                 @ Data.Aeson.Types.Internal.Value
                                 @ Data.Vector.Vector
                                 Data.Vector.Fusion.Util.$fMonadId
                                 Data.Vector.Fusion.Bundle.Size.Unknown
                                 (GHC.Base.build
                                    @ Data.Aeson.Types.Internal.Value
                                    (\ @ b1
                                       (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                       (n1 :: b1)[OneShot] ->
                                     GHC.Base.foldr
                                       @ (Data.Either.Either
                                            Language.PureScript.Names.Ident
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ConstructorName))
                                       @ b1
                                       (GHC.Base.mapFB
                                          @ Data.Aeson.Types.Internal.Value
                                          @ b1
                                          @ (Data.Either.Either
                                               Language.PureScript.Names.Ident
                                               (Language.PureScript.Names.ProperName
                                                  'Language.PureScript.Names.ConstructorName))
                                          c
                                          f21)
                                       n1
                                       x1)))))))
                  (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.TypeName)
                     @ (Data.Either.Either
                          Language.PureScript.Names.Ident
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName))
                     (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                        @ 'Language.PureScript.Names.TypeName)
                     (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                        @ 'Language.PureScript.Names.TypeName)
                     (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                        @ Language.PureScript.Names.Ident
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                        Language.PureScript.Names.$fToJSONIdent_$ctoEncoding
                        Language.PureScript.Names.$fToJSONIdent_$ctoEncodingList
                        (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                           @ 'Language.PureScript.Names.ConstructorName)
                        (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                           @ 'Language.PureScript.Names.ConstructorName))
                     (Data.Aeson.Encoding.Internal.list
                        @ (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName))
                        (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                           @ Language.PureScript.Names.Ident
                           @ (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)
                           Language.PureScript.Names.$fToJSONIdent_$ctoEncoding
                           Language.PureScript.Names.$fToJSONIdent_$ctoEncodingList
                           (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                              @ 'Language.PureScript.Names.ConstructorName)
                           (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                              @ 'Language.PureScript.Names.ConstructorName))))
                  (let {
                     f21 :: Data.Either.Either
                              Language.PureScript.Names.Ident
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)
                            -> Data.Aeson.Types.Internal.Value
                       {- Arity: 1 -}
                     = Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                         @ Language.PureScript.Names.Ident
                         @ (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ConstructorName)
                         Language.PureScript.Names.$fToJSONIdent_$ctoJSON
                         Language.PureScript.Names.$fToJSONIdent_$ctoJSONList
                         Data.Aeson.Types.Internal.$WString
                           `cast`
                         (Sym (Language.PureScript.Names.N:ProperName[0]
                                   <'Language.PureScript.Names.ConstructorName>_P)
                          ->_R <Data.Aeson.Types.Internal.Value>_R)
                         (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                            @ 'Language.PureScript.Names.ConstructorName)
                   } in
                   let {
                     f22 :: Data.Either.Either
                              Language.PureScript.Names.Ident
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)
                            -> Data.Aeson.Types.Internal.Value
                       {- Arity: 1 -}
                     = Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                         @ Language.PureScript.Names.Ident
                         @ (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ConstructorName)
                         Language.PureScript.Names.$fToJSONIdent_$ctoJSON
                         Language.PureScript.Names.$fToJSONIdent_$ctoJSONList
                         Data.Aeson.Types.Internal.$WString
                           `cast`
                         (Sym (Language.PureScript.Names.N:ProperName[0]
                                   <'Language.PureScript.Names.ConstructorName>_P)
                          ->_R <Data.Aeson.Types.Internal.Value>_R)
                         (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                            @ 'Language.PureScript.Names.ConstructorName)
                   } in
                   let {
                     f23 :: [Data.Either.Either
                               Language.PureScript.Names.Ident
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ConstructorName)]
                            -> Data.Aeson.Types.Internal.Value
                       {- Arity: 1 -}
                     = \ (x1 :: [Data.Either.Either
                                   Language.PureScript.Names.Ident
                                   (Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.ConstructorName)]) ->
                       Data.Aeson.Types.Internal.$WArray
                         (Data.Vector.Generic.new
                            @ Data.Vector.Vector
                            @ Data.Aeson.Types.Internal.Value
                            (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                            (Data.Vector.Generic.New.unstream
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                               (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Aeson.Types.Internal.Value
                                  @ Data.Vector.Vector
                                  Data.Vector.Fusion.Util.$fMonadId
                                  Data.Vector.Fusion.Bundle.Size.Unknown
                                  (GHC.Base.build
                                     @ Data.Aeson.Types.Internal.Value
                                     (\ @ b1
                                        (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                        (n1 :: b1)[OneShot] ->
                                      GHC.Base.foldr
                                        @ (Data.Either.Either
                                             Language.PureScript.Names.Ident
                                             (Language.PureScript.Names.ProperName
                                                'Language.PureScript.Names.ConstructorName))
                                        @ b1
                                        (GHC.Base.mapFB
                                           @ Data.Aeson.Types.Internal.Value
                                           @ b1
                                           @ (Data.Either.Either
                                                Language.PureScript.Names.Ident
                                                (Language.PureScript.Names.ProperName
                                                   'Language.PureScript.Names.ConstructorName))
                                           c
                                           f22)
                                        n1
                                        x1)))))
                   } in
                   let {
                     f24 :: Data.Either.Either
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.TypeName)
                              (Data.Either.Either
                                 Language.PureScript.Names.Ident
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ConstructorName))
                            -> Data.Aeson.Types.Internal.Value
                       {- Arity: 1 -}
                     = Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                         @ (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName)
                         @ (Data.Either.Either
                              Language.PureScript.Names.Ident
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName))
                         Data.Aeson.Types.Internal.$WString
                           `cast`
                         (Sym (Language.PureScript.Names.N:ProperName[0]
                                   <'Language.PureScript.Names.TypeName>_P)
                          ->_R <Data.Aeson.Types.Internal.Value>_R)
                         (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                            @ 'Language.PureScript.Names.TypeName)
                         f21
                         f23
                   } in
                   \ (x1 :: [Data.Either.Either
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.TypeName)
                               (Data.Either.Either
                                  Language.PureScript.Names.Ident
                                  (Language.PureScript.Names.ProperName
                                     'Language.PureScript.Names.ConstructorName))]) ->
                   Data.Aeson.Types.Internal.$WArray
                     (Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n1 :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ (Data.Either.Either
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.TypeName)
                                         (Data.Either.Either
                                            Language.PureScript.Names.Ident
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ConstructorName)))
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ (Data.Either.Either
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.TypeName)
                                            (Data.Either.Either
                                               Language.PureScript.Names.Ident
                                               (Language.PureScript.Names.ProperName
                                                  'Language.PureScript.Names.ConstructorName)))
                                       c
                                       f24)
                                    n1
                                    x1))))))
                  (Data.Aeson.Encoding.Internal.list
                     @ (Data.Either.Either
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                          (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)))
                     (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                        @ (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName))
                        (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                           @ 'Language.PureScript.Names.TypeName)
                        (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                           @ 'Language.PureScript.Names.TypeName)
                        (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                           @ Language.PureScript.Names.Ident
                           @ (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)
                           Language.PureScript.Names.$fToJSONIdent_$ctoEncoding
                           Language.PureScript.Names.$fToJSONIdent_$ctoEncodingList
                           (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                              @ 'Language.PureScript.Names.ConstructorName)
                           (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                              @ 'Language.PureScript.Names.ConstructorName))
                        (Data.Aeson.Encoding.Internal.list
                           @ (Data.Either.Either
                                Language.PureScript.Names.Ident
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ConstructorName))
                           (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                              @ Language.PureScript.Names.Ident
                              @ (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ConstructorName)
                              Language.PureScript.Names.$fToJSONIdent_$ctoEncoding
                              Language.PureScript.Names.$fToJSONIdent_$ctoEncodingList
                              (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                                 @ 'Language.PureScript.Names.ConstructorName)
                              (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                                 @ 'Language.PureScript.Names.ConstructorName))))) -}
c73396d1d565a90af03b8c58f6f250bd
  $sfromAesonParser2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ e (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                   @ Data.Functor.Identity.Identity
                   @ (Language.PureScript.Names.Qualified
                        Language.PureScript.Names.Ident)
                   @ e
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.$s$fFromJSONQualified2
                   ww1
                   ww2 }) -}
4e0a51e8483a94de4caddbce0b8eea73
  $sfromAesonParser5 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         Language.PureScript.Docs.Types.Type'
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ e (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.Type'
                   @ e
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Types.$fFromJSONType0
                   ww1
                   ww2 }) -}
beb147b34ebce612ed25e79d6df87925
  $sfromAesonParser6 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         Language.PureScript.AST.SourcePos.SourceAnn
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ e (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   @ e
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.$s$fFromJSON(,)
                   ww1
                   ww2 }) -}
3c1598c701a05ae5a93740c53d5b1ed6
  $sfromList ::
    [(Language.PureScript.Names.ModuleName, a)]
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a
                   (ds :: [(Language.PureScript.Names.ModuleName, a)]) ->
                 case ds of wild {
                   []
                   -> Data.Map.Internal.Tip @ Language.PureScript.Names.ModuleName @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x1 ->
                      case ds2 of wild2 {
                        []
                        -> case kx
                                  `cast`
                                (Language.PureScript.Names.N:ModuleName[0]) of nt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ Language.PureScript.Names.ModuleName
                             @ a
                             1#
                             nt `cast` (Sym (Language.PureScript.Names.N:ModuleName[0]))
                             x1
                             (Data.Map.Internal.Tip @ Language.PureScript.Names.ModuleName @ a)
                             (Data.Map.Internal.Tip
                                @ Language.PureScript.Names.ModuleName
                                @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case GHC.Classes.$fOrd[]_$ccompare
                                  @ (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.Namespace)
                                  (Language.PureScript.Names.$fOrdProperName
                                     @ 'Language.PureScript.Names.Namespace)
                                  kx `cast` (Language.PureScript.Names.N:ModuleName[0])
                                  ky `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild4 {
                             DEFAULT
                             -> case kx
                                       `cast`
                                     (Language.PureScript.Names.N:ModuleName[0]) of nt { DEFAULT ->
                                Language.PureScript.Docs.Types.$sfromList_$spoly_go14
                                  @ a
                                  ky
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Language.PureScript.Names.ModuleName
                                     @ a
                                     1#
                                     nt `cast` (Sym (Language.PureScript.Names.N:ModuleName[0]))
                                     x1
                                     (Data.Map.Internal.Tip
                                        @ Language.PureScript.Names.ModuleName
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ Language.PureScript.Names.ModuleName
                                        @ a)) }
                             GHC.Types.LT
                             -> case kx
                                       `cast`
                                     (Language.PureScript.Names.N:ModuleName[0]) of nt { DEFAULT ->
                                Language.PureScript.Docs.Types.$sfromList_$s$wpoly_go13
                                  @ a
                                  ky
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Language.PureScript.Names.ModuleName
                                     @ a
                                     1#
                                     nt `cast` (Sym (Language.PureScript.Names.N:ModuleName[0]))
                                     x1
                                     (Data.Map.Internal.Tip
                                        @ Language.PureScript.Names.ModuleName
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ Language.PureScript.Names.ModuleName
                                        @ a))
                                  1# } } } } } }) -}
2d1f2157a7532e06c8ea47de51354a21
  $sfromList_$s$wpoly_go13 ::
    Language.PureScript.Names.ModuleName
    -> a
    -> [(Language.PureScript.Names.ModuleName, a)]
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 5, Strictness: <S,U><L,U><S,1*U><S,1*U><L,U> -}
30a69afdf3b049435a4dda1178a7593d
  $sfromList_$spoly_go14 ::
    Language.PureScript.Names.ModuleName
    -> a
    -> [(Language.PureScript.Names.ModuleName, a)]
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 4, Strictness: <S,U><L,U><S,1*U><S,1*U> -}
5e43d62ea0f7bd9980e044f8e5973e39
  $sinsert_$sgo13 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
8141af513960267670649718de8078ce
  $slookup1 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
62d4a2736cc285f82e344c14d8c8d6cf
  $tc'AliasDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3572074603878845508##
                   3777186244106430820##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'AliasDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'AliasDeclaration1) -}
be69cd4362ed9803bb76e972f47a413e
  $tc'AliasDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9d1adb49dc131a87244606f6a983f573
  $tc'AliasDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'AliasDeclaration3) -}
753cc9030d691da3ade90e6fbabc027d
  $tc'AliasDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AliasDeclaration"#) -}
5ef2effc7557a32959750634ea140c4d
  $tc'BuiltinModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1221985273986227163##
                   521510823875692146##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'BuiltinModule2
                   0#
                   Language.PureScript.Docs.Types.$tc'BuiltinModule1) -}
a329b9333dff7aad59e6297e991ec307
  $tc'BuiltinModule1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
939a957a87d67e44f02e8620bc1357f3
  $tc'BuiltinModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'BuiltinModule3) -}
0cc9c82de9b461546c4bc52c3898484e
  $tc'BuiltinModule3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BuiltinModule"#) -}
429a29e2d477c51f671742462be6fcc1
  $tc'ChildDataConstructor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9707314044702177344##
                   16316296915905189212##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ChildDataConstructor2
                   0#
                   Language.PureScript.Docs.Types.$tc'ChildDataConstructor1) -}
046e334f5667d88e21e01a2c32ca13b3
  $tc'ChildDataConstructor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6a0b77e8e5894988f13031cad3d3257f
  $tc'ChildDataConstructor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ChildDataConstructor3) -}
66f647c53e17a4b8ffbe14345365c800
  $tc'ChildDataConstructor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChildDataConstructor"#) -}
36899fb9725e9e284e5a0abb6bbbaa6e
  $tc'ChildDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12157570933456763176##
                   1205779997238965768##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ChildDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'ChildDeclaration1) -}
8d2c9dae2223b197dc23b3b34e08aeef
  $tc'ChildDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
81d8344bbf951d3a92e49faf1d46a423
  $tc'ChildDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ChildDeclaration3) -}
e1572fa08b2affc048e51ce81ee32ab6
  $tc'ChildDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChildDeclaration"#) -}
54db434e182023dbf1a2207211b26180
  $tc'ChildInstance :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9108807017325291984##
                   13446695150983038951##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ChildInstance2
                   0#
                   Language.PureScript.Docs.Types.$tc'ChildInstance1) -}
a0078ce07c4ae5e8239041638e2408b2
  $tc'ChildInstance1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
45281ea66bb740f2bf9c4fb1a851cc7f
  $tc'ChildInstance2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ChildInstance3) -}
2ec7c256e44b3843040cc3ac744f3e8e
  $tc'ChildInstance3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChildInstance"#) -}
d5cbb809cc51bf8cebe8f2729b859a56
  $tc'ChildTypeClassMember :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2105095764030366591##
                   12466285688973056352##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ChildTypeClassMember2
                   0#
                   Language.PureScript.Docs.Types.$tc'ChildTypeClassMember1) -}
2c58697631eb44ee25732d41af49ed44
  $tc'ChildTypeClassMember1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f397fcc03f4d58bcecd3eddf431dd2fc
  $tc'ChildTypeClassMember2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ChildTypeClassMember3) -}
03074ca16bdcc25cde5f52b7a9c80d5f
  $tc'ChildTypeClassMember3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChildTypeClassMember"#) -}
df17a6f5cd3112ac3bf57e2e339fa1f9
  $tc'CompilerTooOld :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4444601918703200369##
                   6244066065326321989##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'CompilerTooOld2
                   0#
                   Language.PureScript.Docs.Types.$tc'CompilerTooOld1) -}
8dd9282c34a5e01f335089a3a1ac348b
  $tc'CompilerTooOld1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a8ef6720ac3ef25cc202049775067f2b
  $tc'CompilerTooOld2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'CompilerTooOld3) -}
359faa14f23a8825be7397cc17b75d5a
  $tc'CompilerTooOld3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CompilerTooOld"#) -}
e980d752ac3cbe9c9a50e9aed01c12fa
  $tc'DataDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7701024848001759365##
                   6428698333703596393##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'DataDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'DataDeclaration1) -}
12dde5ed1329affc1da449eb2184bdb3
  $tc'DataDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2d75125d9c602dff60c1c9a8b28d2ea8
  $tc'DataDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'DataDeclaration3) -}
fb6adea4d19fb4d8c0aa7ea1ba11c4c5
  $tc'DataDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DataDeclaration"#) -}
0ccaece7a32f090ca0c7eefff81a84d7
  $tc'Declaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9090843855729262184##
                   16560983102599428800##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'Declaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'Declaration1) -}
7dc3085211d41b1bc181e4c50cd196d3
  $tc'Declaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
de72b08f0736ff77bf245040c7909264
  $tc'Declaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'Declaration3) -}
188e98cf3aaad910c8a15de5d71b8605
  $tc'Declaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Declaration"#) -}
8f07dac5ce55918c83b28ff12851b4db
  $tc'DepsModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9438969231897201479##
                   14417328392182882104##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'DepsModule2
                   0#
                   Language.PureScript.Docs.Types.$tc'DepsModule1) -}
f6b2bbed9af9c161ac7f3c9b57c5e15c
  $tc'DepsModule1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9dc56613fd51fb2fd813ae7fc59292e2
  $tc'DepsModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'DepsModule3) -}
7fac94b46033c45769cdbd94b71ca32a
  $tc'DepsModule3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DepsModule"#) -}
4262f6c648d84bf90865e60dcb33ed84
  $tc'DocLink :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9095425179856087042##
                   1440556779273764829##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'DocLink2
                   0#
                   Language.PureScript.Docs.Types.$tc'DocLink1) -}
64556ad8d7a32b9234cd9555f0acd9a8
  $tc'DocLink1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
691bedc708a28d11c688d254501a4a2c
  $tc'DocLink2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'DocLink3) -}
0278eb40248b467dd672ffa2e3524a68
  $tc'DocLink3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DocLink"#) -}
dc8e2e0658d4408c3c95ae500efe384c
  $tc'ErrorInPackageMeta :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2026401460284803911##
                   11149278598533310218##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ErrorInPackageMeta2
                   0#
                   Language.PureScript.Docs.Types.$tc'ErrorInPackageMeta1) -}
9b7a6554eaa48bc5fee4d1237515130c
  $tc'ErrorInPackageMeta1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b7c48dd9524cc782b149f957129abfd1
  $tc'ErrorInPackageMeta2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ErrorInPackageMeta3) -}
9fbf86f689d41bfd7c43844b4fcd1607
  $tc'ErrorInPackageMeta3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ErrorInPackageMeta"#) -}
2f3d5580c9813194a5b42a24999f2199
  $tc'ExternDataDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13422567630186163436##
                   2928879363189926414##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ExternDataDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'ExternDataDeclaration1) -}
872356b6a5cd9fe190dc2f7d39cf79cd
  $tc'ExternDataDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cd4119727334acc6fa1d5d169a81cf76
  $tc'ExternDataDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ExternDataDeclaration3) -}
d3526124650e8a4ad3e49cff4645a85c
  $tc'ExternDataDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternDataDeclaration"#) -}
b6a19a6fc03f50020e2aaf8093d44cfa
  $tc'ExternKindDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14259037321967753337##
                   7173476904006624488##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ExternKindDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'ExternKindDeclaration1) -}
994dc49465525b91b63d3d056423074e
  $tc'ExternKindDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
d0e6eac3b8c25276cfc5c0105c681410
  $tc'ExternKindDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ExternKindDeclaration3) -}
8160fcaeb301349e2ae9283b479b4391
  $tc'ExternKindDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternKindDeclaration"#) -}
314f4017e8540f57c77445039cb17804
  $tc'FromDep :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10420929164215225658##
                   8617066758404390679##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'FromDep2
                   1#
                   Language.PureScript.Docs.Types.$tc'FromDep1) -}
9d8f5a3e1587aced909fe6b411267250
  $tc'FromDep1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0a6d86893720d9d4109f257d04f8723e
  $tc'FromDep2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'FromDep3) -}
f09b087accedb3e4baf691c7e6ad35ed
  $tc'FromDep3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FromDep"#) -}
b69bc621b0d37fc386468627f31bfa7e
  $tc'GithubRepo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15675590907559545519##
                   15132307429702043420##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'GithubRepo2
                   0#
                   Language.PureScript.Docs.Types.$tc'GithubRepo1) -}
7632665bb8f2486a2563d52c4dc485a4
  $tc'GithubRepo1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8a804f0394be0b05de287dc1ca53202c
  $tc'GithubRepo2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'GithubRepo3) -}
7835e3e2f4a2dbc9ff0b345f3d42bb22
  $tc'GithubRepo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GithubRepo"#) -}
a8b3b2a89adedcff445059a67b6760c5
  $tc'GithubUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5285201478966965954##
                   4573752735960811289##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'GithubUser2
                   0#
                   Language.PureScript.Docs.Types.$tc'GithubUser1) -}
c0c7358e624adda9e81546aecf3a707d
  $tc'GithubUser1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f4ea2bac895396666b8859ed3d63d877
  $tc'GithubUser2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'GithubUser3) -}
fa575c1123aad420de98019990e510ef
  $tc'GithubUser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GithubUser"#) -}
de4663b6b594b355b76797bece10fbb9
  $tc'InvalidChildDeclarationType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16825931463763974503##
                   16975319987938007823##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidChildDeclarationType2
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidChildDeclarationType1) -}
811fd4756411c5351745e9c53cfa8126
  $tc'InvalidChildDeclarationType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bed961fc36ccebbb18e28536b7139760
  $tc'InvalidChildDeclarationType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidChildDeclarationType3) -}
d3d72b102cb09dd78feaf2e19aef7ad9
  $tc'InvalidChildDeclarationType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidChildDeclarationType"#) -}
f37ddbb06d16d172fe9dfefd64f42189
  $tc'InvalidDataDeclType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1079775363364023473##
                   1288368916661568654##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidDataDeclType1
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidChildDeclarationType1) -}
bfdffdc11aaba55e67f845387a8e290b
  $tc'InvalidDataDeclType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidDataDeclType2) -}
17fef0920c5410039b59a292e3321025
  $tc'InvalidDataDeclType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidDataDeclType"#) -}
348c1f4d56f69d0b5c274910e0b85377
  $tc'InvalidDeclarationType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14110870243399079475##
                   14207339890141745953##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidDeclarationType1
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidChildDeclarationType1) -}
710f4968faad1111a9626ef39ed035f1
  $tc'InvalidDeclarationType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidDeclarationType2) -}
4133d9da8d9ee6c8a79948671af5a817
  $tc'InvalidDeclarationType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidDeclarationType"#) -}
6656c0186853413428e6acff009658df
  $tc'InvalidFixity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8842248669820343801##
                   2644601489214884336##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidFixity2
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidFixity1) -}
41049be8e295780c5a89bd9226cc5921
  $tc'InvalidFixity1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
21fb9dc777b55053329b58217c6faed9
  $tc'InvalidFixity2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidFixity3) -}
a6a9399045d4cb7a650b402c5196afc0
  $tc'InvalidFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidFixity"#) -}
af79dabe71e887b34533fc70ada5823e
  $tc'InvalidKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14133371928786177689##
                   6470996835023466228##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidKind1
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidChildDeclarationType1) -}
e9f2eb4e9a4c68c1340b5bf72584a093
  $tc'InvalidKind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidKind2) -}
097e9fb8909bd7f6ba7e00ddee36100f
  $tc'InvalidKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidKind"#) -}
d4f0adfc41a6a465e25820f0e1c4f2d4
  $tc'InvalidTime :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16049172615809334153##
                   13821211240207007506##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidTime1
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidFixity1) -}
9f66124f32dfb8f55005d8bfefc491e5
  $tc'InvalidTime1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidTime2) -}
223fb76c848fd8055b5962913f3987ff
  $tc'InvalidTime2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidTime"#) -}
e8e4ed98e99ee18a1f4259fe5eccd148
  $tc'InvalidVersion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   805215558573948443##
                   13641065351980394380##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'InvalidVersion1
                   0#
                   Language.PureScript.Docs.Types.$tc'InvalidFixity1) -}
672a6888be940521525d59f3d78310b2
  $tc'InvalidVersion1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'InvalidVersion2) -}
a91f06326bfbdbe9916ecfc485ecbde9
  $tc'InvalidVersion2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidVersion"#) -}
14b5d99dbbc90dae1a08686c3c5a7772
  $tc'LinksContext :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5885813659824607670##
                   15158359982026685738##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'LinksContext2
                   0#
                   Language.PureScript.Docs.Types.$tc'LinksContext1) -}
5560d7f661ccbca5a4e92f5e53eed3e7
  $tc'LinksContext1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9d89fe4a4287dba256146ccd8da80fb0
  $tc'LinksContext2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'LinksContext3) -}
acdd0af3f2f36255f1698829a8130213
  $tc'LinksContext3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LinksContext"#) -}
0df69ed707fc2bcdd547b796956780a8
  $tc'Local :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8029500229053785181##
                   5017652648189251084##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'Local2
                   1#
                   Language.PureScript.Docs.Types.$tc'Local1) -}
a01ed071e5661653b44988d647f592ed
  $tc'Local1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c01c324674f6a29fb118c122eda6f00f
  $tc'Local2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'Local3) -}
d891de8382e2078ed3c1af4fa48f50d2
  $tc'Local3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Local"#) -}
8e0354c727d6a8bd3a5da636fa265bd4
  $tc'LocalModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8334840059585374696##
                   15703002437272825687##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'LocalModule1
                   0#
                   Language.PureScript.Docs.Types.$tc'BuiltinModule1) -}
78bd94d1052e723cc3f7a496798d07bc
  $tc'LocalModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'LocalModule2) -}
70cea614e8fe7decbf42c256db83fa19
  $tc'LocalModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LocalModule"#) -}
1302340bdf2f4953c35e6d9591d3a87f
  $tc'Module :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12685791626426038183##
                   16728234158151359564##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'Module2
                   0#
                   Language.PureScript.Docs.Types.$tc'Module1) -}
aadbaccc3ddc3b9183d4b5e0285226f4
  $tc'Module1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f8b651acfa08731c31cdcc5653a3a810
  $tc'Module2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'Module3) -}
464a6d7aa8ecb1e990c29566196a8973
  $tc'Module3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Module"#) -}
af8b478625d9933feee45d233b1bbc82
  $tc'NotYetKnown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15596248692416304701##
                   9342627085450810539##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'NotYetKnown2
                   0#
                   Language.PureScript.Docs.Types.$tc'NotYetKnown1) -}
24b2934198b46dc0df565e6d1842cd60
  $tc'NotYetKnown1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
fd1cf2e1c1b7d21d4f756e0237749c14
  $tc'NotYetKnown2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'NotYetKnown3) -}
0caee16dc824048cb0fc4013af926038
  $tc'NotYetKnown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NotYetKnown"#) -}
54c4dbc6fed3d820e298a0690a79ad9d
  $tc'Package :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4722456394674029771##
                   5034160608185411300##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'Package2
                   1#
                   Language.PureScript.Docs.Types.$tc'Package1) -}
4b76aa86f4a49fa48f39eb8f2451682b
  $tc'Package1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
96f1e3e743cd25c79c42d240d9df3260
  $tc'Package2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'Package3) -}
8d92cba623073c6ca689159064c6599f
  $tc'Package3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Package"#) -}
8f88cca06a9b8b87cf8d3a8328314816
  $tc'TypeClassDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12392572112341148389##
                   5709176077753755095##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'TypeClassDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'TypeClassDeclaration1) -}
f8d0d08179faf3fc96b118cd2ce382ad
  $tc'TypeClassDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c6997eff2d3b554fe0c88e8c513999da
  $tc'TypeClassDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'TypeClassDeclaration3) -}
799f1c09574f224db986f52a90b808a2
  $tc'TypeClassDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassDeclaration"#) -}
7f1e466c64ba43bb6b148b70c1270e9d
  $tc'TypeSynonymDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17568621799174164084##
                   12730134359696539925##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'TypeSynonymDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'TypeSynonymDeclaration1) -}
0ae45b9c6c38b138cd63e5152a405bd2
  $tc'TypeSynonymDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f3db4c4c6846a0fbafe9bd156e634e19
  $tc'TypeSynonymDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'TypeSynonymDeclaration3) -}
28da4c210af25c85531a055759632c19
  $tc'TypeSynonymDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeSynonymDeclaration"#) -}
90375b7c77073b8e627973ccdc6261a7
  $tc'ValueDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10926816187802703462##
                   4997059057695398261##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tc'ValueDeclaration2
                   0#
                   Language.PureScript.Docs.Types.$tc'ValueDeclaration1) -}
3489c713d35c9be257aa1af29f4ef527
  $tc'ValueDeclaration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a949858c2abfcc7138c4081f932ab66b
  $tc'ValueDeclaration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tc'ValueDeclaration3) -}
ec58a21664a59de9b4e4f9c9b87038cb
  $tc'ValueDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ValueDeclaration"#) -}
480225ad2697202f1d1ec175ee46eacf
  $tcChildDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1841825961106228922##
                   2886260773033040802##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcChildDeclaration1
                   0#
                   GHC.Types.krep$*) -}
93cc564cbc725b9e2fcede5756f424d0
  $tcChildDeclaration1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcChildDeclaration2) -}
119fda478236d59b65a898e43deeed11
  $tcChildDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChildDeclaration"#) -}
4d0158d71b6161a9409ecdddc5924317
  $tcChildDeclarationInfo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17985458146939077394##
                   7590231820507916730##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcChildDeclarationInfo1
                   0#
                   GHC.Types.krep$*) -}
3870b88a74229de84d3d56f0664c3612
  $tcChildDeclarationInfo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcChildDeclarationInfo2) -}
5e504eacb97b272d3fa749b0ffdf3da9
  $tcChildDeclarationInfo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChildDeclarationInfo"#) -}
a9404006e5afafedb727056ad4d30087
  $tcDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5368375532984415682##
                   6559294230770743825##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcDeclaration1
                   0#
                   GHC.Types.krep$*) -}
a6f54fe5b7676f9499310bb8d382f290
  $tcDeclaration1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcDeclaration2) -}
a45b1e9b9f76d73de06d354341949b2f
  $tcDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Declaration"#) -}
0a0408918043f091679a27dfadd6117d
  $tcDeclarationInfo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8379045211401748367##
                   11351173676546549976##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcDeclarationInfo1
                   0#
                   GHC.Types.krep$*) -}
936fd1c02a248fbfa28996d7350f8ae2
  $tcDeclarationInfo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcDeclarationInfo2) -}
7a076aedfafb8dba8c12caa5479c4e90
  $tcDeclarationInfo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DeclarationInfo"#) -}
3c356ec3d099d98ba51f46caf885793b
  $tcDocLink :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11304142336956724863##
                   2510761043464418265##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcDocLink1
                   0#
                   GHC.Types.krep$*) -}
9d1f65fba1e633d947e071e8fb3ef7ff
  $tcDocLink1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcDocLink2) -}
4affefb67f4c91c67d1ce8bd46538b62
  $tcDocLink2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DocLink"#) -}
8f522be18f9f6ce8c6b08d51901df9d0
  $tcGithubRepo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16412214816526937229##
                   12940026345436661164##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcGithubRepo1
                   0#
                   GHC.Types.krep$*) -}
baf8d6a196bcbb9711afef2782750661
  $tcGithubRepo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcGithubRepo2) -}
6e97ff80641701ef1e14b5dbfae32220
  $tcGithubRepo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GithubRepo"#) -}
bdb05199634c5a53ff941f8757fa4ace
  $tcGithubUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8366393469836782704##
                   16836695218653586306##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcGithubUser1
                   0#
                   GHC.Types.krep$*) -}
823ae2cce92da99872125e026e0b772f
  $tcGithubUser1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcGithubUser2) -}
ba535c7f4c12ce225a653342e681fc96
  $tcGithubUser2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GithubUser"#) -}
490c517dced771e8b3302e4bbad01415
  $tcInPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14751487930104536034##
                   16205494722349947472##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcInPackage1
                   0#
                   GHC.Types.krep$*Arr*) -}
11921766c94da05d44897a753c44faf6
  $tcInPackage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcInPackage2) -}
afe5c5aa718504433748e5a442193d26
  $tcInPackage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InPackage"#) -}
13d602002ec45516f21931a73a64239d
  $tcLinkLocation :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9703433316688149617##
                   414430305028027307##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcLinkLocation1
                   0#
                   GHC.Types.krep$*) -}
fd8203a78a69ed43d3ff37b192df366f
  $tcLinkLocation1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcLinkLocation2) -}
85cce84623e716dce9f4b2a70344bb0f
  $tcLinkLocation2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LinkLocation"#) -}
593b6d7c125c3e0a25f3e9a61e1281a2
  $tcLinksContext :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9513801190637909284##
                   14554548701478530620##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcLinksContext1
                   0#
                   GHC.Types.krep$*) -}
72ac1570ac59fba0d169a34ff217e6e4
  $tcLinksContext1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcLinksContext2) -}
6bc3dca43109c08676f36e986157c271
  $tcLinksContext2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LinksContext"#) -}
cede15e031ce8940f1b33e8c37358fdd
  $tcModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3710136036968083890##
                   3117916444872736157##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcModule1
                   0#
                   GHC.Types.krep$*) -}
af0c840c93b1978f6bc7102dc2473615
  $tcModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcModule2) -}
386762dcdd445ebdf19129e3fba4c5aa
  $tcModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Module"#) -}
70b30613346ddb7e9c7cf7e3418f195e
  $tcNotYetKnown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1069868587713740081##
                   184380712604119070##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcNotYetKnown1
                   0#
                   GHC.Types.krep$*) -}
ea2b58b0679b4828bdf4d4de7494d40a
  $tcNotYetKnown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$fShowNotYetKnown3) -}
26677b206af60450d2735784234b4929
  $tcPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1412233926917358227##
                   1112315291597473657##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcPackage1
                   0#
                   GHC.Types.krep$*Arr*) -}
2ae57f8c812c662edb8a2866d71b681e
  $tcPackage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcPackage2) -}
cde8590a01474f5ab1d5374b853a7ea7
  $tcPackage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Package"#) -}
3cfe9024a761347ec2f51af273efbaae
  $tcPackageError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5111351520518047069##
                   10811964184323527998##
                   Language.PureScript.Docs.Types.$trModule
                   Language.PureScript.Docs.Types.$tcPackageError1
                   0#
                   GHC.Types.krep$*) -}
004012569c13fcd16443099cb7cd6b5e
  $tcPackageError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$tcPackageError2) -}
205abcc7355eedf57bff05ce23608ba1
  $tcPackageError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PackageError"#) -}
6d5512022703ba69f3d526c0060ccffb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Docs.Types.$trModule3
                   Language.PureScript.Docs.Types.$trModule1) -}
f7a882466211a9e2ea20bd084004ba4f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$trModule2) -}
bce96b508e696e8b316bfe0bedca53e8
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Docs.Types"#) -}
2163a16e0ddcd5b654f9e7874941fcc1
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Types.$trModule4) -}
10d270d5fa452cb00d01d86907aecafd
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
b9910f51f13c33640fd9376ad116020d
  $w$c< ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,1*U><S,1*U><L,1*U(U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Language.PureScript.Docs.RenderedCode.Types.Namespace)
                   (ww3 :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww4 :: Data.Text.Internal.Text)
                   (ww5 :: Language.PureScript.Docs.RenderedCode.Types.Namespace) ->
                 case Language.PureScript.Docs.Types.$fOrdDocLink_$ccompare
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case ww1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                      case ww4 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                      case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild1 {
                        GHC.Types.LT -> GHC.Types.True
                        GHC.Types.EQ
                        -> Language.PureScript.Docs.RenderedCode.Types.$fOrdNamespace_$c<
                             ww2
                             ww5
                        GHC.Types.GT -> GHC.Types.False } } }
                   GHC.Types.GT -> GHC.Types.False }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$c<1 ::
    Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> GHC.Types.Bool
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ModuleName)
                   (ww1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww2 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww3 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])])
                   (ww4 :: Language.PureScript.Names.ModuleName)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww6 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww7 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.Namespace)
                        (Language.PureScript.Names.$fOrdProperName
                           @ 'Language.PureScript.Names.Namespace)
                        ww `cast` (Language.PureScript.Names.N:ModuleName[0])
                        ww4 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> let {
                        $j :: GHC.Types.Bool <join 0>
                        = case GHC.Classes.$fOrd[]_$ccompare
                                 @ Language.PureScript.Docs.Types.Declaration
                                 Language.PureScript.Docs.Types.$fOrdDeclaration
                                 ww2
                                 ww6 of wild1 {
                            GHC.Types.LT -> GHC.Types.True
                            GHC.Types.EQ
                            -> case GHC.Classes.$fOrd[]_$ccompare
                                      @ (Language.PureScript.Docs.Types.InPackage
                                           Language.PureScript.Names.ModuleName,
                                         [Language.PureScript.Docs.Types.Declaration])
                                      Language.PureScript.Docs.Types.$fOrdModule1
                                      ww3
                                      ww7 of wild2 {
                                 DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }
                            GHC.Types.GT -> GHC.Types.False }
                      } in
                      case ww1 of wild1 {
                        GHC.Base.Nothing
                        -> case ww5 of wild2 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.True }
                        GHC.Base.Just a2
                        -> case ww5 of wild2 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just b1
                             -> case a2 of ww8 { Data.Text.Internal.Text ww9 ww10 ww11 ->
                                case b1 of ww12 { Data.Text.Internal.Text ww13 ww14 ww15 ->
                                case Data.Text.$w$ccompare ww9 ww10 ww11 ww13 ww14 ww15 of wild3 {
                                  GHC.Types.LT -> GHC.Types.True
                                  GHC.Types.EQ -> $j
                                  GHC.Types.GT -> GHC.Types.False } } } } }
                   GHC.Types.GT -> GHC.Types.False }) -}
b73c193933eb9064e2638f72567ddcc1
  $w$c== ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,1*U><S,1*U><L,1*U(U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Language.PureScript.Docs.RenderedCode.Types.Namespace)
                   (ww3 :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww4 :: Data.Text.Internal.Text)
                   (ww5 :: Language.PureScript.Docs.RenderedCode.Types.Namespace) ->
                 case Language.PureScript.Docs.Types.$fEqDocLink_$c==1
                        ww
                        ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case ww4 of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      case GHC.Prim.==# dt2 dt5 of lwild {
                        DEFAULT -> GHC.Types.False
                        1#
                        -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                           case GHC.Prim.narrow32Int# ds3 of wild3 {
                             DEFAULT -> GHC.Types.False
                             0#
                             -> Language.PureScript.Docs.RenderedCode.Types.$fEqNamespace_$c==
                                  ww2
                                  ww5 } } } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$c==1 ::
    Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> GHC.Types.Bool
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ModuleName)
                   (ww1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww2 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww3 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])])
                   (ww4 :: Language.PureScript.Names.ModuleName)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww6 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww7 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.Namespace)
                        (Language.PureScript.Names.$fEqProperName
                           @ 'Language.PureScript.Names.Namespace)
                        ww `cast` (Language.PureScript.Names.N:ModuleName[0])
                        ww4 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> let {
                        $j :: GHC.Types.Bool <join 0>
                        = case GHC.Classes.$fEq[]_$c==
                                 @ Language.PureScript.Docs.Types.Declaration
                                 Language.PureScript.Docs.Types.$fEqDeclaration
                                 ww2
                                 ww6 of wild1 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True
                            -> GHC.Classes.$fEq[]_$c==
                                 @ (Language.PureScript.Docs.Types.InPackage
                                      Language.PureScript.Names.ModuleName,
                                    [Language.PureScript.Docs.Types.Declaration])
                                 Language.PureScript.Docs.Types.$fEqModule1
                                 ww3
                                 ww7 }
                      } in
                      case ww1 of wild1 {
                        GHC.Base.Nothing
                        -> case ww5 of wild2 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.False }
                        GHC.Base.Just a1
                        -> case ww5 of wild2 {
                             GHC.Base.Nothing -> GHC.Types.False
                             GHC.Base.Just b1
                             -> case a1 of wild3 { Data.Text.Internal.Text dt dt1 dt2 ->
                                case b1 of wild4 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                                case GHC.Prim.==# dt2 dt5 of lwild {
                                  DEFAULT -> GHC.Types.False
                                  1#
                                  -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.ByteArray#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.Word#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld,
                                                                          GHC.Prim.Int# #)}
                                            dt
                                            (GHC.Prim.int2Word# dt1)
                                            dt3
                                            (GHC.Prim.int2Word# dt4)
                                            (GHC.Prim.int2Word# dt2)
                                            GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                                     case GHC.Prim.narrow32Int# ds3 of wild6 {
                                       DEFAULT -> GHC.Types.False 0# -> $j } } } } } } } }) -}
3c2b4bda7b9ed65b6c66c286773b0e3f
  $w$ccompare ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,1*U><S,1*U><L,1*U(U,U,U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Language.PureScript.Docs.RenderedCode.Types.Namespace)
                   (ww3 :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww4 :: Data.Text.Internal.Text)
                   (ww5 :: Language.PureScript.Docs.RenderedCode.Types.Namespace) ->
                 case Language.PureScript.Docs.Types.$fOrdDocLink_$ccompare
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> case ww1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                      case ww4 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                      case Data.Text.$w$ccompare ww7 ww8 ww9 ww11 ww12 ww13 of wild1 {
                        GHC.Types.LT -> GHC.Types.LT
                        GHC.Types.EQ
                        -> Language.PureScript.Docs.RenderedCode.Types.$fOrdNamespace_$ccompare
                             ww2
                             ww5
                        GHC.Types.GT -> GHC.Types.GT } } }
                   GHC.Types.GT -> GHC.Types.GT }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$ccompare1 ::
    Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> GHC.Types.Ordering
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ModuleName)
                   (ww1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww2 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww3 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])])
                   (ww4 :: Language.PureScript.Names.ModuleName)
                   (ww5 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww6 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww7 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.Namespace)
                        (Language.PureScript.Names.$fOrdProperName
                           @ 'Language.PureScript.Names.Namespace)
                        ww `cast` (Language.PureScript.Names.N:ModuleName[0])
                        ww4 `cast` (Language.PureScript.Names.N:ModuleName[0]) of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> let {
                        $j :: GHC.Types.Ordering <join 0>
                        = case GHC.Classes.$fOrd[]_$ccompare
                                 @ Language.PureScript.Docs.Types.Declaration
                                 Language.PureScript.Docs.Types.$fOrdDeclaration
                                 ww2
                                 ww6 of wild1 {
                            GHC.Types.LT -> GHC.Types.LT
                            GHC.Types.EQ
                            -> GHC.Classes.$fOrd[]_$ccompare
                                 @ (Language.PureScript.Docs.Types.InPackage
                                      Language.PureScript.Names.ModuleName,
                                    [Language.PureScript.Docs.Types.Declaration])
                                 Language.PureScript.Docs.Types.$fOrdModule1
                                 ww3
                                 ww7
                            GHC.Types.GT -> GHC.Types.GT }
                      } in
                      case ww1 of wild1 {
                        GHC.Base.Nothing
                        -> case ww5 of wild2 {
                             GHC.Base.Nothing -> $j GHC.Base.Just ipv -> GHC.Types.LT }
                        GHC.Base.Just a2
                        -> case ww5 of wild2 {
                             GHC.Base.Nothing -> GHC.Types.GT
                             GHC.Base.Just b1
                             -> case a2 of ww8 { Data.Text.Internal.Text ww9 ww10 ww11 ->
                                case b1 of ww12 { Data.Text.Internal.Text ww13 ww14 ww15 ->
                                case Data.Text.$w$ccompare ww9 ww10 ww11 ww13 ww14 ww15 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> $j
                                  GHC.Types.GT -> GHC.Types.GT } } } } }
                   GHC.Types.GT -> GHC.Types.GT }) -}
4ae1cf0d82535f37ebc51156e5ebab5e
  $w$crnf ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> ()
  {- Arity: 4, Strictness: <L,A><S,1*U><S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww2 :: GHC.Base.Maybe
                             Language.PureScript.AST.SourcePos.SourceSpan)
                   (ww3 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 let {
                   $j :: () <join 0>
                   = case ww2 of wild {
                       GHC.Base.Nothing
                       -> Language.PureScript.Docs.Types.$fNFDataChildDeclaration_$crnf1
                            ww3
                       GHC.Base.Just x1
                       -> case x1 of ww4 { Language.PureScript.AST.SourcePos.SourceSpan ww5 ww6 ww7 ->
                          case ww6 of ww8 { Language.PureScript.AST.SourcePos.SourcePos ww9 ww10 ->
                          case ww9 of ww11 { GHC.Types.I# ipv ->
                          case ww10 of ww12 { GHC.Types.I# ipv1 ->
                          case ww7 of ww13 { Language.PureScript.AST.SourcePos.SourcePos ww14 ww15 ->
                          case ww14 of ww16 { GHC.Types.I# ipv2 ->
                          case ww15 of ww17 { GHC.Types.I# ipv3 ->
                          case Language.PureScript.AST.SourcePos.$fNFDataSourceSpan_go
                                 ww5 of wild1 { () ->
                          Language.PureScript.Docs.Types.$fNFDataChildDeclaration_$crnf1
                            ww3 } } } } } } } } }
                 } in
                 case ww1 of wild {
                   GHC.Base.Nothing -> $j
                   GHC.Base.Just x1
                   -> case x1 of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      $j } }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$crnf1 ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
    -> [Language.PureScript.Docs.Types.ChildDeclaration]
    -> Language.PureScript.Docs.Types.DeclarationInfo
    -> ()
  {- Arity: 5, Strictness: <L,A><S,1*U><S,1*U><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww2 :: GHC.Base.Maybe
                             Language.PureScript.AST.SourcePos.SourceSpan)
                   (ww3 :: [Language.PureScript.Docs.Types.ChildDeclaration])
                   (ww4 :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 let {
                   $j :: () <join 0>
                   = case ww2 of wild {
                       GHC.Base.Nothing
                       -> case Language.PureScript.Docs.Types.$fNFDataDeclaration_go2
                                 ww3 of wild1 { () ->
                          Language.PureScript.Docs.Types.$fNFDataDeclaration_$crnf1 ww4 }
                       GHC.Base.Just x1
                       -> case x1 of ww5 { Language.PureScript.AST.SourcePos.SourceSpan ww6 ww7 ww8 ->
                          case ww7 of ww9 { Language.PureScript.AST.SourcePos.SourcePos ww10 ww11 ->
                          case ww10 of ww12 { GHC.Types.I# ipv ->
                          case ww11 of ww13 { GHC.Types.I# ipv1 ->
                          case ww8 of ww14 { Language.PureScript.AST.SourcePos.SourcePos ww15 ww16 ->
                          case ww15 of ww17 { GHC.Types.I# ipv2 ->
                          case ww16 of ww18 { GHC.Types.I# ipv3 ->
                          case Language.PureScript.AST.SourcePos.$fNFDataSourceSpan_go
                                 ww6 of wild1 { () ->
                          case Language.PureScript.Docs.Types.$fNFDataDeclaration_go2
                                 ww3 of wild2 { () ->
                          Language.PureScript.Docs.Types.$fNFDataDeclaration_$crnf1
                            ww4 } } } } } } } } } }
                 } in
                 case ww1 of wild {
                   GHC.Base.Nothing -> $j
                   GHC.Base.Just x1
                   -> case x1 of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      $j } }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$crnf2 ::
    Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> ()
  {- Arity: 4, Strictness: <S,1*U><S,1*U><S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ModuleName)
                   (ww1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww2 :: [Language.PureScript.Docs.Types.Declaration])
                   (ww3 :: [(Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName,
                             [Language.PureScript.Docs.Types.Declaration])]) ->
                 case Language.PureScript.Names.$fNFDataModuleName_go
                        ww
                          `cast`
                        (Language.PureScript.Names.N:ModuleName[0]) of wild1 { () ->
                 case ww1 of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Docs.Types.$fNFDataModule_go1
                             ww2 of wild2 { () ->
                      Language.PureScript.Docs.Types.$fNFDataModule_go ww3 }
                   GHC.Base.Just x1
                   -> case x1 of ds1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      case Language.PureScript.Docs.Types.$fNFDataModule_go1
                             ww2 of wild2 { () ->
                      Language.PureScript.Docs.Types.$fNFDataModule_go ww3 } } } }) -}
8c92126c0fe160027820b8992d399902
  $w$cshow ::
    Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U,U,U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Language.PureScript.Docs.RenderedCode.Types.Namespace) ->
                 GHC.CString.unpackAppendCString#
                   Language.PureScript.Docs.Types.$fShowDocLink8
                   (GHC.CString.unpackAppendCString#
                      Language.PureScript.Docs.Types.$fShowDocLink7
                      (Language.PureScript.Docs.Types.$w$cshowsPrec4
                         0#
                         ww
                         (GHC.Base.++
                            @ GHC.Types.Char
                            GHC.Show.showCommaSpace1
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Docs.Types.$fShowDocLink3
                               (case Data.Text.Show.$w$cshowsPrec
                                       ww1
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          GHC.Show.showCommaSpace1
                                          (GHC.CString.unpackAppendCString#
                                             Language.PureScript.Docs.Types.$fShowDocLink2
                                             (Language.PureScript.Docs.RenderedCode.Types.$w$cshowsPrec
                                                ww2
                                                Language.PureScript.Docs.Types.$fShowDocLink9))) of ww3 { (#,#) ww4 ww5 ->
                                GHC.Types.: @ GHC.Types.Char ww4 ww5 })))))) -}
9fb7fd641e69d0d10029bb81ef447df9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U(U,U,U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww3 :: GHC.Base.Maybe
                             Language.PureScript.AST.SourcePos.SourceSpan)
                   (ww4 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 let {
                   f21 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Data.Text.Internal.Text
                       Data.Text.Show.$fShowText
                       Language.PureScript.Docs.Types.$fFromJSONPackage6
                       ww2
                 } in
                 let {
                   f22 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Language.PureScript.AST.SourcePos.SourceSpan
                       Language.PureScript.AST.SourcePos.$fShowSourceSpan
                       Language.PureScript.Docs.Types.$fFromJSONPackage6
                       ww3
                 } in
                 let {
                   f23 :: GHC.Base.String -> GHC.Base.String
                   = Language.PureScript.Docs.Types.$w$cshowsPrec1 0# ww4
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Language.PureScript.Docs.Types.$fShowChildDeclaration7
                       (GHC.CString.unpackAppendCString#
                          Language.PureScript.Docs.Types.$fShowChildDeclaration6
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        Language.PureScript.Docs.Types.$fShowChildDeclaration5
                                        (f21
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              GHC.Show.showCommaSpace1
                                              (GHC.CString.unpackAppendCString#
                                                 Language.PureScript.Docs.Types.$fShowChildDeclaration4
                                                 (f22
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       GHC.Show.showCommaSpace1
                                                       (GHC.CString.unpackAppendCString#
                                                          Language.PureScript.Docs.Types.$fShowChildDeclaration3
                                                          (f23
                                                             (GHC.CString.unpackAppendCString#
                                                                Language.PureScript.Docs.Types.$fShowChildDeclaration2
                                                                x1)))))))))) of ww5 { (#,#) ww6 ww7 ->
                           GHC.Types.: @ GHC.Types.Char ww6 ww7 }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1)) }) -}
c8243fd1b5d9f065f8713b1e9a1dccad
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
cce819b6566f028d040fc57bb265fd8d
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
    -> [Language.PureScript.Docs.Types.ChildDeclaration]
    -> Language.PureScript.Docs.Types.DeclarationInfo
    -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <S,U><L,U(U,U,U)><L,1*U><L,1*U><L,U><L,1*U>,
     Inline: [0] -}
93446d70d79968db01065b92b101cc9e
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.LinkLocation
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Language.PureScript.Docs.Types.LinkLocation)
                   (ww2 :: Data.Text.Internal.Text)
                   (ww3 :: Language.PureScript.Docs.RenderedCode.Types.Namespace)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Language.PureScript.Docs.Types.$fShowDocLink8
                       (GHC.CString.unpackAppendCString#
                          Language.PureScript.Docs.Types.$fShowDocLink7
                          (Language.PureScript.Docs.Types.$w$cshowsPrec4
                             0#
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                GHC.Show.showCommaSpace1
                                (GHC.CString.unpackAppendCString#
                                   Language.PureScript.Docs.Types.$fShowDocLink3
                                   (case Data.Text.Show.$w$cshowsPrec
                                           ww2
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              GHC.Show.showCommaSpace1
                                              (GHC.CString.unpackAppendCString#
                                                 Language.PureScript.Docs.Types.$fShowDocLink2
                                                 (Language.PureScript.Docs.RenderedCode.Types.$w$cshowsPrec
                                                    ww3
                                                    (GHC.CString.unpackAppendCString#
                                                       Language.PureScript.Docs.Types.$fShowChildDeclaration2
                                                       x1)))) of ww4 { (#,#) ww5 ww6 ->
                                    GHC.Types.: @ GHC.Types.Char ww5 ww6 })))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
465f85673aa60d600eec7529c7b12dab
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.LinkLocation
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Docs.Types.LinkLocation)
                   (w2 :: GHC.Base.String) ->
                 case w of wild {
                   Language.PureScript.Docs.Types.LocalModule b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Language.PureScript.Docs.Types.$fShowDocLink6
                             (Language.PureScript.Names.$w$cshowsPrec 11# b1 w2)
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Docs.Types.$fShowDocLink6
                                (Language.PureScript.Names.$w$cshowsPrec
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w2))) }
                   Language.PureScript.Docs.Types.DepsModule b1 b2 b3
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String)[OneShot] ->
                          GHC.CString.unpackAppendCString#
                            Language.PureScript.Docs.Types.$fShowDocLink5
                            (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                               11#
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of ww2 { Data.Version.Version ww3 ww4 ->
                                   Data.Version.$w$cshowsPrec
                                     11#
                                     ww3
                                     ww4
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.showSpace1
                                        (Language.PureScript.Names.$w$cshowsPrec 11# b3 x1)) })))
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p w2
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w2)) }
                   Language.PureScript.Docs.Types.BuiltinModule b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Language.PureScript.Docs.Types.$fShowDocLink4
                             (Language.PureScript.Names.$w$cshowsPrec 11# b1 w2)
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Docs.Types.$fShowDocLink4
                                (Language.PureScript.Names.$w$cshowsPrec
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w2))) } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.GithubRepo
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U,U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Docs.Types.GithubRepo)
                   (w2 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowGithubRepo3
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.Docs.Types.$fShowGithubRepo2
                           (case Data.Text.Show.$w$cshowsPrec
                                   w `cast` (Language.PureScript.Docs.Types.N:GithubRepo[0])
                                   (GHC.CString.unpackAppendCString#
                                      Language.PureScript.Docs.Types.$fShowChildDeclaration2
                                      w2) of ww1 { (#,#) ww2 ww3 ->
                            GHC.Types.: @ GHC.Types.Char ww2 ww3 }))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.Docs.Types.$fShowGithubRepo3
                           (GHC.CString.unpackAppendCString#
                              Language.PureScript.Docs.Types.$fShowGithubRepo2
                              (case Data.Text.Show.$w$cshowsPrec
                                      w `cast` (Language.PureScript.Docs.Types.N:GithubRepo[0])
                                      (GHC.CString.unpackAppendCString#
                                         Language.PureScript.Docs.Types.$fShowChildDeclaration2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            w2)) of ww1 { (#,#) ww2 ww3 ->
                               GHC.Types.: @ GHC.Types.Char ww2 ww3 }))) }) -}
614d849a4354c290b33f6ef62142889d
  $w$cshowsPrec6 ::
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.GithubUser
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U,U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Docs.Types.GithubUser)
                   (w2 :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Language.PureScript.Docs.Types.$fShowGithubUser3
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.Docs.Types.$fShowGithubUser2
                           (case Data.Text.Show.$w$cshowsPrec
                                   w `cast` (Language.PureScript.Docs.Types.N:GithubUser[0])
                                   (GHC.CString.unpackAppendCString#
                                      Language.PureScript.Docs.Types.$fShowChildDeclaration2
                                      w2) of ww1 { (#,#) ww2 ww3 ->
                            GHC.Types.: @ GHC.Types.Char ww2 ww3 }))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Language.PureScript.Docs.Types.$fShowGithubUser3
                           (GHC.CString.unpackAppendCString#
                              Language.PureScript.Docs.Types.$fShowGithubUser2
                              (case Data.Text.Show.$w$cshowsPrec
                                      w `cast` (Language.PureScript.Docs.Types.N:GithubUser[0])
                                      (GHC.CString.unpackAppendCString#
                                         Language.PureScript.Docs.Types.$fShowChildDeclaration2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            w2)) of ww1 { (#,#) ww2 ww3 ->
                               GHC.Types.: @ GHC.Types.Char ww2 ww3 }))) }) -}
14acea96459ae0ba0727319f74cb7f69
  $w$cshowsPrec7 ::
    GHC.Show.Show a =>
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.InPackage a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (w2 :: Language.PureScript.Docs.Types.InPackage a) ->
                 case w2 of wild {
                   Language.PureScript.Docs.Types.Local b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Show.showsPrec
                            @ a
                            w
                            Language.PureScript.Docs.Types.$fShowInPackage5
                            b1
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Docs.Types.$fShowInPackage3
                             (g x1)
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Docs.Types.$fShowInPackage3
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) }
                   Language.PureScript.Docs.Types.FromDep b1 b2
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Show.showsPrec
                            @ a
                            w
                            Language.PureScript.Docs.Types.$fShowInPackage5
                            b2
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             Language.PureScript.Docs.Types.$fShowInPackage6
                             (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                                11#
                                b1
                                (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x1)))
                        1#
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Language.PureScript.Docs.Types.$fShowInPackage6
                                (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                                   11#
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (g (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            x1))))) } }) -}
fa1efe58f4e6215e05effe0c7820d641
  $w$cshowsPrec8 ::
    GHC.Prim.Int#
    -> (Language.PureScript.Docs.Types.GithubUser,
        Language.PureScript.Docs.Types.GithubRepo)
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Web.Bower.PackageMeta.Internal.PackageName
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Version.Version)]
    -> Web.Bower.PackageMeta.Internal.PackageName
    -> Data.Version.Version
    -> Data.Text.Internal.Text
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,U(U(U,U,U),U(U,U,U))><L,1*U><L,U><L,U(U,U,U)><L,U(U,U)><L,U(U,U,U)>,
     Inline: [0] -}
cce819b6566f028d040fc57bb265fd8d
  $w$cshowsPrec9 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U><L,1*U><L,U><L,U>,
     Inline: [0] -}
64f28f441700e5c46c704cab6e6b14a4
  $w$ctoJSON ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 6, Strictness: <L,U><L,U><L,U><S,1*U><S,1*U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (ww4 :: GHC.Base.Maybe
                             Language.PureScript.AST.SourcePos.SourceSpan)
                   (ww5 :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case Language.PureScript.Docs.Types.$fToJSONChildDeclaration26 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww7
                        ww8
                        ww9
                        (Data.Aeson.Types.Internal.String
                           (Data.Text.Internal.Text ww ww1 ww2))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                 let {
                   $j :: Data.Aeson.Types.Internal.Value
                         -> Data.Aeson.Types.Internal.Value
                     <join 1> {- Arity: 1, Strictness: <L,U> -}
                   = \ (v2 :: Data.Aeson.Types.Internal.Value)[OneShot] ->
                     case Language.PureScript.Docs.Types.$fToJSONChildDeclaration24 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                     case Data.Aeson.Types.Internal.$w$sunsafeInsert
                            @ Data.Aeson.Types.Internal.Value
                            ww11
                            ww12
                            ww13
                            v2
                            z23 of z2 { DEFAULT ->
                     let {
                       $j1 :: Data.Aeson.Types.Internal.Value
                              -> Data.Aeson.Types.Internal.Value
                         <join 1> {- Arity: 1, Strictness: <L,U> -}
                       = \ (v1 :: Data.Aeson.Types.Internal.Value)[OneShot] ->
                         case Language.PureScript.Docs.Types.$fToJSONChildDeclaration22 of ww14 { Data.Text.Internal.Text ww15 ww16 ww17 ->
                         case Data.Aeson.Types.Internal.$w$sunsafeInsert
                                @ Data.Aeson.Types.Internal.Value
                                ww15
                                ww16
                                ww17
                                v1
                                z2 of z3 { DEFAULT ->
                         case Language.PureScript.Docs.Types.$fToJSONChildDeclaration_$ctoJSON1
                                ww5 of v3 { DEFAULT ->
                         case Language.PureScript.Docs.Types.$fToJSONChildDeclaration1 of ww18 { Data.Text.Internal.Text ww19 ww20 ww21 ->
                         case Data.Aeson.Types.Internal.$w$sunsafeInsert
                                @ Data.Aeson.Types.Internal.Value
                                ww19
                                ww20
                                ww21
                                v3
                                z3 of dt { DEFAULT ->
                         Data.Aeson.Types.Internal.Object dt } } } } }
                     } in
                     case ww4 of wild {
                       GHC.Base.Nothing -> $j1 Data.Aeson.Types.Internal.Null
                       GHC.Base.Just a2
                       -> case a2 of ww14 { Language.PureScript.AST.SourcePos.SourceSpan ww15 ww16 ww17 ->
                          case Language.PureScript.AST.SourcePos.$w$ctoJSON1
                                 ww15
                                 ww16
                                 ww17 of ww18 { Unit# ww19 ->
                          $j1 (Data.Aeson.Types.Internal.Object ww19) } } } } }
                 } in
                 case ww3 of wild {
                   GHC.Base.Nothing -> $j Data.Aeson.Types.Internal.Null
                   GHC.Base.Just a2
                   -> case a2 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      $j (Data.Aeson.Types.Internal.String dt) } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$ctoJSON1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
    -> [Language.PureScript.Docs.Types.ChildDeclaration]
    -> Language.PureScript.Docs.Types.DeclarationInfo
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 7, Strictness: <L,U><L,U><L,U><S,1*U><S,1*U><S,1*U><L,U>,
     Inline: [0] -}
14acea96459ae0ba0727319f74cb7f69
  $w$ctoJSON2 ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Docs.Types.InPackage a
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <S(C(S)LLL),1*U(1*C1(U),A,A,A)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (w2 :: Language.PureScript.Docs.Types.InPackage a) ->
                 case w2 of wild {
                   Language.PureScript.Docs.Types.Local y
                   -> case Language.PureScript.Docs.Types.$fToJSONInPackage3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww1
                             ww2
                             ww3
                             Data.Aeson.Types.Internal.Null
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                      case Data.Aeson.Types.ToJSON.toJSON @ a w y of v2 { DEFAULT ->
                      case Language.PureScript.Docs.Types.$fToJSONInPackage1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww5
                             ww6
                             ww7
                             v2
                             z23 of dt { DEFAULT ->
                      (# dt #) } } } } }
                   Language.PureScript.Docs.Types.FromDep pn y
                   -> case pn
                             `cast`
                           (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      case Language.PureScript.Docs.Types.$fToJSONInPackage3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww1
                             ww2
                             ww3
                             (Data.Aeson.Types.Internal.String dt)
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                      case Data.Aeson.Types.ToJSON.toJSON @ a w y of v2 { DEFAULT ->
                      case Language.PureScript.Docs.Types.$fToJSONInPackage1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww5
                             ww6
                             ww7
                             v2
                             z23 of dt1 { DEFAULT ->
                      (# dt1 #) } } } } } } }) -}
cce819b6566f028d040fc57bb265fd8d
  $w$ctoJSON3 ::
    Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 4, Strictness: <S,1*U><S,1*U><S,1*U><L,1*U>,
     Inline: [0] -}
f9216ed35b7d6a5e0f8b81cb370c939a
  $w$s$cshowsPrec ::
    GHC.Prim.Int#
    -> Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName)
                   (w2 :: GHC.Base.String) ->
                 case w of wild {
                   Language.PureScript.Docs.Types.Local b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Language.PureScript.Docs.Types.$fShowInPackage3
                             (Language.PureScript.Names.$w$cshowsPrec 11# b1 w2)
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Language.PureScript.Docs.Types.$fShowInPackage3
                                (Language.PureScript.Names.$w$cshowsPrec
                                   11#
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w2))) }
                   Language.PureScript.Docs.Types.FromDep b1 b2
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String)[OneShot] ->
                          GHC.CString.unpackAppendCString#
                            Language.PureScript.Docs.Types.$fShowInPackage6
                            (Web.Bower.PackageMeta.Internal.$w$cshowsPrec3
                               11#
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (Language.PureScript.Names.$w$cshowsPrec 11# b2 x1)))
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p w2
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w2)) } }) -}
8d1954c45ef7e0f291e1ebb50d5c3c30
  $w$s$ctoJSON ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Language.PureScript.Docs.Types.InPackage
                           Language.PureScript.Names.ModuleName) ->
                 case w of wild {
                   Language.PureScript.Docs.Types.Local y
                   -> case Language.PureScript.Docs.Types.$fToJSONInPackage3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww1
                             ww2
                             ww3
                             Data.Aeson.Types.Internal.Null
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                      case Language.PureScript.Names.$w$ctoJSON y of ww4 { Unit# ww5 ->
                      case Language.PureScript.Docs.Types.$fToJSONInPackage1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww7
                             ww8
                             ww9
                             (Data.Aeson.Types.Internal.Array ww5)
                             z23 of dt { DEFAULT ->
                      (# dt #) } } } } }
                   Language.PureScript.Docs.Types.FromDep pn y
                   -> case pn
                             `cast`
                           (Web.Bower.PackageMeta.Internal.N:PackageName[0]) of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                      case Language.PureScript.Docs.Types.$fToJSONInPackage3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww1
                             ww2
                             ww3
                             (Data.Aeson.Types.Internal.String dt)
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of z23 { DEFAULT ->
                      case Language.PureScript.Names.$w$ctoJSON y of ww4 { Unit# ww5 ->
                      case Language.PureScript.Docs.Types.$fToJSONInPackage1 of ww6 { Data.Text.Internal.Text ww7 ww8 ww9 ->
                      case Data.Aeson.Types.Internal.$w$sunsafeInsert
                             @ Data.Aeson.Types.Internal.Value
                             ww7
                             ww8
                             ww9
                             (Data.Aeson.Types.Internal.Array ww5)
                             z23 of dt1 { DEFAULT ->
                      (# dt1 #) } } } } } } }) -}
4d2037ee762c05e5a4846dd63f644fb2
  $w$sasString ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError err) GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ err
                   (ww :: Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> Data.Aeson.BetterErrors.Internal.asString2
                        @ err
                        (Data.Either.Left
                           @ (Data.Aeson.BetterErrors.Internal.ParseError err)
                           @ Data.Text.Internal.Text
                           (Data.Aeson.BetterErrors.Internal.BadSchema
                              @ err
                              (ww
                                 `cast`
                               (Data.DList.N:DList[0]
                                    <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                 (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                              (Data.Aeson.BetterErrors.Internal.WrongType
                                 @ err
                                 Data.Aeson.BetterErrors.Internal.TyString
                                 wild)))
                   Data.Aeson.Types.Internal.String t
                   -> Data.Aeson.BetterErrors.Internal.asString2
                        @ err
                        (Data.Either.Right
                           @ (Data.Aeson.BetterErrors.Internal.ParseError err)
                           @ Data.Text.Internal.Text
                           t) }) -}
8fb0c9953e26e8312de9f38a128884b1
  $wasAssociativity ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.AST.Operators.Associativity)
  {- Arity: 2, Strictness: <L,C(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   $j :: GHC.Base.String
                         -> Data.Functor.Identity.Identity
                              (Data.Either.Either
                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                    Language.PureScript.Docs.Types.PackageError)
                                 Language.PureScript.AST.Operators.Associativity)
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Base.String)[OneShot] ->
                     case Language.PureScript.Docs.Types.parseAssociativity x1 of wild {
                       GHC.Base.Nothing
                       -> (Data.Either.Left
                             @ (Data.Aeson.BetterErrors.Internal.ParseError
                                  Language.PureScript.Docs.Types.PackageError)
                             @ Language.PureScript.AST.Operators.Associativity
                             (Data.Aeson.BetterErrors.Internal.BadSchema
                                @ Language.PureScript.Docs.Types.PackageError
                                (ww
                                   `cast`
                                 (Data.DList.N:DList[0]
                                      <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                   (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                Language.PureScript.Docs.Types.asAssociativity2))
                            `cast`
                          (Sym (Data.Functor.Identity.N:Identity[0]
                                    <Data.Either.Either
                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                          Language.PureScript.Docs.Types.PackageError)
                                       Language.PureScript.AST.Operators.Associativity>_R))
                       GHC.Base.Just x2
                       -> (Data.Either.Right
                             @ (Data.Aeson.BetterErrors.Internal.ParseError
                                  Language.PureScript.Docs.Types.PackageError)
                             @ Language.PureScript.AST.Operators.Associativity
                             x2)
                            `cast`
                          (Sym (Data.Functor.Identity.N:Identity[0]
                                    <Data.Either.Either
                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                          Language.PureScript.Docs.Types.PackageError)
                                       Language.PureScript.AST.Operators.Associativity>_R)) }
                 } in
                 case ww1 of wild {
                   DEFAULT
                   -> case Data.Aeson.BetterErrors.Internal.asString2
                             @ Language.PureScript.Docs.Types.PackageError
                             (Data.Either.Left
                                @ (Data.Aeson.BetterErrors.Internal.ParseError
                                     Language.PureScript.Docs.Types.PackageError)
                                @ Data.Text.Internal.Text
                                (Data.Aeson.BetterErrors.Internal.BadSchema
                                   @ Language.PureScript.Docs.Types.PackageError
                                   (ww
                                      `cast`
                                    (Data.DList.N:DList[0]
                                         <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                      (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                   (Data.Aeson.BetterErrors.Internal.WrongType
                                      @ Language.PureScript.Docs.Types.PackageError
                                      Data.Aeson.BetterErrors.Internal.TyString
                                      wild))) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.AST.Operators.Associativity
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.AST.Operators.Associativity>_R))
                        Data.Either.Right x1 -> $j x1 }
                   Data.Aeson.Types.Internal.String t
                   -> case Data.Aeson.BetterErrors.Internal.asString2
                             @ Language.PureScript.Docs.Types.PackageError
                             (Data.Either.Right
                                @ (Data.Aeson.BetterErrors.Internal.ParseError
                                     Language.PureScript.Docs.Types.PackageError)
                                @ Data.Text.Internal.Text
                                t) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.AST.Operators.Associativity
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.AST.Operators.Associativity>_R))
                        Data.Either.Right x1 -> $j x1 } }) -}
79fabe36516ad3c2c6803dcd754d3e92
  $wasDataDeclType ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.Environment.DataDeclType)
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Language.PureScript.Environment.DataDeclType
                         (Data.Aeson.BetterErrors.Internal.BadSchema
                            @ Language.PureScript.Docs.Types.PackageError
                            (ww
                               `cast`
                             (Data.DList.N:DList[0]
                                  <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                               (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                            (Data.Aeson.BetterErrors.Internal.WrongType
                               @ Language.PureScript.Docs.Types.PackageError
                               Data.Aeson.BetterErrors.Internal.TyString
                               wild)))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.Environment.DataDeclType>_R))
                   Data.Aeson.Types.Internal.String t
                   -> case t of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case Language.PureScript.Docs.Types.asDataDeclType6 of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      let {
                        $j :: Data.Functor.Identity.Identity
                                (Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.Environment.DataDeclType)
                          <join 0>
                        = case Language.PureScript.Docs.Types.asDataDeclType4 of wild3 { Data.Text.Internal.Text dt7 dt8 dt9 ->
                          case GHC.Prim.==# dt2 dt9 of lwild {
                            DEFAULT
                            -> (Data.Either.Left
                                  @ (Data.Aeson.BetterErrors.Internal.ParseError
                                       Language.PureScript.Docs.Types.PackageError)
                                  @ Language.PureScript.Environment.DataDeclType
                                  (Data.Aeson.BetterErrors.Internal.BadSchema
                                     @ Language.PureScript.Docs.Types.PackageError
                                     (ww
                                        `cast`
                                      (Data.DList.N:DList[0]
                                           <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                        (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                     (Data.Aeson.BetterErrors.Internal.CustomError
                                        @ Language.PureScript.Docs.Types.PackageError
                                        (Language.PureScript.Docs.Types.InvalidDataDeclType
                                           wild1))))
                                 `cast`
                               (Sym (Data.Functor.Identity.N:Identity[0]
                                         <Data.Either.Either
                                            (Data.Aeson.BetterErrors.Internal.ParseError
                                               Language.PureScript.Docs.Types.PackageError)
                                            Language.PureScript.Environment.DataDeclType>_R))
                            1#
                            -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Int# #)}
                                      dt
                                      (GHC.Prim.int2Word# dt1)
                                      dt7
                                      (GHC.Prim.int2Word# dt8)
                                      (GHC.Prim.int2Word# dt2)
                                      GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                               case GHC.Prim.narrow32Int# ds3 of wild4 {
                                 DEFAULT
                                 -> (Data.Either.Left
                                       @ (Data.Aeson.BetterErrors.Internal.ParseError
                                            Language.PureScript.Docs.Types.PackageError)
                                       @ Language.PureScript.Environment.DataDeclType
                                       (Data.Aeson.BetterErrors.Internal.BadSchema
                                          @ Language.PureScript.Docs.Types.PackageError
                                          (ww
                                             `cast`
                                           (Data.DList.N:DList[0]
                                                <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                             (GHC.Types.[]
                                                @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                          (Data.Aeson.BetterErrors.Internal.CustomError
                                             @ Language.PureScript.Docs.Types.PackageError
                                             (Language.PureScript.Docs.Types.InvalidDataDeclType
                                                wild1))))
                                      `cast`
                                    (Sym (Data.Functor.Identity.N:Identity[0]
                                              <Data.Either.Either
                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                    Language.PureScript.Docs.Types.PackageError)
                                                 Language.PureScript.Environment.DataDeclType>_R))
                                 0#
                                 -> Language.PureScript.Docs.Types.asDataDeclType3
                                      `cast`
                                    (Sym (Data.Functor.Identity.N:Identity[0]
                                              <Data.Either.Either
                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                    Language.PureScript.Docs.Types.PackageError)
                                                 Language.PureScript.Environment.DataDeclType>_R)) } } } }
                      } in
                      case GHC.Prim.==# dt2 dt5 of lwild {
                        DEFAULT -> $j
                        1#
                        -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                           case GHC.Prim.narrow32Int# ds3 of wild3 {
                             DEFAULT -> $j
                             0#
                             -> Language.PureScript.Docs.Types.asDataDeclType2
                                  `cast`
                                (Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                Language.PureScript.Docs.Types.PackageError)
                                             Language.PureScript.Environment.DataDeclType>_R)) } } } } } }) -}
a52094eca2ce6feffa1ab08f5b8f4f18
  $wasKind ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Language.PureScript.Docs.Types.Kind'
  {- Arity: 2, Strictness: <L,1*C1(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case (Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.Kind'
                         @ Data.Text.Internal.Text
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Kinds.$fFromJSONKind0
                         ww
                         ww1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Data.Text.Internal.Text>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.Docs.Types.Kind'>_N ; Data.Functor.Identity.N:Identity[0]
                                                                          <Data.Either.Either
                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                Data.Text.Internal.Text)
                                                                             Language.PureScript.Docs.Types.Kind'>_R) of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Language.PureScript.Docs.Types.PackageError)
                        @ Language.PureScript.Docs.Types.Kind'
                        (case x1 of wild1 {
                           Data.Aeson.BetterErrors.Internal.InvalidJSON a1
                           -> Data.Aeson.BetterErrors.Internal.InvalidJSON
                                @ Language.PureScript.Docs.Types.PackageError
                                a1
                           Data.Aeson.BetterErrors.Internal.BadSchema a1 a2
                           -> Data.Aeson.BetterErrors.Internal.BadSchema
                                @ Language.PureScript.Docs.Types.PackageError
                                a1
                                (case a2 of wild2 {
                                   Data.Aeson.BetterErrors.Internal.KeyMissing a4
                                   -> Data.Aeson.BetterErrors.Internal.KeyMissing
                                        @ Language.PureScript.Docs.Types.PackageError
                                        a4
                                   Data.Aeson.BetterErrors.Internal.OutOfBounds a4
                                   -> Data.Aeson.BetterErrors.Internal.OutOfBounds
                                        @ Language.PureScript.Docs.Types.PackageError
                                        a4
                                   Data.Aeson.BetterErrors.Internal.WrongType a4 a5
                                   -> Data.Aeson.BetterErrors.Internal.WrongType
                                        @ Language.PureScript.Docs.Types.PackageError
                                        a4
                                        a5
                                   Data.Aeson.BetterErrors.Internal.ExpectedIntegral a4
                                   -> Data.Aeson.BetterErrors.Internal.ExpectedIntegral
                                        @ Language.PureScript.Docs.Types.PackageError
                                        a4
                                   Data.Aeson.BetterErrors.Internal.FromAeson a4
                                   -> Data.Aeson.BetterErrors.Internal.FromAeson
                                        @ Language.PureScript.Docs.Types.PackageError
                                        a4
                                   Data.Aeson.BetterErrors.Internal.CustomError a4
                                   -> Data.Aeson.BetterErrors.Internal.CustomError
                                        @ Language.PureScript.Docs.Types.PackageError
                                        (Language.PureScript.Docs.Types.InvalidKind a4) }) })
                   Data.Either.Right y1
                   -> Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Language.PureScript.Docs.Types.PackageError)
                        @ Language.PureScript.Docs.Types.Kind'
                        y1 }) -}
6ee368da6baba6f4086b0c387cd46203
  $wasVersion ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Data.Version.Version)
  {- Arity: 2, Strictness: <L,C(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   $j :: GHC.Base.String
                         -> Data.Functor.Identity.Identity
                              (Data.Either.Either
                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                    Language.PureScript.Docs.Types.PackageError)
                                 Data.Version.Version)
                     <join 1> {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Base.String)[OneShot] ->
                     case GHC.List.filter
                            @ (Data.Version.Version, [GHC.Types.Char])
                            Language.PureScript.Docs.Types.asResolvedDependencies4
                            (Text.ParserCombinators.ReadP.run
                               @ Data.Version.Version
                               Language.PureScript.Docs.Types.asResolvedDependencies3
                               x1) of wild {
                       []
                       -> (Data.Either.Left
                             @ (Data.Aeson.BetterErrors.Internal.ParseError
                                  Language.PureScript.Docs.Types.PackageError)
                             @ Data.Version.Version
                             (Data.Aeson.BetterErrors.Internal.BadSchema
                                @ Language.PureScript.Docs.Types.PackageError
                                (ww
                                   `cast`
                                 (Data.DList.N:DList[0]
                                      <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                   (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                Language.PureScript.Docs.Types.asResolvedDependencies2))
                            `cast`
                          (Sym (Data.Functor.Identity.N:Identity[0]
                                    <Data.Either.Either
                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                          Language.PureScript.Docs.Types.PackageError)
                                       Data.Version.Version>_R))
                       : ds ds1
                       -> case ds of wild1 { (,) vers ds2 ->
                          case ds2 of wild2 {
                            []
                            -> case ds1 of wild3 {
                                 []
                                 -> (Data.Either.Right
                                       @ (Data.Aeson.BetterErrors.Internal.ParseError
                                            Language.PureScript.Docs.Types.PackageError)
                                       @ Data.Version.Version
                                       vers)
                                      `cast`
                                    (Sym (Data.Functor.Identity.N:Identity[0]
                                              <Data.Either.Either
                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                    Language.PureScript.Docs.Types.PackageError)
                                                 Data.Version.Version>_R))
                                 : ipv ipv1
                                 -> (Data.Either.Left
                                       @ (Data.Aeson.BetterErrors.Internal.ParseError
                                            Language.PureScript.Docs.Types.PackageError)
                                       @ Data.Version.Version
                                       (Data.Aeson.BetterErrors.Internal.BadSchema
                                          @ Language.PureScript.Docs.Types.PackageError
                                          (ww
                                             `cast`
                                           (Data.DList.N:DList[0]
                                                <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                             (GHC.Types.[]
                                                @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                          Language.PureScript.Docs.Types.asResolvedDependencies2))
                                      `cast`
                                    (Sym (Data.Functor.Identity.N:Identity[0]
                                              <Data.Either.Either
                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                    Language.PureScript.Docs.Types.PackageError)
                                                 Data.Version.Version>_R)) }
                            : ipv ipv1
                            -> (Data.Either.Left
                                  @ (Data.Aeson.BetterErrors.Internal.ParseError
                                       Language.PureScript.Docs.Types.PackageError)
                                  @ Data.Version.Version
                                  (Data.Aeson.BetterErrors.Internal.BadSchema
                                     @ Language.PureScript.Docs.Types.PackageError
                                     (ww
                                        `cast`
                                      (Data.DList.N:DList[0]
                                           <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                        (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                     Language.PureScript.Docs.Types.asResolvedDependencies2))
                                 `cast`
                               (Sym (Data.Functor.Identity.N:Identity[0]
                                         <Data.Either.Either
                                            (Data.Aeson.BetterErrors.Internal.ParseError
                                               Language.PureScript.Docs.Types.PackageError)
                                            Data.Version.Version>_R)) } } }
                 } in
                 case ww1 of wild {
                   DEFAULT
                   -> case Data.Aeson.BetterErrors.Internal.asString2
                             @ Language.PureScript.Docs.Types.PackageError
                             (Data.Either.Left
                                @ (Data.Aeson.BetterErrors.Internal.ParseError
                                     Language.PureScript.Docs.Types.PackageError)
                                @ Data.Text.Internal.Text
                                (Data.Aeson.BetterErrors.Internal.BadSchema
                                   @ Language.PureScript.Docs.Types.PackageError
                                   (ww
                                      `cast`
                                    (Data.DList.N:DList[0]
                                         <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                      (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                   (Data.Aeson.BetterErrors.Internal.WrongType
                                      @ Language.PureScript.Docs.Types.PackageError
                                      Data.Aeson.BetterErrors.Internal.TyString
                                      wild))) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Data.Version.Version
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Data.Version.Version>_R))
                        Data.Either.Right x1 -> $j x1 }
                   Data.Aeson.Types.Internal.String t
                   -> case Data.Aeson.BetterErrors.Internal.asString2
                             @ Language.PureScript.Docs.Types.PackageError
                             (Data.Either.Right
                                @ (Data.Aeson.BetterErrors.Internal.ParseError
                                     Language.PureScript.Docs.Types.PackageError)
                                @ Data.Text.Internal.Text
                                t) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Data.Version.Version
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Data.Version.Version>_R))
                        Data.Either.Right x1 -> $j x1 } }) -}
1e61d69248598797fa9e5229074ddc0b
  $wgetLink ::
    Data.Map.Internal.Map
      Language.PureScript.Names.ModuleName
      Web.Bower.PackageMeta.Internal.PackageName
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Version.Version)]
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.ContainingModule
    -> GHC.Base.Maybe Language.PureScript.Docs.Types.DocLink
  {- Arity: 6, Strictness: <L,1*U><L,1*U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.Map.Internal.Map
                            Language.PureScript.Names.ModuleName
                            Web.Bower.PackageMeta.Internal.PackageName)
                   (ww1 :: [(Web.Bower.PackageMeta.Internal.PackageName,
                             Data.Version.Version)])
                   (w :: Language.PureScript.Names.ModuleName)
                   (w2 :: Language.PureScript.Docs.RenderedCode.Types.Namespace)
                   (w3 :: Data.Text.Internal.Text)
                   (w5 :: Language.PureScript.Docs.RenderedCode.Types.ContainingModule) ->
                 let {
                   $w$j :: GHC.Prim.Void#
                           -> GHC.Base.Maybe Language.PureScript.Docs.Types.DocLink
                     <join 1> {- Arity: 1, Strictness: <L,A>, Inline: [0] -}
                   = \ (void :: GHC.Prim.Void#)[OneShot] ->
                     case w5 of wild {
                       Language.PureScript.Docs.RenderedCode.Types.ThisModule
                       -> GHC.Base.Just
                            @ Language.PureScript.Docs.Types.DocLink
                            (Language.PureScript.Docs.Types.DocLink
                               (Language.PureScript.Docs.Types.LocalModule w)
                               w3
                               w2)
                       Language.PureScript.Docs.RenderedCode.Types.OtherModule destMn
                       -> case Language.PureScript.Docs.Types.$slookup1
                                 @ Web.Bower.PackageMeta.Internal.PackageName
                                 destMn
                                 ww of wild1 {
                            GHC.Base.Nothing
                            -> GHC.Base.Just
                                 @ Language.PureScript.Docs.Types.DocLink
                                 (Language.PureScript.Docs.Types.DocLink
                                    (Language.PureScript.Docs.Types.LocalModule destMn)
                                    w3
                                    w2)
                            GHC.Base.Just pkgName
                            -> case GHC.List.lookup
                                      @ Web.Bower.PackageMeta.Internal.PackageName
                                      @ Data.Version.Version
                                      Web.Bower.PackageMeta.Internal.$fEqPackageName
                                      pkgName
                                      ww1 of wild2 {
                                 GHC.Base.Nothing
                                 -> GHC.Base.Nothing @ Language.PureScript.Docs.Types.DocLink
                                 GHC.Base.Just x1
                                 -> GHC.Base.Just
                                      @ Language.PureScript.Docs.Types.DocLink
                                      (Language.PureScript.Docs.Types.DocLink
                                         (Language.PureScript.Docs.Types.DepsModule
                                            pkgName
                                            x1
                                            destMn)
                                         w3
                                         w2) } } }
                 } in
                 case w5 of wild {
                   Language.PureScript.Docs.RenderedCode.Types.ThisModule
                   -> $w$j GHC.Prim.void#
                   Language.PureScript.Docs.RenderedCode.Types.OtherModule mn
                   -> case Language.PureScript.Names.isBuiltinModuleName mn of wild1 {
                        GHC.Types.False -> $w$j GHC.Prim.void#
                        GHC.Types.True
                        -> GHC.Base.Just
                             @ Language.PureScript.Docs.Types.DocLink
                             (Language.PureScript.Docs.Types.DocLink
                                (Language.PureScript.Docs.Types.BuiltinModule mn)
                                w3
                                w2) } }) -}
67eed7aef3685c094f28cbbe1b77d021
  $wlvl ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
    -> [Language.PureScript.Environment.FunctionalDependency]
    -> GHC.Prim.Int#
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <B,1*U><B,1*U><B,U>x, Inline: [0] -}
614d849a4354c290b33f6ef62142889d
  $wm1 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Language.PureScript.Docs.Types.GithubUser
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ e
                   (ww :: Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                        @ Language.PureScript.Docs.Types.GithubUser
                        (Data.Aeson.BetterErrors.Internal.BadSchema
                           @ e
                           (ww
                              `cast`
                            (Data.DList.N:DList[0]
                                 <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                              (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                           (Data.Aeson.BetterErrors.Internal.WrongType
                              @ e
                              Data.Aeson.BetterErrors.Internal.TyString
                              wild))
                   Data.Aeson.Types.Internal.String t
                   -> Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                        @ Language.PureScript.Docs.Types.GithubUser
                        t `cast`
                        (Sym (Language.PureScript.Docs.Types.N:GithubUser[0])) }) -}
2fed9eaaeffff5617f50fba69511b8c9
  $wm2 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Data.Text.Internal.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Data.Text.Internal.Text
                         (Data.Aeson.BetterErrors.Internal.BadSchema
                            @ Language.PureScript.Docs.Types.PackageError
                            (ww
                               `cast`
                             (Data.DList.N:DList[0]
                                  <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                               (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                            (Data.Aeson.BetterErrors.Internal.WrongType
                               @ Language.PureScript.Docs.Types.PackageError
                               Data.Aeson.BetterErrors.Internal.TyString
                               wild)))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Data.Text.Internal.Text>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                                                             Language.PureScript.Docs.Types.PackageError>_N
                                                                          <Data.Functor.Identity.Identity>_R
                                                                          <Data.Text.Internal.Text>_N))
                   Data.Aeson.Types.Internal.String t
                   -> (Data.Either.Right
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Data.Text.Internal.Text
                         t)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Data.Text.Internal.Text>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                                                             Language.PureScript.Docs.Types.PackageError>_N
                                                                          <Data.Functor.Identity.Identity>_R
                                                                          <Data.Text.Internal.Text>_N)) }) -}
de43e4669c38c7170f785cbdef27ee3b
  $wm3 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Web.Bower.PackageMeta.Internal.BowerError)
            (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName))
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild1 {
                   DEFAULT
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Web.Bower.PackageMeta.Internal.BowerError)
                         @ (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName)
                         (Data.Aeson.BetterErrors.Internal.BadSchema
                            @ Web.Bower.PackageMeta.Internal.BowerError
                            (ww
                               `cast`
                             (Data.DList.N:DList[0]
                                  <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                               (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                            (Data.Aeson.BetterErrors.Internal.WrongType
                               @ Web.Bower.PackageMeta.Internal.BowerError
                               Data.Aeson.BetterErrors.Internal.TyString
                               wild1)))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Web.Bower.PackageMeta.Internal.BowerError)
                                   (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName)>_R))
                   Data.Aeson.Types.Internal.String t
                   -> case Web.Bower.PackageMeta.Internal.mkPackageName t of wild {
                        Data.Either.Left err
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Web.Bower.PackageMeta.Internal.BowerError)
                              @ (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName)
                              (Data.Aeson.BetterErrors.Internal.BadSchema
                                 @ Web.Bower.PackageMeta.Internal.BowerError
                                 (ww
                                    `cast`
                                  (Data.DList.N:DList[0]
                                       <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                    (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                 (Data.Aeson.BetterErrors.Internal.CustomError
                                    @ Web.Bower.PackageMeta.Internal.BowerError
                                    (Web.Bower.PackageMeta.Internal.InvalidPackageName err))))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Web.Bower.PackageMeta.Internal.BowerError)
                                        (GHC.Base.Maybe
                                           Web.Bower.PackageMeta.Internal.PackageName)>_R))
                        Data.Either.Right n
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Web.Bower.PackageMeta.Internal.BowerError)
                              @ (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName)
                              (GHC.Base.Just @ Web.Bower.PackageMeta.Internal.PackageName n))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Web.Bower.PackageMeta.Internal.BowerError)
                                        (GHC.Base.Maybe
                                           Web.Bower.PackageMeta.Internal.PackageName)>_R)) }
                   Data.Aeson.Types.Internal.Null
                   -> (Data.Aeson.BetterErrors.Internal.perhaps2
                         @ Web.Bower.PackageMeta.Internal.PackageName
                         @ Web.Bower.PackageMeta.Internal.BowerError)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Web.Bower.PackageMeta.Internal.BowerError)
                                   (GHC.Base.Maybe
                                      Web.Bower.PackageMeta.Internal.PackageName)>_R)) }) -}
788db59d07ede3b6af09eb8059ef72c3
  $wm4 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Language.PureScript.Names.ModuleName
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Language.PureScript.Docs.Types.PackageError)
                        @ Language.PureScript.Names.ModuleName
                        (Data.Aeson.BetterErrors.Internal.BadSchema
                           @ Language.PureScript.Docs.Types.PackageError
                           (ww
                              `cast`
                            (Data.DList.N:DList[0]
                                 <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                              (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                           (Data.Aeson.BetterErrors.Internal.WrongType
                              @ Language.PureScript.Docs.Types.PackageError
                              Data.Aeson.BetterErrors.Internal.TyString
                              wild))
                   Data.Aeson.Types.Internal.String t
                   -> case t of ww2 { Data.Text.Internal.Text ww3 ww4 ww5 ->
                      Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Language.PureScript.Docs.Types.PackageError)
                        @ Language.PureScript.Names.ModuleName
                        (Language.PureScript.Names.$wsplitProperNames
                           @ 'Language.PureScript.Names.Namespace
                           ww3
                           ww4
                           ww5)
                          `cast`
                        (Sym (Language.PureScript.Names.N:ModuleName[0])) } }) -}
fc2444fd9bed212c6a791ab8defbd4b3
  $wv ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan))
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild1 {
                   DEFAULT
                   -> case (Language.PureScript.Docs.Types.asChildDeclaration4
                              @ Language.PureScript.Docs.Types.PackageError
                              (Data.Aeson.BetterErrors.Internal.ParseReader ww wild1))
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.AST.SourcePos.SourceSpan>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                       <Data.Either.Either
                                                                                          (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                             Language.PureScript.Docs.Types.PackageError)
                                                                                          Language.PureScript.AST.SourcePos.SourceSpan>_R) of wild {
                        Data.Either.Left x1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)
                              x1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (GHC.Base.Maybe
                                           Language.PureScript.AST.SourcePos.SourceSpan)>_R))
                        Data.Either.Right y
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)
                              (GHC.Base.Just @ Language.PureScript.AST.SourcePos.SourceSpan y))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (GHC.Base.Maybe
                                           Language.PureScript.AST.SourcePos.SourceSpan)>_R)) }
                   Data.Aeson.Types.Internal.Null
                   -> (Data.Aeson.BetterErrors.Internal.perhaps2
                         @ Language.PureScript.AST.SourcePos.SourceSpan
                         @ Language.PureScript.Docs.Types.PackageError)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (GHC.Base.Maybe
                                      Language.PureScript.AST.SourcePos.SourceSpan)>_R)) }) -}
8cea3976819a11a7fea16c092a42da5f
  $wv1 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild1 {
                   DEFAULT
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                         (Data.Aeson.BetterErrors.Internal.BadSchema
                            @ Language.PureScript.Docs.Types.PackageError
                            (ww
                               `cast`
                             (Data.DList.N:DList[0]
                                  <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                               (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                            (Data.Aeson.BetterErrors.Internal.WrongType
                               @ Language.PureScript.Docs.Types.PackageError
                               Data.Aeson.BetterErrors.Internal.TyString
                               wild1)))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (GHC.Base.Maybe Data.Text.Internal.Text)>_R))
                   Data.Aeson.Types.Internal.String t
                   -> (Data.Either.Right
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                         (GHC.Base.Just @ Data.Text.Internal.Text t))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (GHC.Base.Maybe Data.Text.Internal.Text)>_R))
                   Data.Aeson.Types.Internal.Null
                   -> (Data.Aeson.BetterErrors.Internal.perhaps2
                         @ Data.Text.Internal.Text
                         @ Language.PureScript.Docs.Types.PackageError)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (GHC.Base.Maybe Data.Text.Internal.Text)>_R)) }) -}
f586cf109b4a897b727c4cf2ea31a8c6
  $wv2 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Language.PureScript.Docs.Types.GithubRepo
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ e
                   (ww :: Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                        @ Language.PureScript.Docs.Types.GithubRepo
                        (Data.Aeson.BetterErrors.Internal.BadSchema
                           @ e
                           (ww
                              `cast`
                            (Data.DList.N:DList[0]
                                 <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                              (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                           (Data.Aeson.BetterErrors.Internal.WrongType
                              @ e
                              Data.Aeson.BetterErrors.Internal.TyString
                              wild))
                   Data.Aeson.Types.Internal.String t
                   -> Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                        @ Language.PureScript.Docs.Types.GithubRepo
                        t `cast`
                        (Sym (Language.PureScript.Docs.Types.N:GithubRepo[0])) }) -}
8b71275754a57dd8ccfbfa128561b837
  $wv3 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind'))
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild1 {
                   DEFAULT
                   -> case Language.PureScript.Docs.Types.$wasKind ww wild1 of wild {
                        Data.Either.Left x1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                              x1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')>_R))
                        Data.Either.Right y
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                              (GHC.Base.Just @ Language.PureScript.Docs.Types.Kind' y))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')>_R)) }
                   Data.Aeson.Types.Internal.Null
                   -> (Data.Aeson.BetterErrors.Internal.perhaps2
                         @ Language.PureScript.Docs.Types.Kind'
                         @ Language.PureScript.Docs.Types.PackageError)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')>_R)) }) -}
28dbd93c37b1922abca033b0adee12f4
  $ww3 ::
    Data.DList.DList Data.Aeson.BetterErrors.Internal.PathPiece
    -> Data.Aeson.Types.Internal.Value
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Web.Bower.PackageMeta.Internal.BowerError)
         Language.PureScript.Names.ModuleName
  {- Arity: 2, Strictness: <L,1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.DList.DList
                            Data.Aeson.BetterErrors.Internal.PathPiece)
                   (ww1 :: Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Web.Bower.PackageMeta.Internal.BowerError)
                        @ Language.PureScript.Names.ModuleName
                        (Data.Aeson.BetterErrors.Internal.BadSchema
                           @ Language.PureScript.Docs.Types.ManifestError
                           (ww
                              `cast`
                            (Data.DList.N:DList[0]
                                 <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                              (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                           (Data.Aeson.BetterErrors.Internal.WrongType
                              @ Language.PureScript.Docs.Types.ManifestError
                              Data.Aeson.BetterErrors.Internal.TyString
                              wild))
                   Data.Aeson.Types.Internal.String t
                   -> case t of ww2 { Data.Text.Internal.Text ww3 ww4 ww5 ->
                      Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Web.Bower.PackageMeta.Internal.BowerError)
                        @ Language.PureScript.Names.ModuleName
                        (Language.PureScript.Names.$wsplitProperNames
                           @ 'Language.PureScript.Names.Namespace
                           ww3
                           ww4
                           ww5)
                          `cast`
                        (Sym (Language.PureScript.Names.N:ModuleName[0])) } }) -}
cce819b6566f028d040fc57bb265fd8d
  data ChildDeclaration
    = ChildDeclaration {cdeclTitle :: Data.Text.Internal.Text,
                        cdeclComments :: GHC.Base.Maybe Data.Text.Internal.Text,
                        cdeclSourceSpan :: GHC.Base.Maybe
                                             Language.PureScript.AST.SourcePos.SourceSpan,
                        cdeclInfo :: Language.PureScript.Docs.Types.ChildDeclarationInfo}
c8243fd1b5d9f065f8713b1e9a1dccad
  data ChildDeclarationInfo
    = ChildInstance [Language.PureScript.Docs.Types.Constraint']
                    Language.PureScript.Docs.Types.Type'
    | ChildDataConstructor [Language.PureScript.Docs.Types.Type']
    | ChildTypeClassMember Language.PureScript.Docs.Types.Type'
d41f556fe0cc659e6458c371e15603c8
  type Constraint' = Language.PureScript.Types.Constraint ()
cce819b6566f028d040fc57bb265fd8d
  data Declaration
    = Declaration {declTitle :: Data.Text.Internal.Text,
                   declComments :: GHC.Base.Maybe Data.Text.Internal.Text,
                   declSourceSpan :: GHC.Base.Maybe
                                       Language.PureScript.AST.SourcePos.SourceSpan,
                   declChildren :: [Language.PureScript.Docs.Types.ChildDeclaration],
                   declInfo :: Language.PureScript.Docs.Types.DeclarationInfo}
c62d7485313366a589e4ef3d4cdd5b98
  data DeclarationInfo
    = ValueDeclaration Language.PureScript.Docs.Types.Type'
    | DataDeclaration Language.PureScript.Environment.DataDeclType
                      [(Data.Text.Internal.Text,
                        GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
    | ExternDataDeclaration Language.PureScript.Docs.Types.Kind'
    | TypeSynonymDeclaration [(Data.Text.Internal.Text,
                               GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
                             Language.PureScript.Docs.Types.Type'
    | TypeClassDeclaration [(Data.Text.Internal.Text,
                             GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
                           [Language.PureScript.Docs.Types.Constraint']
                           [([Data.Text.Internal.Text], [Data.Text.Internal.Text])]
    | AliasDeclaration Language.PureScript.AST.Operators.Fixity
                       Language.PureScript.Docs.RenderedCode.Types.FixityAlias
    | ExternKindDeclaration
8b305838d47692238020364c584ab76f
  data DocLink
    = DocLink {linkLocation :: Language.PureScript.Docs.Types.LinkLocation,
               linkTitle :: Data.Text.Internal.Text,
               linkNamespace :: Language.PureScript.Docs.RenderedCode.Types.Namespace}
fa1efe58f4e6215e05effe0c7820d641
  newtype GithubRepo
    = GithubRepo {runGithubRepo :: Data.Text.Internal.Text}
614d849a4354c290b33f6ef62142889d
  newtype GithubUser
    = GithubUser {runGithubUser :: Data.Text.Internal.Text}
14acea96459ae0ba0727319f74cb7f69
  data InPackage a
    = Local a | FromDep Web.Bower.PackageMeta.Internal.PackageName a
3614d14cb28596c10c2bdbdc1dd488cc
  type Kind' = Language.PureScript.Kinds.Kind ()
465f85673aa60d600eec7529c7b12dab
  data LinkLocation
    = LocalModule Language.PureScript.Names.ModuleName
    | DepsModule Web.Bower.PackageMeta.Internal.PackageName
                 Data.Version.Version
                 Language.PureScript.Names.ModuleName
    | BuiltinModule Language.PureScript.Names.ModuleName
fa1efe58f4e6215e05effe0c7820d641
  data LinksContext
    = LinksContext {ctxGithub :: (Language.PureScript.Docs.Types.GithubUser,
                                  Language.PureScript.Docs.Types.GithubRepo),
                    ctxModuleMap :: Data.Map.Internal.Map
                                      Language.PureScript.Names.ModuleName
                                      Web.Bower.PackageMeta.Internal.PackageName,
                    ctxResolvedDependencies :: [(Web.Bower.PackageMeta.Internal.PackageName,
                                                 Data.Version.Version)],
                    ctxPackageName :: Web.Bower.PackageMeta.Internal.PackageName,
                    ctxVersion :: Data.Version.Version,
                    ctxVersionTag :: Data.Text.Internal.Text}
5e79e380ec99b3359162843125394c03
  type ManifestError = Web.Bower.PackageMeta.Internal.BowerError
cce819b6566f028d040fc57bb265fd8d
  data Module
    = Module {modName :: Language.PureScript.Names.ModuleName,
              modComments :: GHC.Base.Maybe Data.Text.Internal.Text,
              modDeclarations :: [Language.PureScript.Docs.Types.Declaration],
              modReExports :: [(Language.PureScript.Docs.Types.InPackage
                                  Language.PureScript.Names.ModuleName,
                                [Language.PureScript.Docs.Types.Declaration])]}
4171d1f05d5de1cd94713164f91b8004
  data NotYetKnown = NotYetKnown
fa1efe58f4e6215e05effe0c7820d641
  data Package a
    = Package {pkgMeta :: Web.Bower.PackageMeta.Internal.PackageMeta,
               pkgVersion :: Data.Version.Version,
               pkgVersionTag :: Data.Text.Internal.Text,
               pkgTagTime :: GHC.Base.Maybe
                               Data.Time.Clock.Internal.UTCTime.UTCTime,
               pkgModules :: [Language.PureScript.Docs.Types.Module],
               pkgModuleMap :: Data.Map.Internal.Map
                                 Language.PureScript.Names.ModuleName
                                 Web.Bower.PackageMeta.Internal.PackageName,
               pkgResolvedDependencies :: [(Web.Bower.PackageMeta.Internal.PackageName,
                                            Data.Version.Version)],
               pkgGithub :: (Language.PureScript.Docs.Types.GithubUser,
                             Language.PureScript.Docs.Types.GithubRepo),
               pkgUploader :: a,
               pkgCompilerVersion :: Data.Version.Version}
f66d967ff562407ff6a522c1eb0528e6
  data PackageError
    = CompilerTooOld Data.Version.Version Data.Version.Version
    | ErrorInPackageMeta Language.PureScript.Docs.Types.ManifestError
    | InvalidVersion
    | InvalidDeclarationType Data.Text.Internal.Text
    | InvalidChildDeclarationType Data.Text.Internal.Text
    | InvalidFixity
    | InvalidKind Data.Text.Internal.Text
    | InvalidDataDeclType Data.Text.Internal.Text
    | InvalidTime
cce819b6566f028d040fc57bb265fd8d
  axiom Language.PureScript.Docs.Types.Rep_ChildDeclaration::
      GHC.Generics.Rep Language.PureScript.Docs.Types.ChildDeclaration
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "ChildDeclaration"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ChildDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "cdeclTitle")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "cdeclComments")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "cdeclSourceSpan")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0
                                       (GHC.Base.Maybe
                                          Language.PureScript.AST.SourcePos.SourceSpan))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "cdeclInfo")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Language.PureScript.Docs.Types.ChildDeclarationInfo))))
c8243fd1b5d9f065f8713b1e9a1dccad
  axiom Language.PureScript.Docs.Types.Rep_ChildDeclarationInfo::
      GHC.Generics.Rep
        Language.PureScript.Docs.Types.ChildDeclarationInfo
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "ChildDeclarationInfo"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ChildInstance" 'GHC.Generics.PrefixI 'GHC.Types.False)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     'GHC.Base.Nothing
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Language.PureScript.Docs.Types.Constraint'])
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Language.PureScript.Docs.Types.Type'))
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ChildDataConstructor" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Language.PureScript.Docs.Types.Type']))
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "ChildTypeClassMember"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Language.PureScript.Docs.Types.Type'))))
cce819b6566f028d040fc57bb265fd8d
  axiom Language.PureScript.Docs.Types.Rep_Declaration::
      GHC.Generics.Rep Language.PureScript.Docs.Types.Declaration
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Declaration"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Declaration" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "declTitle")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "declComments")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "declSourceSpan")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0
                                       (GHC.Base.Maybe
                                          Language.PureScript.AST.SourcePos.SourceSpan))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "declChildren")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [Language.PureScript.Docs.Types.ChildDeclaration])
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "declInfo")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Language.PureScript.Docs.Types.DeclarationInfo)))))
c62d7485313366a589e4ef3d4cdd5b98
  axiom Language.PureScript.Docs.Types.Rep_DeclarationInfo::
      GHC.Generics.Rep Language.PureScript.Docs.Types.DeclarationInfo
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "DeclarationInfo"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "ValueDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                (GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      'GHC.Base.Nothing
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Language.PureScript.Docs.Types.Type'))
              GHC.Generics.:+: (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "DataDeclaration" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        Language.PureScript.Environment.DataDeclType)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [(Data.Text.Internal.Text,
                                                           GHC.Base.Maybe
                                                             Language.PureScript.Docs.Types.Kind')]))
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "ExternDataDeclaration"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         Language.PureScript.Docs.Types.Kind'))))
             GHC.Generics.:+: ((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "TypeSynonymDeclaration"
                                     'GHC.Generics.PrefixI
                                     'GHC.Types.False)
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        [(Data.Text.Internal.Text,
                                          GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         Language.PureScript.Docs.Types.Type'))
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "TypeClassDeclaration"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [(Data.Text.Internal.Text,
                                                           GHC.Base.Maybe
                                                             Language.PureScript.Docs.Types.Kind')])
                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           'GHC.Base.Nothing
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           [Language.PureScript.Docs.Types.Constraint'])
                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                         ('GHC.Generics.MetaSel
                                                                                            'GHC.Base.Nothing
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.Rec0
                                                                                            [([Data.Text.Internal.Text],
                                                                                              [Data.Text.Internal.Text])]))))
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "AliasDeclaration"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         Language.PureScript.AST.Operators.Fixity)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          'GHC.Base.Nothing
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Language.PureScript.Docs.RenderedCode.Types.FixityAlias))
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "ExternKindDeclaration"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
8b305838d47692238020364c584ab76f
  axiom Language.PureScript.Docs.Types.Rep_DocLink::
      GHC.Generics.Rep Language.PureScript.Docs.Types.DocLink
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "DocLink"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "DocLink" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "linkLocation")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Language.PureScript.Docs.Types.LinkLocation)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkTitle")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "linkNamespace")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Language.PureScript.Docs.RenderedCode.Types.Namespace))))
fa1efe58f4e6215e05effe0c7820d641
  axiom Language.PureScript.Docs.Types.Rep_GithubRepo::
      GHC.Generics.Rep Language.PureScript.Docs.Types.GithubRepo
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "GithubRepo"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.True)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "GithubRepo" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "runGithubRepo")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)))
614d849a4354c290b33f6ef62142889d
  axiom Language.PureScript.Docs.Types.Rep_GithubUser::
      GHC.Generics.Rep Language.PureScript.Docs.Types.GithubUser
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "GithubUser"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.True)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "GithubUser" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "runGithubUser")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)))
14acea96459ae0ba0727319f74cb7f69
  axiom Language.PureScript.Docs.Types.Rep_InPackage::
      GHC.Generics.Rep (Language.PureScript.Docs.Types.InPackage a)
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "InPackage"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Local" 'GHC.Generics.PrefixI 'GHC.Types.False)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     'GHC.Base.Nothing
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 a))
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FromDep" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Web.Bower.PackageMeta.Internal.PackageName)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 a)))
465f85673aa60d600eec7529c7b12dab
  axiom Language.PureScript.Docs.Types.Rep_LinkLocation::
      GHC.Generics.Rep Language.PureScript.Docs.Types.LinkLocation
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "LinkLocation"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "LocalModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     'GHC.Base.Nothing
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Language.PureScript.Names.ModuleName))
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "DepsModule" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Web.Bower.PackageMeta.Internal.PackageName)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Data.Version.Version)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          'GHC.Base.Nothing
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Language.PureScript.Names.ModuleName)))
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "BuiltinModule"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Language.PureScript.Names.ModuleName))))
fa1efe58f4e6215e05effe0c7820d641
  axiom Language.PureScript.Docs.Types.Rep_LinksContext::
      GHC.Generics.Rep Language.PureScript.Docs.Types.LinksContext
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "LinksContext"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "LinksContext" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "ctxGithub")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0
                      (Language.PureScript.Docs.Types.GithubUser,
                       Language.PureScript.Docs.Types.GithubRepo))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "ctxModuleMap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        (Data.Map.Internal.Map
                                           Language.PureScript.Names.ModuleName
                                           Web.Bower.PackageMeta.Internal.PackageName))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "ctxResolvedDependencies")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [(Web.Bower.PackageMeta.Internal.PackageName,
                                                           Data.Version.Version)])))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "ctxPackageName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Web.Bower.PackageMeta.Internal.PackageName)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "ctxVersion")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Data.Version.Version)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "ctxVersionTag")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          Data.Text.Internal.Text)))))
cce819b6566f028d040fc57bb265fd8d
  axiom Language.PureScript.Docs.Types.Rep_Module::
      GHC.Generics.Rep Language.PureScript.Docs.Types.Module
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Module"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Module" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "modName")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Language.PureScript.Names.ModuleName)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "modComments")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe Data.Text.Internal.Text)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "modDeclarations")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Language.PureScript.Docs.Types.Declaration])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "modReExports")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        [(Language.PureScript.Docs.Types.InPackage
                                                            Language.PureScript.Names.ModuleName,
                                                          [Language.PureScript.Docs.Types.Declaration])]))))
4171d1f05d5de1cd94713164f91b8004
  axiom Language.PureScript.Docs.Types.Rep_NotYetKnown::
      GHC.Generics.Rep Language.PureScript.Docs.Types.NotYetKnown
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "NotYetKnown"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotYetKnown" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
fa1efe58f4e6215e05effe0c7820d641
  axiom Language.PureScript.Docs.Types.Rep_Package::
      GHC.Generics.Rep (Language.PureScript.Docs.Types.Package a)
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Package"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (((GHC.Generics.S1
                    ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "pkgMeta")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                    (GHC.Generics.Rec0 Web.Bower.PackageMeta.Internal.PackageMeta)
                  GHC.Generics.:*: GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pkgVersion")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Version.Version))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pkgVersionTag")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "pkgTagTime")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0
                                                          (GHC.Base.Maybe
                                                             Data.Time.Clock.Internal.UTCTime.UTCTime))
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "pkgModules")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           [Language.PureScript.Docs.Types.Module]))))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "pkgModuleMap")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        (Data.Map.Internal.Map
                                           Language.PureScript.Names.ModuleName
                                           Web.Bower.PackageMeta.Internal.PackageName))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "pkgResolvedDependencies")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [(Web.Bower.PackageMeta.Internal.PackageName,
                                                           Data.Version.Version)]))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "pkgGithub")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Language.PureScript.Docs.Types.GithubUser,
                                                          Language.PureScript.Docs.Types.GithubRepo))
                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "pkgUploader")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0 a)
                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "pkgCompilerVersion")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.Rec0
                                                                                            Data.Version.Version))))))
f66d967ff562407ff6a522c1eb0528e6
  axiom Language.PureScript.Docs.Types.Rep_PackageError::
      GHC.Generics.Rep Language.PureScript.Docs.Types.PackageError
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "PackageError"
               "Language.PureScript.Docs.Types"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            (((GHC.Generics.C1
                 ('GHC.Generics.MetaCons
                    "CompilerTooOld" 'GHC.Generics.PrefixI 'GHC.Types.False)
                 (GHC.Generics.S1
                    ('GHC.Generics.MetaSel
                       'GHC.Base.Nothing
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                    (GHC.Generics.Rec0 Data.Version.Version)
                  GHC.Generics.:*: GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Version.Version))
               GHC.Generics.:+: GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "ErrorInPackageMeta" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        Language.PureScript.Docs.Types.ManifestError)))
              GHC.Generics.:+: (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "InvalidVersion" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "InvalidDeclarationType"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Data.Text.Internal.Text))))
             GHC.Generics.:+: ((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "InvalidChildDeclarationType"
                                     'GHC.Generics.PrefixI
                                     'GHC.Types.False)
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        'GHC.Base.Nothing
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "InvalidFixity"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "InvalidKind"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                                 GHC.Generics.:+: (GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "InvalidDataDeclType"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     (GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           'GHC.Base.Nothing
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           Data.Text.Internal.Text))
                                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "InvalidTime"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.False)
                                                                                      GHC.Generics.U1))))
0332397f5f9321976d4cdbfed5e9ab8f
  type Type' = Language.PureScript.Types.Type ()
5b6080dbdff0f21912cb417b68e5d249
  type UploadedPackage =
    Language.PureScript.Docs.Types.Package
      Language.PureScript.Docs.Types.NotYetKnown
4a66208fe7c5e98a9447d39680177c2a
  type VerifiedPackage =
    Language.PureScript.Docs.Types.Package
      Language.PureScript.Docs.Types.GithubUser
d6a339370336bb6794e662d98932205c
  asAssociativity ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.AST.Operators.Associativity
  {- Arity: 1, Strictness: <S(LS),1*U(C(U),1*U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asAssociativity1
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.AST.Operators.Associativity>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                  <*>_N
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                     (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                        Language.PureScript.Docs.Types.PackageError)
                                                                                                     Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.AST.Operators.Associativity>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                  <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.Operators.Associativity>_N)) -}
5cc5131341dfdf8c458988a754ab8e72
  asAssociativity1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.AST.Operators.Associativity)
  {- Arity: 1, Strictness: <S(LS),1*U(C(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wasAssociativity ww1 ww2 }) -}
b098cba4240608177428e4bae4355e27
  asAssociativity2 ::
    Data.Aeson.BetterErrors.Internal.ErrorSpecifics
      Language.PureScript.Docs.Types.PackageError
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Data.Aeson.BetterErrors.Internal.CustomError
                   @ Language.PureScript.Docs.Types.PackageError
                   Language.PureScript.Docs.Types.InvalidFixity) -}
44ac16019203d751c47a63d220651581
  asChildDeclaration ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asChildDeclaration1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Docs.Types.ChildDeclaration>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                          <Language.PureScript.Docs.Types.PackageError>_N
                                                                                          <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.ChildDeclaration>_N) -}
8ddf9c213d98b641f40a6c68375ee427
  asChildDeclaration1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ Data.Text.Internal.Text
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration26
                         Language.PureScript.Docs.Types.asChildDeclaration16
                           `cast`
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                   <Control.Monad.Trans.Except.ExceptT
                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                         Language.PureScript.Docs.Types.PackageError)
                                      Data.Functor.Identity.Identity>_R
                                   <Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                           <Language.PureScript.Docs.Types.PackageError>_N
                                                                           <Data.Functor.Identity.Identity>_R) <Data.Text.Internal.Text>_N)
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Data.Text.Internal.Text>_N ; Data.Functor.Identity.N:Identity[0]
                                                             <Data.Either.Either
                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                   Language.PureScript.Docs.Types.PackageError)
                                                                Data.Text.Internal.Text>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Language.PureScript.Docs.Types.ChildDeclaration
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.Docs.Types.ChildDeclaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                     Language.PureScript.Docs.Types.PackageError>_N
                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.Docs.Types.ChildDeclaration>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.$fToJSONChildDeclaration24
                              Language.PureScript.Docs.Types.asChildDeclaration15
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                 Language.PureScript.Docs.Types.PackageError>_N
                                              <Data.Functor.Identity.Identity>_R
                                              <GHC.Base.Maybe
                                                 Data.Text.Internal.Text>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                          <*>_N
                                                                                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                          <Control.Monad.Trans.Except.ExceptT
                                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                Language.PureScript.Docs.Types.PackageError)
                                                                                             Data.Functor.Identity.Identity>_R
                                                                                          <GHC.Base.Maybe
                                                                                             Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                    <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                    <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                           Data.Text.Internal.Text>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.Maybe
                                   Data.Text.Internal.Text>_N ; Data.Functor.Identity.N:Identity[0]
                                                                    <Data.Either.Either
                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                       (GHC.Base.Maybe
                                                                          Data.Text.Internal.Text)>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.Docs.Types.ChildDeclaration
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.Docs.Types.ChildDeclaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                       <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                          Language.PureScript.Docs.Types.PackageError>_N
                                                                                                       <Data.Functor.Identity.Identity>_R
                                                                                                       <Language.PureScript.Docs.Types.ChildDeclaration>_N))
                        Data.Either.Right x1
                        -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                   @ Data.Functor.Identity.Identity
                                   @ Language.PureScript.Docs.Types.PackageError
                                   @ (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)
                                   Data.Functor.Identity.$fMonadIdentity
                                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration22
                                   Language.PureScript.Docs.Types.asChildDeclaration3
                                     `cast`
                                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                      Language.PureScript.Docs.Types.PackageError>_N
                                                   <Data.Functor.Identity.Identity>_R
                                                   <GHC.Base.Maybe
                                                      Language.PureScript.AST.SourcePos.SourceSpan>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                    <*>_N
                                                                                                                    <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                    <Control.Monad.Trans.Except.ExceptT
                                                                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                                                                       Data.Functor.Identity.Identity>_R
                                                                                                                    <GHC.Base.Maybe
                                                                                                                       Language.PureScript.AST.SourcePos.SourceSpan>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                   <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                   <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                                                                          Language.PureScript.AST.SourcePos.SourceSpan>_N))
                                   r1)
                                  `cast`
                                (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <GHC.Base.Maybe
                                        Language.PureScript.AST.SourcePos.SourceSpan>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                              <Data.Either.Either
                                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                    Language.PureScript.Docs.Types.PackageError)
                                                                                                 (GHC.Base.Maybe
                                                                                                    Language.PureScript.AST.SourcePos.SourceSpan)>_R) of wild2 {
                             Data.Either.Left e1
                             -> (Data.Either.Left
                                   @ (Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError)
                                   @ Language.PureScript.Docs.Types.ChildDeclaration
                                   e1)
                                  `cast`
                                (Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                Language.PureScript.Docs.Types.PackageError)
                                             Language.PureScript.Docs.Types.ChildDeclaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                            <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                               Language.PureScript.Docs.Types.PackageError>_N
                                                                                                            <Data.Functor.Identity.Identity>_R
                                                                                                            <Language.PureScript.Docs.Types.ChildDeclaration>_N))
                             Data.Either.Right x2
                             -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                        @ Data.Functor.Identity.Identity
                                        @ Language.PureScript.Docs.Types.PackageError
                                        @ Language.PureScript.Docs.Types.ChildDeclarationInfo
                                        Data.Functor.Identity.$fMonadIdentity
                                        Language.PureScript.Docs.Types.$fToJSONChildDeclaration1
                                        Language.PureScript.Docs.Types.asChildDeclaration2
                                          `cast`
                                        ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                          ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                        <Data.Aeson.BetterErrors.Internal.ParseError
                                                           Language.PureScript.Docs.Types.PackageError>_N
                                                        <Data.Functor.Identity.Identity>_R
                                                        <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                              <*>_N
                                                                                                                              <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                              <Control.Monad.Trans.Except.ExceptT
                                                                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                    Language.PureScript.Docs.Types.PackageError)
                                                                                                                                 Data.Functor.Identity.Identity>_R
                                                                                                                              <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                  <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N))
                                        r1)
                                       `cast`
                                     (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError>_N
                                          <Data.Functor.Identity.Identity>_R
                                          <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                                        <Data.Either.Either
                                                                                                           (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                              Language.PureScript.Docs.Types.PackageError)
                                                                                                           Language.PureScript.Docs.Types.ChildDeclarationInfo>_R) of wild3 {
                                  Data.Either.Left e1
                                  -> (Data.Either.Left
                                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError)
                                        @ Language.PureScript.Docs.Types.ChildDeclaration
                                        e1)
                                       `cast`
                                     (Sym (Data.Functor.Identity.N:Identity[0]
                                               <Data.Either.Either
                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                     Language.PureScript.Docs.Types.PackageError)
                                                  Language.PureScript.Docs.Types.ChildDeclaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                    Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                                 <Language.PureScript.Docs.Types.ChildDeclaration>_N))
                                  Data.Either.Right x3
                                  -> (Data.Either.Right
                                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError)
                                        @ Language.PureScript.Docs.Types.ChildDeclaration
                                        (Language.PureScript.Docs.Types.ChildDeclaration
                                           y
                                           x1
                                           x2
                                           x3))
                                       `cast`
                                     (Sym (Data.Functor.Identity.N:Identity[0]
                                               <Data.Either.Either
                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                     Language.PureScript.Docs.Types.PackageError)
                                                  Language.PureScript.Docs.Types.ChildDeclaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                    Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                                 <Language.PureScript.Docs.Types.ChildDeclaration>_N)) } } } }) -}
ec1e2781cc316c928897cadde7a2be8d
  asChildDeclaration10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asChildDeclaration11) -}
c34fa03f0562aca95ee8ad5e798ffd4b
  asChildDeclaration11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("start"#) -}
e6a8cd36203c787d24112af13ced4dee
  asChildDeclaration12 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError err) GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ err (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$w$sasString @ err ww1 ww2 }) -}
f5f3aab01b3c9aa3caa9432b530f4b94
  asChildDeclaration13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asChildDeclaration14) -}
8ac8a885ad898312ff8187c49c643a07
  asChildDeclaration14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name"#) -}
c4e191694907b39bda14501997395b54
  asChildDeclaration15 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wv1 ww1 ww2 }) -}
0c89b237bc2bdda088f7426825a1791e
  asChildDeclaration16 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Data.Text.Internal.Text
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wm2 ww1 ww2 }) -}
b44e2b6a97671ef9ec2296f186069987
  asChildDeclaration2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.Docs.Types.ChildDeclarationInfo)
  {- Arity: 1, Strictness: <L,U(U,U)> -}
c03fc3b90a09211c6fe0c82fc08af9a8
  asChildDeclaration3 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan))
  {- Arity: 1, Strictness: <S(LS),1*U(U,1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wv ww1 ww2 }) -}
db870483a3f9f6c809e84d78a58c8812
  asChildDeclaration4 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ @ e
                   (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ e
                         @ GHC.Base.String
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.asChildDeclaration13
                         (Language.PureScript.Docs.Types.asChildDeclaration12 @ e)
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                         <Data.Either.Either
                                            (Data.Aeson.BetterErrors.Internal.ParseError e)
                                            GHC.Base.String>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                           <Data.Aeson.BetterErrors.Internal.ParseError
                                                                              e>_N
                                                                           <Data.Functor.Identity.Identity>_R
                                                                           <GHC.Base.String>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                             <*>_N
                                                                                                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                   e)
                                                                                                                Data.Functor.Identity.Identity>_R
                                                                                                             <GHC.Base.String>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                             <e>_N
                                                                                                                                             <Data.Functor.Identity.Identity>_R) <GHC.Base.String>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                           <Data.Functor.Identity.Identity>_R
                           <GHC.Base.String>_N ; Data.Functor.Identity.N:Identity[0]
                                                     <Data.Either.Either
                                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                                           e)
                                                        GHC.Base.String>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                         @ Language.PureScript.AST.SourcePos.SourceSpan
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   Language.PureScript.AST.SourcePos.SourceSpan>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                               <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                  e>_N
                                                                                               <Data.Functor.Identity.Identity>_R
                                                                                               <Language.PureScript.AST.SourcePos.SourceSpan>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ e
                              @ Language.PureScript.AST.SourcePos.SourcePos
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asChildDeclaration10
                              (Language.PureScript.Docs.Types.asChildDeclaration7 @ e)
                                `cast`
                              (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                        <*>_N
                                        <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                        <Control.Monad.Trans.Except.ExceptT
                                           (Data.Aeson.BetterErrors.Internal.ParseError e)
                                           Data.Functor.Identity.Identity>_R
                                        <Language.PureScript.AST.SourcePos.SourcePos>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                    <e>_N
                                                                                                    <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.SourcePos.SourcePos>_N)
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.AST.SourcePos.SourcePos>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                      <Data.Either.Either
                                                                                         (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                            e)
                                                                                         Language.PureScript.AST.SourcePos.SourcePos>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                              @ Language.PureScript.AST.SourcePos.SourceSpan
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError e)
                                        Language.PureScript.AST.SourcePos.SourceSpan>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                    <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                       e>_N
                                                                                                    <Data.Functor.Identity.Identity>_R
                                                                                                    <Language.PureScript.AST.SourcePos.SourceSpan>_N))
                        Data.Either.Right x1
                        -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                   @ Data.Functor.Identity.Identity
                                   @ e
                                   @ Language.PureScript.AST.SourcePos.SourcePos
                                   Data.Functor.Identity.$fMonadIdentity
                                   Language.PureScript.Docs.Types.asChildDeclaration5
                                   (Language.PureScript.Docs.Types.asChildDeclaration7 @ e)
                                     `cast`
                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                             <*>_N
                                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                             <Control.Monad.Trans.Except.ExceptT
                                                (Data.Aeson.BetterErrors.Internal.ParseError e)
                                                Data.Functor.Identity.Identity>_R
                                             <Language.PureScript.AST.SourcePos.SourcePos>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                         <e>_N
                                                                                                         <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.SourcePos.SourcePos>_N)
                                   r1)
                                  `cast`
                                (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <Language.PureScript.AST.SourcePos.SourcePos>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                           <Data.Either.Either
                                                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                 e)
                                                                                              Language.PureScript.AST.SourcePos.SourcePos>_R) of wild2 {
                             Data.Either.Left e1
                             -> (Data.Either.Left
                                   @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   @ Language.PureScript.AST.SourcePos.SourceSpan
                                   e1)
                                  `cast`
                                (Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                                             Language.PureScript.AST.SourcePos.SourceSpan>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                         <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                            e>_N
                                                                                                         <Data.Functor.Identity.Identity>_R
                                                                                                         <Language.PureScript.AST.SourcePos.SourceSpan>_N))
                             Data.Either.Right x2
                             -> (Data.Either.Right
                                   @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   @ Language.PureScript.AST.SourcePos.SourceSpan
                                   (Language.PureScript.AST.SourcePos.SourceSpan y x1 x2))
                                  `cast`
                                (Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                                             Language.PureScript.AST.SourcePos.SourceSpan>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                         <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                            e>_N
                                                                                                         <Data.Functor.Identity.Identity>_R
                                                                                                         <Language.PureScript.AST.SourcePos.SourceSpan>_N)) } } }) -}
1a77efc8d76b3ee04b63c1cfd545b361
  asChildDeclaration5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asChildDeclaration6) -}
f20a03cd87f8baee92e30e05cd74ad83
  asChildDeclaration6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("end"#) -}
3523540f693b7d8e30ca9994f27cb964
  asChildDeclaration7 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ @ e
                   (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wnth
                         @ Data.Functor.Identity.Identity
                         @ e
                         @ GHC.Types.Int
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fFromJSONPackage6
                         (Language.PureScript.Docs.Types.asChildDeclaration9 @ e)
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                         <Data.Functor.Identity.Identity>_R
                                         <GHC.Types.Int>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                         <*>_N
                                                                         <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                         <Control.Monad.Trans.Except.ExceptT
                                                                            (Data.Aeson.BetterErrors.Internal.ParseError
                                                                               e)
                                                                            Data.Functor.Identity.Identity>_R
                                                                         <GHC.Types.Int>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                       <e>_N
                                                                                                       <Data.Functor.Identity.Identity>_R) <GHC.Types.Int>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                           <Data.Functor.Identity.Identity>_R
                           <GHC.Types.Int>_N ; Data.Functor.Identity.N:Identity[0]
                                                   <Data.Either.Either
                                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                                         e)
                                                      GHC.Types.Int>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                         @ Language.PureScript.AST.SourcePos.SourcePos
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   Language.PureScript.AST.SourcePos.SourcePos>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                 e>_N
                                                                                              <Data.Functor.Identity.Identity>_R
                                                                                              <Language.PureScript.AST.SourcePos.SourcePos>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wnth
                              @ Data.Functor.Identity.Identity
                              @ e
                              @ GHC.Types.Int
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asChildDeclaration8
                              (Language.PureScript.Docs.Types.asChildDeclaration9 @ e)
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                              <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                              <Data.Functor.Identity.Identity>_R
                                              <GHC.Types.Int>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                              <*>_N
                                                                              <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                              <Control.Monad.Trans.Except.ExceptT
                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                    e)
                                                                                 Data.Functor.Identity.Identity>_R
                                                                              <GHC.Types.Int>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                            <e>_N
                                                                                                            <Data.Functor.Identity.Identity>_R) <GHC.Types.Int>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Types.Int>_N ; Data.Functor.Identity.N:Identity[0]
                                                        <Data.Either.Either
                                                           (Data.Aeson.BetterErrors.Internal.ParseError
                                                              e)
                                                           GHC.Types.Int>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                              @ Language.PureScript.AST.SourcePos.SourcePos
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError e)
                                        Language.PureScript.AST.SourcePos.SourcePos>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                      e>_N
                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                   <Language.PureScript.AST.SourcePos.SourcePos>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                              @ Language.PureScript.AST.SourcePos.SourcePos
                              (Language.PureScript.AST.SourcePos.SourcePos y x1))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError e)
                                        Language.PureScript.AST.SourcePos.SourcePos>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                      e>_N
                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                   <Language.PureScript.AST.SourcePos.SourcePos>_N)) } }) -}
99987ad179d496b6d911de8844ba211a
  asChildDeclaration8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
d99fba38f6453425433a2e4b18109249
  asChildDeclaration9 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError err) GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U(C(U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ err (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 Data.Aeson.BetterErrors.Internal.$wasIntegral
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Int
                   @ err
                   Data.Functor.Identity.$fMonadIdentity
                   GHC.Real.$fIntegralInt
                   w3) -}
b594b135bbfef7d67cc1bf5b7b0d4dcd
  asChildDeclarationInfo ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.ChildDeclarationInfo
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asChildDeclaration2
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                      <*>_N
                                                                                                      <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                      <Control.Monad.Trans.Except.ExceptT
                                                                                                         (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                            Language.PureScript.Docs.Types.PackageError)
                                                                                                         Data.Functor.Identity.Identity>_R
                                                                                                      <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                          <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                          <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.ChildDeclarationInfo>_N)) -}
c3636742a6ad4246d215d26f70abcdef
  asConstraint ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.Constraint'
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asConstraint1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Types.Constraint
                             ()>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                               <Language.PureScript.Docs.Types.PackageError>_N
                                               <Data.Functor.Identity.Identity>_R) <Language.PureScript.Types.Constraint
                                                                                      ()>_N) -}
5fadd9a1aa1d6d19ad953bdb4b570d41
  asConstraint1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         (Language.PureScript.Types.Constraint ())
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.asConstraint7
                         (Language.PureScript.Docs.Types.asConstraint5
                            @ 'Language.PureScript.Names.ClassName
                            @ Language.PureScript.Docs.Types.PackageError)
                           `cast`
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                   <Control.Monad.Trans.Except.ExceptT
                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                         Language.PureScript.Docs.Types.PackageError)
                                      Data.Functor.Identity.Identity>_R
                                   <Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ClassName)>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                              <Language.PureScript.Docs.Types.PackageError>_N
                                                                                              <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.Qualified
                                                                                                                                     (Language.PureScript.Names.ProperName
                                                                                                                                        'Language.PureScript.Names.ClassName)>_N)
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName)>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                <Data.Either.Either
                                                                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                      Language.PureScript.Docs.Types.PackageError)
                                                                                   (Language.PureScript.Names.Qualified
                                                                                      (Language.PureScript.Names.ProperName
                                                                                         'Language.PureScript.Names.ClassName))>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ (Language.PureScript.Types.Constraint ())
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (Language.PureScript.Types.Constraint
                                      ())>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                         <Data.Aeson.BetterErrors.Internal.ParseError
                                                            Language.PureScript.Docs.Types.PackageError>_N
                                                         <Data.Functor.Identity.Identity>_R
                                                         <Language.PureScript.Types.Constraint
                                                            ()>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ [Language.PureScript.Docs.Types.Type']
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asConstraint3
                              Language.PureScript.Docs.Types.asConstraint2
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <[Language.PureScript.Types.Type
                                    ()]>_N ; Data.Functor.Identity.N:Identity[0]
                                                 <Data.Either.Either
                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                       Language.PureScript.Docs.Types.PackageError)
                                                    [Language.PureScript.Types.Type
                                                       ()]>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Language.PureScript.Types.Constraint ())
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Language.PureScript.Types.Constraint
                                           ())>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                                 Language.PureScript.Docs.Types.PackageError>_N
                                                              <Data.Functor.Identity.Identity>_R
                                                              <Language.PureScript.Types.Constraint
                                                                 ()>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Language.PureScript.Types.Constraint ())
                              (Language.PureScript.Types.Constraint
                                 @ ()
                                 GHC.Tuple.()
                                 y
                                 x1
                                 (GHC.Base.Nothing @ Language.PureScript.Types.ConstraintData)))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Language.PureScript.Types.Constraint
                                           ())>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                                 Language.PureScript.Docs.Types.PackageError>_N
                                                              <Data.Functor.Identity.Identity>_R
                                                              <Language.PureScript.Types.Constraint
                                                                 ()>_N)) } }) -}
86c458f70203bf53f6fa0a5e6ad16a12
  asConstraint2 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.PackageError
      Data.Functor.Identity.Identity
      [Language.PureScript.Docs.Types.Type']
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Language.PureScript.Docs.Types.Type'
                   Data.Functor.Identity.$fMonadIdentity
                   (Language.PureScript.Docs.Types.$sfromAesonParser5
                      @ Language.PureScript.Docs.Types.PackageError)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Docs.Types.Type'>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                  <Language.PureScript.Docs.Types.PackageError>_N
                                                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Type'>_N)) -}
672dc9d0ec2a0ab0d1c2d3f028b73592
  asConstraint3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asConstraint4) -}
a5a92813d4001d1ebf2cd9d319abd5ea
  asConstraint4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("constraintArgs"#) -}
1698579b798bc77d050437b620a9857c
  asConstraint5 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName a))
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a :: Language.PureScript.Names.ProperNameType
                   @ e
                   (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                   @ Data.Functor.Identity.Identity
                   @ (Language.PureScript.Names.Qualified
                        (Language.PureScript.Names.ProperName a))
                   @ e
                   Data.Functor.Identity.$fMonadIdentity
                   (Language.PureScript.Docs.Types.asConstraint6 @ a)
                   ww1
                   ww2 }) -}
03b9ef5aeff8e3882ab7f972d6207c31
  asConstraint6 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName a))
  {- Unfolding: (\ @ a :: Language.PureScript.Names.ProperNameType ->
                 Language.PureScript.Names.$fFromJSONQualified
                   @ (Language.PureScript.Names.ProperName a)
                   (Language.PureScript.Names.$fFromJSONProperName @ a)) -}
a33167c026135db2414436bd5ad68071
  asConstraint7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asConstraint8) -}
9c9a619b067157f40ad10f995b7a0da1
  asConstraint8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("constraintClass"#) -}
170174a26d53621a82bfe31c47fc32b7
  asDataDeclType ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Environment.DataDeclType
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asDataDeclType1
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.Environment.DataDeclType>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                               <*>_N
                                                                                               <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                     Language.PureScript.Docs.Types.PackageError)
                                                                                                  Data.Functor.Identity.Identity>_R
                                                                                               <Language.PureScript.Environment.DataDeclType>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                            <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                            <Data.Functor.Identity.Identity>_R) <Language.PureScript.Environment.DataDeclType>_N)) -}
51781fe7057a16a58171a27afc89352b
  asDataDeclType1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.Environment.DataDeclType)
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wasDataDeclType ww1 ww2 }) -}
86ef7ea009cfab3c9385b92477bf05fe
  asDataDeclType2 ::
    Data.Either.Either
      (Data.Aeson.BetterErrors.Internal.ParseError
         Language.PureScript.Docs.Types.PackageError)
      Language.PureScript.Environment.DataDeclType
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ (Data.Aeson.BetterErrors.Internal.ParseError
                        Language.PureScript.Docs.Types.PackageError)
                   @ Language.PureScript.Environment.DataDeclType
                   Language.PureScript.Environment.Data) -}
dab5a84d83198f1f612ffaacbaad77cb
  asDataDeclType3 ::
    Data.Either.Either
      (Data.Aeson.BetterErrors.Internal.ParseError
         Language.PureScript.Docs.Types.PackageError)
      Language.PureScript.Environment.DataDeclType
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ (Data.Aeson.BetterErrors.Internal.ParseError
                        Language.PureScript.Docs.Types.PackageError)
                   @ Language.PureScript.Environment.DataDeclType
                   Language.PureScript.Environment.Newtype) -}
833956cb8face8182b9db99e4efa9b0b
  asDataDeclType4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asDataDeclType5) -}
337af20c50363ed46a3c8862561cb0e7
  asDataDeclType5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("newtype"#) -}
49845eed101301e4fa0d0d95e692c7d4
  asDataDeclType6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asDataDeclType7) -}
6af21be442ca65b315a53a98eb6177ea
  asDataDeclType7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("data"#) -}
877490f3ddd671e0d15e254c68674d69
  asDeclaration ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asDeclaration1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Docs.Types.Declaration>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                     <Language.PureScript.Docs.Types.PackageError>_N
                                                                                     <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Declaration>_N) -}
a32e6319a5eeae1b16fd8568e585c6e9
  asDeclaration1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ Data.Text.Internal.Text
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fToJSONChildDeclaration26
                         Language.PureScript.Docs.Types.asChildDeclaration16
                           `cast`
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                   <Control.Monad.Trans.Except.ExceptT
                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                         Language.PureScript.Docs.Types.PackageError)
                                      Data.Functor.Identity.Identity>_R
                                   <Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                           <Language.PureScript.Docs.Types.PackageError>_N
                                                                           <Data.Functor.Identity.Identity>_R) <Data.Text.Internal.Text>_N)
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Data.Text.Internal.Text>_N ; Data.Functor.Identity.N:Identity[0]
                                                             <Data.Either.Either
                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                   Language.PureScript.Docs.Types.PackageError)
                                                                Data.Text.Internal.Text>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Language.PureScript.Docs.Types.Declaration
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.Docs.Types.Declaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                             <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                Language.PureScript.Docs.Types.PackageError>_N
                                                                                             <Data.Functor.Identity.Identity>_R
                                                                                             <Language.PureScript.Docs.Types.Declaration>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.$fToJSONChildDeclaration24
                              Language.PureScript.Docs.Types.asChildDeclaration15
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                 Language.PureScript.Docs.Types.PackageError>_N
                                              <Data.Functor.Identity.Identity>_R
                                              <GHC.Base.Maybe
                                                 Data.Text.Internal.Text>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                          <*>_N
                                                                                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                          <Control.Monad.Trans.Except.ExceptT
                                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                Language.PureScript.Docs.Types.PackageError)
                                                                                             Data.Functor.Identity.Identity>_R
                                                                                          <GHC.Base.Maybe
                                                                                             Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                    <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                    <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                           Data.Text.Internal.Text>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.Maybe
                                   Data.Text.Internal.Text>_N ; Data.Functor.Identity.N:Identity[0]
                                                                    <Data.Either.Either
                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                       (GHC.Base.Maybe
                                                                          Data.Text.Internal.Text)>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.Docs.Types.Declaration
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.Docs.Types.Declaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                     Language.PureScript.Docs.Types.PackageError>_N
                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.Docs.Types.Declaration>_N))
                        Data.Either.Right x1
                        -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                   @ Data.Functor.Identity.Identity
                                   @ Language.PureScript.Docs.Types.PackageError
                                   @ (GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan)
                                   Data.Functor.Identity.$fMonadIdentity
                                   Language.PureScript.Docs.Types.$fToJSONChildDeclaration22
                                   Language.PureScript.Docs.Types.asChildDeclaration3
                                     `cast`
                                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                      Language.PureScript.Docs.Types.PackageError>_N
                                                   <Data.Functor.Identity.Identity>_R
                                                   <GHC.Base.Maybe
                                                      Language.PureScript.AST.SourcePos.SourceSpan>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                    <*>_N
                                                                                                                    <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                    <Control.Monad.Trans.Except.ExceptT
                                                                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                                                                       Data.Functor.Identity.Identity>_R
                                                                                                                    <GHC.Base.Maybe
                                                                                                                       Language.PureScript.AST.SourcePos.SourceSpan>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                   <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                   <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                                                                          Language.PureScript.AST.SourcePos.SourceSpan>_N))
                                   r1)
                                  `cast`
                                (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <GHC.Base.Maybe
                                        Language.PureScript.AST.SourcePos.SourceSpan>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                              <Data.Either.Either
                                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                    Language.PureScript.Docs.Types.PackageError)
                                                                                                 (GHC.Base.Maybe
                                                                                                    Language.PureScript.AST.SourcePos.SourceSpan)>_R) of wild2 {
                             Data.Either.Left e1
                             -> (Data.Either.Left
                                   @ (Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError)
                                   @ Language.PureScript.Docs.Types.Declaration
                                   e1)
                                  `cast`
                                (Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                Language.PureScript.Docs.Types.PackageError)
                                             Language.PureScript.Docs.Types.Declaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                       <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                          Language.PureScript.Docs.Types.PackageError>_N
                                                                                                       <Data.Functor.Identity.Identity>_R
                                                                                                       <Language.PureScript.Docs.Types.Declaration>_N))
                             Data.Either.Right x2
                             -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                        @ Data.Functor.Identity.Identity
                                        @ Language.PureScript.Docs.Types.PackageError
                                        @ [Language.PureScript.Docs.Types.ChildDeclaration]
                                        Data.Functor.Identity.$fMonadIdentity
                                        Language.PureScript.Docs.Types.asDeclaration4
                                        Language.PureScript.Docs.Types.asDeclaration3
                                        r1)
                                       `cast`
                                     (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError>_N
                                          <Data.Functor.Identity.Identity>_R
                                          <[Language.PureScript.Docs.Types.ChildDeclaration]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                                      <Data.Either.Either
                                                                                                         (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                            Language.PureScript.Docs.Types.PackageError)
                                                                                                         [Language.PureScript.Docs.Types.ChildDeclaration]>_R) of wild3 {
                                  Data.Either.Left e1
                                  -> (Data.Either.Left
                                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError)
                                        @ Language.PureScript.Docs.Types.Declaration
                                        e1)
                                       `cast`
                                     (Sym (Data.Functor.Identity.N:Identity[0]
                                               <Data.Either.Either
                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                     Language.PureScript.Docs.Types.PackageError)
                                                  Language.PureScript.Docs.Types.Declaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                            <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                               Language.PureScript.Docs.Types.PackageError>_N
                                                                                                            <Data.Functor.Identity.Identity>_R
                                                                                                            <Language.PureScript.Docs.Types.Declaration>_N))
                                  Data.Either.Right x3
                                  -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                             @ Data.Functor.Identity.Identity
                                             @ Language.PureScript.Docs.Types.PackageError
                                             @ Language.PureScript.Docs.Types.DeclarationInfo
                                             Data.Functor.Identity.$fMonadIdentity
                                             Language.PureScript.Docs.Types.$fToJSONChildDeclaration1
                                             Language.PureScript.Docs.Types.asDeclaration2
                                               `cast`
                                             ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                               ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                             <Data.Aeson.BetterErrors.Internal.ParseError
                                                                Language.PureScript.Docs.Types.PackageError>_N
                                                             <Data.Functor.Identity.Identity>_R
                                                             <Language.PureScript.Docs.Types.DeclarationInfo>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                              <*>_N
                                                                                                                              <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                              <Control.Monad.Trans.Except.ExceptT
                                                                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                    Language.PureScript.Docs.Types.PackageError)
                                                                                                                                 Data.Functor.Identity.Identity>_R
                                                                                                                              <Language.PureScript.Docs.Types.DeclarationInfo>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                             <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                             <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.DeclarationInfo>_N))
                                             r1)
                                            `cast`
                                          (Control.Monad.Trans.Except.N:ExceptT[0]
                                               <Data.Aeson.BetterErrors.Internal.ParseError
                                                  Language.PureScript.Docs.Types.PackageError>_N
                                               <Data.Functor.Identity.Identity>_R
                                               <Language.PureScript.Docs.Types.DeclarationInfo>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                                        <Data.Either.Either
                                                                                                           (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                              Language.PureScript.Docs.Types.PackageError)
                                                                                                           Language.PureScript.Docs.Types.DeclarationInfo>_R) of wild4 {
                                       Data.Either.Left e1
                                       -> (Data.Either.Left
                                             @ (Data.Aeson.BetterErrors.Internal.ParseError
                                                  Language.PureScript.Docs.Types.PackageError)
                                             @ Language.PureScript.Docs.Types.Declaration
                                             e1)
                                            `cast`
                                          (Sym (Data.Functor.Identity.N:Identity[0]
                                                    <Data.Either.Either
                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                          Language.PureScript.Docs.Types.PackageError)
                                                       Language.PureScript.Docs.Types.Declaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                    Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                                 <Language.PureScript.Docs.Types.Declaration>_N))
                                       Data.Either.Right x4
                                       -> (Data.Either.Right
                                             @ (Data.Aeson.BetterErrors.Internal.ParseError
                                                  Language.PureScript.Docs.Types.PackageError)
                                             @ Language.PureScript.Docs.Types.Declaration
                                             (Language.PureScript.Docs.Types.Declaration
                                                y
                                                x1
                                                x2
                                                x3
                                                x4))
                                            `cast`
                                          (Sym (Data.Functor.Identity.N:Identity[0]
                                                    <Data.Either.Either
                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                          Language.PureScript.Docs.Types.PackageError)
                                                       Language.PureScript.Docs.Types.Declaration>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                    Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                                 <Language.PureScript.Docs.Types.Declaration>_N)) } } } } }) -}
2f09c44cde7f4023d9d31e1faaf7760e
  asDeclaration2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.Docs.Types.DeclarationInfo)
  {- Arity: 1, Strictness: <L,U(U,U)> -}
295f5aafd7122c5b85f63aae8986f91c
  asDeclaration3 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.PackageError
      Data.Functor.Identity.Identity
      [Language.PureScript.Docs.Types.ChildDeclaration]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Language.PureScript.Docs.Types.ChildDeclaration
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asChildDeclaration1
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Docs.Types.ChildDeclaration>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                             <Language.PureScript.Docs.Types.PackageError>_N
                                                                                             <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.ChildDeclaration>_N)) -}
ab19fa473a09f19ef8fb0fa78b134aac
  asDeclaration4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asDeclaration5) -}
dddb5fdc080f3eea5ba2456ee4d0759a
  asDeclaration5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("children"#) -}
60c8f6e87595fd62a0f2d20dd3bef650
  asDeclarationInfo ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.DeclarationInfo
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asDeclaration2
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.Docs.Types.DeclarationInfo>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                 <*>_N
                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                 <Control.Monad.Trans.Except.ExceptT
                                                                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                       Language.PureScript.Docs.Types.PackageError)
                                                                                                    Data.Functor.Identity.Identity>_R
                                                                                                 <Language.PureScript.Docs.Types.DeclarationInfo>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.DeclarationInfo>_N)) -}
ca8329ffd9335caacc79d2492e4d3c8e
  asFixity ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.AST.Operators.Fixity
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asFixity1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.Operators.Fixity>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                   <Language.PureScript.Docs.Types.PackageError>_N
                                                                                   <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.Operators.Fixity>_N) -}
71b1f37163553a2a17ace09b01976c90
  asFixity1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Language.PureScript.AST.Operators.Fixity
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ Language.PureScript.AST.Operators.Associativity
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.asFixity5
                         Language.PureScript.Docs.Types.asAssociativity1
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Data.Aeson.BetterErrors.Internal.ParseError
                                            Language.PureScript.Docs.Types.PackageError>_N
                                         <Data.Functor.Identity.Identity>_R
                                         <Language.PureScript.AST.Operators.Associativity>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                           <*>_N
                                                                                                           <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                           <Control.Monad.Trans.Except.ExceptT
                                                                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                 Language.PureScript.Docs.Types.PackageError)
                                                                                                              Data.Functor.Identity.Identity>_R
                                                                                                           <Language.PureScript.AST.Operators.Associativity>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                           <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                           <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.Operators.Associativity>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.AST.Operators.Associativity>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                     <Data.Either.Either
                                                                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                           Language.PureScript.Docs.Types.PackageError)
                                                                                        Language.PureScript.AST.Operators.Associativity>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Language.PureScript.AST.Operators.Fixity
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.AST.Operators.Fixity>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                           <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                              Language.PureScript.Docs.Types.PackageError>_N
                                                                                           <Data.Functor.Identity.Identity>_R
                                                                                           <Language.PureScript.AST.Operators.Fixity>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ Language.PureScript.AST.Operators.Precedence
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asFixity3
                              Language.PureScript.Docs.Types.asFixity2
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                 Language.PureScript.Docs.Types.PackageError>_N
                                              <Data.Functor.Identity.Identity>_R
                                              <Language.PureScript.AST.Operators.Precedence>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                             <*>_N
                                                                                                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                   Language.PureScript.Docs.Types.PackageError)
                                                                                                                Data.Functor.Identity.Identity>_R
                                                                                                             <Language.PureScript.AST.Operators.Precedence>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                          <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                          <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.Operators.Precedence>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.AST.Operators.Precedence>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                       <Data.Either.Either
                                                                                          (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                             Language.PureScript.Docs.Types.PackageError)
                                                                                          Language.PureScript.AST.Operators.Precedence>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.AST.Operators.Fixity
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.AST.Operators.Fixity>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   Language.PureScript.Docs.Types.PackageError>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <Language.PureScript.AST.Operators.Fixity>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.AST.Operators.Fixity
                              (Language.PureScript.AST.Operators.Fixity y x1))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.AST.Operators.Fixity>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   Language.PureScript.Docs.Types.PackageError>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <Language.PureScript.AST.Operators.Fixity>_N)) } }) -}
fc900fe47dea1efc8a5a3724dcc2bdcb
  asFixity2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.AST.Operators.Precedence)
  {- Arity: 1, Strictness: <L,U(C(U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 Data.Aeson.BetterErrors.Internal.$wasIntegral
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Operators.Precedence
                   @ Language.PureScript.Docs.Types.PackageError
                   Data.Functor.Identity.$fMonadIdentity
                   GHC.Real.$fIntegralInteger
                   w3) -}
676e95dbcc62632e5f7a5afbf814bcc2
  asFixity3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asFixity4) -}
bc155dceba50476902dc9d87809c786f
  asFixity4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("precedence"#) -}
27339e164100fa44ba3e42be648cb1f2
  asFixity5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asFixity6) -}
72291bd7244af2ec021d7154ef85b225
  asFixity6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("associativity"#) -}
c22588e0582da1684f22773fcdd3b57a
  asFixityAlias ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.RenderedCode.Types.FixityAlias
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asFixityAlias1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                  <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.RenderedCode.Types.FixityAlias>_N) -}
c78f0d5110b05ea5e9b542e589cdc038
  asFixityAlias1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Language.PureScript.Docs.RenderedCode.Types.FixityAlias
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.RenderedCode.Types.FixityAlias
                   @ Language.PureScript.Docs.Types.PackageError
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.$s$fFromJSONQualified
                   ww1
                   ww2 }) -}
52529debd438d064ad3a4e3acae458ed
  asFunDeps ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      [([Data.Text.Internal.Text], [Data.Text.Internal.Text])]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asFunDeps1
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <([Data.Text.Internal.Text],
                               [Data.Text.Internal.Text])>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                         <Language.PureScript.Docs.Types.PackageError>_N
                                                                         <Data.Functor.Identity.Identity>_R) <([Data.Text.Internal.Text],
                                                                                                               [Data.Text.Internal.Text])>_N)) -}
a0f719064fb4025ab51618e03816e59f
  asFunDeps1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wnth
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ [Data.Text.Internal.Text]
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fFromJSONPackage6
                         Language.PureScript.Docs.Types.asFunDeps2
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <[Data.Text.Internal.Text]>_N ; Data.Functor.Identity.N:Identity[0]
                                                               <Data.Either.Either
                                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                                     Language.PureScript.Docs.Types.PackageError)
                                                                  [Data.Text.Internal.Text]>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   ([Data.Text.Internal.Text],
                                    [Data.Text.Internal.Text])>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                 Language.PureScript.Docs.Types.PackageError>_N
                                                                              <Data.Functor.Identity.Identity>_R
                                                                              <([Data.Text.Internal.Text],
                                                                                [Data.Text.Internal.Text])>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wnth
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ [Data.Text.Internal.Text]
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asChildDeclaration8
                              Language.PureScript.Docs.Types.asFunDeps2
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <[Data.Text.Internal.Text]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                    <Data.Either.Either
                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                       [Data.Text.Internal.Text]>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        ([Data.Text.Internal.Text],
                                         [Data.Text.Internal.Text])>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                      Language.PureScript.Docs.Types.PackageError>_N
                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                   <([Data.Text.Internal.Text],
                                                                                     [Data.Text.Internal.Text])>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                              (y, x1))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        ([Data.Text.Internal.Text],
                                         [Data.Text.Internal.Text])>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                      Language.PureScript.Docs.Types.PackageError>_N
                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                   <([Data.Text.Internal.Text],
                                                                                     [Data.Text.Internal.Text])>_N)) } }) -}
e0c2eaa15d133778861773f2798d83f5
  asFunDeps2 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.PackageError
      Data.Functor.Identity.Identity
      [Data.Text.Internal.Text]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Data.Text.Internal.Text
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asFunDeps3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                     <Language.PureScript.Docs.Types.PackageError>_N
                                                                     <Data.Functor.Identity.Identity>_R) <Data.Text.Internal.Text>_N)) -}
f62527c4d6839e238fd8dd126297191b
  asFunDeps3 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Data.Text.Internal.Text
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Unfolding: (\ (eta :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case eta of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 case ww2 of wild {
                   DEFAULT
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Data.Text.Internal.Text
                         (Data.Aeson.BetterErrors.Internal.BadSchema
                            @ Language.PureScript.Docs.Types.PackageError
                            (ww1
                               `cast`
                             (Data.DList.N:DList[0]
                                  <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                               (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                            (Data.Aeson.BetterErrors.Internal.WrongType
                               @ Language.PureScript.Docs.Types.PackageError
                               Data.Aeson.BetterErrors.Internal.TyString
                               wild)))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Data.Text.Internal.Text>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                                                             Language.PureScript.Docs.Types.PackageError>_N
                                                                          <Data.Functor.Identity.Identity>_R
                                                                          <Data.Text.Internal.Text>_N))
                   Data.Aeson.Types.Internal.String t
                   -> (Data.Either.Right
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Data.Text.Internal.Text
                         t)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Data.Text.Internal.Text>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                                                             Language.PureScript.Docs.Types.PackageError>_N
                                                                          <Data.Functor.Identity.Identity>_R
                                                                          <Data.Text.Internal.Text>_N)) } }) -}
a1761a2cae65466e1f2dbe31513ea61e
  asGithub ::
    Data.Aeson.BetterErrors.Internal.Parse
      e
      (Language.PureScript.Docs.Types.GithubUser,
       Language.PureScript.Docs.Types.GithubRepo)
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asGithub1
                  `cast`
                (forall (e :: <*>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <(Language.PureScript.Docs.Types.GithubUser,
                            Language.PureScript.Docs.Types.GithubRepo)>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                      <e>_N
                                                                                      <Data.Functor.Identity.Identity>_R) <(Language.PureScript.Docs.Types.GithubUser,
                                                                                                                            Language.PureScript.Docs.Types.GithubRepo)>_N) -}
3188ac18b5599fd74b7aacf69b38c85a
  asGithub1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Data.Functor.Identity.Identity
         (Language.PureScript.Docs.Types.GithubUser,
          Language.PureScript.Docs.Types.GithubRepo)
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ @ e
                   (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wnth
                         @ Data.Functor.Identity.Identity
                         @ e
                         @ Language.PureScript.Docs.Types.GithubUser
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fFromJSONPackage6
                         (Language.PureScript.Docs.Types.$fFromJSONGithubUser4 @ e)
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                         <Data.Either.Either
                                            (Data.Aeson.BetterErrors.Internal.ParseError e)
                                            Language.PureScript.Docs.Types.GithubUser>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                        e>_N
                                                                                                     <Data.Functor.Identity.Identity>_R
                                                                                                     <Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                 <*>_N
                                                                                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                                 <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                       e)
                                                                                                                                                                    Data.Functor.Identity.Identity>_R
                                                                                                                                                                 <Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                           <e>_N
                                                                                                                                                                                                                           <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.GithubUser>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.Docs.Types.GithubUser>_N ; Data.Functor.Identity.N:Identity[0]
                                                                               <Data.Either.Either
                                                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                     e)
                                                                                  Language.PureScript.Docs.Types.GithubUser>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                         @ (Language.PureScript.Docs.Types.GithubUser,
                            Language.PureScript.Docs.Types.GithubRepo)
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   (Language.PureScript.Docs.Types.GithubUser,
                                    Language.PureScript.Docs.Types.GithubRepo)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                 e>_N
                                                                                              <Data.Functor.Identity.Identity>_R
                                                                                              <(Language.PureScript.Docs.Types.GithubUser,
                                                                                                Language.PureScript.Docs.Types.GithubRepo)>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wnth
                              @ Data.Functor.Identity.Identity
                              @ e
                              @ Language.PureScript.Docs.Types.GithubRepo
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asChildDeclaration8
                              (Language.PureScript.Docs.Types.asGithub2 @ e)
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                              <Data.Either.Either
                                                 (Data.Aeson.BetterErrors.Internal.ParseError e)
                                                 Language.PureScript.Docs.Types.GithubRepo>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                             e>_N
                                                                                                          <Data.Functor.Identity.Identity>_R
                                                                                                          <Language.PureScript.Docs.Types.GithubRepo>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                      <*>_N
                                                                                                                                                                      <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                                      <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                         (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                            e)
                                                                                                                                                                         Data.Functor.Identity.Identity>_R
                                                                                                                                                                      <Language.PureScript.Docs.Types.GithubRepo>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                                <e>_N
                                                                                                                                                                                                                                <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.GithubRepo>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.Docs.Types.GithubRepo>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                    <Data.Either.Either
                                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                          e)
                                                                                       Language.PureScript.Docs.Types.GithubRepo>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                              @ (Language.PureScript.Docs.Types.GithubUser,
                                 Language.PureScript.Docs.Types.GithubRepo)
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError e)
                                        (Language.PureScript.Docs.Types.GithubUser,
                                         Language.PureScript.Docs.Types.GithubRepo)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                      e>_N
                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                   <(Language.PureScript.Docs.Types.GithubUser,
                                                                                                     Language.PureScript.Docs.Types.GithubRepo)>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError e)
                              @ (Language.PureScript.Docs.Types.GithubUser,
                                 Language.PureScript.Docs.Types.GithubRepo)
                              (y, x1))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError e)
                                        (Language.PureScript.Docs.Types.GithubUser,
                                         Language.PureScript.Docs.Types.GithubRepo)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                      e>_N
                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                   <(Language.PureScript.Docs.Types.GithubUser,
                                                                                                     Language.PureScript.Docs.Types.GithubRepo)>_N)) } }) -}
3925ea7bb25de188027cee2c196bb941
  asGithub2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError e)
         Language.PureScript.Docs.Types.GithubRepo
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ e (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wv2 @ e ww1 ww2 }) -}
5d6fc0f04d6370e1d4a8ad5c0158d84e
  asGithubUser ::
    Data.Aeson.BetterErrors.Internal.Parse
      e Language.PureScript.Docs.Types.GithubUser
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.$fFromJSONGithubUser4
                  `cast`
                (forall (e :: <*>_N).
                 (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   Language.PureScript.Docs.Types.GithubUser>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                            <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                               e>_N
                                                                                            <Data.Functor.Identity.Identity>_R
                                                                                            <Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                        <*>_N
                                                                                                                                                        <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                        <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                           (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                              e)
                                                                                                                                                           Data.Functor.Identity.Identity>_R
                                                                                                                                                        <Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                  <e>_N
                                                                                                                                                                                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.GithubUser>_N)) -}
d86267750da9c65fd3976f9c0414ed5b
  asInPackage ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.ManifestError a
    -> Data.Aeson.BetterErrors.Internal.Parse
         Language.PureScript.Docs.Types.ManifestError
         (Language.PureScript.Docs.Types.InPackage a)
  {- Arity: 2, Strictness: <L,C(U)><L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asInPackage1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Aeson.BetterErrors.Internal.Parse
                    Language.PureScript.Docs.Types.ManifestError a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                               <Control.Monad.Trans.Except.ExceptT
                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                     Web.Bower.PackageMeta.Internal.BowerError)
                                  Data.Functor.Identity.Identity>_R
                               <Language.PureScript.Docs.Types.InPackage
                                  a>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                   <Web.Bower.PackageMeta.Internal.BowerError>_N
                                                   <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.InPackage
                                                                                          a>_N) -}
99656a4ce963587ed3d1e2fefff5e25c
  asInPackage1 ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.ManifestError a
    -> Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Web.Bower.PackageMeta.Internal.BowerError)
         Data.Functor.Identity.Identity
         (Language.PureScript.Docs.Types.InPackage a)
  {- Arity: 2, Strictness: <L,C(U)><L,U(U,U)>,
     Unfolding: (\ @ a
                   (inner :: Data.Aeson.BetterErrors.Internal.Parse
                               Language.PureScript.Docs.Types.ManifestError a)
                   (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Web.Bower.PackageMeta.Internal.BowerError
                         @ (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName)
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fToJSONInPackage3
                         Language.PureScript.Docs.Types.asInPackage2
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Data.Aeson.BetterErrors.Internal.ParseError
                                            Web.Bower.PackageMeta.Internal.BowerError>_N
                                         <Data.Functor.Identity.Identity>_R
                                         <GHC.Base.Maybe
                                            Web.Bower.PackageMeta.Internal.PackageName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                        <*>_N
                                                                                                        <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                        <Control.Monad.Trans.Except.ExceptT
                                                                                                           (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                              Web.Bower.PackageMeta.Internal.BowerError)
                                                                                                           Data.Functor.Identity.Identity>_R
                                                                                                        <GHC.Base.Maybe
                                                                                                           Web.Bower.PackageMeta.Internal.PackageName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                     <Web.Bower.PackageMeta.Internal.BowerError>_N
                                                                                                                                                                     <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                                                            Web.Bower.PackageMeta.Internal.PackageName>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Web.Bower.PackageMeta.Internal.BowerError>_N
                           <Data.Functor.Identity.Identity>_R
                           <GHC.Base.Maybe
                              Web.Bower.PackageMeta.Internal.PackageName>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                  <Data.Either.Either
                                                                                     (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                        Web.Bower.PackageMeta.Internal.BowerError)
                                                                                     (GHC.Base.Maybe
                                                                                        Web.Bower.PackageMeta.Internal.PackageName)>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Web.Bower.PackageMeta.Internal.BowerError)
                         @ (Language.PureScript.Docs.Types.InPackage a)
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Web.Bower.PackageMeta.Internal.BowerError)
                                   (Language.PureScript.Docs.Types.InPackage
                                      a)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                        <Data.Aeson.BetterErrors.Internal.ParseError
                                                           Web.Bower.PackageMeta.Internal.BowerError>_N
                                                        <Data.Functor.Identity.Identity>_R
                                                        <Language.PureScript.Docs.Types.InPackage
                                                           a>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.ManifestError
                              @ a
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.$fToJSONInPackage1
                              inner
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Web.Bower.PackageMeta.Internal.BowerError>_N
                                <Data.Functor.Identity.Identity>_R
                                <a>_N ; Data.Functor.Identity.N:Identity[0]
                                            <Data.Either.Either
                                               (Data.Aeson.BetterErrors.Internal.ParseError
                                                  Web.Bower.PackageMeta.Internal.BowerError)
                                               a>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Web.Bower.PackageMeta.Internal.BowerError)
                              @ (Language.PureScript.Docs.Types.InPackage a)
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Web.Bower.PackageMeta.Internal.BowerError)
                                        (Language.PureScript.Docs.Types.InPackage
                                           a)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                             <Data.Aeson.BetterErrors.Internal.ParseError
                                                                Web.Bower.PackageMeta.Internal.BowerError>_N
                                                             <Data.Functor.Identity.Identity>_R
                                                             <Language.PureScript.Docs.Types.InPackage
                                                                a>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Web.Bower.PackageMeta.Internal.BowerError)
                              @ (Language.PureScript.Docs.Types.InPackage a)
                              (case y of wild2 {
                                 GHC.Base.Nothing -> Language.PureScript.Docs.Types.Local @ a x1
                                 GHC.Base.Just pn
                                 -> Language.PureScript.Docs.Types.FromDep @ a pn x1 }))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Web.Bower.PackageMeta.Internal.BowerError)
                                        (Language.PureScript.Docs.Types.InPackage
                                           a)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                             <Data.Aeson.BetterErrors.Internal.ParseError
                                                                Web.Bower.PackageMeta.Internal.BowerError>_N
                                                             <Data.Functor.Identity.Identity>_R
                                                             <Language.PureScript.Docs.Types.InPackage
                                                                a>_N)) } }) -}
5bb5399c0099ed18ce50a2f45ad499b2
  asInPackage2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Web.Bower.PackageMeta.Internal.BowerError)
            (GHC.Base.Maybe Web.Bower.PackageMeta.Internal.PackageName))
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wm3 ww1 ww2 }) -}
ed381cc10d26beb229e4c08b59a5367a
  asKind ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.Kind'
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asKind1
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.Docs.Types.Kind'>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                       <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                          Language.PureScript.Docs.Types.PackageError>_N
                                                                                       <Data.Functor.Identity.Identity>_R
                                                                                       <Language.PureScript.Docs.Types.Kind'>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                              <*>_N
                                                                                                                                              <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                              <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                    Language.PureScript.Docs.Types.PackageError)
                                                                                                                                                 Data.Functor.Identity.Identity>_R
                                                                                                                                              <Language.PureScript.Docs.Types.Kind'>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                   <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                                   <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Kind'>_N)) -}
666a6f06a43ba0f43cd566837564c302
  asKind1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Language.PureScript.Docs.Types.Kind'
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wasKind ww1 ww2 }) -}
7f0c9031a5c3933575f85db4c8825304
  asModule ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      Language.PureScript.Docs.Types.Module
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asModule1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Docs.Types.Module>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                <Language.PureScript.Docs.Types.PackageError>_N
                                                                                <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Module>_N) -}
83ce600eca3a000bae9f6ffda7736b6b
  asModule1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         Language.PureScript.Docs.Types.Module
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ Language.PureScript.Names.ModuleName
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.asChildDeclaration13
                         Language.PureScript.Docs.Types.asModule13
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                         <Data.Either.Either
                                            (Data.Aeson.BetterErrors.Internal.ParseError
                                               Language.PureScript.Docs.Types.PackageError)
                                            Language.PureScript.Names.ModuleName>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   Language.PureScript.Docs.Types.PackageError>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <Language.PureScript.Names.ModuleName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                       <*>_N
                                                                                                                                                       <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                          (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                             Language.PureScript.Docs.Types.PackageError)
                                                                                                                                                          Data.Functor.Identity.Identity>_R
                                                                                                                                                       <Language.PureScript.Names.ModuleName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                            <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                                            <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.ModuleName>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.Names.ModuleName>_N ; Data.Functor.Identity.N:Identity[0]
                                                                          <Data.Either.Either
                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                Language.PureScript.Docs.Types.PackageError)
                                                                             Language.PureScript.Names.ModuleName>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Language.PureScript.Docs.Types.Module
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Language.PureScript.Docs.Types.Module>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                        <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                           Language.PureScript.Docs.Types.PackageError>_N
                                                                                        <Data.Functor.Identity.Identity>_R
                                                                                        <Language.PureScript.Docs.Types.Module>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.$fToJSONChildDeclaration24
                              Language.PureScript.Docs.Types.asChildDeclaration15
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                 Language.PureScript.Docs.Types.PackageError>_N
                                              <Data.Functor.Identity.Identity>_R
                                              <GHC.Base.Maybe
                                                 Data.Text.Internal.Text>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                          <*>_N
                                                                                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                          <Control.Monad.Trans.Except.ExceptT
                                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                Language.PureScript.Docs.Types.PackageError)
                                                                                             Data.Functor.Identity.Identity>_R
                                                                                          <GHC.Base.Maybe
                                                                                             Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                    <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                    <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                           Data.Text.Internal.Text>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.Maybe
                                   Data.Text.Internal.Text>_N ; Data.Functor.Identity.N:Identity[0]
                                                                    <Data.Either.Either
                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                       (GHC.Base.Maybe
                                                                          Data.Text.Internal.Text)>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Language.PureScript.Docs.Types.Module
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Language.PureScript.Docs.Types.Module>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                             <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                Language.PureScript.Docs.Types.PackageError>_N
                                                                                             <Data.Functor.Identity.Identity>_R
                                                                                             <Language.PureScript.Docs.Types.Module>_N))
                        Data.Either.Right x1
                        -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                   @ Data.Functor.Identity.Identity
                                   @ Language.PureScript.Docs.Types.PackageError
                                   @ [Language.PureScript.Docs.Types.Declaration]
                                   Data.Functor.Identity.$fMonadIdentity
                                   Language.PureScript.Docs.Types.asModule5
                                   Language.PureScript.Docs.Types.asModule4
                                   r1)
                                  `cast`
                                (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <[Language.PureScript.Docs.Types.Declaration]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                            <Data.Either.Either
                                                                                               (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                  Language.PureScript.Docs.Types.PackageError)
                                                                                               [Language.PureScript.Docs.Types.Declaration]>_R) of wild2 {
                             Data.Either.Left e1
                             -> (Data.Either.Left
                                   @ (Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError)
                                   @ Language.PureScript.Docs.Types.Module
                                   e1)
                                  `cast`
                                (Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                Language.PureScript.Docs.Types.PackageError)
                                             Language.PureScript.Docs.Types.Module>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                     Language.PureScript.Docs.Types.PackageError>_N
                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.Docs.Types.Module>_N))
                             Data.Either.Right x2
                             -> case (Data.Aeson.BetterErrors.Internal.$wkey
                                        @ Data.Functor.Identity.Identity
                                        @ Language.PureScript.Docs.Types.PackageError
                                        @ [(Language.PureScript.Docs.Types.InPackage
                                              Language.PureScript.Names.ModuleName,
                                            [Language.PureScript.Docs.Types.Declaration])]
                                        Data.Functor.Identity.$fMonadIdentity
                                        Language.PureScript.Docs.Types.asModule11
                                        Language.PureScript.Docs.Types.asModule2
                                        r1)
                                       `cast`
                                     (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError>_N
                                          <Data.Functor.Identity.Identity>_R
                                          <[(Language.PureScript.Docs.Types.InPackage
                                               Language.PureScript.Names.ModuleName,
                                             [Language.PureScript.Docs.Types.Declaration])]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                                     <Data.Either.Either
                                                                                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                           Language.PureScript.Docs.Types.PackageError)
                                                                                                        [(Language.PureScript.Docs.Types.InPackage
                                                                                                            Language.PureScript.Names.ModuleName,
                                                                                                          [Language.PureScript.Docs.Types.Declaration])]>_R) of wild3 {
                                  Data.Either.Left e1
                                  -> (Data.Either.Left
                                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError)
                                        @ Language.PureScript.Docs.Types.Module
                                        e1)
                                       `cast`
                                     (Sym (Data.Functor.Identity.N:Identity[0]
                                               <Data.Either.Either
                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                     Language.PureScript.Docs.Types.PackageError)
                                                  Language.PureScript.Docs.Types.Module>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                       <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                          Language.PureScript.Docs.Types.PackageError>_N
                                                                                                       <Data.Functor.Identity.Identity>_R
                                                                                                       <Language.PureScript.Docs.Types.Module>_N))
                                  Data.Either.Right x3
                                  -> (Data.Either.Right
                                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                                             Language.PureScript.Docs.Types.PackageError)
                                        @ Language.PureScript.Docs.Types.Module
                                        (Language.PureScript.Docs.Types.Module y x1 x2 x3))
                                       `cast`
                                     (Sym (Data.Functor.Identity.N:Identity[0]
                                               <Data.Either.Either
                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                     Language.PureScript.Docs.Types.PackageError)
                                                  Language.PureScript.Docs.Types.Module>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                       <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                          Language.PureScript.Docs.Types.PackageError>_N
                                                                                                       <Data.Functor.Identity.Identity>_R
                                                                                                       <Language.PureScript.Docs.Types.Module>_N)) } } } }) -}
d25bebedc0d0f3d1e4ec301414ea4808
  asModule10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("moduleName"#) -}
9a9b9c0113c4aacbc09baa3078e4fd1c
  asModule11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asModule12) -}
106361deb7265745fb521e52663dba5c
  asModule12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("reExports"#) -}
81f556252d46d6efd9210032d76a791d
  asModule13 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Language.PureScript.Names.ModuleName
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wm4 ww1 ww2 }) -}
5041766824a1558d74516f0d41e2bb6c
  asModule2 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.PackageError
      Data.Functor.Identity.Identity
      [(Language.PureScript.Docs.Types.InPackage
          Language.PureScript.Names.ModuleName,
        [Language.PureScript.Docs.Types.Declaration])]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ (Language.PureScript.Docs.Types.InPackage
                        Language.PureScript.Names.ModuleName,
                      [Language.PureScript.Docs.Types.Declaration])
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asModule3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <(Language.PureScript.Docs.Types.InPackage
                                 Language.PureScript.Names.ModuleName,
                               [Language.PureScript.Docs.Types.Declaration])>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                            <Language.PureScript.Docs.Types.PackageError>_N
                                                                                            <Data.Functor.Identity.Identity>_R) <(Language.PureScript.Docs.Types.InPackage
                                                                                                                                    Language.PureScript.Names.ModuleName,
                                                                                                                                  [Language.PureScript.Docs.Types.Declaration])>_N)) -}
550413f9e37cc9ba06a6fea8e85e7005
  asModule3 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         (Language.PureScript.Docs.Types.InPackage
            Language.PureScript.Names.ModuleName,
          [Language.PureScript.Docs.Types.Declaration])
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wkey
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ (Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName)
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.asModule9
                         Language.PureScript.Docs.Types.asModule7
                           `cast`
                         ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                           ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Data.Aeson.BetterErrors.Internal.ParseError
                                            Language.PureScript.Docs.Types.PackageError>_N
                                         <Data.Functor.Identity.Identity>_R
                                         <Language.PureScript.Docs.Types.InPackage
                                            Language.PureScript.Names.ModuleName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                  <*>_N
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                     (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                        Language.PureScript.Docs.Types.PackageError)
                                                                                                     Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.Docs.Types.InPackage
                                                                                                     Language.PureScript.Names.ModuleName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                         <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                         <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.InPackage
                                                                                                                                                                                                Language.PureScript.Names.ModuleName>_N))
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName>_N ; Data.Functor.Identity.N:Identity[0]
                                                                            <Data.Either.Either
                                                                               (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                  Language.PureScript.Docs.Types.PackageError)
                                                                               (Language.PureScript.Docs.Types.InPackage
                                                                                  Language.PureScript.Names.ModuleName)>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ (Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName,
                            [Language.PureScript.Docs.Types.Declaration])
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (Language.PureScript.Docs.Types.InPackage
                                      Language.PureScript.Names.ModuleName,
                                    [Language.PureScript.Docs.Types.Declaration])>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                    Language.PureScript.Docs.Types.PackageError>_N
                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                 <(Language.PureScript.Docs.Types.InPackage
                                                                                                     Language.PureScript.Names.ModuleName,
                                                                                                   [Language.PureScript.Docs.Types.Declaration])>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wkey
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ [Language.PureScript.Docs.Types.Declaration]
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asModule5
                              Language.PureScript.Docs.Types.asModule4
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <[Language.PureScript.Docs.Types.Declaration]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                       <Data.Either.Either
                                                                                          (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                             Language.PureScript.Docs.Types.PackageError)
                                                                                          [Language.PureScript.Docs.Types.Declaration]>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Language.PureScript.Docs.Types.InPackage
                                   Language.PureScript.Names.ModuleName,
                                 [Language.PureScript.Docs.Types.Declaration])
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Language.PureScript.Docs.Types.InPackage
                                           Language.PureScript.Names.ModuleName,
                                         [Language.PureScript.Docs.Types.Declaration])>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                      <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                         Language.PureScript.Docs.Types.PackageError>_N
                                                                                                      <Data.Functor.Identity.Identity>_R
                                                                                                      <(Language.PureScript.Docs.Types.InPackage
                                                                                                          Language.PureScript.Names.ModuleName,
                                                                                                        [Language.PureScript.Docs.Types.Declaration])>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Language.PureScript.Docs.Types.InPackage
                                   Language.PureScript.Names.ModuleName,
                                 [Language.PureScript.Docs.Types.Declaration])
                              (y, x1))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Language.PureScript.Docs.Types.InPackage
                                           Language.PureScript.Names.ModuleName,
                                         [Language.PureScript.Docs.Types.Declaration])>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                      <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                         Language.PureScript.Docs.Types.PackageError>_N
                                                                                                      <Data.Functor.Identity.Identity>_R
                                                                                                      <(Language.PureScript.Docs.Types.InPackage
                                                                                                          Language.PureScript.Names.ModuleName,
                                                                                                        [Language.PureScript.Docs.Types.Declaration])>_N)) } }) -}
c8fe35655f14baa168275ba66fa76625
  asModule4 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.PackageError
      Data.Functor.Identity.Identity
      [Language.PureScript.Docs.Types.Declaration]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Language.PureScript.Docs.Types.Declaration
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asDeclaration1
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Docs.Types.Declaration>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                        <Language.PureScript.Docs.Types.PackageError>_N
                                                                                        <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Declaration>_N)) -}
6c9fa93b21dde48eaee9fa8c9fa31776
  asModule5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asModule6) -}
988dff8d9787d704adab1963c9bb3c3e
  asModule6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("declarations"#) -}
9d2ca16c4700883c55bd0ae53037fa85
  asModule7 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (Language.PureScript.Docs.Types.InPackage
               Language.PureScript.Names.ModuleName))
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (eta :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Language.PureScript.Docs.Types.asInPackage1
                         @ Language.PureScript.Names.ModuleName
                         Language.PureScript.Docs.Types.asModule8
                           `cast`
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                   <Control.Monad.Trans.Except.ExceptT
                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                         Language.PureScript.Docs.Types.ManifestError)
                                      Data.Functor.Identity.Identity>_R
                                   <Language.PureScript.Names.ModuleName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                        <Language.PureScript.Docs.Types.ManifestError>_N
                                                                                        <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.ModuleName>_N)
                         eta)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.ManifestError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName>_N ; Data.Functor.Identity.N:Identity[0]
                                                                            <Data.Either.Either
                                                                               (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                  Language.PureScript.Docs.Types.ManifestError)
                                                                               (Language.PureScript.Docs.Types.InPackage
                                                                                  Language.PureScript.Names.ModuleName)>_R) of wild {
                   Data.Either.Left x1
                   -> case eta of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                      case (Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Names.ModuleName
                              @ Language.PureScript.Docs.Types.PackageError
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Names.$fFromJSONModuleName
                              ww1
                              ww2)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.Names.ModuleName>_N ; Data.Functor.Identity.N:Identity[0]
                                                                               <Data.Either.Either
                                                                                  (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                     Language.PureScript.Docs.Types.PackageError)
                                                                                  Language.PureScript.Names.ModuleName>_R) of wild1 {
                        Data.Either.Left x2
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Language.PureScript.Docs.Types.InPackage
                                   Language.PureScript.Names.ModuleName)
                              x2)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Language.PureScript.Docs.Types.InPackage
                                           Language.PureScript.Names.ModuleName)>_R))
                        Data.Either.Right y
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Language.PureScript.Docs.Types.InPackage
                                   Language.PureScript.Names.ModuleName)
                              (Language.PureScript.Docs.Types.Local
                                 @ Language.PureScript.Names.ModuleName
                                 y))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Language.PureScript.Docs.Types.InPackage
                                           Language.PureScript.Names.ModuleName)>_R)) } }
                   Data.Either.Right y1
                   -> (Data.Either.Right
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ (Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName)
                         y1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (Language.PureScript.Docs.Types.InPackage
                                      Language.PureScript.Names.ModuleName)>_R)) }) -}
5662bfe6c53c8ace94ed2f152ffa0c6f
  asModule8 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.ManifestError)
         Data.Functor.Identity.Identity
         Language.PureScript.Names.ModuleName
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Data.Aeson.BetterErrors.Internal.$wfromAesonParser
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Names.ModuleName
                   @ Language.PureScript.Docs.Types.ManifestError
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Names.$fFromJSONModuleName
                   ww1
                   ww2 }) -}
e7074f18cb4d2bf05851f278266eea8d
  asModule9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.asModule10) -}
bcba075202d1efd0828c9ae111b32b6c
  asModuleMap ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      (Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Web.Bower.PackageMeta.Internal.PackageName)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asModuleMap1
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (Data.Map.Internal.Map
                                      Language.PureScript.Names.ModuleName
                                      Web.Bower.PackageMeta.Internal.PackageName)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                    Language.PureScript.Docs.Types.PackageError>_N
                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                 <Data.Map.Internal.Map
                                                                                                    Language.PureScript.Names.ModuleName
                                                                                                    Web.Bower.PackageMeta.Internal.PackageName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                <*>_N
                                                                                                                                                                <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                      Language.PureScript.Docs.Types.PackageError)
                                                                                                                                                                   Data.Functor.Identity.Identity>_R
                                                                                                                                                                <Data.Map.Internal.Map
                                                                                                                                                                   Language.PureScript.Names.ModuleName
                                                                                                                                                                   Web.Bower.PackageMeta.Internal.PackageName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                             <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                                                                             <Data.Functor.Identity.Identity>_R) <Data.Map.Internal.Map
                                                                                                                                                                                                                                                                    Language.PureScript.Names.ModuleName
                                                                                                                                                                                                                                                                    Web.Bower.PackageMeta.Internal.PackageName>_N)) -}
4ffaab10cfaa0feb3f41ac3329569687
  asModuleMap1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         (Data.Map.Internal.Map
            Language.PureScript.Names.ModuleName
            Web.Bower.PackageMeta.Internal.PackageName)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Language.PureScript.Docs.Types.asModuleMap2
                         `cast`
                       (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                            <Language.PureScript.Docs.Types.PackageError>_N
                            <Data.Functor.Identity.Identity>_R <[(Language.PureScript.Names.ModuleName,
                                                                  Web.Bower.PackageMeta.Internal.PackageName)]>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                        <*>_N
                                                                                                                        <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                        <Control.Monad.Trans.Except.ExceptT
                                                                                                                           (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                              Language.PureScript.Docs.Types.PackageError)
                                                                                                                           Data.Functor.Identity.Identity>_R
                                                                                                                        <[(Language.PureScript.Names.ModuleName,
                                                                                                                           Web.Bower.PackageMeta.Internal.PackageName)]>_N)
                         x1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <[(Language.PureScript.Names.ModuleName,
                              Web.Bower.PackageMeta.Internal.PackageName)]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                    <Data.Either.Either
                                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                                       [(Language.PureScript.Names.ModuleName,
                                                                                         Web.Bower.PackageMeta.Internal.PackageName)]>_R) of wild {
                   Data.Either.Left x2
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Language.PureScript.Docs.Types.PackageError)
                        @ (Data.Map.Internal.Map
                             Language.PureScript.Names.ModuleName
                             Web.Bower.PackageMeta.Internal.PackageName)
                        x2
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Language.PureScript.Docs.Types.PackageError)
                        @ (Data.Map.Internal.Map
                             Language.PureScript.Names.ModuleName
                             Web.Bower.PackageMeta.Internal.PackageName)
                        (Language.PureScript.Docs.Types.$sfromList
                           @ Web.Bower.PackageMeta.Internal.PackageName
                           y) }) -}
1587269655815105cb5ff81692b55dce
  asModuleMap2 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.PackageError
      Data.Functor.Identity.Identity
      [(Language.PureScript.Names.ModuleName,
        Web.Bower.PackageMeta.Internal.PackageName)]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInObjectWithKey
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Language.PureScript.Names.ModuleName
                   @ Web.Bower.PackageMeta.Internal.PackageName
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asModuleMap4
                   Language.PureScript.Docs.Types.asModuleMap3
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <Web.Bower.PackageMeta.Internal.PackageName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                <*>_N
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                      Language.PureScript.Docs.Types.PackageError)
                                                                                                   Data.Functor.Identity.Identity>_R
                                                                                                <Web.Bower.PackageMeta.Internal.PackageName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                           <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                           <Data.Functor.Identity.Identity>_R) <Web.Bower.PackageMeta.Internal.PackageName>_N))) -}
3e38035ce5033c6fa70404f0d1d962d1
  asModuleMap3 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Web.Bower.PackageMeta.Internal.PackageName)
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Unfolding: (\ (w3 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w3 of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 case ww2 of wild {
                   DEFAULT
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ Web.Bower.PackageMeta.Internal.PackageName
                         (Data.Aeson.BetterErrors.Internal.BadSchema
                            @ Language.PureScript.Docs.Types.PackageError
                            (ww1
                               `cast`
                             (Data.DList.N:DList[0]
                                  <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                               (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                            (Data.Aeson.BetterErrors.Internal.WrongType
                               @ Language.PureScript.Docs.Types.PackageError
                               Data.Aeson.BetterErrors.Internal.TyString
                               wild)))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   Web.Bower.PackageMeta.Internal.PackageName>_R))
                   Data.Aeson.Types.Internal.String t
                   -> case Web.Bower.PackageMeta.Internal.mkPackageName t of wild1 {
                        Data.Either.Left err
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Web.Bower.PackageMeta.Internal.PackageName
                              (Data.Aeson.BetterErrors.Internal.BadSchema
                                 @ Language.PureScript.Docs.Types.PackageError
                                 (ww1
                                    `cast`
                                  (Data.DList.N:DList[0]
                                       <Data.Aeson.BetterErrors.Internal.PathPiece>_R)
                                    (GHC.Types.[] @ Data.Aeson.BetterErrors.Internal.PathPiece))
                                 (Data.Aeson.BetterErrors.Internal.CustomError
                                    @ Language.PureScript.Docs.Types.PackageError
                                    (Language.PureScript.Docs.Types.ErrorInPackageMeta
                                       (Web.Bower.PackageMeta.Internal.InvalidPackageName err)))))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Web.Bower.PackageMeta.Internal.PackageName>_R))
                        Data.Either.Right n
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ Web.Bower.PackageMeta.Internal.PackageName
                              n)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        Web.Bower.PackageMeta.Internal.PackageName>_R)) } } }) -}
4dfd1b03c76e92f71b5a23d1a6f60db5
  asModuleMap4 ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Language.PureScript.Docs.Types.PackageError
         Language.PureScript.Names.ModuleName
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m2,
     Unfolding: (\ (x1 :: Data.Text.Internal.Text) ->
                 Data.Either.Right
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Language.PureScript.Names.ModuleName
                   (Language.PureScript.Names.moduleNameFromString_splitProperNames
                      @ 'Language.PureScript.Names.Namespace
                      x1)
                     `cast`
                   (Sym (Language.PureScript.Names.N:ModuleName[0]))) -}
4c53fd3a3fefb97edefee66c9f3b9ec7
  asNotYetKnown ::
    Data.Aeson.BetterErrors.Internal.Parse
      e Language.PureScript.Docs.Types.NotYetKnown
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(1*C1(U),1*U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.$fFromJSONNotYetKnown1
                  `cast`
                (forall (e :: <*>_N).
                 (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError e)
                                   Language.PureScript.Docs.Types.NotYetKnown>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                             <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                e>_N
                                                                                             <Data.Functor.Identity.Identity>_R
                                                                                             <Language.PureScript.Docs.Types.NotYetKnown>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                          <*>_N
                                                                                                                                                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                          <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                e)
                                                                                                                                                             Data.Functor.Identity.Identity>_R
                                                                                                                                                          <Language.PureScript.Docs.Types.NotYetKnown>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                     <e>_N
                                                                                                                                                                                                                     <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.NotYetKnown>_N)) -}
a7ca56c0b412e1aa79dcca60a21bc733
  asPackage ::
    Data.Version.Version
    -> (forall e. Data.Aeson.BetterErrors.Internal.Parse e a)
    -> Data.Aeson.BetterErrors.Internal.Parse
         Language.PureScript.Docs.Types.PackageError
         (Language.PureScript.Docs.Types.Package a)
  {- Arity: 3, Strictness: <L,1*U(U,U)><L,C(U)><L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.$fFromJSONPackage7
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Version.Version>_R
                 ->_R <forall e. Data.Aeson.BetterErrors.Internal.Parse e a>_R
                 ->_R (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                       ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <Language.PureScript.Docs.Types.Package
                                        a>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                           <*>_N
                                                           <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                           <Control.Monad.Trans.Except.ExceptT
                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                 Language.PureScript.Docs.Types.PackageError)
                                                              Data.Functor.Identity.Identity>_R
                                                           <Language.PureScript.Docs.Types.Package
                                                              a>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                               <Language.PureScript.Docs.Types.PackageError>_N
                                                                               <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Package
                                                                                                                      a>_N)) -}
f70eb663e87fb206de1a6d4d60a511d8
  asQualifiedIdent ::
    Data.Aeson.BetterErrors.Internal.Parse
      e
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.$sfromAesonParser2
                  `cast`
                (forall (e :: <*>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                            <e>_N
                                                                            <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.Qualified
                                                                                                                   Language.PureScript.Names.Ident>_N) -}
d37179e76a8a17f4a67a18b2de9a5825
  asQualifiedProperName ::
    Data.Aeson.BetterErrors.Internal.Parse
      e
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName a))
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (0, True, True)
                (\ @ e @ a :: Language.PureScript.Names.ProperNameType ->
                 Language.PureScript.Docs.Types.asConstraint5 @ a @ e)
                  `cast`
                (forall (e :: <*>_N) (a :: <Language.PureScript.Names.ProperNameType>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                a)>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                  <e>_N
                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.Qualified
                                                                                         (Language.PureScript.Names.ProperName
                                                                                            a)>_N) -}
8cc4faa323552359651998927153263d
  asReExport ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      (Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName,
       [Language.PureScript.Docs.Types.Declaration])
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asModule3
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Data.Functor.Identity.Identity>_R
                          <(Language.PureScript.Docs.Types.InPackage
                              Language.PureScript.Names.ModuleName,
                            [Language.PureScript.Docs.Types.Declaration])>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                         <Language.PureScript.Docs.Types.PackageError>_N
                                                                                         <Data.Functor.Identity.Identity>_R) <(Language.PureScript.Docs.Types.InPackage
                                                                                                                                 Language.PureScript.Names.ModuleName,
                                                                                                                               [Language.PureScript.Docs.Types.Declaration])>_N) -}
3d6208c763b688f6f0115c9a0104c21c
  asResolvedDependencies ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      [(Web.Bower.PackageMeta.Internal.PackageName,
        Data.Version.Version)]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInObjectWithKey
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Web.Bower.PackageMeta.Internal.PackageName
                   @ Data.Version.Version
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.parsePackageName'
                   Language.PureScript.Docs.Types.asResolvedDependencies1
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <Data.Version.Version>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                          <*>_N
                                                                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                          <Control.Monad.Trans.Except.ExceptT
                                                                             (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                Language.PureScript.Docs.Types.PackageError)
                                                                             Data.Functor.Identity.Identity>_R
                                                                          <Data.Version.Version>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                               <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                               <Data.Functor.Identity.Identity>_R) <Data.Version.Version>_N))) -}
3af7db08f61a9347d742cbe28d059bfd
  asResolvedDependencies1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Data.Version.Version)
  {- Arity: 1, Strictness: <S(LS),1*U(C(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wasVersion ww1 ww2 }) -}
ccc8b64d55b25216bd1355e9bd490e70
  asResolvedDependencies2 ::
    Data.Aeson.BetterErrors.Internal.ErrorSpecifics
      Language.PureScript.Docs.Types.PackageError
  {- HasNoCafRefs, Strictness: m6,
     Unfolding: (Data.Aeson.BetterErrors.Internal.CustomError
                   @ Language.PureScript.Docs.Types.PackageError
                   Language.PureScript.Docs.Types.InvalidVersion) -}
8e50cb851d3e57e99d8de8ca8470aa28
  asResolvedDependencies3 ::
    Text.ParserCombinators.ReadP.P Data.Version.Version
  {- Unfolding: (case Data.Version.$wparseVersion
                        @ Data.Version.Version
                        (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                           @ Data.Version.Version) of ww { Unit# ww1 ->
                 Text.ParserCombinators.ReadP.Get @ Data.Version.Version ww1 }) -}
6d0eecda0c29bdaf6d1949543058ae7c
  asResolvedDependencies4 ::
    (Data.Version.Version, [GHC.Types.Char]) -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: (Data.Version.Version, [GHC.Types.Char])) ->
                 case x1 of wild { (,) ds1 y ->
                 case y of wild1 {
                   [] -> GHC.Types.True : ds2 ds3 -> GHC.Types.False } }) -}
0e9c7c02622ace99752c1acfa9f38830
  asSourceAnn ::
    Data.Aeson.BetterErrors.Internal.Parse
      e Language.PureScript.AST.SourcePos.SourceAnn
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.$sfromAesonParser6
                  `cast`
                (forall (e :: <*>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.SourcePos.SourceAnn>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                      <e>_N
                                                                                      <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.SourcePos.SourceAnn>_N) -}
85ce9dade933d3676e6f25e6b8551441
  asSourcePos ::
    Data.Aeson.BetterErrors.Internal.Parse
      e Language.PureScript.AST.SourcePos.SourcePos
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asChildDeclaration7
                  `cast`
                (forall (e :: <*>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.SourcePos.SourcePos>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                      <e>_N
                                                                                      <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.SourcePos.SourcePos>_N) -}
14b021ffef46c1c5110060b1b6547e89
  asSourceSpan ::
    Data.Aeson.BetterErrors.Internal.Parse
      e Language.PureScript.AST.SourcePos.SourceSpan
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asChildDeclaration4
                  `cast`
                (forall (e :: <*>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.AST.SourcePos.SourceSpan>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                       <e>_N
                                                                                       <Data.Functor.Identity.Identity>_R) <Language.PureScript.AST.SourcePos.SourceSpan>_N) -}
b9a4ecd123aae85717c74b23a5c81f32
  asType ::
    Data.Aeson.BetterErrors.Internal.Parse
      e Language.PureScript.Docs.Types.Type'
  {- Arity: 1, Strictness: <S,1*U(1*C1(U),U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.$sfromAesonParser5
                  `cast`
                (forall (e :: <*>_N).
                 Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                          <Control.Monad.Trans.Except.ExceptT
                             (Data.Aeson.BetterErrors.Internal.ParseError e)
                             Data.Functor.Identity.Identity>_R
                          <Language.PureScript.Docs.Types.Type'>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                               <e>_N
                                                                               <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Type'>_N) -}
93beb3e2a6d706a3a8d0bf1c73715d91
  asTypeArguments ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError
      [(Data.Text.Internal.Text,
        GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.PackageError
                   @ (Data.Text.Internal.Text,
                      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.asTypeArguments1
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                                Data.Functor.Identity.Identity>_R
                             <(Data.Text.Internal.Text,
                               GHC.Base.Maybe
                                 Language.PureScript.Docs.Types.Kind')>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                      <Language.PureScript.Docs.Types.PackageError>_N
                                                                                      <Data.Functor.Identity.Identity>_R) <(Data.Text.Internal.Text,
                                                                                                                            GHC.Base.Maybe
                                                                                                                              Language.PureScript.Docs.Types.Kind')>_N)) -}
1ac39b7f136e2d5fbb9d84b4cbbca3f6
  asTypeArguments1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Data.Functor.Identity.Identity
         (Data.Text.Internal.Text,
          GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (r1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Data.Aeson.BetterErrors.Internal.$wnth
                         @ Data.Functor.Identity.Identity
                         @ Language.PureScript.Docs.Types.PackageError
                         @ Data.Text.Internal.Text
                         Data.Functor.Identity.$fMonadIdentity
                         Language.PureScript.Docs.Types.$fFromJSONPackage6
                         Language.PureScript.Docs.Types.asChildDeclaration16
                           `cast`
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                   <Control.Monad.Trans.Except.ExceptT
                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                         Language.PureScript.Docs.Types.PackageError)
                                      Data.Functor.Identity.Identity>_R
                                   <Data.Text.Internal.Text>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                           <Language.PureScript.Docs.Types.PackageError>_N
                                                                           <Data.Functor.Identity.Identity>_R) <Data.Text.Internal.Text>_N)
                         r1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError>_N
                           <Data.Functor.Identity.Identity>_R
                           <Data.Text.Internal.Text>_N ; Data.Functor.Identity.N:Identity[0]
                                                             <Data.Either.Either
                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                   Language.PureScript.Docs.Types.PackageError)
                                                                Data.Text.Internal.Text>_R) of wild {
                   Data.Either.Left x1
                   -> (Data.Either.Left
                         @ (Data.Aeson.BetterErrors.Internal.ParseError
                              Language.PureScript.Docs.Types.PackageError)
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                         x1)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError)
                                   (Data.Text.Internal.Text,
                                    GHC.Base.Maybe
                                      Language.PureScript.Docs.Types.Kind')>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                           <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                              Language.PureScript.Docs.Types.PackageError>_N
                                                                                           <Data.Functor.Identity.Identity>_R
                                                                                           <(Data.Text.Internal.Text,
                                                                                             GHC.Base.Maybe
                                                                                               Language.PureScript.Docs.Types.Kind')>_N))
                   Data.Either.Right y
                   -> case (Data.Aeson.BetterErrors.Internal.$wnth
                              @ Data.Functor.Identity.Identity
                              @ Language.PureScript.Docs.Types.PackageError
                              @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                              Data.Functor.Identity.$fMonadIdentity
                              Language.PureScript.Docs.Types.asChildDeclaration8
                              Language.PureScript.Docs.Types.asTypeArguments2
                                `cast`
                              ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                              <Data.Aeson.BetterErrors.Internal.ParseError
                                                 Language.PureScript.Docs.Types.PackageError>_N
                                              <Data.Functor.Identity.Identity>_R
                                              <GHC.Base.Maybe
                                                 Language.PureScript.Docs.Types.Kind'>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                                                          (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                             Language.PureScript.Docs.Types.PackageError)
                                                                                                          Data.Functor.Identity.Identity>_R
                                                                                                       <GHC.Base.Maybe
                                                                                                          Language.PureScript.Docs.Types.Kind'>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                              <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                              <Data.Functor.Identity.Identity>_R) <GHC.Base.Maybe
                                                                                                                                                                                                     Language.PureScript.Docs.Types.Kind'>_N))
                              r1)
                             `cast`
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.Maybe
                                   Language.PureScript.Docs.Types.Kind'>_N ; Data.Functor.Identity.N:Identity[0]
                                                                                 <Data.Either.Either
                                                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                       Language.PureScript.Docs.Types.PackageError)
                                                                                    (GHC.Base.Maybe
                                                                                       Language.PureScript.Docs.Types.Kind')>_R) of wild1 {
                        Data.Either.Left e1
                        -> (Data.Either.Left
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Data.Text.Internal.Text,
                                 GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                              e1)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Data.Text.Internal.Text,
                                         GHC.Base.Maybe
                                           Language.PureScript.Docs.Types.Kind')>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   Language.PureScript.Docs.Types.PackageError>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <(Data.Text.Internal.Text,
                                                                                                  GHC.Base.Maybe
                                                                                                    Language.PureScript.Docs.Types.Kind')>_N))
                        Data.Either.Right x1
                        -> (Data.Either.Right
                              @ (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError)
                              @ (Data.Text.Internal.Text,
                                 GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                              (y, x1))
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        (Data.Aeson.BetterErrors.Internal.ParseError
                                           Language.PureScript.Docs.Types.PackageError)
                                        (Data.Text.Internal.Text,
                                         GHC.Base.Maybe
                                           Language.PureScript.Docs.Types.Kind')>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   Language.PureScript.Docs.Types.PackageError>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <(Data.Text.Internal.Text,
                                                                                                  GHC.Base.Maybe
                                                                                                    Language.PureScript.Docs.Types.Kind')>_N)) } }) -}
f94bee40e1a3f7a7d0537fe975965b24
  asTypeArguments2 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind'))
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$wv3 ww1 ww2 }) -}
331505001c24c9d80cbcba6e7e7c65f9
  asUploadedPackage ::
    Data.Version.Version
    -> Data.Aeson.BetterErrors.Internal.Parse
         Language.PureScript.Docs.Types.PackageError
         Language.PureScript.Docs.Types.UploadedPackage
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asUploadedPackage1
                  `cast`
                (<Data.Version.Version>_R
                 ->_R (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                       ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <Language.PureScript.Docs.Types.Package
                                        Language.PureScript.Docs.Types.NotYetKnown>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                    <*>_N
                                                                                                    <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                    <Control.Monad.Trans.Except.ExceptT
                                                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                          Language.PureScript.Docs.Types.PackageError)
                                                                                                       Data.Functor.Identity.Identity>_R
                                                                                                    <Language.PureScript.Docs.Types.Package
                                                                                                       Language.PureScript.Docs.Types.NotYetKnown>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                 <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                                 <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Package
                                                                                                                                                                                                        Language.PureScript.Docs.Types.NotYetKnown>_N)) -}
9625af7b439d95cbc67d7e1acaddfbed
  asUploadedPackage1 ::
    Data.Version.Version
    -> Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (Language.PureScript.Docs.Types.Package
               Language.PureScript.Docs.Types.NotYetKnown))
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (minVersion :: Data.Version.Version) ->
                 Language.PureScript.Docs.Types.$fFromJSONPackage7
                   @ Language.PureScript.Docs.Types.NotYetKnown
                   minVersion
                   Language.PureScript.Docs.Types.$fFromJSONNotYetKnown1
                     `cast`
                   (forall (e :: <*>_N).
                    (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      (Data.Aeson.BetterErrors.Internal.ParseError e)
                                      Language.PureScript.Docs.Types.NotYetKnown>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                   e>_N
                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                <Language.PureScript.Docs.Types.NotYetKnown>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                             <*>_N
                                                                                                                                                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                   e)
                                                                                                                                                                Data.Functor.Identity.Identity>_R
                                                                                                                                                             <Language.PureScript.Docs.Types.NotYetKnown>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                        <e>_N
                                                                                                                                                                                                                        <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.NotYetKnown>_N))) -}
9d55c01f6f3a7143b51c81c55a35b589
  asVerifiedPackage ::
    Data.Version.Version
    -> Data.Aeson.BetterErrors.Internal.Parse
         Language.PureScript.Docs.Types.PackageError
         Language.PureScript.Docs.Types.VerifiedPackage
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asVerifiedPackage1
                  `cast`
                (<Data.Version.Version>_R
                 ->_R (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                       ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError
                                        Language.PureScript.Docs.Types.PackageError>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <Language.PureScript.Docs.Types.Package
                                        Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                   <*>_N
                                                                                                   <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                   <Control.Monad.Trans.Except.ExceptT
                                                                                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                         Language.PureScript.Docs.Types.PackageError)
                                                                                                      Data.Functor.Identity.Identity>_R
                                                                                                   <Language.PureScript.Docs.Types.Package
                                                                                                      Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                               <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                               <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Package
                                                                                                                                                                                                      Language.PureScript.Docs.Types.GithubUser>_N)) -}
57d9445f7102c6ea10b7ab25a00712af
  asVerifiedPackage1 ::
    Data.Version.Version
    -> Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            (Language.PureScript.Docs.Types.Package
               Language.PureScript.Docs.Types.GithubUser))
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (minVersion :: Data.Version.Version) ->
                 Language.PureScript.Docs.Types.$fFromJSONPackage7
                   @ Language.PureScript.Docs.Types.GithubUser
                   minVersion
                   Language.PureScript.Docs.Types.$fFromJSONGithubUser4
                     `cast`
                   (forall (e :: <*>_N).
                    (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      (Data.Aeson.BetterErrors.Internal.ParseError e)
                                      Language.PureScript.Docs.Types.GithubUser>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                               <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                  e>_N
                                                                                               <Data.Functor.Identity.Identity>_R
                                                                                               <Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                           <*>_N
                                                                                                                                                           <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                           <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                 e)
                                                                                                                                                              Data.Functor.Identity.Identity>_R
                                                                                                                                                           <Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                     <e>_N
                                                                                                                                                                                                                     <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.GithubUser>_N))) -}
3d2f873d6cba71e608ce01b78f13e5eb
  asVersion ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.PackageError Data.Version.Version
  {- Arity: 1, Strictness: <S(LS),1*U(C(U),1*U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.asResolvedDependencies1
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.PackageError>_N
                                <Data.Functor.Identity.Identity>_R
                                <Data.Version.Version>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                       <*>_N
                                                                       <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                          (Data.Aeson.BetterErrors.Internal.ParseError
                                                                             Language.PureScript.Docs.Types.PackageError)
                                                                          Data.Functor.Identity.Identity>_R
                                                                       <Data.Version.Version>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                            <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                            <Data.Functor.Identity.Identity>_R) <Data.Version.Version>_N)) -}
028e93806098dbbafee82c3b4e902421
  assocListToJSON ::
    (a -> Data.Text.Internal.Text)
    -> (b -> Data.Text.Internal.Text)
    -> [(a, b)]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,C(U(U,U,U))><L,C(U(U,U,U))><S,1*U>,
     Unfolding: (\ @ a
                   @ b
                   (f21 :: a -> Data.Text.Internal.Text)
                   (g :: b -> Data.Text.Internal.Text)
                   (xs :: [(a, b)]) ->
                 letrec {
                   go2 :: [(a, b)]
                          -> Data.HashMap.Base.HashMap
                               Data.Text.Internal.Text Data.Aeson.Types.Internal.Value
                          -> Data.Aeson.Types.Internal.Value
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (ds :: [(a, b)])
                       (eta :: Data.HashMap.Base.HashMap
                                 Data.Text.Internal.Text Data.Aeson.Types.Internal.Value) ->
                     case ds of wild {
                       []
                       -> case eta of dt { DEFAULT ->
                          Data.Aeson.Types.Internal.Object dt }
                       : y ys
                       -> case eta of z23 { DEFAULT ->
                          case g (case y of wild1 { (,) x1 y1 ->
                                  y1 }) of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                          case f21
                                 (case y of wild1 { (,) x1 y1 ->
                                  x1 }) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          go2
                            ys
                            (Data.Aeson.Types.Internal.$w$sunsafeInsert
                               @ Data.Aeson.Types.Internal.Value
                               ww1
                               ww2
                               ww3
                               (Data.Aeson.Types.Internal.String dt)
                               z23) } } } }
                 } in
                 go2
                   xs
                   (Data.HashMap.Base.Empty
                      @ Data.Text.Internal.Text
                      @ Data.Aeson.Types.Internal.Value)) -}
bde13364945ba68c0049065e4a0cb238
  bookmarksAsModuleMap ::
    Data.Aeson.BetterErrors.Internal.Parse
      Language.PureScript.Docs.Types.ManifestError
      (Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Web.Bower.PackageMeta.Internal.PackageName)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.bookmarksAsModuleMap1
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                      Web.Bower.PackageMeta.Internal.BowerError)
                                   (Data.Map.Internal.Map
                                      Language.PureScript.Names.ModuleName
                                      Web.Bower.PackageMeta.Internal.PackageName)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                    Web.Bower.PackageMeta.Internal.BowerError>_N
                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                 <Data.Map.Internal.Map
                                                                                                    Language.PureScript.Names.ModuleName
                                                                                                    Web.Bower.PackageMeta.Internal.PackageName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                <*>_N
                                                                                                                                                                <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                      Web.Bower.PackageMeta.Internal.BowerError)
                                                                                                                                                                   Data.Functor.Identity.Identity>_R
                                                                                                                                                                <Data.Map.Internal.Map
                                                                                                                                                                   Language.PureScript.Names.ModuleName
                                                                                                                                                                   Web.Bower.PackageMeta.Internal.PackageName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                             <Web.Bower.PackageMeta.Internal.BowerError>_N
                                                                                                                                                                                                                             <Data.Functor.Identity.Identity>_R) <Data.Map.Internal.Map
                                                                                                                                                                                                                                                                    Language.PureScript.Names.ModuleName
                                                                                                                                                                                                                                                                    Web.Bower.PackageMeta.Internal.PackageName>_N)) -}
dd19d251ddb738c1737afb48ba302ee3
  bookmarksAsModuleMap1 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Web.Bower.PackageMeta.Internal.BowerError)
         (Data.Map.Internal.Map
            Language.PureScript.Names.ModuleName
            Web.Bower.PackageMeta.Internal.PackageName)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x1 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (Language.PureScript.Docs.Types.bookmarksAsModuleMap3
                         `cast`
                       (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                            <Web.Bower.PackageMeta.Internal.BowerError>_N
                            <Data.Functor.Identity.Identity>_R <[Language.PureScript.Docs.Types.InPackage
                                                                   Language.PureScript.Names.ModuleName]>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                  <*>_N
                                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                        Web.Bower.PackageMeta.Internal.BowerError)
                                                                                                                     Data.Functor.Identity.Identity>_R
                                                                                                                  <[Language.PureScript.Docs.Types.InPackage
                                                                                                                      Language.PureScript.Names.ModuleName]>_N)
                         x1)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError
                              Web.Bower.PackageMeta.Internal.BowerError>_N
                           <Data.Functor.Identity.Identity>_R
                           <[Language.PureScript.Docs.Types.InPackage
                               Language.PureScript.Names.ModuleName]>_N ; Data.Functor.Identity.N:Identity[0]
                                                                              <Data.Either.Either
                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                    Web.Bower.PackageMeta.Internal.BowerError)
                                                                                 [Language.PureScript.Docs.Types.InPackage
                                                                                    Language.PureScript.Names.ModuleName]>_R) of wild {
                   Data.Either.Left x2
                   -> Data.Either.Left
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Web.Bower.PackageMeta.Internal.BowerError)
                        @ (Data.Map.Internal.Map
                             Language.PureScript.Names.ModuleName
                             Web.Bower.PackageMeta.Internal.PackageName)
                        x2
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ (Data.Aeson.BetterErrors.Internal.ParseError
                             Web.Bower.PackageMeta.Internal.BowerError)
                        @ (Data.Map.Internal.Map
                             Language.PureScript.Names.ModuleName
                             Web.Bower.PackageMeta.Internal.PackageName)
                        (Language.PureScript.Docs.Types.$sfromList
                           @ Web.Bower.PackageMeta.Internal.PackageName
                           (Data.Maybe.mapMaybe
                              @ (Language.PureScript.Docs.Types.InPackage
                                   Language.PureScript.Names.ModuleName)
                              @ (Language.PureScript.Names.ModuleName,
                                 Web.Bower.PackageMeta.Internal.PackageName)
                              Language.PureScript.Docs.Types.bookmarksAsModuleMap2
                              y)) }) -}
5e1d5e28b55cec4ed0e39d60db921250
  bookmarksAsModuleMap2 ::
    Language.PureScript.Docs.Types.InPackage
      Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe
         (Language.PureScript.Names.ModuleName,
          Web.Bower.PackageMeta.Internal.PackageName)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.InPackage
                            Language.PureScript.Names.ModuleName) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.Local ds1
                   -> GHC.Base.Nothing
                        @ (Language.PureScript.Names.ModuleName,
                           Web.Bower.PackageMeta.Internal.PackageName)
                   Language.PureScript.Docs.Types.FromDep pkgName mn
                   -> GHC.Base.Just
                        @ (Language.PureScript.Names.ModuleName,
                           Web.Bower.PackageMeta.Internal.PackageName)
                        (mn, pkgName) }) -}
4c9c24aca5644dae23f9b9f537c26bd7
  bookmarksAsModuleMap3 ::
    Data.Aeson.BetterErrors.Internal.ParseT
      Language.PureScript.Docs.Types.ManifestError
      Data.Functor.Identity.Identity
      [Language.PureScript.Docs.Types.InPackage
         Language.PureScript.Names.ModuleName]
  {- Unfolding: (Data.Aeson.BetterErrors.Internal.$weachInArray
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.ManifestError
                   @ (Language.PureScript.Docs.Types.InPackage
                        Language.PureScript.Names.ModuleName)
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.bookmarksAsModuleMap4
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Web.Bower.PackageMeta.Internal.BowerError)
                                Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Docs.Types.InPackage
                                Language.PureScript.Names.ModuleName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                    <Web.Bower.PackageMeta.Internal.BowerError>_N
                                                                                    <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.InPackage
                                                                                                                           Language.PureScript.Names.ModuleName>_N)) -}
749f2077d976e95e40acf041dba36f37
  bookmarksAsModuleMap4 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Web.Bower.PackageMeta.Internal.BowerError)
         Data.Functor.Identity.Identity
         (Language.PureScript.Docs.Types.InPackage
            Language.PureScript.Names.ModuleName)
  {- Arity: 1,
     Unfolding: (Language.PureScript.Docs.Types.asInPackage1
                   @ Language.PureScript.Names.ModuleName
                   Language.PureScript.Docs.Types.bookmarksAsModuleMap5
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                             <Control.Monad.Trans.Except.ExceptT
                                (Data.Aeson.BetterErrors.Internal.ParseError
                                   Language.PureScript.Docs.Types.ManifestError)
                                Data.Functor.Identity.Identity>_R
                             <Language.PureScript.Names.ModuleName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                  <Language.PureScript.Docs.Types.ManifestError>_N
                                                                                  <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.ModuleName>_N)) -}
d621d7acaf9667448f4f0860f78f5344
  bookmarksAsModuleMap5 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Control.Monad.Trans.Except.ExceptT
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.ManifestError)
         Data.Functor.Identity.Identity
         Language.PureScript.Names.ModuleName
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ (w2 :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 Data.Aeson.BetterErrors.Internal.$wnth
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.Docs.Types.ManifestError
                   @ Language.PureScript.Names.ModuleName
                   Data.Functor.Identity.$fMonadIdentity
                   Language.PureScript.Docs.Types.$fFromJSONPackage6
                   Language.PureScript.Docs.Types.bookmarksAsModuleMap6
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      (Data.Aeson.BetterErrors.Internal.ParseError
                                         Web.Bower.PackageMeta.Internal.BowerError)
                                      Language.PureScript.Names.ModuleName>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                          <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                             Web.Bower.PackageMeta.Internal.BowerError>_N
                                                                                          <Data.Functor.Identity.Identity>_R
                                                                                          <Language.PureScript.Names.ModuleName>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                 <*>_N
                                                                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                 <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                       Web.Bower.PackageMeta.Internal.BowerError)
                                                                                                                                                    Data.Functor.Identity.Identity>_R
                                                                                                                                                 <Language.PureScript.Names.ModuleName>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                      <Web.Bower.PackageMeta.Internal.BowerError>_N
                                                                                                                                                                                                      <Data.Functor.Identity.Identity>_R) <Language.PureScript.Names.ModuleName>_N))
                   w2) -}
aaaaf8116d17ed97503b15ebbcedbc35
  bookmarksAsModuleMap6 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Web.Bower.PackageMeta.Internal.BowerError)
         Language.PureScript.Names.ModuleName
  {- Arity: 1, Strictness: <S(LS),1*U(1*C1(U),1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case w of ww { Data.Aeson.BetterErrors.Internal.ParseReader ww1 ww2 ->
                 Language.PureScript.Docs.Types.$ww3 ww1 ww2 }) -}
cce819b6566f028d040fc57bb265fd8d
  cdeclComments ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
cce819b6566f028d040fc57bb265fd8d
  cdeclInfo ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Language.PureScript.Docs.Types.ChildDeclarationInfo
  RecSel Left Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
cce819b6566f028d040fc57bb265fd8d
  cdeclSourceSpan ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
  RecSel Left Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
cce819b6566f028d040fc57bb265fd8d
  cdeclTitle ::
    Language.PureScript.Docs.Types.ChildDeclaration
    -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.ChildDeclaration
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
c7cbf9c2ef2a4a2f9609cc6118ceadcc
  childDeclInfoNamespace ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case ds of wild { DEFAULT ->
                 Language.PureScript.Docs.RenderedCode.Types.ValueLevel }) -}
f5b8b7c09105ea95bc1204c4d79fc4e6
  childDeclInfoToString ::
    Language.PureScript.Docs.Types.ChildDeclarationInfo
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclarationInfo) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.ChildInstance ds1 ds2
                   -> Language.PureScript.Docs.Types.$fToJSONChildDeclaration18
                   Language.PureScript.Docs.Types.ChildDataConstructor ds1
                   -> Language.PureScript.Docs.Types.$fToJSONChildDeclaration15
                   Language.PureScript.Docs.Types.ChildTypeClassMember ds1
                   -> Language.PureScript.Docs.Types.$fToJSONChildDeclaration12 }) -}
04cc35c72cef2342b4a0cb61ab45398c
  convertFundepsToStrings ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')]
    -> [Language.PureScript.Environment.FunctionalDependency]
    -> [([Data.Text.Internal.Text], [Data.Text.Internal.Text])]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (args :: [(Data.Text.Internal.Text,
                              GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')])
                   (fundeps :: [Language.PureScript.Environment.FunctionalDependency]) ->
                 let {
                   argsVec :: Data.Vector.Vector Data.Text.Internal.Text
                   = case GHC.Magic.runRW#
                            @ ('GHC.Types.TupleRep
                                 '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                            @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Data.Vector.Vector Data.Text.Internal.Text #)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.newArray#
                                    @ Data.Text.Internal.Text
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    0#
                                    (Data.Vector.Mutable.uninitialised @ Data.Text.Internal.Text)
                                    s1
                                      `cast`
                                    (GHC.Prim.State#
                                       (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                 <GHC.Prim.RealWorld>_N)))_R of ds2 { (#,#) ipv ipv1 ->
                             Language.PureScript.Docs.Types.convertFundepsToStrings_$s$wfoldlM_loop
                               ipv
                                 `cast`
                               (GHC.Prim.State#
                                  (Control.Monad.Primitive.D:R:PrimStateST[0]
                                       <GHC.Prim.RealWorld>_N))_R
                               (GHC.Base.map
                                  @ (Data.Text.Internal.Text,
                                     GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                                  @ Data.Text.Internal.Text
                                  (Data.Tuple.fst
                                     @ Data.Text.Internal.Text
                                     @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind'))
                                  args)
                               0#
                               ipv1
                                 `cast`
                               (GHC.Prim.MutableArray#
                                  (Control.Monad.Primitive.D:R:PrimStateST[0]
                                       <GHC.Prim.RealWorld>_N)
                                  <Data.Text.Internal.Text>_R)_R
                               0#
                               0# }) of ds1 { (#,#) ipv1 ipv2 ->
                     ipv2 }
                 } in
                 let {
                   $wgetArg :: GHC.Prim.Int# -> Data.Text.Internal.Text
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.<# ww 0# of lwild {
                       DEFAULT
                       -> case argsVec of v2 { Data.Vector.Vector ipv ipv1 ipv2 ->
                          case GHC.Prim.>=# ww ipv1 of lwild1 {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Text.Internal.Text
                                      ipv2
                                      (GHC.Prim.+# ipv ww) of ds3 { Unit# ipv3 ->
                               ipv3 }
                            1# -> Language.PureScript.Docs.Types.$wlvl args fundeps ww } }
                       1# -> Language.PureScript.Docs.Types.$wlvl args fundeps ww }
                 } in
                 let {
                   getArg :: GHC.Types.Int -> Data.Text.Internal.Text
                     {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ (w :: GHC.Types.Int) ->
                                    case w of ww { GHC.Types.I# ww1 -> $wgetArg ww1 }) -}
                   = \ (w :: GHC.Types.Int) ->
                     case w of ww { GHC.Types.I# ww1 -> $wgetArg ww1 }
                 } in
                 GHC.Base.map
                   @ Language.PureScript.Environment.FunctionalDependency
                   @ ([Data.Text.Internal.Text], [Data.Text.Internal.Text])
                   (\ (ds :: Language.PureScript.Environment.FunctionalDependency) ->
                    case ds of wild { Language.PureScript.Environment.FunctionalDependency from to ->
                    (GHC.Base.map
                       @ GHC.Types.Int
                       @ Data.Text.Internal.Text
                       getArg
                       from,
                     GHC.Base.map
                       @ GHC.Types.Int
                       @ Data.Text.Internal.Text
                       getArg
                       to) })
                   fundeps) -}
78c26f8f699a4902202b26da4b447ca3
  convertFundepsToStrings_$s$wfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Text.Internal.Text]
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         GHC.Prim.RealWorld Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Data.Text.Internal.Text #)
  {- Arity: 6, Strictness: <S,U><S,1*U><L,U><S,U><L,U><L,U> -}
fa1efe58f4e6215e05effe0c7820d641
  ctxGithub ::
    Language.PureScript.Docs.Types.LinksContext
    -> (Language.PureScript.Docs.Types.GithubUser,
        Language.PureScript.Docs.Types.GithubRepo)
  RecSel Left Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U,U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
fa1efe58f4e6215e05effe0c7820d641
  ctxModuleMap ::
    Language.PureScript.Docs.Types.LinksContext
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Web.Bower.PackageMeta.Internal.PackageName
  RecSel Left Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
fa1efe58f4e6215e05effe0c7820d641
  ctxPackageName ::
    Language.PureScript.Docs.Types.LinksContext
    -> Web.Bower.PackageMeta.Internal.PackageName
  RecSel Left Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
fa1efe58f4e6215e05effe0c7820d641
  ctxResolvedDependencies ::
    Language.PureScript.Docs.Types.LinksContext
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Version.Version)]
  RecSel Left Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
fa1efe58f4e6215e05effe0c7820d641
  ctxVersion ::
    Language.PureScript.Docs.Types.LinksContext -> Data.Version.Version
  RecSel Left Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
fa1efe58f4e6215e05effe0c7820d641
  ctxVersionTag ::
    Language.PureScript.Docs.Types.LinksContext
    -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.LinksContext) ->
                 case ds of wild { Language.PureScript.Docs.Types.LinksContext ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
cce819b6566f028d040fc57bb265fd8d
  declChildren ::
    Language.PureScript.Docs.Types.Declaration
    -> [Language.PureScript.Docs.Types.ChildDeclaration]
  RecSel Left Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
cce819b6566f028d040fc57bb265fd8d
  declComments ::
    Language.PureScript.Docs.Types.Declaration
    -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
cce819b6566f028d040fc57bb265fd8d
  declInfo ::
    Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.DeclarationInfo
  RecSel Left Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
bd7b1be10beee98ca18ab392b257670f
  declInfoNamespace ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.ValueDeclaration ds1
                   -> Language.PureScript.Docs.RenderedCode.Types.ValueLevel
                   Language.PureScript.Docs.Types.DataDeclaration ds1 ds2
                   -> Language.PureScript.Docs.RenderedCode.Types.TypeLevel
                   Language.PureScript.Docs.Types.ExternDataDeclaration ds1
                   -> Language.PureScript.Docs.RenderedCode.Types.TypeLevel
                   Language.PureScript.Docs.Types.TypeSynonymDeclaration ds1 ds2
                   -> Language.PureScript.Docs.RenderedCode.Types.TypeLevel
                   Language.PureScript.Docs.Types.TypeClassDeclaration ds1 ds2 ds3
                   -> Language.PureScript.Docs.RenderedCode.Types.TypeLevel
                   Language.PureScript.Docs.Types.AliasDeclaration ds1 alias
                   -> case alias of wild1 { Language.PureScript.Names.Qualified ds2 a1 ->
                      case a1 of wild2 {
                        Data.Either.Left x1
                        -> Language.PureScript.Docs.RenderedCode.Types.TypeLevel
                        Data.Either.Right y
                        -> Language.PureScript.Docs.RenderedCode.Types.ValueLevel } }
                   Language.PureScript.Docs.Types.ExternKindDeclaration
                   -> Language.PureScript.Docs.RenderedCode.Types.KindLevel }) -}
5c331e1aea6c11e3e1095b475d5dc5af
  declInfoToString ::
    Language.PureScript.Docs.Types.DeclarationInfo
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.DeclarationInfo) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.ValueDeclaration ds1
                   -> Language.PureScript.Docs.Types.declInfoToString11
                   Language.PureScript.Docs.Types.DataDeclaration ds1 ds2
                   -> Language.PureScript.Docs.Types.asDataDeclType6
                   Language.PureScript.Docs.Types.ExternDataDeclaration ds1
                   -> Language.PureScript.Docs.Types.declInfoToString9
                   Language.PureScript.Docs.Types.TypeSynonymDeclaration ds1 ds2
                   -> Language.PureScript.Docs.Types.declInfoToString7
                   Language.PureScript.Docs.Types.TypeClassDeclaration ds1 ds2 ds3
                   -> Language.PureScript.Docs.Types.declInfoToString5
                   Language.PureScript.Docs.Types.AliasDeclaration ds1 ds2
                   -> Language.PureScript.Docs.Types.declInfoToString3
                   Language.PureScript.Docs.Types.ExternKindDeclaration
                   -> Language.PureScript.Docs.Types.declInfoToString1 }) -}
278b42f8c7770cc8705463cb51b0f9a0
  declInfoToString1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.declInfoToString2) -}
63c55a606220bc14f783e3a72097dadb
  declInfoToString10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("externData"#) -}
f9dcf56dd5537b29ad66155efbc6cd51
  declInfoToString11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.declInfoToString12) -}
dadd90c24ed8c83ecdf438f53135be35
  declInfoToString12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("value"#) -}
cd080e3bb3ce7ec2c1339e5ec960c7e7
  declInfoToString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("kind"#) -}
86ddbdce3da85b3e0f0dc135582e1a32
  declInfoToString3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.declInfoToString4) -}
09c7d66bdc4dff7cf819ed19b8f9d9cd
  declInfoToString4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("alias"#) -}
43df2b4b1d6a628a5e27bc2f5261b559
  declInfoToString5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.declInfoToString6) -}
646b32a30af10ec62ddf161f1d50fcef
  declInfoToString6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("typeClass"#) -}
8b25ab4d3c5d0fb0154a5e1e4fa4036f
  declInfoToString7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.declInfoToString8) -}
21b009d7823ad16c4dff841efada4cd3
  declInfoToString8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("typeSynonym"#) -}
0d877d50a8698619db4c77fce79a0c2d
  declInfoToString9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Docs.Types.declInfoToString10) -}
cce819b6566f028d040fc57bb265fd8d
  declSourceSpan ::
    Language.PureScript.Docs.Types.Declaration
    -> GHC.Base.Maybe Language.PureScript.AST.SourcePos.SourceSpan
  RecSel Left Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
cce819b6566f028d040fc57bb265fd8d
  declTitle ::
    Language.PureScript.Docs.Types.Declaration
    -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.Declaration
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
2a0b2760533551ea3f90a17897267985
  displayPackageError ::
    Language.PureScript.Docs.Types.PackageError
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U> -}
f0b70da0dd4acc7f92cbf732323127de
  filterChildren ::
    (Language.PureScript.Docs.Types.ChildDeclaration -> GHC.Types.Bool)
    -> Language.PureScript.Docs.Types.Declaration
    -> Language.PureScript.Docs.Types.Declaration
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,C(U)><S,1*U(U,U,U,1*U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (p :: Language.PureScript.Docs.Types.ChildDeclaration
                         -> GHC.Types.Bool)
                   (decl :: Language.PureScript.Docs.Types.Declaration) ->
                 case decl of wild { Language.PureScript.Docs.Types.Declaration ds ds1 ds2 ds3 ds4 ->
                 Language.PureScript.Docs.Types.Declaration
                   ds
                   ds1
                   ds2
                   (GHC.Base.build
                      @ Language.PureScript.Docs.Types.ChildDeclaration
                      (\ @ b
                         (c :: Language.PureScript.Docs.Types.ChildDeclaration
                               -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ Language.PureScript.Docs.Types.ChildDeclaration
                         @ b
                         (GHC.List.filterFB
                            @ Language.PureScript.Docs.Types.ChildDeclaration
                            @ b
                            c
                            p)
                         n
                         ds3))
                   ds4 }) -}
864e56b5e53673c3be395e69be928bd3
  formatTime ::
    Data.Time.Clock.Internal.UTCTime.UTCTime -> GHC.Base.String
  {- Arity: 1,
     Unfolding: (Data.Time.Format.formatTime
                   @ Data.Time.Clock.Internal.UTCTime.UTCTime
                   Data.Time.Format.$fFormatTimeUTCTime_$cformatCharacter
                     `cast`
                   (Sym (Data.Time.Format.N:FormatTime[0]
                             <Data.Time.Clock.Internal.UTCTime.UTCTime>_N))
                   Data.Time.Format.Locale.defaultTimeLocale
                   Language.PureScript.Docs.Types.jsonTimeFormat) -}
edd473a52852d4e73755010d4f7e1c79
  getLink ::
    Language.PureScript.Docs.Types.LinksContext
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
    -> Data.Text.Internal.Text
    -> Language.PureScript.Docs.RenderedCode.Types.ContainingModule
    -> GHC.Base.Maybe Language.PureScript.Docs.Types.DocLink
  {- Arity: 5,
     Strictness: <S,1*U(A,1*U,1*U,A,A,A)><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Language.PureScript.Docs.Types.LinksContext)
                   (w2 :: Language.PureScript.Names.ModuleName)
                   (w3 :: Language.PureScript.Docs.RenderedCode.Types.Namespace)
                   (w5 :: Data.Text.Internal.Text)
                   (w6 :: Language.PureScript.Docs.RenderedCode.Types.ContainingModule) ->
                 case w of ww { Language.PureScript.Docs.Types.LinksContext ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Docs.Types.$wgetLink ww2 ww3 w2 w3 w5 w6 }) -}
b272cd997a2c020b5a511429b4c000fa
  getLinksContext ::
    Language.PureScript.Docs.Types.Package a
    -> Language.PureScript.Docs.Types.LinksContext
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A),U,U,A,A,U,U,U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 Language.PureScript.Docs.Types.LinksContext
                   ds8
                   ds6
                   ds7
                   (Web.Bower.PackageMeta.Internal.bowerName ds1)
                   ds2
                   ds3 }) -}
4b019242a9beef4f09d6fbd41267ee66
  ignorePackage :: Language.PureScript.Docs.Types.InPackage a -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.InPackage a) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.Local x1 -> x1
                   Language.PureScript.Docs.Types.FromDep ds1 x1 -> x1 }) -}
dcc978bafdbcada574f706d10fbd923b
  isDataConstructor ::
    Language.PureScript.Docs.Types.ChildDeclaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration ds1 ds2 ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.ChildDataConstructor ds5
                   -> GHC.Types.True } }) -}
73a9703fde937bd4456a8ceabf791e13
  isKind ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 case ds5 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.ExternKindDeclaration
                   -> GHC.Types.True } }) -}
e1f59e5e40d464d92b895656c18c5b3b
  isType ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 case ds5 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.DataDeclaration ds6 ds7
                   -> GHC.Types.True
                   Language.PureScript.Docs.Types.ExternDataDeclaration ds6
                   -> GHC.Types.True
                   Language.PureScript.Docs.Types.TypeSynonymDeclaration ds6 ds7
                   -> GHC.Types.True } }) -}
25056558d8f8d58d4199dbd25674e228
  isTypeAlias ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 case ds5 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.AliasDeclaration ds6 ds7
                   -> case ds7 of wild2 { Language.PureScript.Names.Qualified ds8 d ->
                      Data.Either.isLeft
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                        @ (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName))
                        d } } }) -}
3a42547c5ebf6523f1b92cd3aa630993
  isTypeClass ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 case ds5 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.TypeClassDeclaration ds6 ds7 ds8
                   -> GHC.Types.True } }) -}
eb5c913ebc02ceef23bdf8425ab7ff0e
  isTypeClassMember ::
    Language.PureScript.Docs.Types.ChildDeclaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.ChildDeclaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.ChildDeclaration ds1 ds2 ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.ChildTypeClassMember ds5
                   -> GHC.Types.True } }) -}
ab24b2a81129775127fb742f8809290e
  isValue ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 case ds5 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.ValueDeclaration ds6
                   -> GHC.Types.True } }) -}
21720d43112130effaf82cfa157dafdf
  isValueAlias ::
    Language.PureScript.Docs.Types.Declaration -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Declaration) ->
                 case ds of wild { Language.PureScript.Docs.Types.Declaration ds1 ds2 ds3 ds4 ds5 ->
                 case ds5 of wild1 {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.Docs.Types.AliasDeclaration ds6 ds7
                   -> case ds7 of wild2 { Language.PureScript.Names.Qualified ds8 d ->
                      Data.Either.isRight
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.TypeName)
                        @ (Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName))
                        d } } }) -}
e9827600d1c3b07c3dda6cef11fbb2b3
  jsonTimeFormat :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.jsonTimeFormat1) -}
bf6a9883de921fd8f98e275c67ec416a
  jsonTimeFormat1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("%Y-%m-%dT%H:%M:%S%z"#) -}
8b305838d47692238020364c584ab76f
  linkLocation ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.Types.LinkLocation
  RecSel Left Language.PureScript.Docs.Types.DocLink
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.DocLink) ->
                 case ds of wild { Language.PureScript.Docs.Types.DocLink ds1 ds2 ds3 ->
                 ds1 }) -}
8b305838d47692238020364c584ab76f
  linkNamespace ::
    Language.PureScript.Docs.Types.DocLink
    -> Language.PureScript.Docs.RenderedCode.Types.Namespace
  RecSel Left Language.PureScript.Docs.Types.DocLink
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.DocLink) ->
                 case ds of wild { Language.PureScript.Docs.Types.DocLink ds1 ds2 ds3 ->
                 ds3 }) -}
8b305838d47692238020364c584ab76f
  linkTitle ::
    Language.PureScript.Docs.Types.DocLink -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.DocLink
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.DocLink) ->
                 case ds of wild { Language.PureScript.Docs.Types.DocLink ds1 ds2 ds3 ->
                 ds2 }) -}
0a51cdbb77bccb10a1b189b851046970
  mapLeft ::
    (a -> a') -> Data.Either.Either a b -> Data.Either.Either a' b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ a' @ b (f21 :: a -> a') (ds :: Data.Either.Either a b) ->
                 case ds of wild {
                   Data.Either.Left x1 -> Data.Either.Left @ a' @ b (f21 x1)
                   Data.Either.Right x1 -> Data.Either.Right @ a' @ b x1 }) -}
cce819b6566f028d040fc57bb265fd8d
  modComments ::
    Language.PureScript.Docs.Types.Module
    -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Module) ->
                 case ds of wild { Language.PureScript.Docs.Types.Module ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
cce819b6566f028d040fc57bb265fd8d
  modDeclarations ::
    Language.PureScript.Docs.Types.Module
    -> [Language.PureScript.Docs.Types.Declaration]
  RecSel Left Language.PureScript.Docs.Types.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Module) ->
                 case ds of wild { Language.PureScript.Docs.Types.Module ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
cce819b6566f028d040fc57bb265fd8d
  modName ::
    Language.PureScript.Docs.Types.Module
    -> Language.PureScript.Names.ModuleName
  RecSel Left Language.PureScript.Docs.Types.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Module) ->
                 case ds of wild { Language.PureScript.Docs.Types.Module ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
cce819b6566f028d040fc57bb265fd8d
  modReExports ::
    Language.PureScript.Docs.Types.Module
    -> [(Language.PureScript.Docs.Types.InPackage
           Language.PureScript.Names.ModuleName,
         [Language.PureScript.Docs.Types.Declaration])]
  RecSel Left Language.PureScript.Docs.Types.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Types.Module) ->
                 case ds of wild { Language.PureScript.Docs.Types.Module ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
5dc5c6b1a7bfb25c2421623caf2246ce
  pOr ::
    Data.Aeson.BetterErrors.Internal.Parse e a
    -> Data.Aeson.BetterErrors.Internal.Parse e a
    -> Data.Aeson.BetterErrors.Internal.Parse e a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.pOr1
                  `cast`
                (forall (e :: <*>_N) (a :: <*>_N).
                 <Data.Aeson.BetterErrors.Internal.Parse e a>_R
                 ->_R <Data.Aeson.BetterErrors.Internal.Parse e a>_R
                 ->_R (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                       ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                     <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                                     <Data.Functor.Identity.Identity>_R
                                     <a>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                         <*>_N
                                                         <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                         <Control.Monad.Trans.Except.ExceptT
                                                            (Data.Aeson.BetterErrors.Internal.ParseError
                                                               e)
                                                            Data.Functor.Identity.Identity>_R
                                                         <a>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                           <e>_N
                                                                           <Data.Functor.Identity.Identity>_R) <a>_N)) -}
35a8ebe66c62a36fdf4925b54a8ace28
  pOr1 ::
    Data.Aeson.BetterErrors.Internal.Parse e a
    -> Data.Aeson.BetterErrors.Internal.Parse e a
    -> Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError e) a)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ e
                   @ a
                   (p :: Data.Aeson.BetterErrors.Internal.Parse e a)
                   (q :: Data.Aeson.BetterErrors.Internal.Parse e a)
                   (eta :: Data.Aeson.BetterErrors.Internal.ParseReader) ->
                 case (p `cast`
                       (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                            <e>_N
                            <Data.Functor.Identity.Identity>_R <a>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                           <Control.Monad.Trans.Except.ExceptT
                                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                 e)
                                                                              Data.Functor.Identity.Identity>_R
                                                                           <a>_N)
                         eta)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                           <Data.Functor.Identity.Identity>_R
                           <a>_N ; Data.Functor.Identity.N:Identity[0]
                                       <Data.Either.Either
                                          (Data.Aeson.BetterErrors.Internal.ParseError e)
                                          a>_R) of wild {
                   Data.Either.Left l
                   -> (q `cast`
                       (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                            <e>_N
                            <Data.Functor.Identity.Identity>_R <a>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                           <Control.Monad.Trans.Except.ExceptT
                                                                              (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                 e)
                                                                              Data.Functor.Identity.Identity>_R
                                                                           <a>_N)
                         eta)
                        `cast`
                      (Control.Monad.Trans.Except.N:ExceptT[0]
                           <Data.Aeson.BetterErrors.Internal.ParseError e>_N
                           <Data.Functor.Identity.Identity>_R
                           <a>_N)
                   Data.Either.Right r
                   -> wild
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Data.Either.Either
                                   (Data.Aeson.BetterErrors.Internal.ParseError e) a>_R)) }) -}
e8bb6ba6a6bd50abc77c971ab2b97c24
  packageName ::
    Language.PureScript.Docs.Types.Package a
    -> Web.Bower.PackageMeta.Internal.PackageName
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SLLLLLLLLLLLLL)LLLLLLLLL),1*U(1*U(1*U(U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x1 :: Language.PureScript.Docs.Types.Package a) ->
                 case x1 of wild { Language.PureScript.Docs.Types.Package ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds of wild1 { Web.Bower.PackageMeta.Internal.PackageMeta ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ->
                 ds10 } }) -}
f304c87b06bb45f79d02aa4e2eafd9df
  parseAssociativity ::
    GHC.Base.String
    -> GHC.Base.Maybe Language.PureScript.AST.Operators.Associativity
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (str :: GHC.Base.String) ->
                 case GHC.Base.eqString
                        str
                        Language.PureScript.Docs.Types.parseAssociativity8 of wild {
                   GHC.Types.False
                   -> case GHC.Base.eqString
                             str
                             Language.PureScript.Docs.Types.parseAssociativity6 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString
                                  str
                                  Language.PureScript.Docs.Types.parseAssociativity4 of wild2 {
                             GHC.Types.False
                             -> GHC.Base.Nothing
                                  @ Language.PureScript.AST.Operators.Associativity
                             GHC.Types.True
                             -> Language.PureScript.Docs.Types.parseAssociativity3 }
                        GHC.Types.True
                        -> Language.PureScript.Docs.Types.parseAssociativity2 }
                   GHC.Types.True
                   -> Language.PureScript.Docs.Types.parseAssociativity1 }) -}
a44b88591a20dc81add8c7f99ef428ad
  parseAssociativity1 ::
    GHC.Base.Maybe Language.PureScript.AST.Operators.Associativity
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.AST.Operators.Associativity
                   Language.PureScript.AST.Operators.Infix) -}
72197794da3723e39ff7c8d908b3e2dc
  parseAssociativity2 ::
    GHC.Base.Maybe Language.PureScript.AST.Operators.Associativity
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.AST.Operators.Associativity
                   Language.PureScript.AST.Operators.Infixl) -}
8621e91d0680b7b51a04b2124a303b8e
  parseAssociativity3 ::
    GHC.Base.Maybe Language.PureScript.AST.Operators.Associativity
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Language.PureScript.AST.Operators.Associativity
                   Language.PureScript.AST.Operators.Infixr) -}
2fc7d7743f3560da411c7b41965ab8fc
  parseAssociativity4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.parseAssociativity5) -}
72318af758077cfd602ae679bd54103f
  parseAssociativity5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("infixr"#) -}
7ca420822b5efdd88794c798e4de0b4b
  parseAssociativity6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.parseAssociativity7) -}
b4c2f75e6e5ac0776d3c528f9b3584af
  parseAssociativity7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("infixl"#) -}
2a6c01ac5cf0cf321c2a1504413b1e91
  parseAssociativity8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Docs.Types.parseAssociativity9) -}
b220319003edd45c5675cfcb5ad70649
  parseAssociativity9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("infix"#) -}
29cabbb429815cab86c60d4d17893fc9
  parsePackageName' ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Language.PureScript.Docs.Types.PackageError
         Web.Bower.PackageMeta.Internal.PackageName
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Data.Text.Internal.Text) ->
                 case Web.Bower.PackageMeta.Internal.mkPackageName x1 of wild {
                   Data.Either.Left err
                   -> Data.Either.Left
                        @ Language.PureScript.Docs.Types.PackageError
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        (Language.PureScript.Docs.Types.ErrorInPackageMeta
                           (Web.Bower.PackageMeta.Internal.InvalidPackageName err))
                   Data.Either.Right n
                   -> Data.Either.Right
                        @ Language.PureScript.Docs.Types.PackageError
                        @ Web.Bower.PackageMeta.Internal.PackageName
                        n }) -}
10dd6e7809bdf29ecb18cd06ff036c65
  parseTime ::
    GHC.Base.String
    -> GHC.Base.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime
  {- Arity: 1,
     Unfolding: (Data.Time.Format.Parse.parseTimeM
                   @ GHC.Base.Maybe
                   @ Data.Time.Clock.Internal.UTCTime.UTCTime
                   GHC.Base.$fMonadMaybe
                   Data.Time.Format.Parse.$fParseTimeUTCTime_$cbuildTime
                     `cast`
                   (Sym (Data.Time.Format.Parse.N:ParseTime[0]
                             <Data.Time.Clock.Internal.UTCTime.UTCTime>_N))
                   GHC.Types.False
                   Data.Time.Format.Locale.defaultTimeLocale
                   Language.PureScript.Docs.Types.jsonTimeFormat) -}
f99231dc323d9ba2a719b5557d70a7c3
  parseTimeEither ::
    GHC.Base.String
    -> Data.Either.Either
         Language.PureScript.Docs.Types.PackageError
         Data.Time.Clock.Internal.UTCTime.UTCTime
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x1 :: GHC.Base.String) ->
                 case Data.Time.Format.Parse.parseTimeM
                        @ GHC.Base.Maybe
                        @ Data.Time.Clock.Internal.UTCTime.UTCTime
                        GHC.Base.$fMonadMaybe
                        Data.Time.Format.Parse.$fParseTimeUTCTime_$cbuildTime
                          `cast`
                        (Sym (Data.Time.Format.Parse.N:ParseTime[0]
                                  <Data.Time.Clock.Internal.UTCTime.UTCTime>_N))
                        GHC.Types.False
                        Data.Time.Format.Locale.defaultTimeLocale
                        Language.PureScript.Docs.Types.jsonTimeFormat
                        x1 of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Docs.Types.parseTimeEither_n
                   GHC.Base.Just x2
                   -> Data.Either.Right
                        @ Language.PureScript.Docs.Types.PackageError
                        @ Data.Time.Clock.Internal.UTCTime.UTCTime
                        x2 }) -}
843765c0ca8485b2771a3d764981eb91
  parseTimeEither_n ::
    Data.Either.Either
      Language.PureScript.Docs.Types.PackageError
      Data.Time.Clock.Internal.UTCTime.UTCTime
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Either.Left
                   @ Language.PureScript.Docs.Types.PackageError
                   @ Data.Time.Clock.Internal.UTCTime.UTCTime
                   Language.PureScript.Docs.Types.InvalidTime) -}
903388abbe42cba27b780be42e055c6f
  parseUploadedPackage ::
    Data.Version.Version
    -> Protolude.LByteString
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Language.PureScript.Docs.Types.UploadedPackage
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.parseUploadedPackage1
                  `cast`
                (<Data.Version.Version>_R
                 ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Language.PureScript.Docs.Types.UploadedPackage>_R) -}
0835dfa9280400af258b5a23fb174f53
  parseUploadedPackage1 ::
    Data.Version.Version
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.Docs.Types.UploadedPackage)
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (minVersion :: Data.Version.Version)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Data.Aeson.BetterErrors.Internal.parse1
                   @ Language.PureScript.Docs.Types.UploadedPackage
                   @ Language.PureScript.Docs.Types.PackageError
                   (Language.PureScript.Docs.Types.$fFromJSONPackage7
                      @ Language.PureScript.Docs.Types.NotYetKnown
                      minVersion
                      Language.PureScript.Docs.Types.$fFromJSONNotYetKnown1
                        `cast`
                      (forall (e :: <*>_N).
                       (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                      <Data.Either.Either
                                         (Data.Aeson.BetterErrors.Internal.ParseError e)
                                         Language.PureScript.Docs.Types.NotYetKnown>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                      e>_N
                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                   <Language.PureScript.Docs.Types.NotYetKnown>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                                <*>_N
                                                                                                                                                                <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                   (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                      e)
                                                                                                                                                                   Data.Functor.Identity.Identity>_R
                                                                                                                                                                <Language.PureScript.Docs.Types.NotYetKnown>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                           <e>_N
                                                                                                                                                                                                                           <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.NotYetKnown>_N)))
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <Language.PureScript.Docs.Types.Package
                                      Language.PureScript.Docs.Types.NotYetKnown>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                  <*>_N
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                     (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                        Language.PureScript.Docs.Types.PackageError)
                                                                                                     Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.Docs.Types.Package
                                                                                                     Language.PureScript.Docs.Types.NotYetKnown>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                               <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                               <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Package
                                                                                                                                                                                                      Language.PureScript.Docs.Types.NotYetKnown>_N))
                   eta) -}
bbc152fdc2e9c114f006388cbf03f9e6
  parseVerifiedPackage ::
    Data.Version.Version
    -> Protolude.LByteString
    -> Data.Either.Either
         (Data.Aeson.BetterErrors.Internal.ParseError
            Language.PureScript.Docs.Types.PackageError)
         Language.PureScript.Docs.Types.VerifiedPackage
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.parseVerifiedPackage1
                  `cast`
                (<Data.Version.Version>_R
                 ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either
                             (Data.Aeson.BetterErrors.Internal.ParseError
                                Language.PureScript.Docs.Types.PackageError)
                             Language.PureScript.Docs.Types.VerifiedPackage>_R) -}
20fab47f6a76f23692cdcd3b1dcbc9fe
  parseVerifiedPackage1 ::
    Data.Version.Version
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Language.PureScript.Docs.Types.PackageError)
            Language.PureScript.Docs.Types.VerifiedPackage)
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (minVersion :: Data.Version.Version)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Data.Aeson.BetterErrors.Internal.parse1
                   @ Language.PureScript.Docs.Types.VerifiedPackage
                   @ Language.PureScript.Docs.Types.PackageError
                   (Language.PureScript.Docs.Types.$fFromJSONPackage7
                      @ Language.PureScript.Docs.Types.GithubUser
                      minVersion
                      Language.PureScript.Docs.Types.$fFromJSONGithubUser4
                        `cast`
                      (forall (e :: <*>_N).
                       (<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                      <Data.Either.Either
                                         (Data.Aeson.BetterErrors.Internal.ParseError e)
                                         Language.PureScript.Docs.Types.GithubUser>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                  <Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                     e>_N
                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                  <Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                                              <*>_N
                                                                                                                                                              <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                                                                              <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                                 (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                                                                                    e)
                                                                                                                                                                 Data.Functor.Identity.Identity>_R
                                                                                                                                                              <Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                                                                                        <e>_N
                                                                                                                                                                                                                        <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.GithubUser>_N)))
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                      Language.PureScript.Docs.Types.PackageError>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <Language.PureScript.Docs.Types.Package
                                      Language.PureScript.Docs.Types.GithubUser>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                 <*>_N
                                                                                                 <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                                 <Control.Monad.Trans.Except.ExceptT
                                                                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                                       Language.PureScript.Docs.Types.PackageError)
                                                                                                    Data.Functor.Identity.Identity>_R
                                                                                                 <Language.PureScript.Docs.Types.Package
                                                                                                    Language.PureScript.Docs.Types.GithubUser>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                                             <Language.PureScript.Docs.Types.PackageError>_N
                                                                                                                                                             <Data.Functor.Identity.Identity>_R) <Language.PureScript.Docs.Types.Package
                                                                                                                                                                                                    Language.PureScript.Docs.Types.GithubUser>_N))
                   eta) -}
40ff81d59b28800db08807063f09e503
  parseVersion' ::
    GHC.Base.String -> GHC.Base.Maybe Data.Version.Version
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (str :: GHC.Base.String) ->
                 case GHC.List.filter
                        @ (Data.Version.Version, [GHC.Types.Char])
                        Language.PureScript.Docs.Types.asResolvedDependencies4
                        (Text.ParserCombinators.ReadP.run
                           @ Data.Version.Version
                           Language.PureScript.Docs.Types.asResolvedDependencies3
                           str) of wild {
                   [] -> GHC.Base.Nothing @ Data.Version.Version
                   : ds ds1
                   -> case ds of wild1 { (,) vers ds2 ->
                      case ds2 of wild2 {
                        []
                        -> case ds1 of wild3 {
                             [] -> GHC.Base.Just @ Data.Version.Version vers
                             : ipv ipv1 -> GHC.Base.Nothing @ Data.Version.Version }
                        : ipv ipv1 -> GHC.Base.Nothing @ Data.Version.Version } } }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgCompilerVersion ::
    Language.PureScript.Docs.Types.Package a -> Data.Version.Version
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds10 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgGithub ::
    Language.PureScript.Docs.Types.Package a
    -> (Language.PureScript.Docs.Types.GithubUser,
        Language.PureScript.Docs.Types.GithubRepo)
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds8 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgMeta ::
    Language.PureScript.Docs.Types.Package a
    -> Web.Bower.PackageMeta.Internal.PackageMeta
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds1 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgModuleMap ::
    Language.PureScript.Docs.Types.Package a
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Web.Bower.PackageMeta.Internal.PackageName
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds6 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgModules ::
    Language.PureScript.Docs.Types.Package a
    -> [Language.PureScript.Docs.Types.Module]
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds5 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgResolvedDependencies ::
    Language.PureScript.Docs.Types.Package a
    -> [(Web.Bower.PackageMeta.Internal.PackageName,
         Data.Version.Version)]
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds7 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgTagTime ::
    Language.PureScript.Docs.Types.Package a
    -> GHC.Base.Maybe Data.Time.Clock.Internal.UTCTime.UTCTime
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds4 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgUploader :: Language.PureScript.Docs.Types.Package a -> a
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds9 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgVersion ::
    Language.PureScript.Docs.Types.Package a -> Data.Version.Version
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U(U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds2 }) -}
fa1efe58f4e6215e05effe0c7820d641
  pkgVersionTag ::
    Language.PureScript.Docs.Types.Package a -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.Package
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U(U,U,U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.Package a) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds3 }) -}
fa1efe58f4e6215e05effe0c7820d641
  runGithubRepo ::
    Language.PureScript.Docs.Types.GithubRepo
    -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.GithubRepo
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.runGithubRepo1
                  `cast`
                (<Language.PureScript.Docs.Types.GithubRepo>_R
                 ->_R Language.PureScript.Docs.Types.N:GithubRepo[0]) -}
fa1efe58f4e6215e05effe0c7820d641
  runGithubRepo1 ::
    Language.PureScript.Docs.Types.GithubRepo
    -> Language.PureScript.Docs.Types.GithubRepo
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Language.PureScript.Docs.Types.GithubRepo) -> ds) -}
614d849a4354c290b33f6ef62142889d
  runGithubUser ::
    Language.PureScript.Docs.Types.GithubUser
    -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Docs.Types.GithubUser
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Docs.Types.runGithubUser1
                  `cast`
                (<Language.PureScript.Docs.Types.GithubUser>_R
                 ->_R Language.PureScript.Docs.Types.N:GithubUser[0]) -}
614d849a4354c290b33f6ef62142889d
  runGithubUser1 ::
    Language.PureScript.Docs.Types.GithubUser
    -> Language.PureScript.Docs.Types.GithubUser
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Language.PureScript.Docs.Types.GithubUser) -> ds) -}
fb03107b3e87ff0a6f08056138ad41aa
  takeLocal ::
    Language.PureScript.Docs.Types.InPackage a -> GHC.Base.Maybe a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Docs.Types.InPackage a) ->
                 case ds of wild {
                   Language.PureScript.Docs.Types.Local a1 -> GHC.Base.Just @ a a1
                   Language.PureScript.Docs.Types.FromDep ipv ipv1
                   -> GHC.Base.Nothing @ a }) -}
63421fd2d1e5adc46d8066f5703349f1
  takeLocals :: [Language.PureScript.Docs.Types.InPackage a] -> [a]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a ->
                 Data.Maybe.mapMaybe
                   @ (Language.PureScript.Docs.Types.InPackage a)
                   @ a
                   (Language.PureScript.Docs.Types.takeLocal @ a)) -}
c6d96133880daa16dd2a14dd1606b5bf
  verifyPackage ::
    Language.PureScript.Docs.Types.GithubUser
    -> Language.PureScript.Docs.Types.UploadedPackage
    -> Language.PureScript.Docs.Types.VerifiedPackage
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,U,U,U,U,U,U,U,A,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (verifiedUser :: Language.PureScript.Docs.Types.GithubUser)
                   (ds :: Language.PureScript.Docs.Types.Package
                            Language.PureScript.Docs.Types.NotYetKnown) ->
                 case ds of wild { Language.PureScript.Docs.Types.Package ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 Language.PureScript.Docs.Types.Package
                   @ Language.PureScript.Docs.Types.GithubUser
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   verifiedUser
                   ds10 }) -}
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.$fEqChildDeclaration
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.$fEqChildDeclarationInfo
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.$fEqDeclaration
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.$fEqDeclarationInfo
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.DocLink]
  = Language.PureScript.Docs.Types.$fEqDocLink
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.$fEqGithubRepo
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fEqGithubUser
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fEqInPackage
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.LinkLocation]
  = Language.PureScript.Docs.Types.$fEqLinkLocation
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.LinksContext]
  = Language.PureScript.Docs.Types.$fEqLinksContext
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.$fEqModule
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fEqNotYetKnown
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fEqPackage
instance GHC.Classes.Eq [Language.PureScript.Docs.Types.PackageError]
  = Language.PureScript.Docs.Types.$fEqPackageError
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fFromJSONGithubUser
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fFromJSONNotYetKnown
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fFromJSONPackage
instance GHC.Base.Functor [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fFunctorInPackage
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.$fGenericChildDeclaration
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.$fGenericChildDeclarationInfo
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.$fGenericDeclaration
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.$fGenericDeclarationInfo
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.DocLink]
  = Language.PureScript.Docs.Types.$fGenericDocLink
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.$fGenericGithubRepo
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fGenericGithubUser
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fGenericInPackage
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.LinkLocation]
  = Language.PureScript.Docs.Types.$fGenericLinkLocation
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.LinksContext]
  = Language.PureScript.Docs.Types.$fGenericLinksContext
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.$fGenericModule
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fGenericNotYetKnown
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fGenericPackage
instance GHC.Generics.Generic [Language.PureScript.Docs.Types.PackageError]
  = Language.PureScript.Docs.Types.$fGenericPackageError
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.$fNFDataChildDeclaration
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.$fNFDataChildDeclarationInfo
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.$fNFDataDeclaration
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.$fNFDataDeclarationInfo
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.DocLink]
  = Language.PureScript.Docs.Types.$fNFDataDocLink
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.$fNFDataGithubRepo
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fNFDataGithubUser
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fNFDataInPackage
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.LinkLocation]
  = Language.PureScript.Docs.Types.$fNFDataLinkLocation
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.LinksContext]
  = Language.PureScript.Docs.Types.$fNFDataLinksContext
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.$fNFDataModule
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fNFDataNotYetKnown
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fNFDataPackage
instance Control.DeepSeq.NFData [Language.PureScript.Docs.Types.PackageError]
  = Language.PureScript.Docs.Types.$fNFDataPackageError
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.$fOrdChildDeclaration
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.$fOrdChildDeclarationInfo
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.$fOrdDeclaration
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.$fOrdDeclarationInfo
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.DocLink]
  = Language.PureScript.Docs.Types.$fOrdDocLink
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.$fOrdGithubRepo
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fOrdGithubUser
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fOrdInPackage
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.LinkLocation]
  = Language.PureScript.Docs.Types.$fOrdLinkLocation
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.LinksContext]
  = Language.PureScript.Docs.Types.$fOrdLinksContext
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.$fOrdModule
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fOrdNotYetKnown
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fOrdPackage
instance GHC.Classes.Ord [Language.PureScript.Docs.Types.PackageError]
  = Language.PureScript.Docs.Types.$fOrdPackageError
instance GHC.Show.Show [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.$fShowChildDeclaration
instance GHC.Show.Show [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.$fShowChildDeclarationInfo
instance GHC.Show.Show [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.$fShowDeclaration
instance GHC.Show.Show [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.$fShowDeclarationInfo
instance GHC.Show.Show [Language.PureScript.Docs.Types.DocLink]
  = Language.PureScript.Docs.Types.$fShowDocLink
instance GHC.Show.Show [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.$fShowGithubRepo
instance GHC.Show.Show [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fShowGithubUser
instance GHC.Show.Show [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fShowInPackage
instance GHC.Show.Show [Language.PureScript.Docs.Types.LinkLocation]
  = Language.PureScript.Docs.Types.$fShowLinkLocation
instance GHC.Show.Show [Language.PureScript.Docs.Types.LinksContext]
  = Language.PureScript.Docs.Types.$fShowLinksContext
instance GHC.Show.Show [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.$fShowModule
instance GHC.Show.Show [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fShowNotYetKnown
instance GHC.Show.Show [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fShowPackage
instance GHC.Show.Show [Language.PureScript.Docs.Types.PackageError]
  = Language.PureScript.Docs.Types.$fShowPackageError
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.$fToJSONChildDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.$fToJSONChildDeclarationInfo
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.$fToJSONDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.$fToJSONDeclarationInfo
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.$fToJSONGithubRepo
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.$fToJSONGithubUser
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.$fToJSONInPackage
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.$fToJSONModule
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.$fToJSONNotYetKnown
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.$fToJSONPackage
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.DocLink]
  = Language.PureScript.Docs.Types.Rep_DocLink
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.LinkLocation]
  = Language.PureScript.Docs.Types.Rep_LinkLocation
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.LinksContext]
  = Language.PureScript.Docs.Types.Rep_LinksContext
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.Package]
  = Language.PureScript.Docs.Types.Rep_Package
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.Module]
  = Language.PureScript.Docs.Types.Rep_Module
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.InPackage]
  = Language.PureScript.Docs.Types.Rep_InPackage
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.PackageError]
  = Language.PureScript.Docs.Types.Rep_PackageError
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.GithubRepo]
  = Language.PureScript.Docs.Types.Rep_GithubRepo
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.GithubUser]
  = Language.PureScript.Docs.Types.Rep_GithubUser
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.Declaration]
  = Language.PureScript.Docs.Types.Rep_Declaration
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.ChildDeclaration]
  = Language.PureScript.Docs.Types.Rep_ChildDeclaration
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.ChildDeclarationInfo]
  = Language.PureScript.Docs.Types.Rep_ChildDeclarationInfo
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.DeclarationInfo]
  = Language.PureScript.Docs.Types.Rep_DeclarationInfo
family instance GHC.Generics.Rep [Language.PureScript.Docs.Types.NotYetKnown]
  = Language.PureScript.Docs.Types.Rep_NotYetKnown
"SPEC $c/= @ ModuleName" forall ($dEq :: GHC.Classes.Eq
                                           Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fEqInPackage_$c/= @ Language.PureScript.Names.ModuleName
                                                    $dEq
  = Language.PureScript.Docs.Types.$fEqInPackage_$s$c/=
"SPEC $c< @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                           Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$c< @ Language.PureScript.Names.ModuleName
                                                    $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$c<
"SPEC $c<= @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                            Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$c<= @ Language.PureScript.Names.ModuleName
                                                     $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$c<=
"SPEC $c== @ ModuleName" forall ($dEq :: GHC.Classes.Eq
                                           Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fEqInPackage_$c== @ Language.PureScript.Names.ModuleName
                                                    $dEq
  = Language.PureScript.Docs.Types.$fEqInPackage_$s$c==
"SPEC $c>= @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                            Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$c>= @ Language.PureScript.Names.ModuleName
                                                     $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$c>=
"SPEC $ccompare @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                                 Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$ccompare @ Language.PureScript.Names.ModuleName
                                                          $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$ccompare
"SPEC $cmax @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                             Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$cmax @ Language.PureScript.Names.ModuleName
                                                      $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$cmax
"SPEC $cmin @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                             Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$cmin @ Language.PureScript.Names.ModuleName
                                                      $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$cmin
"SPEC $cp1Ord @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                               Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage_$cp1Ord @ Language.PureScript.Names.ModuleName
                                                        $dOrd
  = Language.PureScript.Docs.Types.$fEqInPackage_$s$fEqInPackage
"SPEC $fEqInPackage @ ModuleName" forall ($dEq :: GHC.Classes.Eq
                                                    Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fEqInPackage @ Language.PureScript.Names.ModuleName
                                               $dEq
  = Language.PureScript.Docs.Types.$fEqInPackage_$s$fEqInPackage
"SPEC $fOrdInPackage @ ModuleName" forall ($dOrd :: GHC.Classes.Ord
                                                      Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Types.$fOrdInPackage @ Language.PureScript.Names.ModuleName
                                                $dOrd
  = Language.PureScript.Docs.Types.$fOrdInPackage_$s$fOrdInPackage
"SPEC/Language.PureScript.Docs.Types $fEq(,) @ ModuleName @ PackageName" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                                  Web.Bower.PackageMeta.Internal.PackageName)
                                                                                         (v :: GHC.Classes.Eq
                                                                                                 Language.PureScript.Names.ModuleName)
  GHC.Classes.$fEq(,) @ Language.PureScript.Names.ModuleName
                      @ Web.Bower.PackageMeta.Internal.PackageName
                      v
                      v1
  = Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fEq(,)
"SPEC/Language.PureScript.Docs.Types $fEq(,) @ PackageName @ Version" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                               Data.Version.Version)
                                                                                      (v :: GHC.Classes.Eq
                                                                                              Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fEq(,) @ Web.Bower.PackageMeta.Internal.PackageName
                      @ Data.Version.Version
                      v
                      v1
  = Language.PureScript.Docs.Types.$fEqLinksContext_$s$fEq(,)
"SPEC/Language.PureScript.Docs.Types $fEq(,) @ Text @ (Maybe Kind')" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                              (GHC.Base.Maybe
                                                                                                 Language.PureScript.Docs.Types.Kind'))
                                                                                     (v :: GHC.Classes.Eq
                                                                                             Data.Text.Internal.Text)
  GHC.Classes.$fEq(,) @ Data.Text.Internal.Text
                      @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                      v
                      v1
  = Language.PureScript.Docs.Types.$s$fEq(,)
"SPEC/Language.PureScript.Docs.Types $fEq(,) @ [Text] @ [Text]" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                         [Data.Text.Internal.Text])
                                                                                (v :: GHC.Classes.Eq
                                                                                        [Data.Text.Internal.Text])
  GHC.Classes.$fEq(,) @ [Data.Text.Internal.Text]
                      @ [Data.Text.Internal.Text]
                      v
                      v1
  = Language.PureScript.Docs.Types.$s$fEq(,)1
"SPEC/Language.PureScript.Docs.Types $fEq(,)_$c/= @ ModuleName @ PackageName" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                          Web.Bower.PackageMeta.Internal.PackageName)
                                                                                              ($dEq :: GHC.Classes.Eq
                                                                                                         Language.PureScript.Names.ModuleName)
  GHC.Classes.$fEq(,)_$c/= @ Language.PureScript.Names.ModuleName
                           @ Web.Bower.PackageMeta.Internal.PackageName
                           $dEq
                           $dEq1
  = Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fEq(,)_$c/=
"SPEC/Language.PureScript.Docs.Types $fEq(,)_$c/= @ PackageName @ Version" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                       Data.Version.Version)
                                                                                           ($dEq :: GHC.Classes.Eq
                                                                                                      Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fEq(,)_$c/= @ Web.Bower.PackageMeta.Internal.PackageName
                           @ Data.Version.Version
                           $dEq
                           $dEq1
  = Language.PureScript.Docs.Types.$fEqLinksContext_$s$fEq(,)_$c/=
"SPEC/Language.PureScript.Docs.Types $fEq(,)_$c/= @ Text @ (Maybe
                                                             Kind')" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                                                                                   (GHC.Base.Maybe
                                                                                                                                                                      Language.PureScript.Docs.Types.Kind'))
                                                                                                                                                       ($dEq :: GHC.Classes.Eq
                                                                                                                                                                  Data.Text.Internal.Text)
  GHC.Classes.$fEq(,)_$c/= @ Data.Text.Internal.Text
                           @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                           $dEq
                           $dEq1
  = Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq(,)_$c/=
"SPEC/Language.PureScript.Docs.Types $fEq(,)_$c/= @ [Text] @ [Text]" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                                 [Data.Text.Internal.Text])
                                                                                     ($dEq :: GHC.Classes.Eq
                                                                                                [Data.Text.Internal.Text])
  GHC.Classes.$fEq(,)_$c/= @ [Data.Text.Internal.Text]
                           @ [Data.Text.Internal.Text]
                           $dEq
                           $dEq1
  = Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq(,)_$c/=1
"SPEC/Language.PureScript.Docs.Types $fEqMaybe @ (Kind ())" [orphan] forall (v :: GHC.Classes.Eq
                                                                                    (Language.PureScript.Kinds.Kind
                                                                                       ()))
  GHC.Base.$fEqMaybe @ (Language.PureScript.Kinds.Kind ()) v
  = Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEqMaybe
"SPEC/Language.PureScript.Docs.Types $fEqMaybe_$c/= @ (Kind ())" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                            (Language.PureScript.Kinds.Kind
                                                                                               ()))
  GHC.Base.$fEqMaybe_$c/= @ (Language.PureScript.Kinds.Kind ()) $dEq
  = Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEqMaybe_$c/=
"SPEC/Language.PureScript.Docs.Types $fEq[] @ Text" [orphan] forall (v :: GHC.Classes.Eq
                                                                            Data.Text.Internal.Text)
  GHC.Classes.$fEq[] @ Data.Text.Internal.Text v
  = Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq[]
"SPEC/Language.PureScript.Docs.Types $fEq[]_$c/= @ Text" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                    Data.Text.Internal.Text)
  GHC.Classes.$fEq[]_$c/= @ Data.Text.Internal.Text $dEq
  = Language.PureScript.Docs.Types.$s$fEq(,)_$s$fEq[]_$c/=
"SPEC/Language.PureScript.Docs.Types $fFromJSON(,) @ SourceSpan @ [Comment]" [orphan] forall (v1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                      [Language.PureScript.Comments.Comment])
                                                                                             (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                     Language.PureScript.AST.SourcePos.SourceSpan)
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ Language.PureScript.AST.SourcePos.SourceSpan
                                          @ [Language.PureScript.Comments.Comment]
                                          v
                                          v1
  = Language.PureScript.Docs.Types.$s$fFromJSON(,)
"SPEC/Language.PureScript.Docs.Types $fFromJSONEither @ Ident @ (ProperName
                                                                  'ConstructorName)" [orphan] forall (v1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                                          (Language.PureScript.Names.ProperName
                                                                                                                                                                                             'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                                 (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                                         Language.PureScript.Names.Ident)
  Data.Aeson.Types.FromJSON.$fFromJSONEither @ Language.PureScript.Names.Ident
                                             @ (Language.PureScript.Names.ProperName
                                                  'Language.PureScript.Names.ConstructorName)
                                             v
                                             v1
  = Language.PureScript.Docs.Types.$s$fFromJSONEither
"SPEC/Language.PureScript.Docs.Types $fFromJSONQualified @ (Either
                                                             (ProperName 'TypeName)
                                                             (Either
                                                                Ident
                                                                (ProperName 'ConstructorName)))" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                                                                                                                                                                                                                                                                           (Data.Either.Either
                                                                                                                                                                                                                                                                                                                                                                                                                              (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                                                                                                                                                                                 'Language.PureScript.Names.TypeName)
                                                                                                                                                                                                                                                                                                                                                                                                                              (Data.Either.Either
                                                                                                                                                                                                                                                                                                                                                                                                                                 Language.PureScript.Names.Ident
                                                                                                                                                                                                                                                                                                                                                                                                                                 (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                                                                                                                                                                                    'Language.PureScript.Names.ConstructorName))))
  Language.PureScript.Names.$fFromJSONQualified @ (Data.Either.Either
                                                     (Language.PureScript.Names.ProperName
                                                        'Language.PureScript.Names.TypeName)
                                                     (Data.Either.Either
                                                        Language.PureScript.Names.Ident
                                                        (Language.PureScript.Names.ProperName
                                                           'Language.PureScript.Names.ConstructorName)))
                                                v
  = Language.PureScript.Docs.Types.$s$fFromJSONQualified
"SPEC/Language.PureScript.Docs.Types $fFromJSONQualified @ Ident" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                          Language.PureScript.Names.Ident)
  Language.PureScript.Names.$fFromJSONQualified @ Language.PureScript.Names.Ident
                                                v
  = Language.PureScript.Docs.Types.$s$fFromJSONQualified2
"SPEC/Language.PureScript.Docs.Types $fFromJSON[] @ Comment" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                     Language.PureScript.Comments.Comment)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Language.PureScript.Comments.Comment
                                         v
  = Language.PureScript.Docs.Types.$s$fFromJSON(,)_$s$fFromJSON[]
"SPEC/Language.PureScript.Docs.Types $fOrd(,) @ ModuleName @ PackageName" [orphan] forall (v1 :: GHC.Classes.Ord
                                                                                                   Web.Bower.PackageMeta.Internal.PackageName)
                                                                                          (v :: GHC.Classes.Ord
                                                                                                  Language.PureScript.Names.ModuleName)
  GHC.Classes.$fOrd(,) @ Language.PureScript.Names.ModuleName
                       @ Web.Bower.PackageMeta.Internal.PackageName
                       v
                       v1
  = Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fOrd(,)1
"SPEC/Language.PureScript.Docs.Types $fOrd(,) @ PackageName @ Version" [orphan] forall (v1 :: GHC.Classes.Ord
                                                                                                Data.Version.Version)
                                                                                       (v :: GHC.Classes.Ord
                                                                                               Web.Bower.PackageMeta.Internal.PackageName)
  GHC.Classes.$fOrd(,) @ Web.Bower.PackageMeta.Internal.PackageName
                       @ Data.Version.Version
                       v
                       v1
  = Language.PureScript.Docs.Types.$fOrdLinksContext_$s$fOrd(,)
"SPEC/Language.PureScript.Docs.Types $fOrd(,) @ Text @ (Maybe Kind')" [orphan] forall (v1 :: GHC.Classes.Ord
                                                                                               (GHC.Base.Maybe
                                                                                                  Language.PureScript.Docs.Types.Kind'))
                                                                                      (v :: GHC.Classes.Ord
                                                                                              Data.Text.Internal.Text)
  GHC.Classes.$fOrd(,) @ Data.Text.Internal.Text
                       @ (GHC.Base.Maybe Language.PureScript.Docs.Types.Kind')
                       v
                       v1
  = Language.PureScript.Docs.Types.$s$fOrd(,)
"SPEC/Language.PureScript.Docs.Types $fOrd(,) @ [Text] @ [Text]" [orphan] forall (v1 :: GHC.Classes.Ord
                                                                                          [Data.Text.Internal.Text])
                                                                                 (v :: GHC.Classes.Ord
                                                                                         [Data.Text.Internal.Text])
  GHC.Classes.$fOrd(,) @ [Data.Text.Internal.Text]
                       @ [Data.Text.Internal.Text]
                       v
                       v1
  = Language.PureScript.Docs.Types.$s$fOrd(,)1
"SPEC/Language.PureScript.Docs.Types $fOrdMaybe @ (Kind ())" [orphan] forall (v :: GHC.Classes.Ord
                                                                                     (Language.PureScript.Kinds.Kind
                                                                                        ()))
  GHC.Base.$fOrdMaybe @ (Language.PureScript.Kinds.Kind ()) v
  = Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrdMaybe
"SPEC/Language.PureScript.Docs.Types $fOrd[] @ Text" [orphan] forall (v :: GHC.Classes.Ord
                                                                             Data.Text.Internal.Text)
  GHC.Classes.$fOrd[] @ Data.Text.Internal.Text v
  = Language.PureScript.Docs.Types.$s$fOrd(,)_$s$fOrd[]
"SPEC/Language.PureScript.Docs.Types $fShowEither @ Ident @ (ProperName
                                                              'ConstructorName)" [orphan] forall (v1 :: GHC.Show.Show
                                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                                     'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                         (v :: GHC.Show.Show
                                                                                                                                                                                 Language.PureScript.Names.Ident)
  Data.Either.$fShowEither @ Language.PureScript.Names.Ident
                           @ (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)
                           v
                           v1
  = Language.PureScript.Docs.Types.$s$fShowEither
"SPEC/Language.PureScript.Docs.Types $fShowKind @ ()" [orphan] forall (v :: GHC.Show.Show
                                                                              ())
  Language.PureScript.Kinds.$fShowKind @ () v
  = Language.PureScript.Docs.Types.$s$fShow(,)_$cshowsPrec_$s$fShowKind
"SPEC/Language.PureScript.Docs.Types $fToJSONEither @ (ProperName
                                                        'TypeName) @ (Either
                                                                        Ident
                                                                        (ProperName
                                                                           'ConstructorName))" [orphan] forall (v1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                                                                                                                                                                                                                                                                                                                                                                         (Data.Either.Either
                                                                                                                                                                                                                                                                                                                                                                                                                                            Language.PureScript.Names.Ident
                                                                                                                                                                                                                                                                                                                                                                                                                                            (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                                                                                                                                                                                               'Language.PureScript.Names.ConstructorName)))
                                                                                                                                                                                                                                                                                                                                                                                                                                (v :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                                                                                                                                                                                                                                                                                                                                                                        (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                                                                                                                                                                                                                                           'Language.PureScript.Names.TypeName))
  Data.Aeson.Types.ToJSON.$fToJSONEither @ (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.TypeName)
                                         @ (Data.Either.Either
                                              Language.PureScript.Names.Ident
                                              (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.ConstructorName))
                                         v
                                         v1
  = Language.PureScript.Docs.Types.$s$fToJSONEither1
"SPEC/Language.PureScript.Docs.Types fromAesonParser1 @ Identity @ (Qualified
                                                                     Ident) _" [orphan] [0] forall @ e
                                                                                                                                                                                 (w2 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                                          (Language.PureScript.Names.Qualified
                                                                                                                                                                                             Language.PureScript.Names.Ident))
                                                                                                                                                                                 (w7 :: GHC.Base.Monad
                                                                                                                                                                                          Data.Functor.Identity.Identity)
                                                                                                                                                                                 (w :: GHC.Base.Functor
                                                                                                                                                                                         Data.Functor.Identity.Identity)
  Data.Aeson.BetterErrors.Internal.fromAesonParser1 @ Data.Functor.Identity.Identity
                                                    @ (Language.PureScript.Names.Qualified
                                                         Language.PureScript.Names.Ident)
                                                    @ e
                                                    w
                                                    w7
                                                    w2
  = Language.PureScript.Docs.Types.$sfromAesonParser2 @ e
"SPEC/Language.PureScript.Docs.Types fromAesonParser1 @ Identity @ SourceAnn _" [orphan] [0] forall @ e
                                                                                                    (w2 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                             Language.PureScript.AST.SourcePos.SourceAnn)
                                                                                                    (w7 :: GHC.Base.Monad
                                                                                                             Data.Functor.Identity.Identity)
                                                                                                    (w :: GHC.Base.Functor
                                                                                                            Data.Functor.Identity.Identity)
  Data.Aeson.BetterErrors.Internal.fromAesonParser1 @ Data.Functor.Identity.Identity
                                                    @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                       [Language.PureScript.Comments.Comment])
                                                    @ e
                                                    w
                                                    w7
                                                    w2
  = Language.PureScript.Docs.Types.$sfromAesonParser6 @ e
"SPEC/Language.PureScript.Docs.Types fromAesonParser1 @ Identity @ Type' _" [orphan] [0] forall @ e
                                                                                                (w2 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                         Language.PureScript.Docs.Types.Type')
                                                                                                (w7 :: GHC.Base.Monad
                                                                                                         Data.Functor.Identity.Identity)
                                                                                                (w :: GHC.Base.Functor
                                                                                                        Data.Functor.Identity.Identity)
  Data.Aeson.BetterErrors.Internal.fromAesonParser1 @ Data.Functor.Identity.Identity
                                                    @ (Language.PureScript.Types.Type ())
                                                    @ e
                                                    w
                                                    w7
                                                    w2
  = Language.PureScript.Docs.Types.$sfromAesonParser5 @ e
"SPEC/Language.PureScript.Docs.Types fromList @ ModuleName _" [orphan] forall @ a
                                                                              ($dOrd :: GHC.Classes.Ord
                                                                                          Language.PureScript.Names.ModuleName)
  Data.Map.Internal.fromList @ Language.PureScript.Names.ModuleName
                             @ a
                             $dOrd
  = Language.PureScript.Docs.Types.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

