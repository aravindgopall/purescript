
==================== FINAL INTERFACE ====================
2018-11-30 19:26:32.236503 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries [family instance module] 8043
  interface hash: 89e1b92c4371ae52087adf10d6c06ca1
  ABI hash: 85b2520728908ad345f56b1c2cbe3fca
  export-list hash: cc9c93841004965313696be0c74a01eb
  orphan hash: fb750ab1955cba07b97284c1a30e7827
  flag hash: e4da42d82658d5291d606e6321aeefea
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.TypeClassDictionaries.superclassName
  Language.PureScript.TypeClassDictionaries.NamedDict
  Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope{Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope tcdChain tcdClassName tcdDependencies tcdIndex tcdInstanceTypes tcdPath tcdValue}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST.SourcePos
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Names Language.PureScript.PSString
                     Language.PureScript.Types
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 bytestring-0.10.8.2
                      containers-0.5.11.0 deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2
                      ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      scientific-0.3.6.2 stm-2.4.5.0 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.1
orphans: stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  exports: f7f3503d20957194bda83c16bb5f1288
  ClassName e69348bcf8c43a2174540a1d5983bfaa
  Ident ab98a56ffa88760dad1380079e8ee35a
  ProperName 29f101e190cc99df85623423972e606f
  Qualified 5a70062bbdf29e6dc659ad8bf5326b50
  disqualify 3e7b8117c7613f1d74fadc5d62b59f54
  runProperName 29f101e190cc99df85623423972e606f
import  -/  Language.PureScript.Types 74562e642f5297557b3a23aac7819ad1
  exports: ae97bc75fcebc59f59c970736847a827
  Constraint 93223f8afa90d0facc05a03f863dc72d
  Type 93223f8afa90d0facc05a03f863dc72d
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope ::
    Data.Foldable.Foldable
      Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  DFunId
  {- HasNoCafRefs, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfold
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldMap
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldr
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldr
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldl'
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldl'
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldr1
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cfoldr1
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$ctoList
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cnull
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$clength
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$celem
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cminimum
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope_$cminimum
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope2
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Num.Num a>_R
                   ->_R <Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                           a>_R
                   ->_R Data.Semigroup.Internal.N:Sum[0] <a>_R)
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope1
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Num.Num a>_R
                   ->_R <Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                           a>_R
                   ->_R Data.Semigroup.Internal.N:Product[0] <a>_R) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope1 ::
    GHC.Num.Num a =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> Data.Semigroup.Internal.Product a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (eta :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             a) ->
                 case eta of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 a3 `cast` (Sym (Data.Semigroup.Internal.N:Product[0] <a>_R)) }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope2 ::
    GHC.Num.Num a =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> Data.Semigroup.Internal.Sum a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (eta :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             a) ->
                 case eta of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 a3 `cast` (Sym (Data.Semigroup.Internal.N:Sum[0] <a>_R)) }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope3 ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   (x :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                           a) ->
                 case x of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$celem ::
    GHC.Classes.Eq a =>
    a
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(1*C1(C(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dEq :: GHC.Classes.Eq a) (eta :: a) ->
                 let {
                   f :: a -> GHC.Types.Bool = GHC.Classes.== @ a $dEq eta
                 } in
                 (\ (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             a) ->
                  case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                  (f a3) `cast` (Sym (Data.Semigroup.Internal.N:Any[0])) })
                   `cast`
                 (<Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                     a>_R
                  ->_R Data.Semigroup.Internal.N:Any[0])) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cfold ::
    GHC.Base.Monoid m =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      m
    -> m
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ m
                   ($dMonoid :: GHC.Base.Monoid m)
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            m) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cfoldMap ::
    GHC.Base.Monoid m =>
    (a -> m)
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> m
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><C(S),1*C1(U)><S,1*U(A,A,U,A,A,A,A)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m
                   @ a
                   ($dMonoid :: GHC.Base.Monoid m)
                   (f :: a -> m)
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 f a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cfoldl' ::
    (b -> a -> b)
    -> b
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><S,1*U(A,A,U,A,A,A,A)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ b
                   @ a
                   (f :: b -> a -> b)
                   (z0 :: b)
                   (xs :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case xs of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 f z0 a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cfoldr ::
    (a -> b -> b)
    -> b
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><S,1*U(A,A,U,A,A,A,A)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ b
                   (f :: a -> b -> b)
                   (z :: b)
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 f a3 z }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cfoldr1 ::
    (a -> a -> a)
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (f :: a -> a -> a)
                   (xs :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case xs of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$clength ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   (xs :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case xs of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 GHC.Types.I# 1# }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cminimum ::
    GHC.Classes.Ord a =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope3
                   @ a) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$cnull ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 GHC.Types.False }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFoldableTypeClassDictionaryInScope_$ctoList ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      a
    -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,A,U,A,A,A,A)>m2,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a
                   (t1 :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 GHC.Base.build
                   @ a
                   (\ @ b (c :: a -> b -> b)[OneShot] (n :: b)[OneShot] ->
                    case t1 of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                    c a3 n })) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFunctorTypeClassDictionaryInScope ::
    GHC.Base.Functor
      Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                  Language.PureScript.TypeClassDictionaries.$fFunctorTypeClassDictionaryInScope_$cfmap
                  Language.PureScript.TypeClassDictionaries.$fFunctorTypeClassDictionaryInScope_$c<$ -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFunctorTypeClassDictionaryInScope_$c<$ ::
    a
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         b
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,U,A,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   (z :: a)
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            b) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                   @ a
                   a1
                   a2
                   z
                   a4
                   a5
                   a6
                   a7 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fFunctorTypeClassDictionaryInScope_$cfmap ::
    (a -> b)
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         b
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*C1(U)><S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   (f :: a -> b)
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                   @ b
                   a1
                   a2
                   (f a3)
                   a4
                   a5
                   a6
                   a7 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fGenericTypeClassDictionaryInScope ::
    GHC.Generics.Generic
      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         v)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ v.
                  @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                       v)
                  (Language.PureScript.TypeClassDictionaries.$fGenericTypeClassDictionaryInScope1
                     @ v)
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                      v>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "TypeClassDictionaryInScope"
                                     "Language.PureScript.TypeClassDictionaries"
                                     "purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "TypeClassDictionaryInScope"
                                        'GHC.Generics.PrefixI
                                        'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tcdChain")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R
                                            [Language.PureScript.Names.Qualified
                                               Language.PureScript.Names.Ident])
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "tcdIndex")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              GHC.Integer.Type.Integer)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "tcdValue")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R v)))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "tcdPath")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              [(Language.PureScript.Names.Qualified
                                                                  (Language.PureScript.Names.ProperName
                                                                     'Language.PureScript.Names.ClassName),
                                                                GHC.Integer.Type.Integer)])
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "tcdClassName")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Language.PureScript.Names.Qualified
                                                                                  (Language.PureScript.Names.ProperName
                                                                                     'Language.PureScript.Names.ClassName))))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "tcdInstanceTypes")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               [Language.PureScript.Types.Type])
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "tcdDependencies")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (GHC.Base.Maybe
                                                                                                   [Language.PureScript.Types.Constraint])))))>_R) ; Sub (Sym (Language.PureScript.TypeClassDictionaries.Rep_TypeClassDictionaryInScope[0]
                                                                                                                                                                   <v>_N))) <x>_N)
                  (Language.PureScript.TypeClassDictionaries.$fGenericTypeClassDictionaryInScope_$cto
                     @ v) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fGenericTypeClassDictionaryInScope1 ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "TypeClassDictionaryInScope" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "tcdChain")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1
                GHC.Generics.R
                [Language.PureScript.Names.Qualified
                   Language.PureScript.Names.Ident])
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdIndex")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "tcdValue")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R v)))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdPath")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ClassName),
                                    GHC.Integer.Type.Integer)])
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "tcdClassName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (Language.PureScript.Names.Qualified
                                                      (Language.PureScript.Names.ProperName
                                                         'Language.PureScript.Names.ClassName))))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "tcdInstanceTypes")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R [Language.PureScript.Types.Type])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just
                                                                       "tcdDependencies")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       [Language.PureScript.Types.Constraint])))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   @ x
                   (x1 :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case x1 of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope g1 g2 g3 g4 g5 g6 g7 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "tcdChain")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1
                            GHC.Generics.R
                            [Language.PureScript.Names.Qualified
                               Language.PureScript.Names.Ident])
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tcdIndex")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "tcdValue")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1 GHC.Generics.R v)))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "tcdPath")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1
                             GHC.Generics.R
                             [(Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName),
                               GHC.Integer.Type.Integer)])
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tcdClassName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (Language.PureScript.Names.Qualified
                                                 (Language.PureScript.Names.ProperName
                                                    'Language.PureScript.Names.ClassName))))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tcdInstanceTypes")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R [Language.PureScript.Types.Type])
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "tcdDependencies")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe
                                                                  [Language.PureScript.Types.Constraint]))))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tcdChain")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [Language.PureScript.Names.Qualified
                                  Language.PureScript.Names.Ident]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tcdIndex")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tcdValue")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R v))
                       @ x
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[Language.PureScript.Names.Qualified
                                     Language.PureScript.Names.Ident]>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "tcdChain")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [Language.PureScript.Names.Qualified
                                                         Language.PureScript.Names.Ident]>_R) <x>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdIndex")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdValue")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R v))
                          @ x
                          g2
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <GHC.Integer.Type.Integer>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdIndex")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         GHC.Integer.Type.Integer>_R) <x>_N)
                          g3
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <v>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdValue")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1 GHC.Generics.R v>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tcdPath")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R
                               [(Language.PureScript.Names.Qualified
                                   (Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.ClassName),
                                 GHC.Integer.Type.Integer)])
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tcdClassName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (Language.PureScript.Names.Qualified
                                                   (Language.PureScript.Names.ProperName
                                                      'Language.PureScript.Names.ClassName))))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tcdInstanceTypes")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Language.PureScript.Types.Type])
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tcdDependencies")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   [Language.PureScript.Types.Constraint])))
                       @ x
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdPath")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [(Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ClassName),
                                    GHC.Integer.Type.Integer)]))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdClassName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (Language.PureScript.Names.Qualified
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.ClassName))))
                          @ x
                          g4
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[(Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ClassName),
                                       GHC.Integer.Type.Integer)]>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdPath")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         [(Language.PureScript.Names.Qualified
                                                             (Language.PureScript.Names.ProperName
                                                                'Language.PureScript.Names.ClassName),
                                                           GHC.Integer.Type.Integer)]>_R) <x>_N)
                          g5
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <Language.PureScript.Names.Qualified
                                       (Language.PureScript.Names.ProperName
                                          'Language.PureScript.Names.ClassName)>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdClassName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (Language.PureScript.Names.Qualified
                                                            (Language.PureScript.Names.ProperName
                                                               'Language.PureScript.Names.ClassName))>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdInstanceTypes")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R [Language.PureScript.Types.Type]))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdDependencies")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (GHC.Base.Maybe [Language.PureScript.Types.Constraint])))
                          @ x
                          g6
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <[Language.PureScript.Types.Type]>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdInstanceTypes")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         [Language.PureScript.Types.Type]>_R) <x>_N)
                          g7
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <GHC.Base.Maybe [Language.PureScript.Types.Constraint]>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdDependencies")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         (GHC.Base.Maybe
                                                            [Language.PureScript.Types.Constraint])>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "TypeClassDictionaryInScope"
                              'GHC.Generics.PrefixI
                              'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tcdChain")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  [Language.PureScript.Names.Qualified
                                     Language.PureScript.Names.Ident])
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tcdIndex")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tcdValue")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R v)))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tcdPath")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    [(Language.PureScript.Names.Qualified
                                                        (Language.PureScript.Names.ProperName
                                                           'Language.PureScript.Names.ClassName),
                                                      GHC.Integer.Type.Integer)])
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tcdClassName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Names.Qualified
                                                                        (Language.PureScript.Names.ProperName
                                                                           'Language.PureScript.Names.ClassName))))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just
                                                                        "tcdInstanceTypes")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     [Language.PureScript.Types.Type])
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "tcdDependencies")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      (GHC.Base.Maybe
                                                                                         [Language.PureScript.Types.Constraint]))))>_R) <x>_N) }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fGenericTypeClassDictionaryInScope_$cto ::
    GHC.Generics.Rep
      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         v)
      x
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         v
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(SS)),1*U(1*U(U,1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   @ x
                   (ds :: GHC.Generics.Rep
                            (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                               v)
                            x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.TypeClassDictionaries.Rep_TypeClassDictionaryInScope[0]
                                 <v>_N) ; (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.D>_P
                                               <'GHC.Generics.MetaData
                                                  "TypeClassDictionaryInScope"
                                                  "Language.PureScript.TypeClassDictionaries"
                                                  "purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"
                                                  'GHC.Types.False>_P
                                               <GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "TypeClassDictionaryInScope"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  ((GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdChain")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R
                                                         [Language.PureScript.Names.Qualified
                                                            Language.PureScript.Names.Ident])
                                                    GHC.Generics.:*: (GHC.Generics.M1
                                                                        GHC.Generics.S
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "tcdIndex")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.K1
                                                                           GHC.Generics.R
                                                                           GHC.Integer.Type.Integer)
                                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                                         GHC.Generics.S
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "tcdValue")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.K1
                                                                                            GHC.Generics.R
                                                                                            v)))
                                                   GHC.Generics.:*: ((GHC.Generics.M1
                                                                        GHC.Generics.S
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "tcdPath")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.K1
                                                                           GHC.Generics.R
                                                                           [(Language.PureScript.Names.Qualified
                                                                               (Language.PureScript.Names.ProperName
                                                                                  'Language.PureScript.Names.ClassName),
                                                                             GHC.Integer.Type.Integer)])
                                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                                         GHC.Generics.S
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "tcdClassName")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.K1
                                                                                            GHC.Generics.R
                                                                                            (Language.PureScript.Names.Qualified
                                                                                               (Language.PureScript.Names.ProperName
                                                                                                  'Language.PureScript.Names.ClassName))))
                                                                     GHC.Generics.:*: (GHC.Generics.M1
                                                                                         GHC.Generics.S
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Base.Just
                                                                                               "tcdInstanceTypes")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.K1
                                                                                            GHC.Generics.R
                                                                                            [Language.PureScript.Types.Type])
                                                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                                                          GHC.Generics.S
                                                                                                          ('GHC.Generics.MetaSel
                                                                                                             ('GHC.Base.Just
                                                                                                                "tcdDependencies")
                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                          (GHC.Generics.K1
                                                                                                             GHC.Generics.R
                                                                                                             (GHC.Base.Maybe
                                                                                                                [Language.PureScript.Types.Constraint])))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                                     <*>_N
                                                                                                                                                                     <GHC.Generics.C>_P
                                                                                                                                                                     <'GHC.Generics.MetaCons
                                                                                                                                                                        "TypeClassDictionaryInScope"
                                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                                        'GHC.Types.True>_P
                                                                                                                                                                     <(GHC.Generics.M1
                                                                                                                                                                         GHC.Generics.S
                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                               "tcdChain")
                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (GHC.Generics.K1
                                                                                                                                                                            GHC.Generics.R
                                                                                                                                                                            [Language.PureScript.Names.Qualified
                                                                                                                                                                               Language.PureScript.Names.Ident])
                                                                                                                                                                       GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                           GHC.Generics.S
                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                 "tcdIndex")
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                           (GHC.Generics.K1
                                                                                                                                                                                              GHC.Generics.R
                                                                                                                                                                                              GHC.Integer.Type.Integer)
                                                                                                                                                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                            GHC.Generics.S
                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "tcdValue")
                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                            (GHC.Generics.K1
                                                                                                                                                                                                               GHC.Generics.R
                                                                                                                                                                                                               v)))
                                                                                                                                                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                                                                                                                                                           GHC.Generics.S
                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                 "tcdPath")
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                           (GHC.Generics.K1
                                                                                                                                                                                              GHC.Generics.R
                                                                                                                                                                                              [(Language.PureScript.Names.Qualified
                                                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                                                     'Language.PureScript.Names.ClassName),
                                                                                                                                                                                                GHC.Integer.Type.Integer)])
                                                                                                                                                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                            GHC.Generics.S
                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "tcdClassName")
                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                            (GHC.Generics.K1
                                                                                                                                                                                                               GHC.Generics.R
                                                                                                                                                                                                               (Language.PureScript.Names.Qualified
                                                                                                                                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                                                                                                                                     'Language.PureScript.Names.ClassName))))
                                                                                                                                                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                                            GHC.Generics.S
                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "tcdInstanceTypes")
                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                            (GHC.Generics.K1
                                                                                                                                                                                                               GHC.Generics.R
                                                                                                                                                                                                               [Language.PureScript.Types.Type])
                                                                                                                                                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                                             GHC.Generics.S
                                                                                                                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                                   "tcdDependencies")
                                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                             (GHC.Generics.K1
                                                                                                                                                                                                                                GHC.Generics.R
                                                                                                                                                                                                                                (GHC.Base.Maybe
                                                                                                                                                                                                                                   [Language.PureScript.Types.Constraint]))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds4 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds2 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds7 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 case ds8 of wild5 { GHC.Generics.:*: ds11 ds12 ->
                 Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                   @ v
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdChain")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Names.Qualified
                              Language.PureScript.Names.Ident]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                              <*>_N
                                                                              <GHC.Generics.R>_P
                                                                              <[Language.PureScript.Names.Qualified
                                                                                  Language.PureScript.Names.Ident]>_R
                                                                              <x>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdIndex")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           GHC.Integer.Type.Integer>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <GHC.Integer.Type.Integer>_R
                                                                   <x>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdValue")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1 GHC.Generics.R v>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <v>_R
                                                                         <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdPath")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [(Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ClassName),
                             GHC.Integer.Type.Integer)]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <[(Language.PureScript.Names.Qualified
                                                                            (Language.PureScript.Names.ProperName
                                                                               'Language.PureScript.Names.ClassName),
                                                                          GHC.Integer.Type.Integer)]>_R
                                                                       <x>_P)
                   ds10
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdClassName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ClassName))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                       <*>_N
                                                                                       <GHC.Generics.R>_P
                                                                                       <Language.PureScript.Names.Qualified
                                                                                          (Language.PureScript.Names.ProperName
                                                                                             'Language.PureScript.Names.ClassName)>_R
                                                                                       <x>_P)
                   ds11
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdInstanceTypes")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [Language.PureScript.Types.Type]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <[Language.PureScript.Types.Type]>_R
                                                                           <x>_P)
                   ds12
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Base.Just "tcdDependencies")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Base.Maybe
                              [Language.PureScript.Types.Constraint])>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.R>_P
                                                                                     <GHC.Base.Maybe
                                                                                        [Language.PureScript.Types.Constraint]>_R
                                                                                     <x>_P) } } } } } }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fNFDataTypeClassDictionaryInScope ::
    Control.DeepSeq.NFData v =>
    Control.DeepSeq.NFData
      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         v)
  DFunId
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),1*C1(H)><S(SSLSS(SS)SS),1*U(1*U,1*U,U,1*U,1*U(1*U,1*H),1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_$crnf
                  `cast`
                (forall (v :: <*>_N).
                 <Control.DeepSeq.NFData v>_R
                 ->_R Sym (Control.DeepSeq.N:NFData[0]
                               <Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                                  v>_N)) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fNFDataTypeClassDictionaryInScope_$crnf ::
    Control.DeepSeq.NFData v =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S),1*C1(H)><S(SSLSS(SS)SS),1*U(1*U,1*U,U,1*U,1*U(1*U,1*H),1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ v
                   (w :: Control.DeepSeq.NFData v)
                   (w1 :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case w1 of ww { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww5 of ww8 { Language.PureScript.Names.Qualified ww9 ww10 ->
                 case ww10
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ClassName>_P) of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Language.PureScript.TypeClassDictionaries.$w$crnf
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww9
                   nt
                     `cast`
                   (Sym (Language.PureScript.Names.N:ProperName[0]
                             <'Language.PureScript.Names.ClassName>_P))
                   ww6
                   ww7 } } }) -}
b0da4434522fdcd0f30209ac25aabbf9
  $fNFDataTypeClassDictionaryInScope_go ::
    [Language.PureScript.Types.Constraint] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
9ce43237d2b017346b6896d1bdcedf1a
  $fNFDataTypeClassDictionaryInScope_go1 ::
    [Language.PureScript.Types.Type] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
757e6f62b88c954de77248a44fa993e6
  $fNFDataTypeClassDictionaryInScope_go2 ::
    [(Language.PureScript.Names.Qualified
        (Language.PureScript.Names.ProperName
           'Language.PureScript.Names.ClassName),
      GHC.Integer.Type.Integer)]
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
5a487ec7841ff3166bc5cb114452ccf7
  $fNFDataTypeClassDictionaryInScope_go3 ::
    [Language.PureScript.Names.Qualified
       Language.PureScript.Names.Ident]
    -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fShowTypeClassDictionaryInScope ::
    GHC.Show.Show v =>
    GHC.Show.Show
      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         v)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ v (v1 :: GHC.Show.Show v).
                  @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                       v)
                  (Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowsPrec
                     @ v
                     v1)
                  (Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshow
                     @ v
                     v1)
                  (Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowList
                     @ v
                     v1) -}
3b141546e076ef40d0e461d449136b7a
  $fShowTypeClassDictionaryInScope1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fShowTypeClassDictionaryInScope_$cshow ::
    GHC.Show.Show v =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> GHC.Base.String
  {- Arity: 2,
     Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S,1*U(U,U,U,U,1*U(1*U,U),U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ v
                   ($dShow :: GHC.Show.Show v)
                   (x :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                           v) ->
                 Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowsPrec
                   @ v
                   $dShow
                   Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fShowTypeClassDictionaryInScope_$cshowList ::
    GHC.Show.Show v =>
    [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
       v]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ v
                   ($dShow :: GHC.Show.Show v)
                   (ls :: [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             v])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                        v)
                   (Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope_$cshowsPrec
                      @ v
                      $dShow
                      Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope1)
                   ls
                   s) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fShowTypeClassDictionaryInScope_$cshowsPrec ::
    GHC.Show.Show v =>
    GHC.Types.Int
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         v
    -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U(U,U,U,U,1*U(1*U,U),U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ v
                   (w :: GHC.Show.Show v)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 Language.PureScript.TypeClassDictionaries.$w$cshowsPrec
                   @ v
                   w
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fTraversableTypeClassDictionaryInScope ::
    Data.Traversable.Traversable
      Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                  Language.PureScript.TypeClassDictionaries.$fFunctorTypeClassDictionaryInScope
                  Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope
                  Language.PureScript.TypeClassDictionaries.$fTraversableTypeClassDictionaryInScope_$ctraverse
                  Language.PureScript.TypeClassDictionaries.$fTraversableTypeClassDictionaryInScope_$csequenceA
                  Language.PureScript.TypeClassDictionaries.$fTraversableTypeClassDictionaryInScope_$cmapM
                  Language.PureScript.TypeClassDictionaries.$fTraversableTypeClassDictionaryInScope_$csequence -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fTraversableTypeClassDictionaryInScope_$cmapM ::
    GHC.Base.Monad m =>
    (a -> m b)
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> m (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(S(C(C(S))L)LLLLL)LLLL),1*U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A),A,A,A,A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ m :: * -> * @ a @ b ($dMonad :: GHC.Base.Monad m) ->
                 Language.PureScript.TypeClassDictionaries.$fTraversableTypeClassDictionaryInScope_$ctraverse
                   @ m
                   @ a
                   @ b
                   (GHC.Base.$p1Monad @ m $dMonad)) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fTraversableTypeClassDictionaryInScope_$csequence ::
    GHC.Base.Monad m =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      (m a)
    -> m (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(C(C(S))L)LLLLL)LLLL),1*U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A),A,A,A,A)><S,1*U(U,U,U,U,U,U,U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ m :: * -> * @ a ($dMonad :: GHC.Base.Monad m) ->
                 let {
                   $dApplicative :: GHC.Base.Applicative m
                   = GHC.Base.$p1Monad @ m $dMonad
                 } in
                 \ (eta :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             (m a)) ->
                 case eta of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 GHC.Base.fmap
                   @ m
                   (GHC.Base.$p1Applicative @ m $dApplicative)
                   @ a
                   @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                        a)
                   (\ (b3 :: a) ->
                    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                      @ a
                      a1
                      a2
                      b3
                      a4
                      a5
                      a6
                      a7)
                   a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fTraversableTypeClassDictionaryInScope_$csequenceA ::
    GHC.Base.Applicative f =>
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      (f a)
    -> f (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(C(C(S))L)LLLLL),1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A)><S,1*U(U,U,U,U,U,U,U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ f :: * -> *
                   @ a
                   ($dApplicative :: GHC.Base.Applicative f)
                   (eta :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                             (f a)) ->
                 case eta of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope a1 a2 a3 a4 a5 a6 a7 ->
                 GHC.Base.fmap
                   @ f
                   (GHC.Base.$p1Applicative @ f $dApplicative)
                   @ a
                   @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                        a)
                   (\ (b3 :: a) ->
                    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                      @ a
                      a1
                      a2
                      b3
                      a4
                      a5
                      a6
                      a7)
                   a3 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  $fTraversableTypeClassDictionaryInScope_$ctraverse ::
    GHC.Base.Applicative f =>
    (a -> f b)
    -> Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
         a
    -> f (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(C(C(S))L)LLLLL),1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ f :: * -> *
                   @ a
                   @ b
                   (w :: GHC.Base.Applicative f)
                   (w1 :: a -> f b)
                   (w2 :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            a) ->
                 case w2 of ww { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 GHC.Base.fmap
                   @ f
                   (GHC.Base.$p1Applicative @ f w)
                   @ b
                   @ (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                        b)
                   (\ (b3 :: b) ->
                    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                      @ b
                      ww1
                      ww2
                      b3
                      ww4
                      ww5
                      ww6
                      ww7)
                   (w1 ww3) }) -}
d20cce6a9d190869e2ec9da812645a8b
  $s$fShow[] :: GHC.Show.Show [Language.PureScript.Types.Constraint]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Types.Constraint]
                  (\ (ds :: GHC.Types.Int) ->
                   Language.PureScript.Types.$fShowConstraint_$cshowList)
                  (\ (x :: [Language.PureScript.Types.Constraint]) ->
                   GHC.Show.showList__
                     @ Language.PureScript.Types.Constraint
                     Language.PureScript.Types.$fShowConstraint1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[Language.PureScript.Types.Constraint]])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [Language.PureScript.Types.Constraint]
                     Language.PureScript.Types.$fShowConstraint_$cshowList
                     ls
                     s) -}
3f93f6bf05cae6c1db36d3628d7dd0af
  $tc'TypeClassDictionaryInScope :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7857252493279618841##
                   7284404623095911798##
                   Language.PureScript.TypeClassDictionaries.$trModule
                   Language.PureScript.TypeClassDictionaries.$tc'TypeClassDictionaryInScope2
                   1#
                   Language.PureScript.TypeClassDictionaries.$tc'TypeClassDictionaryInScope1) -}
639425d764d592660b5dd7fa609ffe2a
  $tc'TypeClassDictionaryInScope1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0951d5ca06141bb743ddbea29d33512b
  $tc'TypeClassDictionaryInScope2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.TypeClassDictionaries.$tc'TypeClassDictionaryInScope3) -}
dcca876ec45e8987d6b416b0ee822793
  $tc'TypeClassDictionaryInScope3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassDictionaryInScope"#) -}
b406bde7eacfdf106c0d1cdf7bb862ba
  $tcTypeClassDictionaryInScope :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12481960660696319224##
                   2019964988495838877##
                   Language.PureScript.TypeClassDictionaries.$trModule
                   Language.PureScript.TypeClassDictionaries.$tcTypeClassDictionaryInScope1
                   0#
                   GHC.Types.krep$*Arr*) -}
9f698392bfba5b24c3d983a04a329968
  $tcTypeClassDictionaryInScope1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.TypeClassDictionaries.$tcTypeClassDictionaryInScope2) -}
48f47cc93687c57c4fc9ebb09a015899
  $tcTypeClassDictionaryInScope2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeClassDictionaryInScope"#) -}
c0a053542528f30fe5ba60f0165a998f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.TypeClassDictionaries.$trModule3
                   Language.PureScript.TypeClassDictionaries.$trModule1) -}
c588f9802bab022603f888c5a82c985f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.TypeClassDictionaries.$trModule2) -}
a027b75e7b1e10e1d776803f3a517f8e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.TypeClassDictionaries"#) -}
2864b5d302978ba8d63f4069194754d2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.TypeClassDictionaries.$trModule4) -}
1834b77ce4eeaa3a0ea45563c4c168b0
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
e1ac4e794e1fed92556927a420a53bcb
  $w$crnf ::
    Control.DeepSeq.NFData v =>
    [Language.PureScript.Names.Qualified
       Language.PureScript.Names.Ident]
    -> GHC.Integer.Type.Integer
    -> v
    -> [(Language.PureScript.Names.Qualified
           (Language.PureScript.Names.ProperName
              'Language.PureScript.Names.ClassName),
         GHC.Integer.Type.Integer)]
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> [Language.PureScript.Types.Type]
    -> GHC.Base.Maybe [Language.PureScript.Types.Constraint]
    -> ()
  {- Arity: 9, HasNoCafRefs,
     Strictness: <C(S),1*C1(H)><S,1*U><S,1*U><L,U><S,1*U><S,1*U><L,A><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Control.DeepSeq.NFData v)
                   (ww :: [Language.PureScript.Names.Qualified
                             Language.PureScript.Names.Ident])
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: v)
                   (ww3 :: [(Language.PureScript.Names.Qualified
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ClassName),
                             GHC.Integer.Type.Integer)])
                   (ww4 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (ww5 :: Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ClassName)
                   (ww6 :: [Language.PureScript.Types.Type])
                   (ww7 :: GHC.Base.Maybe [Language.PureScript.Types.Constraint]) ->
                 case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go3
                        ww of wild1 { () ->
                 case ww1 of ds1 { DEFAULT ->
                 case w `cast` (Control.DeepSeq.N:NFData[0] <v>_N)
                        ww2 of wild2 { () ->
                 case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go2
                        ww3 of wild3 { () ->
                 let {
                   $j :: () <join 0>
                   = case Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go1
                            ww6 of wild4 { () ->
                     case ww7 of wild {
                       GHC.Base.Nothing -> GHC.Tuple.()
                       GHC.Base.Just x
                       -> Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope_go
                            x } }
                 } in
                 case ww4 of wild {
                   GHC.Base.Nothing -> $j
                   GHC.Base.Just x
                   -> case Language.PureScript.Names.$fNFDataModuleName_go
                             x `cast`
                             (Language.PureScript.Names.N:ModuleName[0]) of wild4 { () ->
                      $j } } } } } }) -}
524a54a35cc441592daf308adc4c42ea
  $w$cshowsPrec ::
    GHC.Show.Show v =>
    GHC.Prim.Int#
    -> [Language.PureScript.Names.Qualified
          Language.PureScript.Names.Ident]
    -> GHC.Integer.Type.Integer
    -> v
    -> [(Language.PureScript.Names.Qualified
           (Language.PureScript.Names.ProperName
              'Language.PureScript.Names.ClassName),
         GHC.Integer.Type.Integer)]
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
    -> [Language.PureScript.Types.Type]
    -> GHC.Base.Maybe [Language.PureScript.Types.Constraint]
    -> GHC.Show.ShowS
  {- Arity: 9,
     Strictness: <L,1*U(1*C1(C1(C(U))),A,A)><S,U><L,U><L,U><L,U><L,U><L,1*U(1*U,U)><L,U><L,1*U>,
     Inline: [0] -}
ac150d88cdf1d28577ded9eb224b9150
  $wsuperclassName ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><S,U><S,U><S,U>, Inline: [0] -}
1c7eb5af0357b976dbe077e65975eac8
  type NamedDict =
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
6fae3e2d3c76b2d8044da9ff9cec0bdb
  axiom Language.PureScript.TypeClassDictionaries.Rep_TypeClassDictionaryInScope::
      GHC.Generics.Rep
        (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
           v)
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "TypeClassDictionaryInScope"
               "Language.PureScript.TypeClassDictionaries"
               "purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "TypeClassDictionaryInScope" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "tcdChain")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0
                      [Language.PureScript.Names.Qualified
                         Language.PureScript.Names.Ident])
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tcdIndex")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdValue")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 v)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tcdPath")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0
                                        [(Language.PureScript.Names.Qualified
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ClassName),
                                          GHC.Integer.Type.Integer)])
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdClassName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Language.PureScript.Names.Qualified
                                                            (Language.PureScript.Names.ProperName
                                                               'Language.PureScript.Names.ClassName))))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tcdInstanceTypes")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         [Language.PureScript.Types.Type])
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "tcdDependencies")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             [Language.PureScript.Types.Constraint]))))))
6fae3e2d3c76b2d8044da9ff9cec0bdb
  data TypeClassDictionaryInScope v
    = TypeClassDictionaryInScope {tcdChain :: [Language.PureScript.Names.Qualified
                                                 Language.PureScript.Names.Ident],
                                  tcdIndex :: GHC.Integer.Type.Integer,
                                  tcdValue :: v,
                                  tcdPath :: [(Language.PureScript.Names.Qualified
                                                 (Language.PureScript.Names.ProperName
                                                    'Language.PureScript.Names.ClassName),
                                               GHC.Integer.Type.Integer)],
                                  tcdClassName :: Language.PureScript.Names.Qualified
                                                    (Language.PureScript.Names.ProperName
                                                       'Language.PureScript.Names.ClassName),
                                  tcdInstanceTypes :: [Language.PureScript.Types.Type],
                                  tcdDependencies :: GHC.Base.Maybe
                                                       [Language.PureScript.Types.Constraint]}
f08fbdbf5604360f1e0216aef0f756c1
  superclassName ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
    -> GHC.Integer.Type.Integer -> Data.Text.Internal.Text
  {- Arity: 2, Strictness: <S(LS(SSS)),1*U(A,1*U(U,U,U))><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ClassName))
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case w of ww { Language.PureScript.Names.Qualified ww1 ww2 ->
                 case ww2
                        `cast`
                      (Language.PureScript.Names.N:ProperName[0]
                           <'Language.PureScript.Names.ClassName>_P) of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 Language.PureScript.TypeClassDictionaries.$wsuperclassName
                   ww4
                   ww5
                   ww6
                   w1 } }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdChain ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> [Language.PureScript.Names.Qualified
          Language.PureScript.Names.Ident]
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds1 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdClassName ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds5 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdDependencies ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> GHC.Base.Maybe [Language.PureScript.Types.Constraint]
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds7 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdIndex ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> GHC.Integer.Type.Integer
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds2 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdInstanceTypes ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> [Language.PureScript.Types.Type]
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds6 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdPath ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> [(Language.PureScript.Names.Qualified
           (Language.PureScript.Names.ProperName
              'Language.PureScript.Names.ClassName),
         GHC.Integer.Type.Integer)]
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds4 }) -}
6fae3e2d3c76b2d8044da9ff9cec0bdb
  tcdValue ::
    Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
      v
    -> v
  RecSel Left Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ v
                   (ds :: Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                            v) ->
                 case ds of wild { Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds3 }) -}
instance Data.Foldable.Foldable [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.$fFoldableTypeClassDictionaryInScope
instance GHC.Base.Functor [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.$fFunctorTypeClassDictionaryInScope
instance GHC.Generics.Generic [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.$fGenericTypeClassDictionaryInScope
instance Control.DeepSeq.NFData [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.$fNFDataTypeClassDictionaryInScope
instance GHC.Show.Show [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.$fShowTypeClassDictionaryInScope
instance Data.Traversable.Traversable [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.$fTraversableTypeClassDictionaryInScope
family instance GHC.Generics.Rep [Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope]
  = Language.PureScript.TypeClassDictionaries.Rep_TypeClassDictionaryInScope
"SPEC/Language.PureScript.TypeClassDictionaries $fShow[] @ Constraint" [orphan] forall (v :: GHC.Show.Show
                                                                                               Language.PureScript.Types.Constraint)
  GHC.Show.$fShow[] @ Language.PureScript.Types.Constraint v
  = Language.PureScript.TypeClassDictionaries.$s$fShow[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

