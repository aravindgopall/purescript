
==================== FINAL INTERFACE ====================
2019-01-24 14:14:24.929216 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Externs 8043
  interface hash: 40e7646fe7731e11383a14a360c6b416
  ABI hash: cf933be49760ec7d1e991d8ad7f6146f
  export-list hash: caea0e8e36630f9e250d475ec2e68707
  orphan hash: f9f5374fe3d6ba7937a65e4793d6ca45
  flag hash: f3553c80622c9d61b5c3b385d3f3780b
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: True
  where
exports:
  Language.PureScript.Externs.applyExternsFileToEnvironment
  Language.PureScript.Externs.moduleToExternsFile
  Language.PureScript.Externs.ExternsDeclaration{Language.PureScript.Externs.EDClass Language.PureScript.Externs.EDDataConstructor Language.PureScript.Externs.EDInstance Language.PureScript.Externs.EDKind Language.PureScript.Externs.EDType Language.PureScript.Externs.EDTypeSynonym Language.PureScript.Externs.EDValue edClassConstraints edClassMembers edClassName edClassTypeArguments edDataCtorFields edDataCtorName edDataCtorOrigin edDataCtorType edDataCtorTypeCtor edFunctionalDependencies edInstanceChain edInstanceChainIndex edInstanceClassName edInstanceConstraints edInstanceName edInstanceTypes edKindName edTypeDeclarationKind edTypeKind edTypeName edTypeSynonymArguments edTypeSynonymName edTypeSynonymType edValueName edValueType}
  Language.PureScript.Externs.ExternsFile{Language.PureScript.Externs.ExternsFile efDeclarations efExports efFixities efImports efModuleName efSourceSpan efTypeFixities efVersion}
  Language.PureScript.Externs.ExternsFixity{Language.PureScript.Externs.ExternsFixity efAlias efAssociativity efOperator efPrecedence}
  Language.PureScript.Externs.ExternsImport{Language.PureScript.Externs.ExternsImport eiImportType eiImportedAs eiModule}
  Language.PureScript.Externs.ExternsTypeFixity{Language.PureScript.Externs.ExternsTypeFixity efTypeAlias efTypeAssociativity efTypeOperator efTypePrecedence}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Names Language.PureScript.PSString
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bytestring-0.10.8.2 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      parsec-3.1.13.0 pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2
                      random-1.1 scientific-0.3.6.2 sourcemap-0.1.6 stm-2.4.5.0 syb-0.7
                      tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson.TH 7d552baba5d6d064e5d0fb814e331004
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.List.NonEmpty 595ee3baddcadebc4831ea7541427984
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Set 7d3c64a641be4cacbcd8119445bab919
import  -/  containers-0.5.11.0:Data.Set.Internal 93fa3ef95853aa2a7aadf32d693bd451
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  Language.PureScript.AST e89b59f8e201961eafd3ff905a683659
  exports: be73d3bb7d4ebe5df082453f6d572075
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  Declaration e92f6ee78a22c0eadc3566d7d1f48d5b
  DeclarationRef 1ef988d2f8db98f35f578bde9282f468
  ImportDeclaration b98a8b3e9f19a9a91825a99d72954601
  ImportDeclarationType ee54accdb974d8b355eb58984489a7af
  KindRef fdcf7f61e078f63d583e2e92289fb303
  Module 305128e30e200d34d712365aa2d509df
  Module 3342e00ee072addfd009ee61e87fb865
  TypeClassRef 0dfae6fa12be94e312c419132246a1f3
  TypeFixityDeclaration 5a4e2ba83bf57ee4021fdafe70b4eb9a
  TypeInstanceRef 1a4ec4636edef4ba31547e9816ff48da
  TypeRef 7b2aa9fe81ad40f64c659855da835def
  ValueFixityDeclaration 6da09cca72fc0dd8bafa2b8ed78d033e
  ValueRef 78dee2d86cdf935e8811ecdd18c169d3
  getTypeOpRef f544549c7044502c660701544ec93b94
  getValueOpRef 47a2050f95b57da4a8d94869a8fe7a30
import  -/  Language.PureScript.AST.Operators 615a873c5f62908f354b9d4840cbeb63
  Associativity 228a0ef1b3774b11d1a92fae92fb43a0
  Fixity 141f87a59136c90c1be577c19942dfd4
  Precedence ea481cf59a404ab1d4264846eb495580
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Environment 467b25d81b890e1aaabe28d0f09d192d
  exports: a0cb6cb8c78c56365f58c9f88d1fe000
  DataDeclType 7eb61fe78108d98d82e39145869b2402
  DataType a076ec28146acfb660613d56f06f5e88
  Defined 324606166c226f373232031c92abddc6
  Environment 7eb61fe78108d98d82e39145869b2402
  ExternData 4cceb3aa3c643794bba97c9286e206cd
  External 8cdfa7f932f8566e563f06b670986495
  FunctionalDependency 181e7295489b314c6c042d61e80bb6b9
  TypeClassData 8d6c0d50edff1e015eabc5cf05f826dd
  TypeKind 713362c52c19b15de0cab368ddfda667
  TypeSynonym b62fadc969156f0dc1f8fb5b90db902b
  dataConstructors 7eb61fe78108d98d82e39145869b2402
  kinds 7eb61fe78108d98d82e39145869b2402
  makeTypeClassData 01b32b44a7812593fdcf211bf1370ba3
  names 7eb61fe78108d98d82e39145869b2402
  typeClassArguments 181e7295489b314c6c042d61e80bb6b9
  typeClassCoveringSets 181e7295489b314c6c042d61e80bb6b9
  typeClassDependencies 181e7295489b314c6c042d61e80bb6b9
  typeClassDeterminedArguments 181e7295489b314c6c042d61e80bb6b9
  typeClassDictionaries 7eb61fe78108d98d82e39145869b2402
  typeClassMembers 181e7295489b314c6c042d61e80bb6b9
  typeClassSuperclasses 181e7295489b314c6c042d61e80bb6b9
  typeClasses 7eb61fe78108d98d82e39145869b2402
  typeSynonyms 7eb61fe78108d98d82e39145869b2402
  types 7eb61fe78108d98d82e39145869b2402
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  exports: fe71635ad7964c0d620fb0685614a050
  SourceKind 4cdf50d4b2444221832ca704f3a0c468
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  ConstructorName 84054a8bbbe827ba2ce7da83056a95ee
  Ident bad3562aa6138b6192713ac281080869
  KindName 7782d66ce60bd67282cf566485701e07
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  OpName 9af301165f72160425c5e0dde6525338
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  TypeName 40ce511c66a72431b4e87351210f7b03
  TypeOpName db73fc39fef75f034a0b4a8074947dd9
  ValueOpName 11964a7dc7a3029edbea30fc5b4578c2
  coerceProperName 441cf2d4ab32b68a0b73ca234d2a628b
import  -/  Language.PureScript.TypeClassDictionaries 7fbd42662a194b8e85db9d2e22a4ea07
  exports: d83fdf73223cc4030d8649333c7594ad
  NamedDict 5e215d8e3d225869af57b18c7fc0b693
  TypeClassDictionaryInScope 83c0c3aa36a88c60dd2bb2e7525bc817
  tcdChain d6c50933d00906849633ac7fdfbcd506
  tcdClassName d6c50933d00906849633ac7fdfbcd506
  tcdDependencies d6c50933d00906849633ac7fdfbcd506
  tcdIndex d6c50933d00906849633ac7fdfbcd506
  tcdInstanceTypes d6c50933d00906849633ac7fdfbcd506
  tcdPath d6c50933d00906849633ac7fdfbcd506
  tcdValue d6c50933d00906849633ac7fdfbcd506
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  exports: 229bb7528146da886cffbefad5822e19
  SourceConstraint b73f205dd83ce498c3119d8c9316f0c6
  SourceType 0ac818517c14fedd280ef5885ae0cdc3
import  -/  Paths_purescript b471cb3641a3834bb1f308b27437a78a
  exports: 011ad501fbfaff6e4e651a7af4df7ce9
  version 3901654c5f764cf9b152bdbd41b845d0
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
import  -/  unordered-containers-0.2.9.0:Data.HashMap.Base aa3368c2691ac85cecf0d74a4bea8e4d
a7fb565ada874d78b726c57090b05102
  $fFromJSONExternsDeclaration ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Externs.ExternsDeclaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsDeclaration
                  Language.PureScript.Externs.$fFromJSONExternsDeclaration_$cparseJSON
                  Language.PureScript.Externs.$fFromJSONExternsDeclaration_$cparseJSONList -}
ca64d0c08a25a6ad4d1b76a1c454c830
  $fFromJSONExternsDeclaration1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
3bedf87f45ff482de633798e8648a116
  $fFromJSONExternsDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
0339a065b6c20ef8e2f6a6e84e329271
  $fFromJSONExternsDeclaration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
a7fb565ada874d78b726c57090b05102
  $fFromJSONExternsDeclaration4 ::
    [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,U> -}
3eb1f86d2dcb53af7c438e89138f0758
  $fFromJSONExternsDeclaration5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsDeclaration6) -}
c284027f1755c39a45052aa8ff694969
  $fFromJSONExternsDeclaration6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Externs.ExternsDeclaration"#) -}
a7fb565ada874d78b726c57090b05102
  $fFromJSONExternsDeclaration_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 case value of wild {
                   DEFAULT
                   -> Data.Aeson.TH.noObjectFail
                        @ Language.PureScript.Externs.ExternsDeclaration
                        Language.PureScript.Externs.$fFromJSONExternsDeclaration5
                        (case wild of wild1 {
                           Data.Aeson.Types.Internal.Array ds9 -> Data.Aeson.TH.valueConName9
                           Data.Aeson.Types.Internal.String ds9 -> Data.Aeson.TH.valueConName7
                           Data.Aeson.Types.Internal.Number ds9 -> Data.Aeson.TH.valueConName5
                           Data.Aeson.Types.Internal.Bool ds9 -> Data.Aeson.TH.valueConName3
                           Data.Aeson.Types.Internal.Null -> Data.Aeson.TH.valueConName1 })
                   Data.Aeson.Types.Internal.Object obj
                   -> case obj of wild1 {
                        Data.HashMap.Base.Empty
                        -> Language.PureScript.Externs.$fFromJSONExternsDeclaration4
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value))
                        Data.HashMap.Base.BitmapIndexed dt dt1
                        -> Language.PureScript.Externs.$fFromJSONExternsDeclaration4
                             (Language.PureScript.Externs.$fFromJSONExternsDeclaration_$s$wgo3
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value))
                                0#
                                (GHC.Prim.sizeofSmallArray#
                                   @ (Data.HashMap.Base.HashMap
                                        Data.Text.Internal.Text Data.Aeson.Types.Internal.Value)
                                   dt1)
                                dt1)
                        Data.HashMap.Base.Leaf dt dt1 dt2
                        -> Language.PureScript.Externs.$fFromJSONExternsDeclaration4
                             (GHC.Types.:
                                @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                                (dt1, dt2)
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)))
                        Data.HashMap.Base.Full dt
                        -> Language.PureScript.Externs.$fFromJSONExternsDeclaration4
                             (Language.PureScript.Externs.$fFromJSONExternsDeclaration_$s$wgo1
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value))
                                0#
                                (GHC.Prim.sizeofSmallArray#
                                   @ (Data.HashMap.Base.HashMap
                                        Data.Text.Internal.Text Data.Aeson.Types.Internal.Value)
                                   dt)
                                dt)
                        Data.HashMap.Base.Collision dt dt1
                        -> Language.PureScript.Externs.$fFromJSONExternsDeclaration4
                             (Language.PureScript.Externs.$fFromJSONExternsDeclaration_$s$wgo2
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value))
                                0#
                                (GHC.Prim.sizeofSmallArray#
                                   @ (Data.HashMap.Base.Leaf
                                        Data.Text.Internal.Text Data.Aeson.Types.Internal.Value)
                                   dt1)
                                dt1) } }) -}
a7fb565ada874d78b726c57090b05102
  $fFromJSONExternsDeclaration_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsDeclaration]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Externs.$fFromJSONExternsDeclaration3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Externs.$fFromJSONExternsDeclaration2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Externs.$fFromJSONExternsDeclaration1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Externs.ExternsDeclaration] f7 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Externs.ExternsDeclaration]>_R))
                   Data.Aeson.Types.Internal.Array a10
                   -> case a10 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv33 ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv33
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Externs.$fFromJSONExternsDeclaration_go
                        0#
                        ($wgo 0#) } }) -}
8f850d6203eca1a6ce8897a42b3bdf05
  $fFromJSONExternsDeclaration_$s$wgo1 ::
    [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.SmallArray#
         (Data.HashMap.Base.HashMap
            Data.Text.Internal.Text Data.Aeson.Types.Internal.Value)
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
  {- Arity: 4, HasNoCafRefs, Strictness: <L,1*U><S,U><S,U><L,U> -}
4ad498d78dde80582f128ae94a4e1387
  $fFromJSONExternsDeclaration_$s$wgo2 ::
    [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.SmallArray#
         (Data.HashMap.Base.Leaf
            Data.Text.Internal.Text Data.Aeson.Types.Internal.Value)
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
  {- Arity: 4, HasNoCafRefs, Strictness: <L,1*U><S,U><S,U><L,U> -}
fd00396e31e5a6d220437ccfd9ff7b9a
  $fFromJSONExternsDeclaration_$s$wgo3 ::
    [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.SmallArray#
         (Data.HashMap.Base.HashMap
            Data.Text.Internal.Text Data.Aeson.Types.Internal.Value)
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
  {- Arity: 4, HasNoCafRefs, Strictness: <L,1*U><S,U><S,U><L,U> -}
a7fb565ada874d78b726c57090b05102
  $fFromJSONExternsDeclaration_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsDeclaration]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
c010c09fe85776adf7c6787c7d79c898
  $fFromJSONExternsFile ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Externs.ExternsFile
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsFile
                  Language.PureScript.Externs.$fFromJSONExternsFile_$cparseJSON
                  Language.PureScript.Externs.$fFromJSONExternsFile_$cparseJSONList -}
c010c09fe85776adf7c6787c7d79c898
  $fFromJSONExternsFile_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Externs.ExternsFile
  {- Arity: 1, Strictness: <S,1*U> -}
c010c09fe85776adf7c6787c7d79c898
  $fFromJSONExternsFile_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsFile]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Externs.$fFromJSONExternsDeclaration3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Externs.$fFromJSONExternsDeclaration2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Externs.$fFromJSONExternsDeclaration1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Externs.ExternsFile] f7 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Externs.ExternsFile]>_R))
                   Data.Aeson.Types.Internal.Array a10
                   -> case a10 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv33 ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv33
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Externs.$fFromJSONExternsFile_go
                        0#
                        ($wgo 0#) } }) -}
c010c09fe85776adf7c6787c7d79c898
  $fFromJSONExternsFile_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsFile]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
faf775006e4902ca2862b62427af99db
  $fFromJSONExternsFixity ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Externs.ExternsFixity
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsFixity
                  Language.PureScript.Externs.$fFromJSONExternsFixity_$cparseJSON
                  Language.PureScript.Externs.$fFromJSONExternsFixity_$cparseJSONList -}
a0ebdeeba8b7236ff8a5509731ac9cd0
  $fFromJSONExternsFixity1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Names.Qualified
            (Data.Either.Either
               Language.PureScript.Names.Ident
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ConstructorName)))
  {- Arity: 1,
     Unfolding: (Language.PureScript.Names.$fFromJSONQualified_$cparseJSON
                   @ (Data.Either.Either
                        Language.PureScript.Names.Ident
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ConstructorName))
                   Language.PureScript.Externs.$fFromJSONExternsFixity_$s$fFromJSONEither) -}
4bb1e7c5c56229542ade6381f465f254
  $fFromJSONExternsFixity10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity11) -}
63018591d6c8ce53cdcf66ea50ed3e12
  $fFromJSONExternsFixity11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Object"#) -}
519931735057cf13a9a9e5caad3a12fe
  $fFromJSONExternsFixity12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity13) -}
41ec9077f47ba69b3a014accdd334be8
  $fFromJSONExternsFixity13 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Externs.ExternsFixity"#) -}
ae8a2953d47aca78c1ac3484e850f6ea
  $fFromJSONExternsFixity14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity15) -}
268c0f0e67e9742659882e69348b9051
  $fFromJSONExternsFixity15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsFixity"#) -}
334c9bb5a19ca3163ee290ace5da50e9
  $fFromJSONExternsFixity2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity3) -}
cc7fc38ce2232300f60adf589e4d0ba2
  $fFromJSONExternsFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efAlias"#) -}
757acd0cadda05bd7c7b3b7a59e82f52
  $fFromJSONExternsFixity4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity5) -}
464c8e16dc41ea2a0598d9efa5b0540f
  $fFromJSONExternsFixity5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efOperator"#) -}
0376059c13ce1d92eeb469752e246c15
  $fFromJSONExternsFixity6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity7) -}
00329c82e90304b401410a0bc60753e9
  $fFromJSONExternsFixity7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efPrecedence"#) -}
1e306a634d2a872aae05c204d9fc8d4b
  $fFromJSONExternsFixity8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsFixity9) -}
766aa051e020a32a5da0cde1495ef296
  $fFromJSONExternsFixity9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efAssociativity"#) -}
faf775006e4902ca2862b62427af99db
  $fFromJSONExternsFixity_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Externs.ExternsFixity
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 case value of wild {
                   DEFAULT
                   -> Data.Aeson.TH.parseTypeMismatch'
                        @ Language.PureScript.Externs.ExternsFixity
                        Language.PureScript.Externs.$fFromJSONExternsFixity14
                        Language.PureScript.Externs.$fFromJSONExternsFixity12
                        Language.PureScript.Externs.$fFromJSONExternsFixity10
                        (case wild of wild1 {
                           Data.Aeson.Types.Internal.Array ds9 -> Data.Aeson.TH.valueConName9
                           Data.Aeson.Types.Internal.String ds9 -> Data.Aeson.TH.valueConName7
                           Data.Aeson.Types.Internal.Number ds9 -> Data.Aeson.TH.valueConName5
                           Data.Aeson.Types.Internal.Bool ds9 -> Data.Aeson.TH.valueConName3
                           Data.Aeson.Types.Internal.Null -> Data.Aeson.TH.valueConName1 })
                   Data.Aeson.Types.Internal.Object recObj
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser
                               Language.PureScript.AST.Operators.Associativity
                        = case Language.PureScript.Externs.$fFromJSONExternsFixity8 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ Language.PureScript.AST.Operators.Associativity
                            Language.PureScript.AST.Operators.$fFromJSONAssociativity_$cparseJSON
                            Language.PureScript.Externs.$fFromJSONExternsFixity12
                            Language.PureScript.Externs.$fFromJSONExternsFixity14
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e :: Data.Aeson.Types.Internal.Parser
                               Language.PureScript.AST.Operators.Precedence
                        = case Language.PureScript.Externs.$fFromJSONExternsFixity6 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ GHC.Integer.Type.Integer
                            Data.Aeson.Types.FromJSON.$fFromJSONInteger_$cparseJSON
                            Language.PureScript.Externs.$fFromJSONExternsFixity12
                            Language.PureScript.Externs.$fFromJSONExternsFixity14
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e1 :: Data.Aeson.Types.Internal.Parser
                                (Language.PureScript.Names.OpName
                                   'Language.PureScript.Names.ValueOpName)
                        = case Language.PureScript.Externs.$fFromJSONExternsFixity4 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ (Language.PureScript.Names.OpName
                                 'Language.PureScript.Names.ValueOpName)
                            (Language.PureScript.Names.$fFromJSONOpName_$cparseJSON
                               @ 'Language.PureScript.Names.ValueOpName)
                            Language.PureScript.Externs.$fFromJSONExternsFixity12
                            Language.PureScript.Externs.$fFromJSONExternsFixity14
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e2 :: Data.Aeson.Types.Internal.Parser
                                (Language.PureScript.Names.Qualified
                                   (Data.Either.Either
                                      Language.PureScript.Names.Ident
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ConstructorName)))
                        = case Language.PureScript.Externs.$fFromJSONExternsFixity2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ (Language.PureScript.Names.Qualified
                                 (Data.Either.Either
                                    Language.PureScript.Names.Ident
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName)))
                            Language.PureScript.Externs.$fFromJSONExternsFixity1
                            Language.PureScript.Externs.$fFromJSONExternsFixity12
                            Language.PureScript.Externs.$fFromJSONExternsFixity14
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  Language.PureScript.Externs.ExternsFixity f7 r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <Language.PureScript.AST.Operators.Associativity>_R)
                         @ f7
                         @ r
                         path
                         kf
                         (\ (a10 :: Language.PureScript.AST.Operators.Associativity) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <Language.PureScript.AST.Operators.Precedence>_R)
                            @ f7
                            @ r
                            path
                            kf
                            (\ (a11 :: Language.PureScript.AST.Operators.Precedence) ->
                             e1
                               `cast`
                             (Data.Aeson.Types.Internal.N:Parser[0]
                                  <Language.PureScript.Names.OpName
                                     'Language.PureScript.Names.ValueOpName>_R)
                               @ f7
                               @ r
                               path
                               kf
                               (\ (a12 :: Language.PureScript.Names.OpName
                                            'Language.PureScript.Names.ValueOpName) ->
                                e2
                                  `cast`
                                (Data.Aeson.Types.Internal.N:Parser[0]
                                     <Language.PureScript.Names.Qualified
                                        (Data.Either.Either
                                           Language.PureScript.Names.Ident
                                           (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.ConstructorName))>_R)
                                  @ f7
                                  @ r
                                  path
                                  kf
                                  (\ (a13 :: Language.PureScript.Names.Qualified
                                               (Data.Either.Either
                                                  Language.PureScript.Names.Ident
                                                  (Language.PureScript.Names.ProperName
                                                     'Language.PureScript.Names.ConstructorName))) ->
                                   ks
                                     (Language.PureScript.Externs.ExternsFixity
                                        a10
                                        a11
                                        a12
                                        a13))))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <Language.PureScript.Externs.ExternsFixity>_R)) }) -}
faf775006e4902ca2862b62427af99db
  $fFromJSONExternsFixity_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsFixity]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Externs.$fFromJSONExternsDeclaration3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Externs.$fFromJSONExternsDeclaration2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Externs.$fFromJSONExternsDeclaration1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Externs.ExternsFixity] f7 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Externs.ExternsFixity]>_R))
                   Data.Aeson.Types.Internal.Array a10
                   -> case a10 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv33 ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv33
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Externs.$fFromJSONExternsFixity_go
                        0#
                        ($wgo 0#) } }) -}
a9669eab7e955c17a28ffd0149393032
  $fFromJSONExternsFixity_$s$fFromJSONEither ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Language.PureScript.Names.Ident
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName))
                  (Data.Aeson.Types.FromJSON.$fFromJSON1Either_$cliftParseJSON2
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fFromJSONIdent_$cparseJSON
                     Language.PureScript.Names.$fFromJSONIdent_$cparseJSONList
                     (Language.PureScript.Names.$fFromJSONProperName_$cparseJSON
                        @ 'Language.PureScript.Names.ConstructorName)
                     (Language.PureScript.Names.$fFromJSONModuleName_$cparseJSONList1
                        @ 'Language.PureScript.Names.ConstructorName))
                  (Data.Aeson.Types.FromJSON.$fFromJSONEither_$cparseJSONList
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fFromJSONIdent
                     (Language.PureScript.Names.$fFromJSONProperName
                        @ 'Language.PureScript.Names.ConstructorName)) -}
faf775006e4902ca2862b62427af99db
  $fFromJSONExternsFixity_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsFixity]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
5882573312128fd7e89a35ea4479d0dc
  $fFromJSONExternsImport ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Externs.ExternsImport
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsImport
                  Language.PureScript.Externs.$fFromJSONExternsImport_$cparseJSON
                  Language.PureScript.Externs.$fFromJSONExternsImport_$cparseJSONList -}
5882573312128fd7e89a35ea4479d0dc
  $fFromJSONExternsImport_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Externs.ExternsImport
  {- Arity: 1, Strictness: <S,1*U> -}
5882573312128fd7e89a35ea4479d0dc
  $fFromJSONExternsImport_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsImport]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Externs.$fFromJSONExternsDeclaration3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Externs.$fFromJSONExternsDeclaration2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Externs.$fFromJSONExternsDeclaration1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Externs.ExternsImport] f7 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Externs.ExternsImport]>_R))
                   Data.Aeson.Types.Internal.Array a10
                   -> case a10 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv33 ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv33
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Externs.$fFromJSONExternsImport_go
                        0#
                        ($wgo 0#) } }) -}
5882573312128fd7e89a35ea4479d0dc
  $fFromJSONExternsImport_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsImport]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fFromJSONExternsTypeFixity ::
    Data.Aeson.Types.FromJSON.FromJSON
      Language.PureScript.Externs.ExternsTypeFixity
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsTypeFixity
                  Language.PureScript.Externs.$fFromJSONExternsTypeFixity_$cparseJSON
                  Language.PureScript.Externs.$fFromJSONExternsTypeFixity_$cparseJSONList -}
2e1ac073997c168bfd1c2a36e12c0d96
  $fFromJSONExternsTypeFixity1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
  {- Arity: 1,
     Unfolding: (Language.PureScript.Names.$fFromJSONQualified_$cparseJSON
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.TypeName)
                   (Language.PureScript.Names.$fFromJSONProperName
                      @ 'Language.PureScript.Names.TypeName)) -}
6d8011f6fb9df98dd1f63db97c13f646
  $fFromJSONExternsTypeFixity10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity11) -}
9c91a7fdc04b5568da54789824722313
  $fFromJSONExternsTypeFixity11 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Externs.ExternsTypeFixity"#) -}
75752e0549a715b6aa1f3716ee64244d
  $fFromJSONExternsTypeFixity12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity13) -}
361e324d12217844ce3fa5f6f126bb83
  $fFromJSONExternsTypeFixity13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsTypeFixity"#) -}
bde0771aaa0a44e49a891689eea6ec87
  $fFromJSONExternsTypeFixity2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity3) -}
c662431d5941f77c28f9a4fbe53d7042
  $fFromJSONExternsTypeFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypeAlias"#) -}
8020c4d63d039c0a0ce2a187485bf5fd
  $fFromJSONExternsTypeFixity4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity5) -}
663abf988f6a729b26f8cae131e6cc49
  $fFromJSONExternsTypeFixity5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypeOperator"#) -}
dc5db40f2fefae91415dd742b0a90f1b
  $fFromJSONExternsTypeFixity6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity7) -}
73f7b3427eb9c69e97be8fa2efeef774
  $fFromJSONExternsTypeFixity7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypePrecedence"#) -}
fed487b61d4b7f4103cfd5f34e029f8b
  $fFromJSONExternsTypeFixity8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity9) -}
e57f1f7d8acad5a78d697e8cd597ae6b
  $fFromJSONExternsTypeFixity9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypeAssociativity"#) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fFromJSONExternsTypeFixity_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Language.PureScript.Externs.ExternsTypeFixity
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 case value of wild {
                   DEFAULT
                   -> Data.Aeson.TH.parseTypeMismatch'
                        @ Language.PureScript.Externs.ExternsTypeFixity
                        Language.PureScript.Externs.$fFromJSONExternsTypeFixity12
                        Language.PureScript.Externs.$fFromJSONExternsTypeFixity10
                        Language.PureScript.Externs.$fFromJSONExternsFixity10
                        (case wild of wild1 {
                           Data.Aeson.Types.Internal.Array ds9 -> Data.Aeson.TH.valueConName9
                           Data.Aeson.Types.Internal.String ds9 -> Data.Aeson.TH.valueConName7
                           Data.Aeson.Types.Internal.Number ds9 -> Data.Aeson.TH.valueConName5
                           Data.Aeson.Types.Internal.Bool ds9 -> Data.Aeson.TH.valueConName3
                           Data.Aeson.Types.Internal.Null -> Data.Aeson.TH.valueConName1 })
                   Data.Aeson.Types.Internal.Object recObj
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser
                               Language.PureScript.AST.Operators.Associativity
                        = case Language.PureScript.Externs.$fFromJSONExternsTypeFixity8 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ Language.PureScript.AST.Operators.Associativity
                            Language.PureScript.AST.Operators.$fFromJSONAssociativity_$cparseJSON
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity10
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity12
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e :: Data.Aeson.Types.Internal.Parser
                               Language.PureScript.AST.Operators.Precedence
                        = case Language.PureScript.Externs.$fFromJSONExternsTypeFixity6 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ GHC.Integer.Type.Integer
                            Data.Aeson.Types.FromJSON.$fFromJSONInteger_$cparseJSON
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity10
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity12
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e1 :: Data.Aeson.Types.Internal.Parser
                                (Language.PureScript.Names.OpName
                                   'Language.PureScript.Names.TypeOpName)
                        = case Language.PureScript.Externs.$fFromJSONExternsTypeFixity4 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ (Language.PureScript.Names.OpName
                                 'Language.PureScript.Names.TypeOpName)
                            (Language.PureScript.Names.$fFromJSONOpName_$cparseJSON
                               @ 'Language.PureScript.Names.TypeOpName)
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity10
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity12
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e2 :: Data.Aeson.Types.Internal.Parser
                                (Language.PureScript.Names.Qualified
                                   (Language.PureScript.Names.ProperName
                                      'Language.PureScript.Names.TypeName))
                        = case Language.PureScript.Externs.$fFromJSONExternsTypeFixity2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField1
                            @ (Language.PureScript.Names.Qualified
                                 (Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName))
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity1
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity10
                            Language.PureScript.Externs.$fFromJSONExternsTypeFixity12
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  Language.PureScript.Externs.ExternsTypeFixity f7 r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <Language.PureScript.AST.Operators.Associativity>_R)
                         @ f7
                         @ r
                         path
                         kf
                         (\ (a10 :: Language.PureScript.AST.Operators.Associativity) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <Language.PureScript.AST.Operators.Precedence>_R)
                            @ f7
                            @ r
                            path
                            kf
                            (\ (a11 :: Language.PureScript.AST.Operators.Precedence) ->
                             e1
                               `cast`
                             (Data.Aeson.Types.Internal.N:Parser[0]
                                  <Language.PureScript.Names.OpName
                                     'Language.PureScript.Names.TypeOpName>_R)
                               @ f7
                               @ r
                               path
                               kf
                               (\ (a12 :: Language.PureScript.Names.OpName
                                            'Language.PureScript.Names.TypeOpName) ->
                                e2
                                  `cast`
                                (Data.Aeson.Types.Internal.N:Parser[0]
                                     <Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName)>_R)
                                  @ f7
                                  @ r
                                  path
                                  kf
                                  (\ (a13 :: Language.PureScript.Names.Qualified
                                               (Language.PureScript.Names.ProperName
                                                  'Language.PureScript.Names.TypeName)) ->
                                   ks
                                     (Language.PureScript.Externs.ExternsTypeFixity
                                        a10
                                        a11
                                        a12
                                        a13))))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <Language.PureScript.Externs.ExternsTypeFixity>_R)) }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fFromJSONExternsTypeFixity_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsTypeFixity]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Externs.$fFromJSONExternsDeclaration3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Externs.$fFromJSONExternsDeclaration2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Externs.$fFromJSONExternsDeclaration1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Externs.ExternsTypeFixity] f7 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Externs.ExternsTypeFixity]>_R))
                   Data.Aeson.Types.Internal.Array a10
                   -> case a10 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv33 ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv33
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Externs.$fFromJSONExternsTypeFixity_go
                        0#
                        ($wgo 0#) } }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fFromJSONExternsTypeFixity_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Externs.ExternsTypeFixity]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
a7fb565ada874d78b726c57090b05102
  $fShowExternsDeclaration ::
    GHC.Show.Show Language.PureScript.Externs.ExternsDeclaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsDeclaration
                  Language.PureScript.Externs.$fShowExternsDeclaration_$cshowsPrec
                  Language.PureScript.Externs.$fShowExternsDeclaration_$cshow
                  Language.PureScript.Externs.$fShowExternsDeclaration_$cshowList -}
a7fb565ada874d78b726c57090b05102
  $fShowExternsDeclaration1 ::
    Language.PureScript.Externs.ExternsDeclaration -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsDeclaration) ->
                 Language.PureScript.Externs.$w$cshowsPrec 0# w) -}
0a34b6906df265866aac31c836193267
  $fShowExternsDeclaration2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
a7fb565ada874d78b726c57090b05102
  $fShowExternsDeclaration_$cshow ::
    Language.PureScript.Externs.ExternsDeclaration -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsDeclaration) ->
                 Language.PureScript.Externs.$fShowExternsDeclaration_$cshowsPrec
                   Language.PureScript.Externs.$fShowExternsDeclaration2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a7fb565ada874d78b726c57090b05102
  $fShowExternsDeclaration_$cshowList ::
    [Language.PureScript.Externs.ExternsDeclaration] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Externs.ExternsDeclaration])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Externs.ExternsDeclaration
                   Language.PureScript.Externs.$fShowExternsDeclaration1
                   ls
                   s) -}
a7fb565ada874d78b726c57090b05102
  $fShowExternsDeclaration_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Externs.ExternsDeclaration -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Externs.$w$cshowsPrec ww1 w1 }) -}
c010c09fe85776adf7c6787c7d79c898
  $fShowExternsFile ::
    GHC.Show.Show Language.PureScript.Externs.ExternsFile
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsFile
                  Language.PureScript.Externs.$fShowExternsFile_$cshowsPrec
                  Language.PureScript.Externs.$fShowExternsFile_$cshow
                  Language.PureScript.Externs.$fShowExternsFile_$cshowList -}
c010c09fe85776adf7c6787c7d79c898
  $fShowExternsFile1 ::
    Language.PureScript.Externs.ExternsFile -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))))><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsFile)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Externs.ExternsFile ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Language.PureScript.Externs.$w$cshowsPrec1
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w1 }) -}
c010c09fe85776adf7c6787c7d79c898
  $fShowExternsFile_$cshow ::
    Language.PureScript.Externs.ExternsFile -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsFile) ->
                 Language.PureScript.Externs.$fShowExternsFile_$cshowsPrec
                   Language.PureScript.Externs.$fShowExternsDeclaration2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c010c09fe85776adf7c6787c7d79c898
  $fShowExternsFile_$cshowList ::
    [Language.PureScript.Externs.ExternsFile] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Externs.ExternsFile])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Externs.ExternsFile
                   Language.PureScript.Externs.$fShowExternsFile1
                   ls
                   s) -}
c010c09fe85776adf7c6787c7d79c898
  $fShowExternsFile_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Externs.ExternsFile -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))))><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Externs.ExternsFile)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Externs.ExternsFile ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 Language.PureScript.Externs.$w$cshowsPrec1
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
faf775006e4902ca2862b62427af99db
  $fShowExternsFixity ::
    GHC.Show.Show Language.PureScript.Externs.ExternsFixity
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsFixity
                  Language.PureScript.Externs.$fShowExternsFixity_$cshowsPrec
                  Language.PureScript.Externs.$fShowExternsFixity_$cshow
                  Language.PureScript.Externs.$fShowExternsFixity_$cshowList -}
faf775006e4902ca2862b62427af99db
  $fShowExternsFixity1 ::
    Language.PureScript.Externs.ExternsFixity -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U(U,U,U),1*U(1*U,U))>,
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsFixity) ->
                 case w of ww { Language.PureScript.Externs.ExternsFixity ww1 ww2 ww3 ww4 ->
                 Language.PureScript.Externs.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 }) -}
a046c3eb1c00ef013752bb8e5d9b5914
  $fShowExternsFixity2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
fab6c4619eb45e07395ba2bc72e1cf9f
  $fShowExternsFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efAlias = "#) -}
bc4cbd40c5817152d593b625930eb56c
  $fShowExternsFixity4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efOperator = "#) -}
acd04f6d6360694479c3f73066514595
  $fShowExternsFixity5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efPrecedence = "#) -}
bca6d8648ab0b227c621655e6a9e638d
  $fShowExternsFixity6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efAssociativity = "#) -}
fa348ae2237735a46efea65468da2dc3
  $fShowExternsFixity7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsFixity {"#) -}
faf775006e4902ca2862b62427af99db
  $fShowExternsFixity_$cshow ::
    Language.PureScript.Externs.ExternsFixity -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U(U,U,U),1*U(1*U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsFixity) ->
                 Language.PureScript.Externs.$fShowExternsFixity_$cshowsPrec
                   Language.PureScript.Externs.$fShowExternsDeclaration2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
faf775006e4902ca2862b62427af99db
  $fShowExternsFixity_$cshowList ::
    [Language.PureScript.Externs.ExternsFixity] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Externs.ExternsFixity])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Externs.ExternsFixity
                   Language.PureScript.Externs.$fShowExternsFixity1
                   ls
                   s) -}
faf775006e4902ca2862b62427af99db
  $fShowExternsFixity_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Externs.ExternsFixity -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,U(U,U,U),1*U(1*U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Externs.ExternsFixity) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Externs.ExternsFixity ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Externs.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
07d0a64df8f509e76333e64fe5a62fef
  $fShowExternsFixity_$s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Language.PureScript.Names.Ident
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fShowIdent
                     (Language.PureScript.Names.$fShowProperName
                        @ 'Language.PureScript.Names.ConstructorName))
                  (\ (x :: Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)) ->
                   case x of wild {
                     Data.Either.Left b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither4)
                          (Language.PureScript.Names.$fShowIdent_$cshowsPrec
                             Data.Either.$fReadEither6
                             b1
                             (GHC.Types.[] @ GHC.Types.Char))
                     Data.Either.Right b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither2)
                          (Language.PureScript.Names.$fShowProperName_$cshowsPrec
                             @ 'Language.PureScript.Names.ConstructorName
                             Data.Either.$fReadEither6
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [Data.Either.Either
                               Language.PureScript.Names.Ident
                               (Language.PureScript.Names.ProperName
                                  'Language.PureScript.Names.ConstructorName)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Either.Either
                          Language.PureScript.Names.Ident
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName))
                     (Data.Either.$fShowEither_$cshowsPrec
                        @ Language.PureScript.Names.Ident
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                        Language.PureScript.Names.$fShowIdent
                        (Language.PureScript.Names.$fShowProperName
                           @ 'Language.PureScript.Names.ConstructorName)
                        Data.Either.$fShowEither1)
                     ls
                     s) -}
5882573312128fd7e89a35ea4479d0dc
  $fShowExternsImport ::
    GHC.Show.Show Language.PureScript.Externs.ExternsImport
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsImport
                  Language.PureScript.Externs.$fShowExternsImport_$cshowsPrec
                  Language.PureScript.Externs.$fShowExternsImport_$cshow
                  Language.PureScript.Externs.$fShowExternsImport_$cshowList -}
5882573312128fd7e89a35ea4479d0dc
  $fShowExternsImport1 ::
    Language.PureScript.Externs.ExternsImport -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U)>,
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsImport) ->
                 case w of ww { Language.PureScript.Externs.ExternsImport ww1 ww2 ww3 ->
                 Language.PureScript.Externs.$w$cshowsPrec3 0# ww1 ww2 ww3 }) -}
84be814b34495f2f9826e6560333adfa
  $fShowExternsImport2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eiImportedAs = "#) -}
0659a5af3261059c70d416652cd154e2
  $fShowExternsImport3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eiImportType = "#) -}
415509df856981ebfcb9a13e25ec6316
  $fShowExternsImport4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eiModule = "#) -}
e58df4a93e382730a01c4a348616343e
  $fShowExternsImport5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsImport {"#) -}
5882573312128fd7e89a35ea4479d0dc
  $fShowExternsImport_$cshow ::
    Language.PureScript.Externs.ExternsImport -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsImport) ->
                 Language.PureScript.Externs.$fShowExternsImport_$cshowsPrec
                   Language.PureScript.Externs.$fShowExternsDeclaration2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5882573312128fd7e89a35ea4479d0dc
  $fShowExternsImport_$cshowList ::
    [Language.PureScript.Externs.ExternsImport] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Externs.ExternsImport])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Externs.ExternsImport
                   Language.PureScript.Externs.$fShowExternsImport1
                   ls
                   s) -}
5882573312128fd7e89a35ea4479d0dc
  $fShowExternsImport_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Externs.ExternsImport -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Externs.ExternsImport) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Externs.ExternsImport ww3 ww4 ww5 ->
                 Language.PureScript.Externs.$w$cshowsPrec3 ww1 ww3 ww4 ww5 } }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fShowExternsTypeFixity ::
    GHC.Show.Show Language.PureScript.Externs.ExternsTypeFixity
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsTypeFixity
                  Language.PureScript.Externs.$fShowExternsTypeFixity_$cshowsPrec
                  Language.PureScript.Externs.$fShowExternsTypeFixity_$cshow
                  Language.PureScript.Externs.$fShowExternsTypeFixity_$cshowList -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fShowExternsTypeFixity1 ::
    Language.PureScript.Externs.ExternsTypeFixity -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,U,U(U,U,U),1*U(1*U,U))>,
     Unfolding: (\ (w :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case w of ww { Language.PureScript.Externs.ExternsTypeFixity ww1 ww2 ww3 ww4 ->
                 Language.PureScript.Externs.$w$cshowsPrec4 0# ww1 ww2 ww3 ww4 }) -}
6465d9f5b150aaccaaaab46cc28fec8b
  $fShowExternsTypeFixity2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypeAlias = "#) -}
3abbb6afb4bed4da8550ec7118fa4e56
  $fShowExternsTypeFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypeOperator = "#) -}
9e371b7ed2d02769534b96f9a33798f3
  $fShowExternsTypeFixity4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypePrecedence = "#) -}
7931d5ab40e445373cf0d49c0368d457
  $fShowExternsTypeFixity5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("efTypeAssociativity = "#) -}
0af0fed34e8374df570126e60443e6ef
  $fShowExternsTypeFixity6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsTypeFixity {"#) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fShowExternsTypeFixity_$cshow ::
    Language.PureScript.Externs.ExternsTypeFixity -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U(U,U,U),1*U(1*U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 Language.PureScript.Externs.$fShowExternsTypeFixity_$cshowsPrec
                   Language.PureScript.Externs.$fShowExternsDeclaration2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fShowExternsTypeFixity_$cshowList ::
    [Language.PureScript.Externs.ExternsTypeFixity] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Externs.ExternsTypeFixity])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Externs.ExternsTypeFixity
                   Language.PureScript.Externs.$fShowExternsTypeFixity1
                   ls
                   s) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fShowExternsTypeFixity_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Externs.ExternsTypeFixity -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U,U,U(U,U,U),1*U(1*U,U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Externs.ExternsTypeFixity ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Externs.$w$cshowsPrec4
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
a7fb565ada874d78b726c57090b05102
  $fToJSONExternsDeclaration ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Externs.ExternsDeclaration
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsDeclaration
                  Language.PureScript.Externs.$fToJSONExternsDeclaration_$ctoJSON
                  Language.PureScript.Externs.$fToJSONExternsDeclaration_$ctoEncoding
                  Language.PureScript.Externs.$fToJSONExternsDeclaration_$ctoJSONList
                  Language.PureScript.Externs.$fToJSONExternsDeclaration_$ctoEncodingList -}
a7fb565ada874d78b726c57090b05102
  $fToJSONExternsDeclaration_$ctoEncoding ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U> -}
a7fb565ada874d78b726c57090b05102
  $fToJSONExternsDeclaration_$ctoEncodingList ::
    [Language.PureScript.Externs.ExternsDeclaration]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Externs.ExternsDeclaration
                   Language.PureScript.Externs.$fToJSONExternsDeclaration_$ctoEncoding) -}
a7fb565ada874d78b726c57090b05102
  $fToJSONExternsDeclaration_$ctoJSON ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case Language.PureScript.Externs.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
a7fb565ada874d78b726c57090b05102
  $fToJSONExternsDeclaration_$ctoJSONList ::
    [Language.PureScript.Externs.ExternsDeclaration]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Externs.ExternsDeclaration]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Externs.ExternsDeclaration
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Externs.ExternsDeclaration
                                     c
                                     Language.PureScript.Externs.$fToJSONExternsDeclaration_$ctoJSON)
                                  n1
                                  x)))))) -}
c010c09fe85776adf7c6787c7d79c898
  $fToJSONExternsFile ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Externs.ExternsFile
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsFile
                  Language.PureScript.Externs.$fToJSONExternsFile_$ctoJSON
                  Language.PureScript.Externs.$fToJSONExternsFile_$ctoEncoding
                  Language.PureScript.Externs.$fToJSONExternsFile_$ctoJSONList
                  Language.PureScript.Externs.$fToJSONExternsFile_$ctoEncodingList -}
c010c09fe85776adf7c6787c7d79c898
  $fToJSONExternsFile_$ctoEncoding ::
    Language.PureScript.Externs.ExternsFile
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U),1*U,1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFile) ->
                 case w of ww { Language.PureScript.Externs.ExternsFile ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 (Language.PureScript.Externs.$w$ctoEncoding
                    ww1
                    ww2
                    ww3
                    ww4
                    ww5
                    ww6
                    ww7
                    ww8)
                   `cast`
                 (Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                 <Data.Aeson.Types.Internal.Value>_P)) }) -}
c010c09fe85776adf7c6787c7d79c898
  $fToJSONExternsFile_$ctoEncodingList ::
    [Language.PureScript.Externs.ExternsFile]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Externs.ExternsFile
                   Language.PureScript.Externs.$fToJSONExternsFile_$ctoEncoding) -}
c010c09fe85776adf7c6787c7d79c898
  $fToJSONExternsFile_$ctoJSON ::
    Language.PureScript.Externs.ExternsFile
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S,1*U(U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))))>m1,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFile) ->
                 case w of ww { Language.PureScript.Externs.ExternsFile ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Language.PureScript.Externs.$w$ctoJSON1
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8 of ww9 { Unit# ww10 ->
                 Data.Aeson.Types.Internal.Object ww10 } }) -}
c010c09fe85776adf7c6787c7d79c898
  $fToJSONExternsFile_$ctoJSONList ::
    [Language.PureScript.Externs.ExternsFile]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Externs.ExternsFile]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Externs.ExternsFile
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Externs.ExternsFile
                                     c
                                     Language.PureScript.Externs.$fToJSONExternsFile_$ctoJSON)
                                  n1
                                  x)))))) -}
faf775006e4902ca2862b62427af99db
  $fToJSONExternsFixity ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Externs.ExternsFixity
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsFixity
                  Language.PureScript.Externs.$fToJSONExternsFixity_$ctoJSON
                  Language.PureScript.Externs.$fToJSONExternsFixity_$ctoEncoding
                  Language.PureScript.Externs.$fToJSONExternsFixity_$ctoJSONList
                  Language.PureScript.Externs.$fToJSONExternsFixity_$ctoEncodingList -}
965fb5412050a2b3b8840155e095456f
  $fToJSONExternsFixity1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsFixity2 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
87d3861a53939d5f4dcd3f8297f0b80c
  $fToJSONExternsFixity2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsFixity3)
                   0#
                   ipv33 }) -}
e811483c43cfdb1b3cd2b3b57b69e90a
  $fToJSONExternsFixity3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsFixity4 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
55b826ccd5a1d5050a3451a161f0a204
  $fToJSONExternsFixity4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsFixity5)
                   0#
                   ipv33 }) -}
64c1ec02c7165c44703e436718b9aff3
  $fToJSONExternsFixity5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsFixity6 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
3111c2511cd2f7a7c1ec551f6bbbb397
  $fToJSONExternsFixity6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsFixity7)
                   0#
                   ipv33 }) -}
c4fef59e6d23ae02ddadc2403be125eb
  $fToJSONExternsFixity7 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsFixity8 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
ce6622b74adba47923c211696f5854a6
  $fToJSONExternsFixity8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsFixity9)
                   0#
                   ipv33 }) -}
faf775006e4902ca2862b62427af99db
  $fToJSONExternsFixity_$ctoEncoding ::
    Language.PureScript.Externs.ExternsFixity
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U(U,U,U),1*U(1*U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFixity) ->
                 case w of ww { Language.PureScript.Externs.ExternsFixity ww1 ww2 ww3 ww4 ->
                 (Language.PureScript.Externs.$w$ctoEncoding1 ww1 ww2 ww3 ww4)
                   `cast`
                 (Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                 <Data.Aeson.Types.Internal.Value>_P)) }) -}
faf775006e4902ca2862b62427af99db
  $fToJSONExternsFixity_$ctoEncodingList ::
    [Language.PureScript.Externs.ExternsFixity]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Externs.ExternsFixity
                   Language.PureScript.Externs.$fToJSONExternsFixity_$ctoEncoding) -}
faf775006e4902ca2862b62427af99db
  $fToJSONExternsFixity_$ctoJSON ::
    Language.PureScript.Externs.ExternsFixity
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,U,1*U(1*U,U))>m1,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFixity) ->
                 case w of ww { Language.PureScript.Externs.ExternsFixity ww1 ww2 ww3 ww4 ->
                 case Language.PureScript.Externs.$w$ctoJSON2
                        ww1
                        ww2
                        ww3
                        ww4 of ww5 { Unit# ww6 ->
                 Data.Aeson.Types.Internal.Object ww6 } }) -}
faf775006e4902ca2862b62427af99db
  $fToJSONExternsFixity_$ctoJSONList ::
    [Language.PureScript.Externs.ExternsFixity]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Externs.ExternsFixity]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Externs.ExternsFixity
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Externs.ExternsFixity
                                     c
                                     Language.PureScript.Externs.$fToJSONExternsFixity_$ctoJSON)
                                  n1
                                  x)))))) -}
0710537ea5b0d886c45f685a5715890a
  $fToJSONExternsFixity_$s$fToJSONEither ::
    Data.Aeson.Types.ToJSON.ToJSON
      (Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Language.PureScript.Names.Ident
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName))
                  (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fToJSONIdent_$ctoJSON
                     Language.PureScript.Names.$fToJSONIdent_$ctoJSONList
                     Data.Aeson.Types.Internal.$WString
                       `cast`
                     (Sym (Language.PureScript.Names.N:ProperName[0]
                               <'Language.PureScript.Names.ConstructorName>_P)
                      ->_R <Data.Aeson.Types.Internal.Value>_R)
                     (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                        @ 'Language.PureScript.Names.ConstructorName))
                  (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                     @ Language.PureScript.Names.Ident
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.ConstructorName)
                     Language.PureScript.Names.$fToJSONIdent_$ctoEncoding
                     Language.PureScript.Names.$fToJSONIdent_$ctoEncodingList
                     (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                        @ 'Language.PureScript.Names.ConstructorName)
                     (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                        @ 'Language.PureScript.Names.ConstructorName))
                  (let {
                     f7 :: Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)
                           -> Data.Aeson.Types.Internal.Value
                       {- Arity: 1 -}
                     = Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToJSON2
                         @ Language.PureScript.Names.Ident
                         @ (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.ConstructorName)
                         Language.PureScript.Names.$fToJSONIdent_$ctoJSON
                         Language.PureScript.Names.$fToJSONIdent_$ctoJSONList
                         Data.Aeson.Types.Internal.$WString
                           `cast`
                         (Sym (Language.PureScript.Names.N:ProperName[0]
                                   <'Language.PureScript.Names.ConstructorName>_P)
                          ->_R <Data.Aeson.Types.Internal.Value>_R)
                         (Language.PureScript.Names.$fToJSONProperName_$ctoJSONList
                            @ 'Language.PureScript.Names.ConstructorName)
                   } in
                   \ (x :: [Data.Either.Either
                              Language.PureScript.Names.Ident
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName)]) ->
                   Data.Aeson.Types.Internal.$WArray
                     (Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n1 :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ (Data.Either.Either
                                         Language.PureScript.Names.Ident
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ (Data.Either.Either
                                            Language.PureScript.Names.Ident
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.ConstructorName))
                                       c
                                       f7)
                                    n1
                                    x))))))
                  (Data.Aeson.Encoding.Internal.list
                     @ (Data.Either.Either
                          Language.PureScript.Names.Ident
                          (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName))
                     (Data.Aeson.Types.ToJSON.$fToJSON1Either_$cliftToEncoding2
                        @ Language.PureScript.Names.Ident
                        @ (Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                        Language.PureScript.Names.$fToJSONIdent_$ctoEncoding
                        Language.PureScript.Names.$fToJSONIdent_$ctoEncodingList
                        (Language.PureScript.Names.$fToJSONProperName_$ctoEncoding
                           @ 'Language.PureScript.Names.ConstructorName)
                        (Language.PureScript.Names.$fToJSONProperName_$ctoEncodingList
                           @ 'Language.PureScript.Names.ConstructorName))) -}
5882573312128fd7e89a35ea4479d0dc
  $fToJSONExternsImport ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Externs.ExternsImport
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsImport
                  Language.PureScript.Externs.$fToJSONExternsImport_$ctoJSON
                  Language.PureScript.Externs.$fToJSONExternsImport_$ctoEncoding
                  Language.PureScript.Externs.$fToJSONExternsImport_$ctoJSONList
                  Language.PureScript.Externs.$fToJSONExternsImport_$ctoEncodingList -}
a5a00b1912b6d046113ab941234efcbe
  $fToJSONExternsImport1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsImport2 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
fd714b1233ce5418521ffc2847565ed2
  $fToJSONExternsImport2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fToJSONExternsImport3)
                   0#
                   ipv33 }) -}
cbbc02b875fc78c06e66b5c1af23d34e
  $fToJSONExternsImport3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eiImportedAs"#) -}
1ba8365bb9f616dc423c06b855b342f0
  $fToJSONExternsImport4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsImport5 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
09c38f51f27f7541f03760b422ba3797
  $fToJSONExternsImport5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fToJSONExternsImport6)
                   0#
                   ipv33 }) -}
a548f7044efe78ef5ca37a8673dc3e92
  $fToJSONExternsImport6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eiImportType"#) -}
a73782b989c7740a473c5f25e62ef6f1
  $fToJSONExternsImport7 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsImport8 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
a08514a926fc72ecb8094e04ba2a67d8
  $fToJSONExternsImport8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fToJSONExternsImport9)
                   0#
                   ipv33 }) -}
8eac42fa712d727c2a2451c7e335fed1
  $fToJSONExternsImport9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eiModule"#) -}
5882573312128fd7e89a35ea4479d0dc
  $fToJSONExternsImport_$ctoEncoding ::
    Language.PureScript.Externs.ExternsImport
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsImport) ->
                 case w of ww { Language.PureScript.Externs.ExternsImport ww1 ww2 ww3 ->
                 (Language.PureScript.Externs.$w$ctoEncoding2 ww1 ww2 ww3)
                   `cast`
                 (Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                 <Data.Aeson.Types.Internal.Value>_P)) }) -}
5882573312128fd7e89a35ea4479d0dc
  $fToJSONExternsImport_$ctoEncodingList ::
    [Language.PureScript.Externs.ExternsImport]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Externs.ExternsImport
                   Language.PureScript.Externs.$fToJSONExternsImport_$ctoEncoding) -}
5882573312128fd7e89a35ea4479d0dc
  $fToJSONExternsImport_$ctoJSON ::
    Language.PureScript.Externs.ExternsImport
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsImport) ->
                 case w of ww { Language.PureScript.Externs.ExternsImport ww1 ww2 ww3 ->
                 case Language.PureScript.Externs.$w$ctoJSON3
                        ww1
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
5882573312128fd7e89a35ea4479d0dc
  $fToJSONExternsImport_$ctoJSONList ::
    [Language.PureScript.Externs.ExternsImport]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Externs.ExternsImport]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Externs.ExternsImport
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Externs.ExternsImport
                                     c
                                     Language.PureScript.Externs.$fToJSONExternsImport_$ctoJSON)
                                  n1
                                  x)))))) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fToJSONExternsTypeFixity ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Externs.ExternsTypeFixity
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Externs.ExternsTypeFixity
                  Language.PureScript.Externs.$fToJSONExternsTypeFixity_$ctoJSON
                  Language.PureScript.Externs.$fToJSONExternsTypeFixity_$ctoEncoding
                  Language.PureScript.Externs.$fToJSONExternsTypeFixity_$ctoJSONList
                  Language.PureScript.Externs.$fToJSONExternsTypeFixity_$ctoEncodingList -}
55f48b7d6084521a518b7b1417b205f7
  $fToJSONExternsTypeFixity1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsTypeFixity2 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
a7143164745a55f89dd73a69978e46e8
  $fToJSONExternsTypeFixity2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsTypeFixity3)
                   0#
                   ipv33 }) -}
1741fae8ec567b5e978e7e9e44d5f031
  $fToJSONExternsTypeFixity3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsTypeFixity4 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
6218701ee3e1cf6756994e1dd533e2ae
  $fToJSONExternsTypeFixity4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsTypeFixity5)
                   0#
                   ipv33 }) -}
25d849b6f0cb75652c485a79ce07d4c5
  $fToJSONExternsTypeFixity5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsTypeFixity6 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
32a9f221b91416dcd0954369354e455b
  $fToJSONExternsTypeFixity6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsTypeFixity7)
                   0#
                   ipv33 }) -}
a26f4b37cbe84921fe4c1bbd418c7f8e
  $fToJSONExternsTypeFixity7 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Language.PureScript.Externs.$fToJSONExternsTypeFixity8 of ds1 { (#,#) ipv33 ipv34 ->
                 ipv34 }) -}
dc080eb4460ea875692e3579f3c2c350
  $fToJSONExternsTypeFixity8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv33 ipv34 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv34
                   4#
                   (GHC.CString.unpackCString#
                      Language.PureScript.Externs.$fFromJSONExternsTypeFixity9)
                   0#
                   ipv33 }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fToJSONExternsTypeFixity_$ctoEncoding ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U(U,U,U),1*U(1*U,U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case w of ww { Language.PureScript.Externs.ExternsTypeFixity ww1 ww2 ww3 ww4 ->
                 (Language.PureScript.Externs.$w$ctoEncoding3 ww1 ww2 ww3 ww4)
                   `cast`
                 (Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                 <Data.Aeson.Types.Internal.Value>_P)) }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fToJSONExternsTypeFixity_$ctoEncodingList ::
    [Language.PureScript.Externs.ExternsTypeFixity]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Externs.ExternsTypeFixity
                   Language.PureScript.Externs.$fToJSONExternsTypeFixity_$ctoEncoding) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fToJSONExternsTypeFixity_$ctoJSON ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,U,1*U(1*U,U))>m1,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case w of ww { Language.PureScript.Externs.ExternsTypeFixity ww1 ww2 ww3 ww4 ->
                 case Language.PureScript.Externs.$w$ctoJSON4
                        ww1
                        ww2
                        ww3
                        ww4 of ww5 { Unit# ww6 ->
                 Data.Aeson.Types.Internal.Object ww6 } }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  $fToJSONExternsTypeFixity_$ctoJSONList ::
    [Language.PureScript.Externs.ExternsTypeFixity]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Externs.ExternsTypeFixity]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Externs.ExternsTypeFixity
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Externs.ExternsTypeFixity
                                     c
                                     Language.PureScript.Externs.$fToJSONExternsTypeFixity_$ctoJSON)
                                  n1
                                  x)))))) -}
ec1bbafabc645bdd0fbb9c5c179a0d6b
  $s$fFromJSONMaybe ::
    Data.Aeson.Types.FromJSON.FromJSON
      (GHC.Base.Maybe
         (Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe
                       (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn))
                  (Data.Aeson.Types.FromJSON.$fFromJSON1Maybe_$cliftParseJSON
                     @ (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     Language.PureScript.Kinds.$fFromJSONKind1_$cparseJSON
                     Language.PureScript.Kinds.$fFromJSONKind1_$cparseJSONList)
                  (Data.Aeson.Types.FromJSON.$fFromJSONMaybe_$cparseJSONList
                     @ (Language.PureScript.Kinds.Kind
                          Language.PureScript.AST.SourcePos.SourceAnn)
                     Language.PureScript.Kinds.$fFromJSONKind1) -}
4559f699a1966ee0c4af65c848b091c9
  $s$fShow(,) ::
    GHC.Show.Show
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.AST.SourcePos.SourceSpan,
                     [Language.PureScript.Comments.Comment])
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.AST.SourcePos.$fShowSourceSpan
                     Language.PureScript.Externs.$s$fShow(,)_$s$fShow[])
                  (\ (x :: (Language.PureScript.AST.SourcePos.SourceSpan,
                            [Language.PureScript.Comments.Comment])) ->
                   GHC.Show.$fShow(,)_$cshowsPrec
                     @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.AST.SourcePos.$fShowSourceSpan
                     Language.PureScript.Externs.$s$fShow(,)_$s$fShow[]
                     GHC.Show.$fShow(,)1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [(Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ Language.PureScript.AST.SourcePos.SourceSpan
                        @ [Language.PureScript.Comments.Comment]
                        Language.PureScript.AST.SourcePos.$fShowSourceSpan
                        Language.PureScript.Externs.$s$fShow(,)_$s$fShow[]
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
97e5f9ee46220864aaabd3121846637f
  $s$fShow(,)_$cshowsPrec_$s$fShowKind ::
    GHC.Show.Show
      (Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Kinds.Kind
                       (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment]))
                  (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Externs.$s$fShow(,))
                  (\ (x :: Language.PureScript.Kinds.Kind
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])) ->
                   Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Externs.$s$fShow(,)
                     Language.PureScript.Kinds.$fFoldableKind7
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Kinds.Kind
                               (Language.PureScript.AST.SourcePos.SourceSpan,
                                [Language.PureScript.Comments.Comment])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Kinds.Kind
                          (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment]))
                     (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])
                        Language.PureScript.Externs.$s$fShow(,)
                        Language.PureScript.Kinds.$fFoldableKind7)
                     ls
                     s) -}
94298103b9163213b4073af4bc522631
  $s$fShow(,)_$s$fShow[] ::
    GHC.Show.Show [Language.PureScript.Comments.Comment]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.Comments.Comment]
                  (\ (ds :: GHC.Types.Int) ->
                   Language.PureScript.Comments.$fShowComment_$cshowList)
                  (\ (x :: [Language.PureScript.Comments.Comment]) ->
                   GHC.Show.showList__
                     @ Language.PureScript.Comments.Comment
                     Language.PureScript.Comments.$fShowComment1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[Language.PureScript.Comments.Comment]])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [Language.PureScript.Comments.Comment]
                     Language.PureScript.Comments.$fShowComment_$cshowList
                     ls
                     s) -}
89c98991cbf6bb9181ffc64ccacd19e2
  $s$fShowConstraint ::
    GHC.Show.Show
      (Language.PureScript.Types.Constraint
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Types.Constraint
                       (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment]))
                  (Language.PureScript.Types.$fShowConstraint_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Externs.$s$fShow(,))
                  (\ (x :: Language.PureScript.Types.Constraint
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])) ->
                   Language.PureScript.Types.$fShowConstraint_$cshowsPrec
                     @ (Language.PureScript.AST.SourcePos.SourceSpan,
                        [Language.PureScript.Comments.Comment])
                     Language.PureScript.Externs.$s$fShow(,)
                     Language.PureScript.Types.$fFoldableConstraint4
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Language.PureScript.Types.Constraint
                               (Language.PureScript.AST.SourcePos.SourceSpan,
                                [Language.PureScript.Comments.Comment])])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Language.PureScript.Types.Constraint
                          (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment]))
                     (Language.PureScript.Types.$fShowConstraint_$cshowsPrec
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           [Language.PureScript.Comments.Comment])
                        Language.PureScript.Externs.$s$fShow(,)
                        Language.PureScript.Types.$fFoldableConstraint4)
                     ls
                     s) -}
aa71cafabc89d3cbda6bef9737216c43
  $s$fShowConstraint_$cshowList ::
    [Language.PureScript.Types.Constraint
       (Language.PureScript.AST.SourcePos.SourceSpan,
        [Language.PureScript.Comments.Comment])]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Types.Constraint
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Types.Constraint
                        (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment]))
                   (Language.PureScript.Types.$fShowConstraint_$cshowsPrec
                      @ (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment])
                      Language.PureScript.Externs.$s$fShow(,)
                      Language.PureScript.Types.$fFoldableConstraint4)
                   ls
                   s) -}
dbcec0db6dc39e3def7de0897de0aea5
  $s$fShowConstraint_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Types.Constraint
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U(1*U,U),U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Types.Constraint
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Language.PureScript.Types.Constraint ww3 ww4 ww5 ww6 ->
                 Language.PureScript.Types.$w$cshowsPrec
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Externs.$s$fShow(,)
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
1ab01c339bd077a9856ef500bd0d5543
  $s$fShowEither_$cshowList ::
    [Data.Either.Either
       Language.PureScript.Names.Ident
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ConstructorName)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Either.Either
                             Language.PureScript.Names.Ident
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        Language.PureScript.Names.Ident
                        (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ConstructorName))
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ Language.PureScript.Names.Ident
                      @ (Language.PureScript.Names.ProperName
                           'Language.PureScript.Names.ConstructorName)
                      Language.PureScript.Names.$fShowIdent
                      (Language.PureScript.Names.$fShowProperName
                         @ 'Language.PureScript.Names.ConstructorName)
                      Data.Either.$fShowEither1)
                   ls
                   s) -}
5407d56f81caeefe22d5a4c6ec8ead8a
  $s$fShowEither_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Either.Either
         Language.PureScript.Names.Ident
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName)
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: GHC.Types.Int)
                   (w3 :: Data.Either.Either
                            Language.PureScript.Names.Ident
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ConstructorName)) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Data.Either.$w$cshowsPrec
                   @ Language.PureScript.Names.Ident
                   @ (Language.PureScript.Names.ProperName
                        'Language.PureScript.Names.ConstructorName)
                   Language.PureScript.Names.$fShowIdent
                   (Language.PureScript.Names.$fShowProperName
                      @ 'Language.PureScript.Names.ConstructorName)
                   ww1
                   w3 }) -}
d2f43f4ba6dc8f485f5f839d0e849c1b
  $s$fShowKind_$cshow ::
    Language.PureScript.Kinds.Kind
      (Language.PureScript.AST.SourcePos.SourceSpan,
       [Language.PureScript.Comments.Comment])
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind
                           (Language.PureScript.AST.SourcePos.SourceSpan,
                            [Language.PureScript.Comments.Comment])) ->
                 Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Externs.$s$fShow(,)
                   Language.PureScript.Kinds.$fFoldableKind7
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b1707c878c85569cb03f1619f7f1bf6b
  $s$fShowKind_$cshowList ::
    [Language.PureScript.Kinds.Kind
       (Language.PureScript.AST.SourcePos.SourceSpan,
        [Language.PureScript.Comments.Comment])]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Kinds.Kind
                             (Language.PureScript.AST.SourcePos.SourceSpan,
                              [Language.PureScript.Comments.Comment])])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Kinds.Kind
                        (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment]))
                   (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                      @ (Language.PureScript.AST.SourcePos.SourceSpan,
                         [Language.PureScript.Comments.Comment])
                      Language.PureScript.Externs.$s$fShow(,)
                      Language.PureScript.Kinds.$fFoldableKind7)
                   ls
                   s) -}
100c41ce8eaa64317d6f40acd5ddc0ab
  $s$fShowKind_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Kinds.Kind
                            (Language.PureScript.AST.SourcePos.SourceSpan,
                             [Language.PureScript.Comments.Comment])) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Kinds.$w$cshowsPrec
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Externs.$s$fShow(,)
                   ww1
                   w2 }) -}
98981dd6878265ac764a1caad0e65a31
  $s$fShow[]_$cshow ::
    [Language.PureScript.Comments.Comment] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Language.PureScript.Comments.Comment]) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Comments.Comment
                   Language.PureScript.Comments.$fShowComment1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6e4047b5113297b5f2b5b833336f2b09
  $s$fShow[]_$cshowList ::
    [[Language.PureScript.Comments.Comment]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [[Language.PureScript.Comments.Comment]])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Language.PureScript.Comments.Comment]
                   Language.PureScript.Comments.$fShowComment_$cshowList
                   ls
                   s) -}
3cf3b860753ac60c57f7960362cfed2f
  $salter_$s$sgo13 ::
    Data.Map.Internal.Map
      (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
      (Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident)
            (GHC.Base.NonEmpty
               (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                  (Language.PureScript.Names.Qualified
                     Language.PureScript.Names.Ident)))))
    -> Language.PureScript.Names.ModuleName
    -> (GHC.Base.Maybe
          (Data.Map.Internal.Map
             (Language.PureScript.Names.Qualified
                (Language.PureScript.Names.ProperName
                   'Language.PureScript.Names.ClassName))
             (Data.Map.Internal.Map
                (Language.PureScript.Names.Qualified
                   Language.PureScript.Names.Ident)
                (GHC.Base.NonEmpty
                   (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                      (Language.PureScript.Names.Qualified
                         Language.PureScript.Names.Ident)))))
        -> GHC.Base.Maybe
             (Data.Map.Internal.Map
                (Language.PureScript.Names.Qualified
                   (Language.PureScript.Names.ProperName
                      'Language.PureScript.Names.ClassName))
                (Data.Map.Internal.Map
                   (Language.PureScript.Names.Qualified
                      Language.PureScript.Names.Ident)
                   (GHC.Base.NonEmpty
                      (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                         (Language.PureScript.Names.Qualified
                            Language.PureScript.Names.Ident))))))
    -> Data.Map.Internal.Map
         (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  Language.PureScript.Names.Ident)
               (GHC.Base.NonEmpty
                  Language.PureScript.TypeClassDictionaries.NamedDict)))
  {- Arity: 3, Strictness: <S,1*U><L,U><C(S),1*C1(U)> -}
f09d1c2953c8f6462f41c7aeea6f3695
  $salter_$s$w$sgo1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      a1
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> Language.PureScript.Names.ModuleName
    -> (GHC.Base.Maybe a1 -> GHC.Base.Maybe a1)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
  {- Arity: 4, Strictness: <S,1*U><L,U(U,U,U)><L,U><C(S),1*C1(U)> -}
04a5eb5d005620bdcc1009aa9be3b3f3
  $salter_$s$w$sgo2 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      a1
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> (GHC.Base.Maybe a1 -> GHC.Base.Maybe a1)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U,U)><C(S),1*C1(U)> -}
77530d6086e91393ca2259fa3815c3a3
  $sinsertWith_$s$w$sgo13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      (GHC.Base.NonEmpty
         (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident)))
    -> GHC.Base.NonEmpty
         (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident))
    -> Language.PureScript.Names.Ident
    -> Language.PureScript.Names.ModuleName
    -> (GHC.Base.NonEmpty
          (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
             (Language.PureScript.Names.Qualified
                Language.PureScript.Names.Ident))
        -> GHC.Base.NonEmpty
             (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                (Language.PureScript.Names.Qualified
                   Language.PureScript.Names.Ident))
        -> GHC.Base.NonEmpty
             (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                (Language.PureScript.Names.Qualified
                   Language.PureScript.Names.Ident)))
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (GHC.Base.NonEmpty
            Language.PureScript.TypeClassDictionaries.NamedDict)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,1*C1(C1(U))> -}
31be4d39663d97a6bd9208086f21d504
  $sinsert_$s$w$sgo1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      (Language.PureScript.Environment.DataDeclType,
       Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName,
       Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       [Language.PureScript.Names.Ident])
    -> (Language.PureScript.Environment.DataDeclType,
        Language.PureScript.Names.ProperName
          'Language.PureScript.Names.TypeName,
        Language.PureScript.Types.Type
          (Language.PureScript.AST.SourcePos.SourceSpan,
           [Language.PureScript.Comments.Comment]),
        [Language.PureScript.Names.Ident])
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         (Language.PureScript.Environment.DataDeclType,
          Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName,
          Language.PureScript.Types.SourceType,
          [Language.PureScript.Names.Ident])
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U(U,U,U)><L,U><L,U> -}
b32f19a7d444599e14e5e46f5d45ea37
  $sinsert_$s$w$sgo13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       Language.PureScript.Environment.TypeKind)
    -> (Language.PureScript.Kinds.Kind
          (Language.PureScript.AST.SourcePos.SourceSpan,
           [Language.PureScript.Comments.Comment]),
        Language.PureScript.Environment.TypeKind)
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U(U,U,U)><L,U><L,U> -}
5efa98ffd9bf7c88a4387795aef24c66
  $sinsert_$s$w$sgo2 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      (Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       Language.PureScript.Environment.NameKind,
       Language.PureScript.Environment.NameVisibility)
    -> (Language.PureScript.Types.Type
          (Language.PureScript.AST.SourcePos.SourceSpan,
           [Language.PureScript.Comments.Comment]),
        Language.PureScript.Environment.NameKind,
        Language.PureScript.Environment.NameVisibility)
    -> Language.PureScript.Names.Ident
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (Language.PureScript.Types.SourceType,
          Language.PureScript.Environment.NameKind,
          Language.PureScript.Environment.NameVisibility)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,U> -}
1c203e9fa5a55f4b0e911faefc5f930b
  $sinsert_$s$w$sgo3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
    -> Language.PureScript.Environment.TypeClassData
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U(U,U,U)><L,U><L,U> -}
58b788a1f592bf94f2a631226edb07a1
  $sinsert_$s$w$sgo4 ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
  {- Arity: 4, Strictness: <S,1*U><L,U(U,U,U)><L,U><L,U> -}
5655e055c4167e0716c76897c6d37f1e
  $slookup_$s$wpoly_go1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      ([(Data.Text.Internal.Text,
         GHC.Base.Maybe
           (Language.PureScript.Kinds.Kind
              (Language.PureScript.AST.SourcePos.SourceSpan,
               [Language.PureScript.Comments.Comment])))],
       Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]))
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName :: *)) =>
       Language.PureScript.Names.ModuleName
       -> GHC.Base.Maybe
            ([(Data.Text.Internal.Text,
               GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
             Language.PureScript.Types.SourceType)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U> -}
6f4362b1b45ff8b9439db366f6f9549a
  $slookup_$s$wpoly_go13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      ([(Data.Text.Internal.Text,
         GHC.Base.Maybe
           (Language.PureScript.Kinds.Kind
              (Language.PureScript.AST.SourcePos.SourceSpan,
               [Language.PureScript.Comments.Comment])))],
       Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]))
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe
         ([(Data.Text.Internal.Text,
            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
          Language.PureScript.Types.SourceType)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
fad8f7d60b9056b34388388e553e12d0
  $slookup_$s$wpoly_go2 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U,U)> -}
3b908965c39065a3f7c13b5aca0eff2a
  $slookup_$s$wpoly_go3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      (Language.PureScript.Environment.DataDeclType,
       Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName,
       Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       [Language.PureScript.Names.Ident])
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe
         (Language.PureScript.Environment.DataDeclType,
          Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName,
          Language.PureScript.Types.SourceType,
          [Language.PureScript.Names.Ident])
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
4b9442fee42acf36358a858f6c8a086e
  $slookup_$s$wpoly_go4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      (Language.PureScript.Environment.DataDeclType,
       Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName,
       Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       [Language.PureScript.Names.Ident])
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName :: *)) =>
       Language.PureScript.Names.ModuleName
       -> GHC.Base.Maybe
            (Language.PureScript.Environment.DataDeclType,
             Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName,
             Language.PureScript.Types.SourceType,
             [Language.PureScript.Names.Ident])
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U> -}
7a171ca588faa67acc54ec2b0b1bccd8
  $slookup_$s$wpoly_go6 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      (Language.PureScript.Types.Type
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       Language.PureScript.Environment.NameKind,
       Language.PureScript.Environment.NameVisibility)
    -> Language.PureScript.Names.Ident
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe
         (Language.PureScript.Types.SourceType,
          Language.PureScript.Environment.NameKind,
          Language.PureScript.Environment.NameVisibility)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U> -}
a63def37416a1ea3df2355dafc1e0ea2
  $slookup_$s$wpoly_go7 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         Language.PureScript.Names.Ident)
      a
    -> Language.PureScript.Names.Ident -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
6ce7244ea8ec1f2b7eaf52dd447beacf
  $slookup_$s$wpoly_go8 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe Language.PureScript.Environment.TypeClassData
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
6c32a6ced46a9cce82dc99cc7424b460
  $slookup_$s$wpoly_go9 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName))
      Language.PureScript.Environment.TypeClassData
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName :: *)) =>
       Language.PureScript.Names.ModuleName
       -> GHC.Base.Maybe Language.PureScript.Environment.TypeClassData
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U> -}
64f8518cefa7a1ab6d24d85d7ec68f11
  $slookup_$spoly_go13 ::
    Data.Map.Internal.Map
      (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
      (Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident)
            (GHC.Base.NonEmpty
               (Language.PureScript.TypeClassDictionaries.TypeClassDictionaryInScope
                  (Language.PureScript.Names.Qualified
                     Language.PureScript.Names.Ident)))))
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  Language.PureScript.Names.Ident)
               (GHC.Base.NonEmpty
                  Language.PureScript.TypeClassDictionaries.NamedDict)))
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
216e2926bbc6c0b4e36a09c4ef2d9745
  $smember_$s$wgo1 ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
027103dbca821673bd7afdadbf84c76e
  $smember_$s$wgo3 ::
    Data.Set.Internal.Set
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName :: *)) =>
       Language.PureScript.Names.ModuleName -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U> -}
786353b26d5d31c8e67e521f09676ca7
  $tc'EDClass :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5775589981060250607##
                   9018318377522600935##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDClass2
                   0#
                   Language.PureScript.Externs.$tc'EDClass1) -}
17710200f72c49073ac485c67a0505e2
  $tc'EDClass1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e14052ef83384a9e0af510f0418d4c4b
  $tc'EDClass2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDClass3) -}
e2e0f2805f640347c66e73abbbb7e30b
  $tc'EDClass3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDClass"#) -}
a185b1a9f043c1b9f9fd349cf3b9e083
  $tc'EDDataConstructor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1689133222749504542##
                   9624779979824704453##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDDataConstructor2
                   0#
                   Language.PureScript.Externs.$tc'EDDataConstructor1) -}
5b5ad91c46c7d638bc1937de9e8a4f01
  $tc'EDDataConstructor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
af0a81c041b572422ed4c57e8e5877e0
  $tc'EDDataConstructor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDDataConstructor3) -}
6d116fc3dce60b51169c6838c621bcef
  $tc'EDDataConstructor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDDataConstructor"#) -}
06863188685c080755c5fca689ddccdb
  $tc'EDInstance :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6002550882940024177##
                   2134700255515360353##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDInstance2
                   0#
                   Language.PureScript.Externs.$tc'EDInstance1) -}
83b04052a83a46a6ecac2fdaf95a8b44
  $tc'EDInstance1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f6eb464496884663a53910165199a9b5
  $tc'EDInstance2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDInstance3) -}
7f039fc4e31ed2f777defcdaefb4d7f3
  $tc'EDInstance3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDInstance"#) -}
2bcbcd9013e2d653fd992deed8fe23b6
  $tc'EDKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7672344716920176476##
                   4808298039631559841##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDKind2
                   0#
                   Language.PureScript.Externs.$tc'EDKind1) -}
92299f4b5d5f1df618ccaaabdf0fcfbe
  $tc'EDKind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8fe4b78a462c2b820e63b567084c4da6
  $tc'EDKind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDKind3) -}
838e1a78fadd006049b97fe23dcbe721
  $tc'EDKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDKind"#) -}
6a94a73aa7ecf2d80ff04153e8dcde3a
  $tc'EDType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18410493691762563222##
                   2085531207250093562##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDType2
                   0#
                   Language.PureScript.Externs.$tc'EDType1) -}
55c1b76202e7bbd30c13aa8d35f2e1b8
  $tc'EDType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
eb0fbb05314b8b82ac670e7b33848b01
  $tc'EDType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDType3) -}
185ec637e5228380fa915cbde373d5e3
  $tc'EDType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDType"#) -}
2e45a54d530e2b905b5574cc5c94a18a
  $tc'EDTypeSynonym :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17142303826797370996##
                   12661232430939641901##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDTypeSynonym2
                   0#
                   Language.PureScript.Externs.$tc'EDTypeSynonym1) -}
1603e6f66a4cead42322a08129ee624b
  $tc'EDTypeSynonym1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1308745343de9821912300b203379458
  $tc'EDTypeSynonym2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDTypeSynonym3) -}
f6be31adb176dc254bec7525844f198b
  $tc'EDTypeSynonym3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDTypeSynonym"#) -}
8bb72921db92983fc5198c7d1f0faac9
  $tc'EDValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5833144770131332564##
                   11725411799238565917##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'EDValue2
                   0#
                   Language.PureScript.Externs.$tc'EDValue1) -}
28b2bbedaa117e549bfec9744129aec3
  $tc'EDValue1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
27f6cf0017ec1b5f383d2b9047fe75b6
  $tc'EDValue2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'EDValue3) -}
25247d9c3c107cb2d61910ecff9ea9f7
  $tc'EDValue3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EDValue"#) -}
ec03a6a21c68b4ca202a42a7cf2d73f6
  $tc'ExternsFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15139191708641604370##
                   3859950249992194913##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'ExternsFile2
                   0#
                   Language.PureScript.Externs.$tc'ExternsFile1) -}
58db4c75403c4df6d3787c4ab5c0e78c
  $tc'ExternsFile1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
817d2463c5883ed1270b4648cdd62aca
  $tc'ExternsFile2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'ExternsFile3) -}
341421454e5bde8bf73ba44dc9ba09df
  $tc'ExternsFile3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternsFile"#) -}
645bcfea813be8b313a6d3760b478bbf
  $tc'ExternsFixity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4747262435962860129##
                   1009593849049598396##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'ExternsFixity2
                   0#
                   Language.PureScript.Externs.$tc'ExternsFixity1) -}
fdc56d55f3d19c8545d12793efabb296
  $tc'ExternsFixity1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a2adc3a9cedfaec41f18008a2e870493
  $tc'ExternsFixity2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'ExternsFixity3) -}
69acb4cdb3b56bdbe51bd319f698521d
  $tc'ExternsFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternsFixity"#) -}
d19e5dec1d0209d702b433bb40490f29
  $tc'ExternsImport :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17449709641372481197##
                   9508192573922124649##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'ExternsImport2
                   0#
                   Language.PureScript.Externs.$tc'ExternsImport1) -}
6f461ac464db911cabcb798af8347cfa
  $tc'ExternsImport1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d2ee6b2628da5703fa1dda8cc87e9625
  $tc'ExternsImport2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'ExternsImport3) -}
d12c2472b8b36ca72b33b1b8ad67e42e
  $tc'ExternsImport3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternsImport"#) -}
9b47549bc009ec67c77064a12ea0d464
  $tc'ExternsTypeFixity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4675162207276264080##
                   6964717766610854708##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tc'ExternsTypeFixity2
                   0#
                   Language.PureScript.Externs.$tc'ExternsTypeFixity1) -}
33dbd328000ae29e5e7fd0bac48dca99
  $tc'ExternsTypeFixity1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f691f7a38259762fbaf4f866abf5fbe4
  $tc'ExternsTypeFixity2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tc'ExternsTypeFixity3) -}
6d6e65af7342078c907d3d0f15e9e11c
  $tc'ExternsTypeFixity3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ExternsTypeFixity"#) -}
cee056ae44e37a31e05ae1e23ebead3c
  $tcExternsDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1445238345886531129##
                   380896118093135891##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tcExternsDeclaration1
                   0#
                   GHC.Types.krep$*) -}
c34fbeab1ff4936ce306fa872c14cb15
  $tcExternsDeclaration1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tcExternsDeclaration2) -}
0d9cfa48e15e6f80ba6f4a95fee41afd
  $tcExternsDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsDeclaration"#) -}
982260dec3353cbea93da0bf10288f06
  $tcExternsFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10403970319958329537##
                   12633066982400671971##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tcExternsFile1
                   0#
                   GHC.Types.krep$*) -}
945777d5b9111d1de6207134c49f65fc
  $tcExternsFile1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tcExternsFile2) -}
7c459e95b79f26cb6b0b3fd3b758ae16
  $tcExternsFile2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsFile"#) -}
2bf34b1d38442807d2c5e372e8a89c5a
  $tcExternsFixity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10338270451023926553##
                   2674795528931068933##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tcExternsFixity1
                   0#
                   GHC.Types.krep$*) -}
92e32b1d69f37551358c694bb2ce98c6
  $tcExternsFixity1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$fFromJSONExternsFixity15) -}
4453dbd92635f696b777526b785749ea
  $tcExternsImport :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16644473835041894515##
                   1576358921945445351##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tcExternsImport1
                   0#
                   GHC.Types.krep$*) -}
480b4a110f1f042b660001811e9219d5
  $tcExternsImport1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$tcExternsImport2) -}
2f8ac82e5054530ffe5dd9a571befa35
  $tcExternsImport2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExternsImport"#) -}
de9d15922eb0b441db23a35119c29b17
  $tcExternsTypeFixity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13062881995123800383##
                   6333463343901337876##
                   Language.PureScript.Externs.$trModule
                   Language.PureScript.Externs.$tcExternsTypeFixity1
                   0#
                   GHC.Types.krep$*) -}
3a6724c07c8b08386ca82ddd9f0be609
  $tcExternsTypeFixity1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$fFromJSONExternsTypeFixity13) -}
669f27c843d9b5278ba74fe0b045d549
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Externs.$trModule3
                   Language.PureScript.Externs.$trModule1) -}
b0d969b3d12638a0add3ade8654d7887
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$trModule2) -}
6ec993d2864cd0057ad336cdd456bfea
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Externs"#) -}
1d86a39552d700befd040a5e6e3dcf6a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Externs.$trModule4) -}
1cb22589fdb0db523787b65e43a98e1b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
a7fb565ada874d78b726c57090b05102
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Language.PureScript.Externs.ExternsDeclaration -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
590df9216243d5d4f89183267245c50f
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.Declarations.DeclarationRef]
    -> [Language.PureScript.Externs.ExternsImport]
    -> [Language.PureScript.Externs.ExternsFixity]
    -> [Language.PureScript.Externs.ExternsTypeFixity]
    -> [Language.PureScript.Externs.ExternsDeclaration]
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 10,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><L,U>,
     Inline: [0] -}
45598be2576dd5f040976e2948e4bbc1
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Language.PureScript.AST.Operators.Associativity
    -> Language.PureScript.AST.Operators.Precedence
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> Language.PureScript.Names.Qualified
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U(U,U,U)><L,1*U(1*U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Language.PureScript.AST.Operators.Associativity)
                   (ww2 :: Language.PureScript.AST.Operators.Precedence)
                   (ww3 :: Language.PureScript.Names.OpName
                             'Language.PureScript.Names.ValueOpName)
                   (ww4 :: Language.PureScript.Names.Qualified
                             (Data.Either.Either
                                Language.PureScript.Names.Ident
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ConstructorName))) ->
                 let {
                   f7 :: GHC.Base.String -> GHC.Base.String
                   = case ww4 of ww5 { Language.PureScript.Names.Qualified ww6 ww7 ->
                     Language.PureScript.Names.$w$cshowsPrec4
                       @ (Data.Either.Either
                            Language.PureScript.Names.Ident
                            (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ConstructorName))
                       Language.PureScript.Externs.$fShowExternsFixity_$s$fShowEither
                       0#
                       ww6
                       ww7 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Language.PureScript.Externs.$fShowExternsFixity7
                       (GHC.CString.unpackAppendCString#
                          Language.PureScript.Externs.$fShowExternsFixity6
                          (Language.PureScript.AST.Operators.$w$cshowsPrec
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                GHC.Show.showCommaSpace1
                                (GHC.CString.unpackAppendCString#
                                   Language.PureScript.Externs.$fShowExternsFixity5
                                   (case GHC.Show.$w$cshowsPrec4
                                           0#
                                           ww2
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              GHC.Show.showCommaSpace1
                                              (GHC.CString.unpackAppendCString#
                                                 Language.PureScript.Externs.$fShowExternsFixity4
                                                 (Language.PureScript.Names.$w$cshowsPrec3
                                                    @ 'Language.PureScript.Names.ValueOpName
                                                    0#
                                                    ww3
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       GHC.Show.showCommaSpace1
                                                       (GHC.CString.unpackAppendCString#
                                                          Language.PureScript.Externs.$fShowExternsFixity3
                                                          (f7
                                                             (GHC.CString.unpackAppendCString#
                                                                Language.PureScript.Externs.$fShowExternsFixity2
                                                                x))))))) of ww5 { (#,#) ww6 ww7 ->
                                    GHC.Types.: @ GHC.Types.Char ww6 ww7 })))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
4e3ee8f273e948bb4e419d045ef82f32
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.AST.Declarations.ImportDeclarationType
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,U><L,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Language.PureScript.Names.ModuleName)
                   (ww2 :: Language.PureScript.AST.Declarations.ImportDeclarationType)
                   (ww3 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName) ->
                 let {
                   f7 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ Language.PureScript.Names.ModuleName
                       Language.PureScript.Names.$fShowModuleName
                       Language.PureScript.Externs.$fShowExternsDeclaration2
                       ww3
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Language.PureScript.Externs.$fShowExternsImport5
                       (GHC.CString.unpackAppendCString#
                          Language.PureScript.Externs.$fShowExternsImport4
                          (Language.PureScript.Names.$w$cshowsPrec
                             0#
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                GHC.Show.showCommaSpace1
                                (GHC.CString.unpackAppendCString#
                                   Language.PureScript.Externs.$fShowExternsImport3
                                   (Language.PureScript.AST.Declarations.$fShowImportDeclarationType_$cshowsPrec
                                      Language.PureScript.Externs.$fShowExternsDeclaration2
                                      ww2
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            Language.PureScript.Externs.$fShowExternsImport2
                                            (f7
                                               (GHC.CString.unpackAppendCString#
                                                  Language.PureScript.Externs.$fShowExternsFixity2
                                                  x)))))))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
98285439e1c9c8a7b3f20e0a32f68af6
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Language.PureScript.AST.Operators.Associativity
    -> Language.PureScript.AST.Operators.Precedence
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U(U,U,U)><L,1*U(1*U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Language.PureScript.AST.Operators.Associativity)
                   (ww2 :: Language.PureScript.AST.Operators.Precedence)
                   (ww3 :: Language.PureScript.Names.OpName
                             'Language.PureScript.Names.TypeOpName)
                   (ww4 :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName)) ->
                 let {
                   f7 :: GHC.Base.String -> GHC.Base.String
                   = case ww4 of ww5 { Language.PureScript.Names.Qualified ww6 ww7 ->
                     Language.PureScript.Names.$w$cshowsPrec4
                       @ (Language.PureScript.Names.ProperName
                            'Language.PureScript.Names.TypeName)
                       (Language.PureScript.Names.$fShowProperName
                          @ 'Language.PureScript.Names.TypeName)
                       0#
                       ww6
                       ww7 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Language.PureScript.Externs.$fShowExternsTypeFixity6
                       (GHC.CString.unpackAppendCString#
                          Language.PureScript.Externs.$fShowExternsTypeFixity5
                          (Language.PureScript.AST.Operators.$w$cshowsPrec
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                GHC.Show.showCommaSpace1
                                (GHC.CString.unpackAppendCString#
                                   Language.PureScript.Externs.$fShowExternsTypeFixity4
                                   (case GHC.Show.$w$cshowsPrec4
                                           0#
                                           ww2
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              GHC.Show.showCommaSpace1
                                              (GHC.CString.unpackAppendCString#
                                                 Language.PureScript.Externs.$fShowExternsTypeFixity3
                                                 (Language.PureScript.Names.$w$cshowsPrec3
                                                    @ 'Language.PureScript.Names.TypeOpName
                                                    0#
                                                    ww3
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       GHC.Show.showCommaSpace1
                                                       (GHC.CString.unpackAppendCString#
                                                          Language.PureScript.Externs.$fShowExternsTypeFixity2
                                                          (f7
                                                             (GHC.CString.unpackAppendCString#
                                                                Language.PureScript.Externs.$fShowExternsFixity2
                                                                x))))))) of ww5 { (#,#) ww6 ww7 ->
                                    GHC.Types.: @ GHC.Types.Char ww6 ww7 })))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
c87f574d0a8a850737c6a8cca01f1b43
  $w$ctoEncoding ::
    Data.Text.Internal.Text
    -> Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.Declarations.DeclarationRef]
    -> [Language.PureScript.Externs.ExternsImport]
    -> [Language.PureScript.Externs.ExternsFixity]
    -> [Language.PureScript.Externs.ExternsTypeFixity]
    -> [Language.PureScript.Externs.ExternsDeclaration]
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 8,
     Strictness: <L,U(U,U,U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))> -}
f9a88159870c76c7122ab9860df410b7
  $w$ctoEncoding1 ::
    Language.PureScript.AST.Operators.Associativity
    -> Language.PureScript.AST.Operators.Precedence
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> Language.PureScript.Names.Qualified
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 4,
     Strictness: <L,1*U><L,1*U><L,1*U(U,U,U)><L,1*U(1*U,U)> -}
6b18e818e9f231c4032207971f1ea9ec
  $w$ctoEncoding2 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.AST.Declarations.ImportDeclarationType
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,1*U> -}
a740e737a19f29d002dfc70260ea436e
  $w$ctoEncoding3 ::
    Language.PureScript.AST.Operators.Associativity
    -> Language.PureScript.AST.Operators.Precedence
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 4,
     Strictness: <L,1*U><L,1*U><L,1*U(U,U,U)><L,1*U(1*U,U)> -}
a7fb565ada874d78b726c57090b05102
  $w$ctoJSON ::
    Language.PureScript.Externs.ExternsDeclaration
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
419788dbb1e5cfc941aa2c264a5353b3
  $w$ctoJSON1 ::
    Data.Text.Internal.Text
    -> Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.Declarations.DeclarationRef]
    -> [Language.PureScript.Externs.ExternsImport]
    -> [Language.PureScript.Externs.ExternsFixity]
    -> [Language.PureScript.Externs.ExternsTypeFixity]
    -> [Language.PureScript.Externs.ExternsDeclaration]
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 8,
     Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: [0] -}
c5ad69469079ebc7ec84cd97d8576f5d
  $w$ctoJSON2 ::
    Language.PureScript.AST.Operators.Associativity
    -> Language.PureScript.AST.Operators.Precedence
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> Language.PureScript.Names.Qualified
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,U><L,1*U(1*U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.AST.Operators.Associativity)
                   (ww1 :: Language.PureScript.AST.Operators.Precedence)
                   (ww2 :: Language.PureScript.Names.OpName
                             'Language.PureScript.Names.ValueOpName)
                   (ww3 :: Language.PureScript.Names.Qualified
                             (Data.Either.Either
                                Language.PureScript.Names.Ident
                                (Language.PureScript.Names.ProperName
                                   'Language.PureScript.Names.ConstructorName))) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Language.PureScript.Externs.$fToJSONExternsFixity7,
                            Language.PureScript.AST.Operators.$fToJSONAssociativity_$ctoJSON
                              ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Language.PureScript.Externs.$fToJSONExternsFixity5,
                               case ww1 of dt { DEFAULT ->
                               Data.Aeson.Types.Internal.Number
                                 (Data.Scientific.Scientific dt 0#) })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Language.PureScript.Externs.$fToJSONExternsFixity3,
                                  Data.Aeson.Types.Internal.$WString
                                    ww2
                                      `cast`
                                    (Language.PureScript.Names.N:OpName[0]
                                         <'Language.PureScript.Names.ValueOpName>_P))
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Language.PureScript.Externs.$fToJSONExternsFixity1,
                                     case ww3 of ww4 { Language.PureScript.Names.Qualified ww5 ww6 ->
                                     case Language.PureScript.Names.$w$ctoJSON1
                                            @ (Data.Either.Either
                                                 Language.PureScript.Names.Ident
                                                 (Language.PureScript.Names.ProperName
                                                    'Language.PureScript.Names.ConstructorName))
                                            Language.PureScript.Externs.$fToJSONExternsFixity_$s$fToJSONEither
                                            ww5
                                            ww6 of ww7 { Unit# ww8 ->
                                     Data.Aeson.Types.Internal.Array ww8 } })
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww4 { Data.Aeson.Types.Internal.Object ww5 ->
                 (# ww5 #) }) -}
e4f717fc9dd43c359a8675a1e284bb20
  $w$ctoJSON3 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.AST.Declarations.ImportDeclarationType
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.Names.ModuleName)
                   (ww1 :: Language.PureScript.AST.Declarations.ImportDeclarationType)
                   (ww2 :: GHC.Base.Maybe Language.PureScript.Names.ModuleName) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Language.PureScript.Externs.$fToJSONExternsImport7,
                            Language.PureScript.Names.$fToJSONModuleName_$ctoJSON ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Language.PureScript.Externs.$fToJSONExternsImport4,
                               Language.PureScript.AST.Declarations.$fToJSONImportDeclarationType_$ctoJSON
                                 ww1)
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Language.PureScript.Externs.$fToJSONExternsImport1,
                                  case ww2 of wild {
                                    GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                    GHC.Base.Just a10
                                    -> Language.PureScript.Names.$fToJSONModuleName_$ctoJSON a10 })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww3 { Data.Aeson.Types.Internal.Object ww4 ->
                 (# ww4 #) }) -}
0337cadd96ed614ba2f4e6f00c93e260
  $w$ctoJSON4 ::
    Language.PureScript.AST.Operators.Associativity
    -> Language.PureScript.AST.Operators.Precedence
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,U><L,1*U(1*U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Language.PureScript.AST.Operators.Associativity)
                   (ww1 :: Language.PureScript.AST.Operators.Precedence)
                   (ww2 :: Language.PureScript.Names.OpName
                             'Language.PureScript.Names.TypeOpName)
                   (ww3 :: Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.TypeName)) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Language.PureScript.Externs.$fToJSONExternsTypeFixity7,
                            Language.PureScript.AST.Operators.$fToJSONAssociativity_$ctoJSON
                              ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Language.PureScript.Externs.$fToJSONExternsTypeFixity5,
                               case ww1 of dt { DEFAULT ->
                               Data.Aeson.Types.Internal.Number
                                 (Data.Scientific.Scientific dt 0#) })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Language.PureScript.Externs.$fToJSONExternsTypeFixity3,
                                  Data.Aeson.Types.Internal.$WString
                                    ww2
                                      `cast`
                                    (Language.PureScript.Names.N:OpName[0]
                                         <'Language.PureScript.Names.TypeOpName>_P))
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Language.PureScript.Externs.$fToJSONExternsTypeFixity1,
                                     case ww3 of ww4 { Language.PureScript.Names.Qualified ww5 ww6 ->
                                     case Language.PureScript.Names.$w$ctoJSON1
                                            @ (Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.TypeName)
                                            (Language.PureScript.Names.$fToJSONProperName
                                               @ 'Language.PureScript.Names.TypeName)
                                            ww5
                                            ww6 of ww7 { Unit# ww8 ->
                                     Data.Aeson.Types.Internal.Array ww8 } })
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww4 { Data.Aeson.Types.Internal.Object ww5 ->
                 (# ww5 #) }) -}
7b74c0b2219f86570ecc1665e0b429a5
  $w$sgo1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U(U,U,U)><L,U><S,1*U>,
     Inline: [0] -}
4fc1defb3f0b84d291421a643e85eb2d
  $w$sgo13 ::
    (GHC.Base.Maybe a1 -> GHC.Base.Maybe a1)
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         a1
  {- Arity: 4, Strictness: <C(S),1*C1(U)><L,U><L,U(U,U,U)><S,1*U>,
     Inline: [0] -}
4e2b403a5d1aceaae5a574db0196c0df
  $wapplyExternsFileToEnvironment ::
    Language.PureScript.Names.ModuleName
    -> [Language.PureScript.Externs.ExternsDeclaration]
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         (Language.PureScript.Types.SourceType,
          Language.PureScript.Environment.NameKind,
          Language.PureScript.Environment.NameVisibility)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         (Language.PureScript.Environment.DataDeclType,
          Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName,
          Language.PureScript.Types.SourceType,
          [Language.PureScript.Names.Ident])
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         ([(Data.Text.Internal.Text,
            GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
          Language.PureScript.Types.SourceType)
    -> Data.Map.Internal.Map
         (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
         (Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  Language.PureScript.Names.Ident)
               (GHC.Base.NonEmpty
                  Language.PureScript.TypeClassDictionaries.NamedDict)))
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName))
         Language.PureScript.Environment.TypeClassData
    -> Data.Set.Internal.Set
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName))
    -> (# Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               Language.PureScript.Names.Ident)
            (Language.PureScript.Types.SourceType,
             Language.PureScript.Environment.NameKind,
             Language.PureScript.Environment.NameVisibility),
          Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.TypeName))
            (Language.PureScript.Kinds.SourceKind,
             Language.PureScript.Environment.TypeKind),
          Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ConstructorName))
            (Language.PureScript.Environment.DataDeclType,
             Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName,
             Language.PureScript.Types.SourceType,
             [Language.PureScript.Names.Ident]),
          Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.TypeName))
            ([(Data.Text.Internal.Text,
               GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
             Language.PureScript.Types.SourceType),
          Data.Map.Internal.Map
            (GHC.Base.Maybe Language.PureScript.Names.ModuleName)
            (Data.Map.Internal.Map
               (Language.PureScript.Names.Qualified
                  (Language.PureScript.Names.ProperName
                     'Language.PureScript.Names.ClassName))
               (Data.Map.Internal.Map
                  (Language.PureScript.Names.Qualified
                     Language.PureScript.Names.Ident)
                  (GHC.Base.NonEmpty
                     Language.PureScript.TypeClassDictionaries.NamedDict))),
          Data.Map.Internal.Map
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.ClassName))
            Language.PureScript.Environment.TypeClassData,
          Data.Set.Internal.Set
            (Language.PureScript.Names.Qualified
               (Language.PureScript.Names.ProperName
                  'Language.PureScript.Names.KindName)) #)
  {- Arity: 9,
     Strictness: <L,U><S,1*U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
244c2294e58c29ba44947204f71491e6
  $wmoduleToExternsFile ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.Declarations.Declaration]
    -> GHC.Base.Maybe
         [Language.PureScript.AST.Declarations.DeclarationRef]
    -> Language.PureScript.Environment.Environment
    -> (# Data.Text.Internal.Text,
          Language.PureScript.Names.ModuleName,
          [Language.PureScript.AST.Declarations.DeclarationRef],
          [Language.PureScript.Externs.ExternsImport],
          [Language.PureScript.Externs.ExternsFixity],
          [Language.PureScript.Externs.ExternsTypeFixity],
          [Language.PureScript.Externs.ExternsDeclaration],
          Language.PureScript.AST.SourcePos.SourceSpan #)
  {- Arity: 5,
     Strictness: <L,U><L,U><L,U><S,1*U><L,U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: [0] -}
0a005d92247000cbd70f6ae8bf4dc067
  $wpoly_go13 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName))
         a
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U(U,U,U)><S,1*U>, Inline: [0] -}
2304c55f23afe10b6cb072efcfd457b0
  $wpoly_go2 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            Language.PureScript.Names.Ident)
         a
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><L,U><S,1*U>,
     Inline: [0] -}
a7fb565ada874d78b726c57090b05102
  data ExternsDeclaration
    = EDType {edTypeName :: Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName,
              edTypeKind :: Language.PureScript.Kinds.SourceKind,
              edTypeDeclarationKind :: Language.PureScript.Environment.TypeKind}
    | EDTypeSynonym {edTypeSynonymName :: Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.TypeName,
                     edTypeSynonymArguments :: [(Data.Text.Internal.Text,
                                                 GHC.Base.Maybe
                                                   Language.PureScript.Kinds.SourceKind)],
                     edTypeSynonymType :: Language.PureScript.Types.SourceType}
    | EDDataConstructor {edDataCtorName :: Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.ConstructorName,
                         edDataCtorOrigin :: Language.PureScript.Environment.DataDeclType,
                         edDataCtorTypeCtor :: Language.PureScript.Names.ProperName
                                                 'Language.PureScript.Names.TypeName,
                         edDataCtorType :: Language.PureScript.Types.SourceType,
                         edDataCtorFields :: [Language.PureScript.Names.Ident]}
    | EDValue {edValueName :: Language.PureScript.Names.Ident,
               edValueType :: Language.PureScript.Types.SourceType}
    | EDClass {edClassName :: Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ClassName,
               edClassTypeArguments :: [(Data.Text.Internal.Text,
                                         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)],
               edClassMembers :: [(Language.PureScript.Names.Ident,
                                   Language.PureScript.Types.SourceType)],
               edClassConstraints :: [Language.PureScript.Types.SourceConstraint],
               edFunctionalDependencies :: [Language.PureScript.Environment.FunctionalDependency]}
    | EDInstance {edInstanceClassName :: Language.PureScript.Names.Qualified
                                           (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.ClassName),
                  edInstanceName :: Language.PureScript.Names.Ident,
                  edInstanceTypes :: [Language.PureScript.Types.SourceType],
                  edInstanceConstraints :: GHC.Base.Maybe
                                             [Language.PureScript.Types.SourceConstraint],
                  edInstanceChain :: [Language.PureScript.Names.Qualified
                                        Language.PureScript.Names.Ident],
                  edInstanceChainIndex :: GHC.Integer.Type.Integer}
    | EDKind {edKindName :: Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.KindName}
c010c09fe85776adf7c6787c7d79c898
  data ExternsFile
    = ExternsFile {efVersion :: Data.Text.Internal.Text,
                   efModuleName :: Language.PureScript.Names.ModuleName,
                   efExports :: [Language.PureScript.AST.Declarations.DeclarationRef],
                   efImports :: [Language.PureScript.Externs.ExternsImport],
                   efFixities :: [Language.PureScript.Externs.ExternsFixity],
                   efTypeFixities :: [Language.PureScript.Externs.ExternsTypeFixity],
                   efDeclarations :: [Language.PureScript.Externs.ExternsDeclaration],
                   efSourceSpan :: Language.PureScript.AST.SourcePos.SourceSpan}
faf775006e4902ca2862b62427af99db
  data ExternsFixity
    = ExternsFixity {efAssociativity :: Language.PureScript.AST.Operators.Associativity,
                     efPrecedence :: Language.PureScript.AST.Operators.Precedence,
                     efOperator :: Language.PureScript.Names.OpName
                                     'Language.PureScript.Names.ValueOpName,
                     efAlias :: Language.PureScript.Names.Qualified
                                  (Data.Either.Either
                                     Language.PureScript.Names.Ident
                                     (Language.PureScript.Names.ProperName
                                        'Language.PureScript.Names.ConstructorName))}
5882573312128fd7e89a35ea4479d0dc
  data ExternsImport
    = ExternsImport {eiModule :: Language.PureScript.Names.ModuleName,
                     eiImportType :: Language.PureScript.AST.Declarations.ImportDeclarationType,
                     eiImportedAs :: GHC.Base.Maybe
                                       Language.PureScript.Names.ModuleName}
2cdf2d30c32e0c2e399d4c8039173e63
  data ExternsTypeFixity
    = ExternsTypeFixity {efTypeAssociativity :: Language.PureScript.AST.Operators.Associativity,
                         efTypePrecedence :: Language.PureScript.AST.Operators.Precedence,
                         efTypeOperator :: Language.PureScript.Names.OpName
                                             'Language.PureScript.Names.TypeOpName,
                         efTypeAlias :: Language.PureScript.Names.Qualified
                                          (Language.PureScript.Names.ProperName
                                             'Language.PureScript.Names.TypeName)}
302b0a30a60f6f9ca01301b13755ca49
  applyExternsFileToEnvironment ::
    Language.PureScript.Externs.ExternsFile
    -> Language.PureScript.Environment.Environment
    -> Language.PureScript.Environment.Environment
  {- Arity: 2,
     Strictness: <S(LLLLLLSL),1*U(A,U,A,A,A,A,1*U,A)><S,1*U(U,U,U,U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Externs.ExternsFile)
                   (w1 :: Language.PureScript.Environment.Environment) ->
                 case w of ww { Language.PureScript.Externs.ExternsFile ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case w1 of ww9 { Language.PureScript.Environment.Environment ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 case Language.PureScript.Externs.$wapplyExternsFileToEnvironment
                        ww2
                        ww7
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16 of ww17 { (#,,,,,,#) ww18 ww19 ww20 ww21 ww22 ww23 ww24 ->
                 Language.PureScript.Environment.Environment
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24 } } }) -}
a7fb565ada874d78b726c57090b05102
  edClassConstraints ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [Language.PureScript.Types.SourceConstraint]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edClassConstraints1
                   Language.PureScript.Externs.EDClass ds1 ds2 ds3 ds4 ds5
                   -> ds4 }) -}
2aad0419d53f123efe9c16efa468095c
  edClassConstraints1 :: [Language.PureScript.Types.SourceConstraint]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edClassMembers ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [(Language.PureScript.Names.Ident,
         Language.PureScript.Types.SourceType)]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edClassMembers1
                   Language.PureScript.Externs.EDClass ds1 ds2 ds3 ds4 ds5
                   -> ds3 }) -}
13a41ccbf9a0c100e11b39742f4d0adf
  edClassMembers1 ::
    [(Language.PureScript.Names.Ident,
      Language.PureScript.Types.SourceType)]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edClassName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edClassName1
                   Language.PureScript.Externs.EDClass ds1 ds2 ds3 ds4 ds5
                   -> ds1 }) -}
b7715e8bd8a7bcd9e2020de37acbb4da
  edClassName1 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ClassName
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edClassTypeArguments ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [(Data.Text.Internal.Text,
         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edClassTypeArguments1
                   Language.PureScript.Externs.EDClass ds1 ds2 ds3 ds4 ds5
                   -> ds2 }) -}
8214336e6c93c7542b48912fe8d9d512
  edClassTypeArguments1 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edDataCtorFields ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [Language.PureScript.Names.Ident]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edDataCtorFields1
                   Language.PureScript.Externs.EDDataConstructor ds1 ds2 ds3 ds4 ds5
                   -> ds5 }) -}
7d85067304c347969af7852d13a14b02
  edDataCtorFields1 :: [Language.PureScript.Names.Ident]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edDataCtorName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edDataCtorName1
                   Language.PureScript.Externs.EDDataConstructor ds1 ds2 ds3 ds4 ds5
                   -> ds1 }) -}
7cfb440a0fb9b63ffe13b64263fb9a7c
  edDataCtorName1 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ConstructorName
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edDataCtorOrigin ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Environment.DataDeclType
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edDataCtorOrigin1
                   Language.PureScript.Externs.EDDataConstructor ds1 ds2 ds3 ds4 ds5
                   -> ds2 }) -}
0131ea1bf16decd594fc093483490558
  edDataCtorOrigin1 :: Language.PureScript.Environment.DataDeclType
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edDataCtorType ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Types.SourceType
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edDataCtorType1
                   Language.PureScript.Externs.EDDataConstructor ds1 ds2 ds3 ds4 ds5
                   -> ds4 }) -}
a00c6bc8ef55b5b54e6a0feffe4240cb
  edDataCtorType1 :: Language.PureScript.Types.SourceType
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edDataCtorTypeCtor ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edDataCtorTypeCtor1
                   Language.PureScript.Externs.EDDataConstructor ds1 ds2 ds3 ds4 ds5
                   -> ds3 }) -}
81b9f94f94f5d128732a12085e4fec68
  edDataCtorTypeCtor1 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edFunctionalDependencies ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [Language.PureScript.Environment.FunctionalDependency]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edFunctionalDependencies1
                   Language.PureScript.Externs.EDClass ds1 ds2 ds3 ds4 ds5
                   -> ds5 }) -}
3748d8836524d92a94faca0e6cbe5eb9
  edFunctionalDependencies1 ::
    [Language.PureScript.Environment.FunctionalDependency]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edInstanceChain ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [Language.PureScript.Names.Qualified
          Language.PureScript.Names.Ident]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edInstanceChain1
                   Language.PureScript.Externs.EDInstance ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds5 }) -}
4506bcb67245d0b0d8f081439454294c
  edInstanceChain1 ::
    [Language.PureScript.Names.Qualified
       Language.PureScript.Names.Ident]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edInstanceChainIndex ::
    Language.PureScript.Externs.ExternsDeclaration
    -> GHC.Integer.Type.Integer
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edInstanceChainIndex1
                   Language.PureScript.Externs.EDInstance ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds6 }) -}
92e5206bb921d2fe180dc333fd9c6c5b
  edInstanceChainIndex1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edInstanceClassName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edInstanceClassName1
                   Language.PureScript.Externs.EDInstance ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds1 }) -}
6f89f671aef1a1309f6a9528aa68e136
  edInstanceClassName1 ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edInstanceConstraints ::
    Language.PureScript.Externs.ExternsDeclaration
    -> GHC.Base.Maybe [Language.PureScript.Types.SourceConstraint]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edInstanceConstraints1
                   Language.PureScript.Externs.EDInstance ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds4 }) -}
089465343975fe1dbacdf20d7d3e180e
  edInstanceConstraints1 ::
    GHC.Base.Maybe [Language.PureScript.Types.SourceConstraint]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edInstanceName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.Ident
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edInstanceName1
                   Language.PureScript.Externs.EDInstance ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds2 }) -}
2344dde3ccaf1bedce1d108aa198f11b
  edInstanceName1 :: Language.PureScript.Names.Ident
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edInstanceTypes ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [Language.PureScript.Types.SourceType]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edInstanceTypes1
                   Language.PureScript.Externs.EDInstance ds1 ds2 ds3 ds4 ds5 ds6
                   -> ds3 }) -}
80ac5f258cd60255a6913a4180cf11e9
  edInstanceTypes1 :: [Language.PureScript.Types.SourceType]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edKindName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edKindName1
                   Language.PureScript.Externs.EDKind ds1 -> ds1 }) -}
2c72c0d9a392cb45a1649f48061c5a4b
  edKindName1 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.KindName
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edTypeDeclarationKind ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Environment.TypeKind
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edTypeDeclarationKind1
                   Language.PureScript.Externs.EDType ds1 ds2 ds3 -> ds3 }) -}
d14f0e755fcdd911aca8e26561510024
  edTypeDeclarationKind1 :: Language.PureScript.Environment.TypeKind
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edTypeKind ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Kinds.SourceKind
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edTypeKind1
                   Language.PureScript.Externs.EDType ds1 ds2 ds3 -> ds2 }) -}
ec7d7137c280ed7afa075aca784744a6
  edTypeKind1 :: Language.PureScript.Kinds.SourceKind
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edTypeName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edTypeName1
                   Language.PureScript.Externs.EDType ds1 ds2 ds3 -> ds1 }) -}
d500c068293e0aac2d8d3b517173315b
  edTypeName1 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edTypeSynonymArguments ::
    Language.PureScript.Externs.ExternsDeclaration
    -> [(Data.Text.Internal.Text,
         GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edTypeSynonymArguments1
                   Language.PureScript.Externs.EDTypeSynonym ds1 ds2 ds3 -> ds2 }) -}
96eedeadda8a8b69ba1bb843ba2119aa
  edTypeSynonymArguments1 ::
    [(Data.Text.Internal.Text,
      GHC.Base.Maybe Language.PureScript.Kinds.SourceKind)]
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edTypeSynonymName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edTypeSynonymName1
                   Language.PureScript.Externs.EDTypeSynonym ds1 ds2 ds3 -> ds1 }) -}
75bae42b3cce5724e39061cb753912df
  edTypeSynonymName1 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edTypeSynonymType ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Types.SourceType
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edTypeSynonymType1
                   Language.PureScript.Externs.EDTypeSynonym ds1 ds2 ds3 -> ds3 }) -}
d35a1e3856137cebc46d50e7d9607a50
  edTypeSynonymType1 :: Language.PureScript.Types.SourceType
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edValueName ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Names.Ident
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edValueName1
                   Language.PureScript.Externs.EDValue ds1 ds2 -> ds1 }) -}
609290f99b20b084619869c5220445c1
  edValueName1 :: Language.PureScript.Names.Ident
  {- Strictness: x -}
a7fb565ada874d78b726c57090b05102
  edValueType ::
    Language.PureScript.Externs.ExternsDeclaration
    -> Language.PureScript.Types.SourceType
  RecSel Left Language.PureScript.Externs.ExternsDeclaration
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsDeclaration) ->
                 case ds of wild {
                   DEFAULT -> Language.PureScript.Externs.edValueType1
                   Language.PureScript.Externs.EDValue ds1 ds2 -> ds2 }) -}
6c498c5255cbf27efcbf9ff98b455f16
  edValueType1 :: Language.PureScript.Types.SourceType
  {- Strictness: x -}
faf775006e4902ca2862b62427af99db
  efAlias ::
    Language.PureScript.Externs.ExternsFixity
    -> Language.PureScript.Names.Qualified
         (Data.Either.Either
            Language.PureScript.Names.Ident
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
  RecSel Left Language.PureScript.Externs.ExternsFixity
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFixity ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
faf775006e4902ca2862b62427af99db
  efAssociativity ::
    Language.PureScript.Externs.ExternsFixity
    -> Language.PureScript.AST.Operators.Associativity
  RecSel Left Language.PureScript.Externs.ExternsFixity
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFixity ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
c010c09fe85776adf7c6787c7d79c898
  efDeclarations ::
    Language.PureScript.Externs.ExternsFile
    -> [Language.PureScript.Externs.ExternsDeclaration]
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSL),1*U(A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds7 }) -}
c010c09fe85776adf7c6787c7d79c898
  efExports ::
    Language.PureScript.Externs.ExternsFile
    -> [Language.PureScript.AST.Declarations.DeclarationRef]
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLL),1*U(A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds3 }) -}
c010c09fe85776adf7c6787c7d79c898
  efFixities ::
    Language.PureScript.Externs.ExternsFile
    -> [Language.PureScript.Externs.ExternsFixity]
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLL),1*U(A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds5 }) -}
c010c09fe85776adf7c6787c7d79c898
  efImports ::
    Language.PureScript.Externs.ExternsFile
    -> [Language.PureScript.Externs.ExternsImport]
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLL),1*U(A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds4 }) -}
c010c09fe85776adf7c6787c7d79c898
  efModuleName ::
    Language.PureScript.Externs.ExternsFile
    -> Language.PureScript.Names.ModuleName
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLL),1*U(A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds2 }) -}
faf775006e4902ca2862b62427af99db
  efOperator ::
    Language.PureScript.Externs.ExternsFixity
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
  RecSel Left Language.PureScript.Externs.ExternsFixity
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFixity ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
faf775006e4902ca2862b62427af99db
  efPrecedence ::
    Language.PureScript.Externs.ExternsFixity
    -> Language.PureScript.AST.Operators.Precedence
  RecSel Left Language.PureScript.Externs.ExternsFixity
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFixity ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
c010c09fe85776adf7c6787c7d79c898
  efSourceSpan ::
    Language.PureScript.Externs.ExternsFile
    -> Language.PureScript.AST.SourcePos.SourceSpan
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds8 }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  efTypeAlias ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
  RecSel Left Language.PureScript.Externs.ExternsTypeFixity
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsTypeFixity ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  efTypeAssociativity ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Language.PureScript.AST.Operators.Associativity
  RecSel Left Language.PureScript.Externs.ExternsTypeFixity
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsTypeFixity ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
c010c09fe85776adf7c6787c7d79c898
  efTypeFixities ::
    Language.PureScript.Externs.ExternsFile
    -> [Language.PureScript.Externs.ExternsTypeFixity]
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLL),1*U(A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds6 }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  efTypeOperator ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
  RecSel Left Language.PureScript.Externs.ExternsTypeFixity
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsTypeFixity ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
2cdf2d30c32e0c2e399d4c8039173e63
  efTypePrecedence ::
    Language.PureScript.Externs.ExternsTypeFixity
    -> Language.PureScript.AST.Operators.Precedence
  RecSel Left Language.PureScript.Externs.ExternsTypeFixity
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsTypeFixity) ->
                 case ds of wild { Language.PureScript.Externs.ExternsTypeFixity ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
c010c09fe85776adf7c6787c7d79c898
  efVersion ::
    Language.PureScript.Externs.ExternsFile -> Data.Text.Internal.Text
  RecSel Left Language.PureScript.Externs.ExternsFile
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U(U,U,U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsFile) ->
                 case ds of wild { Language.PureScript.Externs.ExternsFile ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds1 }) -}
5882573312128fd7e89a35ea4479d0dc
  eiImportType ::
    Language.PureScript.Externs.ExternsImport
    -> Language.PureScript.AST.Declarations.ImportDeclarationType
  RecSel Left Language.PureScript.Externs.ExternsImport
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsImport) ->
                 case ds of wild { Language.PureScript.Externs.ExternsImport ds1 ds2 ds3 ->
                 ds2 }) -}
5882573312128fd7e89a35ea4479d0dc
  eiImportedAs ::
    Language.PureScript.Externs.ExternsImport
    -> GHC.Base.Maybe Language.PureScript.Names.ModuleName
  RecSel Left Language.PureScript.Externs.ExternsImport
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsImport) ->
                 case ds of wild { Language.PureScript.Externs.ExternsImport ds1 ds2 ds3 ->
                 ds3 }) -}
5882573312128fd7e89a35ea4479d0dc
  eiModule ::
    Language.PureScript.Externs.ExternsImport
    -> Language.PureScript.Names.ModuleName
  RecSel Left Language.PureScript.Externs.ExternsImport
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Externs.ExternsImport) ->
                 case ds of wild { Language.PureScript.Externs.ExternsImport ds1 ds2 ds3 ->
                 ds1 }) -}
4d016520a9c614dac58cb12cad9bbf73
  moduleToExternsFile ::
    Language.PureScript.AST.Declarations.Module
    -> Language.PureScript.Environment.Environment
    -> Language.PureScript.Externs.ExternsFile
  {- Arity: 2,
     Strictness: <S(LLLLS),1*U(U,A,U,U,1*U)><L,U(U,U,U,U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.AST.Declarations.Module)
                   (w1 :: Language.PureScript.Environment.Environment) ->
                 case w of ww { Language.PureScript.AST.Declarations.Module ww1 ww2 ww3 ww4 ww5 ->
                 case Language.PureScript.Externs.$wmoduleToExternsFile
                        ww1
                        ww3
                        ww4
                        ww5
                        w1 of ww6 { (#,,,,,,,#) ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                 Language.PureScript.Externs.ExternsFile
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14 } }) -}
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Externs.ExternsDeclaration]
  = Language.PureScript.Externs.$fFromJSONExternsDeclaration
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Externs.ExternsFile]
  = Language.PureScript.Externs.$fFromJSONExternsFile
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Externs.ExternsFixity]
  = Language.PureScript.Externs.$fFromJSONExternsFixity
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Externs.ExternsImport]
  = Language.PureScript.Externs.$fFromJSONExternsImport
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Externs.ExternsTypeFixity]
  = Language.PureScript.Externs.$fFromJSONExternsTypeFixity
instance GHC.Show.Show [Language.PureScript.Externs.ExternsDeclaration]
  = Language.PureScript.Externs.$fShowExternsDeclaration
instance GHC.Show.Show [Language.PureScript.Externs.ExternsFile]
  = Language.PureScript.Externs.$fShowExternsFile
instance GHC.Show.Show [Language.PureScript.Externs.ExternsFixity]
  = Language.PureScript.Externs.$fShowExternsFixity
instance GHC.Show.Show [Language.PureScript.Externs.ExternsImport]
  = Language.PureScript.Externs.$fShowExternsImport
instance GHC.Show.Show [Language.PureScript.Externs.ExternsTypeFixity]
  = Language.PureScript.Externs.$fShowExternsTypeFixity
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Externs.ExternsDeclaration]
  = Language.PureScript.Externs.$fToJSONExternsDeclaration
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Externs.ExternsFile]
  = Language.PureScript.Externs.$fToJSONExternsFile
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Externs.ExternsFixity]
  = Language.PureScript.Externs.$fToJSONExternsFixity
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Externs.ExternsImport]
  = Language.PureScript.Externs.$fToJSONExternsImport
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Externs.ExternsTypeFixity]
  = Language.PureScript.Externs.$fToJSONExternsTypeFixity
"SC:$w$sgo130" [0] forall (sc :: Data.Map.Internal.Map
                                   (Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.TypeName))
                                   (Language.PureScript.Kinds.Kind
                                      (Language.PureScript.AST.SourcePos.SourceSpan,
                                       [Language.PureScript.Comments.Comment]),
                                    Language.PureScript.Environment.TypeKind))
                          (sc1 :: (Language.PureScript.Kinds.Kind
                                     (Language.PureScript.AST.SourcePos.SourceSpan,
                                      [Language.PureScript.Comments.Comment]),
                                   Language.PureScript.Environment.TypeKind))
                          (sc2 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
                          (sc3 :: Language.PureScript.Names.ModuleName)
                          (sc4 :: Language.PureScript.Names.Qualified
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName))
  Language.PureScript.Externs.$w$sgo1 @ (Language.PureScript.Kinds.SourceKind,
                                         Language.PureScript.Environment.TypeKind)
                                      sc4
                                      (GHC.Base.Just @ Language.PureScript.Names.ModuleName sc3)
                                      sc2
                                      sc1
                                      sc
  = Language.PureScript.Externs.$sinsert_$s$w$sgo13
      sc
      sc1
      sc2
      sc3
      sc4
"SC:$w$sgo131" [0] forall @ a10
                          (sc :: Data.Map.Internal.Map
                                   (Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ClassName))
                                   a10)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
                          (sc2 :: GHC.Base.Maybe a10 -> GHC.Base.Maybe a10)
  Language.PureScript.Externs.$w$sgo13 @ a10
                                       sc2
                                       (GHC.Base.Nothing @ Language.PureScript.Names.ModuleName)
                                       sc1
                                       sc
  = Language.PureScript.Externs.$salter_$s$w$sgo2 @ a10 sc sc1 sc2
"SC:$w$sgo132" [0] forall @ a10
                          (sc :: Data.Map.Internal.Map
                                   (Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.ClassName))
                                   a10)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
                          (sc2 :: Language.PureScript.Names.ModuleName)
                          (sc3 :: GHC.Base.Maybe a10 -> GHC.Base.Maybe a10)
  Language.PureScript.Externs.$w$sgo13 @ a10
                                       sc3
                                       (GHC.Base.Just @ Language.PureScript.Names.ModuleName sc2)
                                       sc1
                                       sc
  = Language.PureScript.Externs.$salter_$s$w$sgo1
      @ a10
      sc
      sc1
      sc2
      sc3
"SC:$wpoly_go130" [0] forall (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.TypeName))
                                      ([(Data.Text.Internal.Text,
                                         GHC.Base.Maybe
                                           (Language.PureScript.Kinds.Kind
                                              (Language.PureScript.AST.SourcePos.SourceSpan,
                                               [Language.PureScript.Comments.Comment])))],
                                       Language.PureScript.Types.Type
                                         (Language.PureScript.AST.SourcePos.SourceSpan,
                                          [Language.PureScript.Comments.Comment])))
                             (sc1 :: Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName)
                             (sc2 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Externs.$wpoly_go13 @ ([(Data.Text.Internal.Text,
                                               GHC.Base.Maybe
                                                 Language.PureScript.Kinds.SourceKind)],
                                             Language.PureScript.Types.SourceType)
                                          (GHC.Base.Just @ Language.PureScript.Names.ModuleName sc2)
                                          sc1
                                          sc
  = Language.PureScript.Externs.$slookup_$s$wpoly_go13 sc sc1 sc2
"SC:$wpoly_go130" [0] forall (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         Language.PureScript.Names.Ident)
                                      (Language.PureScript.Types.Type
                                         (Language.PureScript.AST.SourcePos.SourceSpan,
                                          [Language.PureScript.Comments.Comment]),
                                       Language.PureScript.Environment.NameKind,
                                       Language.PureScript.Environment.NameVisibility))
                             (sc1 :: Language.PureScript.Names.Ident)
                             (sc2 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Externs.$wpoly_go2 @ (Language.PureScript.Types.SourceType,
                                            Language.PureScript.Environment.NameKind,
                                            Language.PureScript.Environment.NameVisibility)
                                         (GHC.Base.Just @ Language.PureScript.Names.ModuleName sc2)
                                         sc1
                                         sc
  = Language.PureScript.Externs.$slookup_$s$wpoly_go6 sc sc1 sc2
"SC:$wpoly_go131" [0] forall @ a10
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.TypeName))
                                      a10)
                             (sc1 :: Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName)
  Language.PureScript.Externs.$wpoly_go13 @ a10
                                          (GHC.Base.Nothing @ Language.PureScript.Names.ModuleName)
                                          sc1
                                          sc
  = Language.PureScript.Externs.$slookup_$s$wpoly_go2 @ a10 sc sc1
"SC:$wpoly_go131" [0] forall @ a10
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         Language.PureScript.Names.Ident)
                                      a10)
                             (sc1 :: Language.PureScript.Names.Ident)
  Language.PureScript.Externs.$wpoly_go2 @ a10
                                         (GHC.Base.Nothing @ Language.PureScript.Names.ModuleName)
                                         sc1
                                         sc
  = Language.PureScript.Externs.$slookup_$s$wpoly_go7 @ a10 sc sc1
"SC:$wpoly_go132" [0] forall (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.TypeName))
                                      ([(Data.Text.Internal.Text,
                                         GHC.Base.Maybe
                                           (Language.PureScript.Kinds.Kind
                                              (Language.PureScript.AST.SourcePos.SourceSpan,
                                               [Language.PureScript.Comments.Comment])))],
                                       Language.PureScript.Types.Type
                                         (Language.PureScript.AST.SourcePos.SourceSpan,
                                          [Language.PureScript.Comments.Comment])))
                             (sc1 :: GHC.Prim.ByteArray#)
                             (sc2 :: GHC.Prim.Int#)
                             (sc3 :: GHC.Prim.Int#)
                             (sg :: (Data.Text.Internal.Text :: *)
                                    ~R# (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.TypeName :: *))
                             (sc4 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Externs.$wpoly_go13 @ ([(Data.Text.Internal.Text,
                                               GHC.Base.Maybe
                                                 Language.PureScript.Kinds.SourceKind)],
                                             Language.PureScript.Types.SourceType)
                                          (GHC.Base.Just @ Language.PureScript.Names.ModuleName sc4)
                                          (Data.Text.Internal.Text sc1 sc2 sc3) `cast` sg
                                          sc
  = Language.PureScript.Externs.$slookup_$s$wpoly_go1
      sc
      sc1
      sc2
      sc3
      @~ sg
      sc4
"SPEC/Language.PureScript.Externs $fFromJSONEither @ Ident @ (ProperName
                                                               'ConstructorName)" [orphan] forall (v1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                                       'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                           (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                                   Language.PureScript.Names.Ident)
  Data.Aeson.Types.FromJSON.$fFromJSONEither @ Language.PureScript.Names.Ident
                                             @ (Language.PureScript.Names.ProperName
                                                  'Language.PureScript.Names.ConstructorName)
                                             v
                                             v1
  = Language.PureScript.Externs.$fFromJSONExternsFixity_$s$fFromJSONEither
"SPEC/Language.PureScript.Externs $fFromJSONMaybe @ (Kind SourceAnn)" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                              (Language.PureScript.Kinds.Kind
                                                                                                 Language.PureScript.AST.SourcePos.SourceAnn))
  Data.Aeson.Types.FromJSON.$fFromJSONMaybe @ (Language.PureScript.Kinds.Kind
                                                 Language.PureScript.AST.SourcePos.SourceAnn)
                                            v
  = Language.PureScript.Externs.$s$fFromJSONMaybe
"SPEC/Language.PureScript.Externs $fShow(,) @ SourceSpan @ [Comment]" [orphan] forall (v1 :: GHC.Show.Show
                                                                                               [Language.PureScript.Comments.Comment])
                                                                                      (v :: GHC.Show.Show
                                                                                              Language.PureScript.AST.SourcePos.SourceSpan)
  GHC.Show.$fShow(,) @ Language.PureScript.AST.SourcePos.SourceSpan
                     @ [Language.PureScript.Comments.Comment]
                     v
                     v1
  = Language.PureScript.Externs.$s$fShow(,)
"SPEC/Language.PureScript.Externs $fShowConstraint @ (SourceSpan,
                                                     [Comment])" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                                           (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                            [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowConstraint @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                [Language.PureScript.Comments.Comment])
                                             v
  = Language.PureScript.Externs.$s$fShowConstraint
"SPEC/Language.PureScript.Externs $fShowConstraint_$cshowList @ (SourceSpan,
                                                                [Comment])" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                       (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                                        [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowConstraint_$cshowList @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                           [Language.PureScript.Comments.Comment])
                                                        $dShow1
  = Language.PureScript.Externs.$s$fShowConstraint_$cshowList
"SPEC/Language.PureScript.Externs $fShowConstraint_$cshowsPrec @ (SourceSpan,
                                                                 [Comment])" [orphan] [0] forall (w :: GHC.Show.Show
                                                                                                                                                                                       (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                                        [Language.PureScript.Comments.Comment]))
  Language.PureScript.Types.$fShowConstraint_$cshowsPrec @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                            [Language.PureScript.Comments.Comment])
                                                         w
  = Language.PureScript.Externs.$s$fShowConstraint_$cshowsPrec
"SPEC/Language.PureScript.Externs $fShowEither @ Ident @ (ProperName
                                                           'ConstructorName)" [orphan] forall (v1 :: GHC.Show.Show
                                                                                                                                                                            (Language.PureScript.Names.ProperName
                                                                                                                                                                               'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                   (v :: GHC.Show.Show
                                                                                                                                                                           Language.PureScript.Names.Ident)
  Data.Either.$fShowEither @ Language.PureScript.Names.Ident
                           @ (Language.PureScript.Names.ProperName
                                'Language.PureScript.Names.ConstructorName)
                           v
                           v1
  = Language.PureScript.Externs.$fShowExternsFixity_$s$fShowEither
"SPEC/Language.PureScript.Externs $fShowEither_$cshowList @ Ident @ (ProperName
                                                                      'ConstructorName)" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                                                       (Language.PureScript.Names.ProperName
                                                                                                                                                                                                          'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                                         ($dShow2 :: GHC.Show.Show
                                                                                                                                                                                                       Language.PureScript.Names.Ident)
  Data.Either.$fShowEither_$cshowList @ Language.PureScript.Names.Ident
                                      @ (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ConstructorName)
                                      $dShow2
                                      $dShow1
  = Language.PureScript.Externs.$s$fShowEither_$cshowList
"SPEC/Language.PureScript.Externs $fShowEither_$cshowsPrec @ Ident @ (ProperName
                                                                       'ConstructorName)" [orphan] [0] forall (w1 :: GHC.Show.Show
                                                                                                                                                                                                        (Language.PureScript.Names.ProperName
                                                                                                                                                                                                           'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                                               (w :: GHC.Show.Show
                                                                                                                                                                                                       Language.PureScript.Names.Ident)
  Data.Either.$fShowEither_$cshowsPrec @ Language.PureScript.Names.Ident
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName)
                                       w
                                       w1
  = Language.PureScript.Externs.$s$fShowEither_$cshowsPrec
"SPEC/Language.PureScript.Externs $fShowKind @ (SourceSpan,
                                               [Comment])" [orphan] forall (v :: GHC.Show.Show
                                                                                                                                               (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                          [Language.PureScript.Comments.Comment])
                                       v
  = Language.PureScript.Externs.$s$fShow(,)_$cshowsPrec_$s$fShowKind
"SPEC/Language.PureScript.Externs $fShowKind_$cshow @ (SourceSpan,
                                                      [Comment])" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                   (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                    [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind_$cshow @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                 [Language.PureScript.Comments.Comment])
                                              $dShow1
  = Language.PureScript.Externs.$s$fShowKind_$cshow
"SPEC/Language.PureScript.Externs $fShowKind_$cshowList @ (SourceSpan,
                                                          [Comment])" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                           (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                            [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind_$cshowList @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                     [Language.PureScript.Comments.Comment])
                                                  $dShow1
  = Language.PureScript.Externs.$s$fShowKind_$cshowList
"SPEC/Language.PureScript.Externs $fShowKind_$cshowsPrec @ (SourceSpan,
                                                           [Comment])" [orphan] [0] forall (w :: GHC.Show.Show
                                                                                                                                                                           (Language.PureScript.AST.SourcePos.SourceSpan,
                                                                                                                                                                            [Language.PureScript.Comments.Comment]))
  Language.PureScript.Kinds.$fShowKind_$cshowsPrec @ (Language.PureScript.AST.SourcePos.SourceSpan,
                                                      [Language.PureScript.Comments.Comment])
                                                   w
  = Language.PureScript.Externs.$s$fShowKind_$cshowsPrec
"SPEC/Language.PureScript.Externs $fShow[] @ Comment" [orphan] forall (v :: GHC.Show.Show
                                                                              Language.PureScript.Comments.Comment)
  GHC.Show.$fShow[] @ Language.PureScript.Comments.Comment v
  = Language.PureScript.Externs.$s$fShow(,)_$s$fShow[]
"SPEC/Language.PureScript.Externs $fShow[]_$cshow @ Comment" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                           Language.PureScript.Comments.Comment)
  GHC.Show.$fShow[]_$cshow @ Language.PureScript.Comments.Comment
                           $dShow1
  = Language.PureScript.Externs.$s$fShow[]_$cshow
"SPEC/Language.PureScript.Externs $fShow[]_$cshowList @ Comment" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                               Language.PureScript.Comments.Comment)
  GHC.Show.$fShow[]_$cshowList @ Language.PureScript.Comments.Comment
                               $dShow1
  = Language.PureScript.Externs.$s$fShow[]_$cshowList
"SPEC/Language.PureScript.Externs $fToJSONEither @ Ident @ (ProperName
                                                             'ConstructorName)" [orphan] forall (v1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                                                                                                                (Language.PureScript.Names.ProperName
                                                                                                                                                                                   'Language.PureScript.Names.ConstructorName))
                                                                                                                                                                       (v :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                                                                                                               Language.PureScript.Names.Ident)
  Data.Aeson.Types.ToJSON.$fToJSONEither @ Language.PureScript.Names.Ident
                                         @ (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.ConstructorName)
                                         v
                                         v1
  = Language.PureScript.Externs.$fToJSONExternsFixity_$s$fToJSONEither
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

