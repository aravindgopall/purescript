
==================== FINAL INTERFACE ====================
2019-01-24 14:15:44.316878 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Sugar.Operators.Expr 8043
  interface hash: 5463f2561207bc58ff05e8cb6b4a1cda
  ABI hash: 76af0adf3cf93b131ad61499ad160115
  export-list hash: f92d58bc326b4d06dfeff3ee4b12ad85
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4d9d5651992e23893b931ac76ed000be
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Sugar.Operators.Expr.matchExprOperators
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Pretty
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Pretty.Types Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle colour-2.3.4:Data.Colour
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Functor.Identity 9430dcaadd71c129eeb5ca7b963c9b54
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  mtl-2.2.2:Control.Monad.Except a6fe75d3c5548ea9e926864b8cbfe1ee
import  -/  parsec-3.1.13.0:Text.Parsec 963cbe7b4116cef91451434dc005a011
import  -/  parsec-3.1.13.0:Text.Parsec.Expr 6898ea405cda9f4ced72197883fcde5c
import  -/  parsec-3.1.13.0:Text.Parsec.Prim 4e0ad30f54008188b8c54f509e1a8ed9
import  -/  Language.PureScript.AST e89b59f8e201961eafd3ff905a683659
  exports: be73d3bb7d4ebe5df082453f6d572075
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  App ae4e12e545757da5fb62189548835120
  BinaryNoParens fcc835654893b3cf82da9962f92ae61e
  Expr e92f6ee78a22c0eadc3566d7d1f48d5b
  Op bbe2a0a58ceeace944ccf429f680f6bc
  PositionedValue b90293950702fd6b659d7cd86d309f72
import  -/  Language.PureScript.AST.Operators 615a873c5f62908f354b9d4840cbeb63
  Associativity 228a0ef1b3774b11d1a92fae92fb43a0
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  exports: 8e61484c4664eceb943d9fc4820c721b
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  OpName 1de386ff6f2b8aed453243e73483f454
  OpName 9af301165f72160425c5e0dde6525338
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  ValueOpName 11964a7dc7a3029edbea30fc5b4578c2
import  -/  Language.PureScript.Sugar.Operators.Common e88c8e400a261924d9af6cf01505736c
  exports: 4b08e646ed124a30b98475a4e3fdf27e
  Chain a93d1ca64859e0609339039cb8b3e14b
  matchOperators 0ed92771035f7cf97c3d107845e42b2f
  token 93a25b3ae4d9465724aa77da9a935817
40be70bd3416e6cae7af3f02dde8605f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Sugar.Operators.Expr.$trModule3
                   Language.PureScript.Sugar.Operators.Expr.$trModule1) -}
e89f144f1921fb5e605e698df8b86096
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Sugar.Operators.Expr.$trModule2) -}
6f5b21ee7d987802aa3bec65c4e17283
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Sugar.Operators.Expr"#) -}
0e4f8babbe5137160f70e05f65a337e6
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Sugar.Operators.Expr.$trModule4) -}
a9c42377c0a8f921c3e80d36826da70a
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
3d322a5ea801f6a688fb672e6e2b1033
  $wlvl ::
    Language.PureScript.Sugar.Operators.Common.Chain
      Language.PureScript.AST.Declarations.Expr
    -> Text.Parsec.Pos.SourcePos
    -> ()
    -> ((Language.PureScript.AST.Declarations.Expr
         -> Language.PureScript.AST.Declarations.Expr
         -> Language.PureScript.AST.Declarations.Expr)
        -> Text.Parsec.Prim.State
             (Language.PureScript.Sugar.Operators.Common.Chain
                Language.PureScript.AST.Declarations.Expr)
             ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S,1*U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: Language.PureScript.Sugar.Operators.Common.Chain
                            Language.PureScript.AST.Declarations.Expr)
                   (ww1 :: Text.Parsec.Pos.SourcePos)
                   (ww2 :: ())
                   (w :: (Language.PureScript.AST.Declarations.Expr
                          -> Language.PureScript.AST.Declarations.Expr
                          -> Language.PureScript.AST.Declarations.Expr)
                         -> Text.Parsec.Prim.State
                              (Language.PureScript.Sugar.Operators.Common.Chain
                                 Language.PureScript.AST.Declarations.Expr)
                              ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case ww of wild {
                   []
                   -> w1
                        (Text.Parsec.Prim.$wsetExpectErrors
                           ww1
                           Text.Parsec.Prim.token2
                           Language.PureScript.Sugar.Operators.Expr.matchExprOperators_msgs)
                   : t ts
                   -> case t of wild1 {
                        Data.Either.Left x
                        -> w1
                             (Text.Parsec.Prim.$wsetExpectErrors
                                ww1
                                Language.PureScript.Sugar.Operators.Expr.matchExprOperators5
                                Language.PureScript.Sugar.Operators.Expr.matchExprOperators_msgs)
                        Data.Either.Right y
                        -> case y of wild2 {
                             DEFAULT
                             -> let {
                                  $sw4 :: [GHC.Types.Char]
                                          -> GHC.Prim.Int#
                                          -> GHC.Prim.Int#
                                          -> [Text.Parsec.Error.Message]
                                          -> [Data.Either.Either
                                                Language.PureScript.AST.Declarations.Expr
                                                Language.PureScript.AST.Declarations.Expr]
                                          -> [GHC.Types.Char]
                                          -> GHC.Prim.Int#
                                          -> GHC.Prim.Int#
                                          -> ()
                                          -> Language.PureScript.AST.Declarations.Expr
                                          -> Data.Functor.Identity.Identity b
                                    <join 10> {- Arity: 10,
                                                 Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U> -}
                                  = \ (sc :: [GHC.Types.Char])[OneShot]
                                      (sc1 :: GHC.Prim.Int#)[OneShot]
                                      (sc2 :: GHC.Prim.Int#)[OneShot]
                                      (sc3 :: [Text.Parsec.Error.Message])[OneShot]
                                      (sc4 :: [Data.Either.Either
                                                 Language.PureScript.AST.Declarations.Expr
                                                 Language.PureScript.AST.Declarations.Expr])[OneShot]
                                      (sc5 :: [GHC.Types.Char])[OneShot]
                                      (sc6 :: GHC.Prim.Int#)[OneShot]
                                      (sc7 :: GHC.Prim.Int#)[OneShot]
                                      (sc8 :: ())[OneShot]
                                      (sc9 :: Language.PureScript.AST.Declarations.Expr)[OneShot] ->
                                    w (\ (t1 :: Language.PureScript.AST.Declarations.Expr)
                                         (t2 :: Language.PureScript.AST.Declarations.Expr) ->
                                       Language.PureScript.AST.Declarations.App
                                         (Language.PureScript.AST.Declarations.App sc9 t1)
                                         t2)
                                      (Text.Parsec.Prim.State
                                         @ (Language.PureScript.Sugar.Operators.Common.Chain
                                              Language.PureScript.AST.Declarations.Expr)
                                         @ ()
                                         sc4
                                         (Text.Parsec.Pos.SourcePos sc5 sc6 sc7)
                                         sc8)
                                      (case Text.Parsec.Error.$wmergeError
                                              sc
                                              sc1
                                              sc2
                                              sc3
                                              sc5
                                              sc6
                                              sc7
                                              (GHC.Types.[]
                                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                                       Text.Parsec.Error.ParseError ww15 ww16 })
                                } in
                                case ts of wild3 {
                                  []
                                  -> $sw4
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       1#
                                       1#
                                       (GHC.Types.[] @ Text.Parsec.Error.Message)
                                       (GHC.Types.[]
                                          @ (Data.Either.Either
                                               Language.PureScript.AST.Declarations.Expr
                                               Language.PureScript.AST.Declarations.Expr))
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       1#
                                       1#
                                       ww2
                                       wild2
                                  : t1 ts1
                                  -> $sw4
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       1#
                                       1#
                                       (GHC.Types.[] @ Text.Parsec.Error.Message)
                                       wild3
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       1#
                                       1#
                                       ww2
                                       wild2 }
                             Language.PureScript.AST.Declarations.Op ds ds1
                             -> w1
                                  (Text.Parsec.Prim.$wsetExpectErrors
                                     ww1
                                     Language.PureScript.Sugar.Operators.Expr.matchExprOperators5
                                     Language.PureScript.Sugar.Operators.Expr.matchExprOperators_msgs) } } }) -}
801cff3935bfd1122cbe671614f69f0c
  matchExprOperators ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    [[(Language.PureScript.Names.Qualified
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName),
       Language.PureScript.AST.Operators.Associativity)]]
    -> Language.PureScript.AST.Declarations.Expr
    -> m Language.PureScript.AST.Declarations.Expr
  {- Arity: 1,
     Strictness: <L,U(U(U(A,C(U),A,A,A,A),A,A,A,A),C(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      Language.PureScript.Errors.MultipleErrors m) ->
                 Language.PureScript.Sugar.Operators.Common.matchOperators
                   @ m
                   @ Language.PureScript.AST.Declarations.Expr
                   @ 'Language.PureScript.Names.ValueOpName
                   Language.PureScript.AST.Declarations.$fShowExpr
                   $dMonadError
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators11
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators10
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators9
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators8
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators1) -}
01714b0ab051322dc17ca031082a1b04
  matchExprOperators1 ::
    [[Text.Parsec.Expr.Operator
        (Language.PureScript.Sugar.Operators.Common.Chain
           Language.PureScript.AST.Declarations.Expr)
        ()
        Data.Functor.Identity.Identity
        Language.PureScript.AST.Declarations.Expr]]
    -> [[Text.Parsec.Expr.Operator
           (Language.PureScript.Sugar.Operators.Common.Chain
              Language.PureScript.AST.Declarations.Expr)
           ()
           Data.Functor.Identity.Identity
           Language.PureScript.AST.Declarations.Expr]]
  {- Arity: 1, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (table :: [[Text.Parsec.Expr.Operator
                                 (Language.PureScript.Sugar.Operators.Common.Chain
                                    Language.PureScript.AST.Declarations.Expr)
                                 ()
                                 Data.Functor.Identity.Identity
                                 Language.PureScript.AST.Declarations.Expr]]) ->
                 GHC.Types.:
                   @ [Text.Parsec.Expr.Operator
                        (Language.PureScript.Sugar.Operators.Common.Chain
                           Language.PureScript.AST.Declarations.Expr)
                        ()
                        Data.Functor.Identity.Identity
                        Language.PureScript.AST.Declarations.Expr]
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators2
                   table) -}
94c10d8337162acda491aa1a63eb7db3
  matchExprOperators10 ::
    Language.PureScript.AST.Declarations.Expr
    -> GHC.Base.Maybe
         (Language.PureScript.AST.Declarations.Expr,
          Language.PureScript.AST.Declarations.Expr,
          Language.PureScript.AST.Declarations.Expr)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.Declarations.Expr) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Base.Nothing
                        @ (Language.PureScript.AST.Declarations.Expr,
                           Language.PureScript.AST.Declarations.Expr,
                           Language.PureScript.AST.Declarations.Expr)
                   Language.PureScript.AST.Declarations.BinaryNoParens op l r
                   -> case op of wild1 {
                        DEFAULT
                        -> GHC.Base.Just
                             @ (Language.PureScript.AST.Declarations.Expr,
                                Language.PureScript.AST.Declarations.Expr,
                                Language.PureScript.AST.Declarations.Expr)
                             (wild1, l, r)
                        Language.PureScript.AST.Declarations.PositionedValue ds1 ds2 op'
                        -> GHC.Base.Just
                             @ (Language.PureScript.AST.Declarations.Expr,
                                Language.PureScript.AST.Declarations.Expr,
                                Language.PureScript.AST.Declarations.Expr)
                             (op', l, r) } }) -}
3fb51483af89dfc51518cd0df1f043fc
  matchExprOperators11 ::
    Language.PureScript.AST.Declarations.Expr -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.Declarations.Expr) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   Language.PureScript.AST.Declarations.BinaryNoParens ds1 ds2 ds3
                   -> GHC.Types.True }) -}
007281699a85093b7e1576a36d7ae488
  matchExprOperators2 ::
    [Text.Parsec.Expr.Operator
       (Language.PureScript.Sugar.Operators.Common.Chain
          Language.PureScript.AST.Declarations.Expr)
       ()
       Data.Functor.Identity.Identity
       Language.PureScript.AST.Declarations.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Parsec.Expr.Operator
                        (Language.PureScript.Sugar.Operators.Common.Chain
                           Language.PureScript.AST.Declarations.Expr)
                        ()
                        Data.Functor.Identity.Identity
                        Language.PureScript.AST.Declarations.Expr)
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators3
                   (GHC.Types.[]
                      @ (Text.Parsec.Expr.Operator
                           (Language.PureScript.Sugar.Operators.Common.Chain
                              Language.PureScript.AST.Declarations.Expr)
                           ()
                           Data.Functor.Identity.Identity
                           Language.PureScript.AST.Declarations.Expr))) -}
75077471abade3e0decc77ea641bd710
  matchExprOperators3 ::
    Text.Parsec.Expr.Operator
      (Language.PureScript.Sugar.Operators.Common.Chain
         Language.PureScript.AST.Declarations.Expr)
      ()
      Data.Functor.Identity.Identity
      Language.PureScript.AST.Declarations.Expr
  {- Strictness: m1,
     Unfolding: (Text.Parsec.Expr.Infix
                   @ (Language.PureScript.Sugar.Operators.Common.Chain
                        Language.PureScript.AST.Declarations.Expr)
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Language.PureScript.AST.Declarations.Expr
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <Language.PureScript.Sugar.Operators.Common.Chain
                                Language.PureScript.AST.Declarations.Expr>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Language.PureScript.AST.Declarations.Expr
                              -> Language.PureScript.AST.Declarations.Expr
                              -> Language.PureScript.AST.Declarations.Expr>_R))
                   Text.Parsec.Expr.AssocLeft) -}
1e0dc7687609f83dd15718c3ecf3b1d3
  matchExprOperators4 ::
    Text.Parsec.Prim.State
      (Language.PureScript.Sugar.Operators.Common.Chain
         Language.PureScript.AST.Declarations.Expr)
      ()
    -> ((Language.PureScript.AST.Declarations.Expr
         -> Language.PureScript.AST.Declarations.Expr
         -> Language.PureScript.AST.Declarations.Expr)
        -> Text.Parsec.Prim.State
             (Language.PureScript.Sugar.Operators.Common.Chain
                Language.PureScript.AST.Declarations.Expr)
             ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Language.PureScript.AST.Declarations.Expr
         -> Language.PureScript.AST.Declarations.Expr
         -> Language.PureScript.AST.Declarations.Expr)
        -> Text.Parsec.Prim.State
             (Language.PureScript.Sugar.Operators.Common.Chain
                Language.PureScript.AST.Declarations.Expr)
             ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SSS),1*U(1*U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,A><L,1*C1(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State
                           (Language.PureScript.Sugar.Operators.Common.Chain
                              Language.PureScript.AST.Declarations.Expr)
                           ())
                   (w1 :: (Language.PureScript.AST.Declarations.Expr
                           -> Language.PureScript.AST.Declarations.Expr
                           -> Language.PureScript.AST.Declarations.Expr)
                          -> Text.Parsec.Prim.State
                               (Language.PureScript.Sugar.Operators.Common.Chain
                                  Language.PureScript.AST.Declarations.Expr)
                               ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: (Language.PureScript.AST.Declarations.Expr
                           -> Language.PureScript.AST.Declarations.Expr
                           -> Language.PureScript.AST.Declarations.Expr)
                          -> Text.Parsec.Prim.State
                               (Language.PureScript.Sugar.Operators.Common.Chain
                                  Language.PureScript.AST.Declarations.Expr)
                               ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 Language.PureScript.Sugar.Operators.Expr.$wlvl
                   @ b
                   ww1
                   ww2
                   ww3
                   w1
                   w4 }) -}
343688b11fcc75440cfd8cc1a58b5ce9
  matchExprOperators5 :: [Text.Parsec.Error.Message]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators6
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
d45b37761261d554df45071352bd654f
  matchExprOperators6 :: Text.Parsec.Error.Message
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Text.Parsec.Error.SysUnExpect
                   (GHC.Types.[] @ GHC.Types.Char)) -}
025a4149217d542bf8b7f89f9ae33a03
  matchExprOperators7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("infix function"#) -}
e736e68d4497def830f8a02e08305304
  matchExprOperators8 ::
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Names.Qualified
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
    -> Language.PureScript.AST.Declarations.Expr
    -> Language.PureScript.AST.Declarations.Expr
    -> Language.PureScript.AST.Declarations.Expr
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U>m9,
     Unfolding: InlineRule (4, True, False)
                (\ (ss :: Language.PureScript.AST.SourcePos.SourceSpan)
                   (op :: Language.PureScript.Names.Qualified
                            (Language.PureScript.Names.OpName
                               'Language.PureScript.Names.ValueOpName))
                   (t1 :: Language.PureScript.AST.Declarations.Expr)
                   (eta :: Language.PureScript.AST.Declarations.Expr) ->
                 Language.PureScript.AST.Declarations.App
                   (Language.PureScript.AST.Declarations.App
                      (Language.PureScript.AST.Declarations.Op ss op)
                      t1)
                   eta) -}
01c79401708573776bacc1dc3c173896
  matchExprOperators9 ::
    Language.PureScript.AST.Declarations.Expr
    -> GHC.Base.Maybe
         (Language.PureScript.AST.SourcePos.SourceSpan,
          Language.PureScript.Names.Qualified
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.AST.Declarations.Expr) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Base.Nothing
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.OpName
                                'Language.PureScript.Names.ValueOpName))
                   Language.PureScript.AST.Declarations.Op ss q
                   -> case q of wild1 { Language.PureScript.Names.Qualified ds1 ds2 ->
                      GHC.Base.Just
                        @ (Language.PureScript.AST.SourcePos.SourceSpan,
                           Language.PureScript.Names.Qualified
                             (Language.PureScript.Names.OpName
                                'Language.PureScript.Names.ValueOpName))
                        (ss, wild1) } }) -}
3f2107631c4cf453f240e34ad7c8253a
  matchExprOperators_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators7) -}
8d288511e84afca53297443a19a0d498
  matchExprOperators_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.PureScript.Sugar.Operators.Expr.matchExprOperators_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

