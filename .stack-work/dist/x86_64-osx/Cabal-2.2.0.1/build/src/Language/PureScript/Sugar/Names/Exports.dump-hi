
==================== FINAL INTERFACE ====================
2018-11-30 20:47:40.021679 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Sugar.Names.Exports 8043
  interface hash: fc0b8873b1756ab5b3f7184abf2041fa
  ABI hash: 281dcc3400b61063ba2b857efb426ba3
  export-list hash: 37ce399515e3d009ac2dc766154cf5d0
  orphan hash: 2af2aeea23eec2ee1302e47bf4a784dd
  flag hash: 2aa58a824a1f725c94ffb0d8a8803a3b
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Sugar.Names.Exports.findExportable
  Language.PureScript.Sugar.Names.Exports.resolveExports
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Pretty
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Pretty.Types Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 boxes-0.1.5 bytestring-0.10.8.2 colour-2.3.4
                      containers-0.5.11.0 deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2
                      ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 mtl-2.2.2 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  mtl-2.2.2:Control.Monad.Writer.Class 69f540e019eada69892c26d267276458
import  -/  Language.PureScript.AST 7ed0e74bfed5b6489b8a5eabab5c0241
  exports: 0d53d92339536cd6d8d7dcfcad8e7c7e
import  -/  Language.PureScript.AST.Declarations 568e046fbf27b243bfc96f09017d4782
  DataDeclaration db5935397ffc86d7f21188808af5170e
  Declaration b31d94d0c7b90700d40f9ba6ec420e41
  DeclarationRef 9de74e8b46bfd07e044a72617cc5da5c
  DuplicateExportRef 4958fdce9a7a00cfa0d12002366d5ada
  ErrorInModule 30c97edb8a43314700377edb3b90ccc8
  ExternDataDeclaration 55a53b09584ed2ea4b573ea27aa0f4e4
  ExternDeclaration 4969f865c6e08f5324b31f68ef85d043
  ExternKindDeclaration fdf7ad04c416fe681db015f254431a3c
  Module b9e5d519f3251f7053b581e4ecd9e6bf
  Module 7cf4b96f7d4b51b446726a099ab87bb6
  ModuleRef 9bebdcb4233f1d570107d6e7f75034d7
  TypeClassDeclaration d4771a111b012cbefca253f911afd776
  TypeDeclaration a12f822b0dbc597658a7d1e27db5ac22
  TypeDeclarationData 99fd3317c24e020d90e98686ac5a9cec
  TypeFixityDeclaration 442ba50b491e46b095a0fd0218f236ad
  TypeRef f23e4bfa1c94ce55e9357e5fb97176c4
  TypeSynonymDeclaration b022b78d38da14b3619ada244eaf9299
  UnknownExport 5ba63d23280331d135bc79a6cc7f51db
  UnknownExportDataConstructor bf285148b2ea1fa2c8279a986bc8c64e
  ValueDeclaration 12e8a69dfeaef3b3a7e4d8343e12683e
  ValueFixityDeclaration eb9c8f0bb082690f8aa4e758b5751212
  declRefSourceSpan 48358271e032660f4b36f2c8b2ccb034
  declSourceSpan 901cd3587e8d9e55060bf90daca551d7
  getKindRef 169d4cac4d05cba42539e2862c95b3db
  getTypeClassRef 4a5cb731417baeb982ffa07d84f048ab
  getTypeOpRef c807c0d47029b8283509ed31e6fc3ff1
  getTypeRef 42ae9903e046664143824d50598f73c8
  getValueOpRef be7af64c7f2421e5081867b94579e0a9
  getValueRef 94912d263388bc977447f55c96bc921e
  valdeclIdent 0c2d915175f1072d8eeca07af2b73e20
  valdeclSourceAnn 0c2d915175f1072d8eeca07af2b73e20
import  -/  Language.PureScript.AST.SourcePos b3f67f807f2dce79528bbb15bd9c7104
  SourceSpan 73c071552214b3f18e94970349d3affc
import  -/  Language.PureScript.Crash 1bc11bf824676e9581610d0d05d26761
  exports: 8a971f39d6ef3f27956f413640cb0a24
  internalError f3db7e23c75878c9d13888d6d114012d
import  -/  Language.PureScript.Errors 15d6eb6b2d4d480750061a0585d4e64c
  exports: 142ea650dec62642d1cff09ef1eee74e
  MultipleErrors ad1de73a1d5a6b0ccd9657dedebc94f3
  addHint c2d92e868230119a30631ae026505b5b
  errorMessage' 5055fef8b372f878a840ac9e7783f39a
  rethrow f843b34a93fe990a8e71af5f4eb4be9f
  rethrowWithPosition 75b2386b9d003827c72a63532c561f67
  warnAndRethrow 38a15ae4c90b2d8cb225173895fa7070
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  exports: f7f3503d20957194bda83c16bb5f1288
  ClassName e69348bcf8c43a2174540a1d5983bfaa
  ConstructorName 9fb88e980342b224c2a4e4b58fa9fe33
  DctorName 953e2be7c584ad49e8fe105d218f14a0
  Ident ab98a56ffa88760dad1380079e8ee35a
  IdentName 5b06dbfa684a1a4686ae5dc3b60a0a36
  KiName 3988b2e6728e13d6e386f74a6394b09e
  KindName 681d490d18bc7da009f3503010a994f8
  ModName 3aadbf737116de1d7bcb446bea8a25af
  ModuleName 5a70062bbdf29e6dc659ad8bf5326b50
  Name 184494d9e734645f374e2a0fce32bfac
  OpName 1522672b880b192c6e05e6cf8a45712d
  ProperName 29f101e190cc99df85623423972e606f
  Qualified d600a7f01c8203cf5504999de99c923c
  Qualified 5a70062bbdf29e6dc659ad8bf5326b50
  TyClassName 21009befdac7827e5cfc4e5a7606bd0e
  TyName 2de556166e59a0005c7143bf3b600f7e
  TyOpName 66cc4d214f55e6f0f298e52eab8013ac
  TypeName da42c92f73f4f363c63ecaf77b6335b9
  TypeOpName 34023316af2b751c6196ece0b5420c6b
  ValOpName f03a1a616a24e6d18322d9bb9fa39c73
  ValueOpName 1d06f91abd827e7b0c072b254546708a
  disqualifyFor 3f29138a9e3485e827b393d046b0e5ba
  isQualifiedWith 1a899c7992db0d6d9f94496786ac7c60
  isUnqualified e37e569339287956fd68345c529e4b8c
import  -/  Language.PureScript.Sugar.Names.Common 30b7033188349c25c62888117c9c6d4e
  exports: 8d3cdc1b6bc0542e42829fad1489ed8b
  warnDuplicateRefs 634593ab8eecad5a48501d94e8be8bc5
import  -/  Language.PureScript.Sugar.Names.Env 86ed82ed542c248a8928297b6b346572
  exports: eac96abb84bb227ec29cea13c70276ff
  Env 5f9e6484b1f2e8e2d5b6bfcee5f814e9
  Exports 01f3e0364e56d91d1394c81cd74dc74f
  Exports 2212f1aeac86faa420eb4b44c2cc2982
  ImportRecord bf5a97568e086735d3bbc97dc5ee1e68
  Imports b53ca872c8c47c3d8839f496fc15c222
  Internal 7db754f6f2a394da503c56780301f31c
  ReExport 4752f94d9c072f147fe0f7353f170533
  checkImportConflicts 64f71a199310dc3ca4a6ef756eed74e7
  envModuleExports 1f6e036b17f3356d6a09c48836206f4b
  exportKind 45c25e9c819c4dd92b7c4c0f11260d2f
  exportType 01553c2bd113e137b8e936f79f1e62d7
  exportTypeClass ea37bbbf1aa8b05ebc24ecc09d9eef41
  exportTypeOp b2bb51bd4dfb3c5436ab1b989db1b6e4
  exportValue 730d9fecc71b5f2a30d510f80404616e
  exportValueOp 13841c3907ca67d35ce2839396283aab
  exportedKinds 2212f1aeac86faa420eb4b44c2cc2982
  exportedTypeClasses 2212f1aeac86faa420eb4b44c2cc2982
  exportedTypeOps 2212f1aeac86faa420eb4b44c2cc2982
  exportedTypes 2212f1aeac86faa420eb4b44c2cc2982
  exportedValueOps 2212f1aeac86faa420eb4b44c2cc2982
  exportedValues 2212f1aeac86faa420eb4b44c2cc2982
  importName bf5a97568e086735d3bbc97dc5ee1e68
  importedDataConstructors b53ca872c8c47c3d8839f496fc15c222
  importedKinds b53ca872c8c47c3d8839f496fc15c222
  importedModules b53ca872c8c47c3d8839f496fc15c222
  importedTypeClasses b53ca872c8c47c3d8839f496fc15c222
  importedTypeOps b53ca872c8c47c3d8839f496fc15c222
  importedTypes b53ca872c8c47c3d8839f496fc15c222
  importedValueOps b53ca872c8c47c3d8839f496fc15c222
  importedValues b53ca872c8c47c3d8839f496fc15c222
  nullExports ac55505646ed961e671e81c65e6b9720
dac400e318811c1ed0e87e68a13db797
  $s$fFoldableSet_$celem_go3 ::
    Language.PureScript.Names.ModuleName
    -> Data.Set.Internal.Set Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
64f41fcacbca4033ce2d26e68d778bb1
  $s$wsplit_$s$wpoly_go1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
e56a7bf235ef2d54bffd7f07d1bb6bd4
  $s$wsplit_$s$wpoly_go13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
2ac0de6222627184bd4c57ed43f84016
  $s$wsplit_$s$wpoly_go2 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.Ident
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Language.PureScript.Names.Ident
    -> (# Data.Map.Internal.Map Language.PureScript.Names.Ident a,
          Data.Map.Internal.Map Language.PureScript.Names.Ident a #)
  {- Arity: 6, Strictness: <L,A><S,U><L,U><L,U><L,U><S,U> -}
e49f3b8f1ad2a4e9e48e1bf27571629f
  $s$wsplit_$s$wpoly_go3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
48acd6fb0f05cb1ac8d1a7badcbf626c
  $s$wsplit_$s$wpoly_go4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.OpName
               'Language.PureScript.Names.TypeOpName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.TypeOpName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.TypeOpName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
7cce82112742993a4aa0b1a5cbc16b3d
  $s$wsplit_$s$wpoly_go5 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
6a358553ff362d9cdc7ce4a73422c63c
  $sinsertR_$sgo2 ::
    Language.PureScript.Names.Ident
    -> Language.PureScript.Names.Ident
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
b0146541c22189eacdf51cd212089d1a
  $sinsert_$s$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.Ident
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> a
    -> Language.PureScript.Names.Ident
    -> Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
  {- Arity: 8,
     Strictness: <L,U><S,U><L,U><L,U><L,U><L,U><S,1*U><L,U> -}
622dcdb1643208b373612071ea3d1648
  $sinsert_$s$w$sgo1 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
b8d2f21419682fce70ffce0933a7e86d
  $sinsert_$s$w$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
bfe309d78e9459964cf5352bdf5c204d
  $sinsert_$s$w$sgo2 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
6b61f7ea1432c68df0114b923e3d8821
  $sinsert_$s$w$sgo3 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
576938db496c78dcae4f3a816b0c50ec
  $sinsert_$s$w$sgo4 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
9121e751e390c555260d366da2965470
  $sinsert_$sgo3 ::
    Language.PureScript.Names.Ident
    -> Language.PureScript.Names.Ident
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
ce2d8fce3d6712842c0f11d0bceb5dac
  $slookup1 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
f2eee23aa4257199f103451d5e816611
  $slookup9 ::
    Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
3431636db6a1510dfb90be4be2ce2e54
  $slookup_$spoly_go1 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Integer.Type.Integer
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,U> -}
4458111b3f8ee19e2691c2624b75fc45
  $slookup_$spoly_go13 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> GHC.Base.Maybe a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
de038dcbb7e6d8ddd2c7012204aeaa50
  $slookup_$spoly_go2 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Text.Internal.Text -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U,U)> -}
40c7e5f592220d5c99b4b8f9fc6c3098
  $sunion ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
0026433bad94fe1719aa6515e82162e8
  $sunion1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
b93b5cb1aa90aeeccca20aef318cb7e5
  $sunion2 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
27bc1c71b937e2218acbf024a3abdbc5
  $sunion3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
704c1c0b053fb893966db6293adc52ec
  $sunion4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
94a602572acd0257d98c3d896b10700e
  $sunion5 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
60d54a637c8800ac2e5a0440ad52731e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Sugar.Names.Exports.$trModule3
                   Language.PureScript.Sugar.Names.Exports.$trModule1) -}
6d58a431119beff53c2ff5ea672d3ad6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Sugar.Names.Exports.$trModule2) -}
03e4884ad9ca32a5b4065199000ad3d8
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Sugar.Names.Exports"#) -}
7b8543ed3e140075435cb5edd0374c00
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Sugar.Names.Exports.$trModule4) -}
f12b98e4b175f32c0c51c7fd9ba26387
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
ece300574d7e577696a0291192af1eaa
  $w$sgo1 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.TypeOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
a1cd179bd6d4a3aa2f5b172a048fe84d
  $w$sgo13 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
360caff05f2a17c4cc857392402fa564
  $w$sgo2 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ClassName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
f1580e32fbd8750b35c100f07ba401fb
  $w$sgo3 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.KindName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
d935c5cfb9b29f862a71ef082ee92e6c
  $w$sgo4 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.ValueOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
572c39d7f4ff7a1de6a8e3e24187ead3
  $w$sgo5 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.KindName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
687fc99c64534546213c3795c98b6439
  $w$sgo6 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.ValueOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
a1ac75ed31979619fd7cdc0fc83c40c8
  $w$sgo7 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ClassName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
52233ccf8547c6deafc281dc9c218b6c
  $w$sgo8 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.TypeOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
27c949d7e387c055a7d727cb82c739c5
  $w$sgo9 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
94ebddc6062c13bde700f89a6852e3e6
  $wfindExportable ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.Declarations.Declaration]
    -> m Language.PureScript.Sugar.Names.Env.Exports
  {- Arity: 3,
     Strictness: <S(LLC(C(S))),U(U(U(A,C(U),A,A,A,A),C(C1(U)),C(C1(U)),U,A),C(U),C(C1(U)))><L,U><L,1*U>,
     Inline: [0] -}
4f2eb4f390250d536a487faa58e62de4
  $wpoly_go1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
a7488263400d9c4bb144f7ba768d2054
  $wpoly_go13 ::
    Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> (# Data.Map.Internal.Map Language.PureScript.Names.Ident a,
          Data.Map.Internal.Map Language.PureScript.Names.Ident a #)
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
d655ea57b06d48f73d253757a307518a
  $wpoly_go2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
f78a85bd9c01f6d64211922a7d10b4b5
  $wpoly_go3 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
cd302030b2b7f7ee5fdfcdb12141b45b
  $wpoly_go4 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
1d2646ed5254114ea1a04ae3a13c1cfc
  $wpoly_go5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
efb0fea1ff53af2f670bde0c1287b473
  findExportable ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    Language.PureScript.AST.Declarations.Module
    -> m Language.PureScript.Sugar.Names.Env.Exports
  {- Arity: 2,
     Strictness: <S(LLC(C(S))),U(U(U(A,C(U),A,A,A,A),C(C1(U)),C(C1(U)),U,A),C(U),C(C1(U)))><S,1*U(A,A,U,1*U,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Error.Class.MonadError
                           Language.PureScript.Errors.MultipleErrors m)
                   (w1 :: Language.PureScript.AST.Declarations.Module) ->
                 case w1 of ww { Language.PureScript.AST.Declarations.Module ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Sugar.Names.Exports.$wfindExportable
                   @ m
                   w
                   ww3
                   ww4 }) -}
17699bd8398c2e872873689d372301a2
  resolveExports ::
    (Control.Monad.Error.Class.MonadError
       Language.PureScript.Errors.MultipleErrors m,
     Control.Monad.Writer.Class.MonadWriter
       Language.PureScript.Errors.MultipleErrors m) =>
    Language.PureScript.Sugar.Names.Env.Env
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Sugar.Names.Env.Imports
    -> Language.PureScript.Sugar.Names.Env.Exports
    -> [Language.PureScript.AST.Declarations.DeclarationRef]
    -> m Language.PureScript.Sugar.Names.Env.Exports
  {- Arity: 2,
     Strictness: <L,U(U(U(1*U(1*C1(C(U)),C(C1(U))),C(U),A,C(C1(C1(U))),C(C1(U)),A),C(C1(U)),C(C1(U)),U,A),C(U),C(C1(U)))><L,U(A,U(U(A,C(U),A,A,C(C1(U)),A),C(C1(U)),A,C(U),A),A,C(U),A,C(U))> -}
"SC:$sgo130" forall @ a
                    (sc :: GHC.Prim.Int#)
                    (sc1 :: Language.PureScript.Names.Ident)
                    (sc2 :: a)
                    (sc3 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                    (sc4 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                    (sc5 :: a)
                    (sc6 :: Language.PureScript.Names.Ident)
                    (sc7 :: Language.PureScript.Names.Ident)
  Language.PureScript.Sugar.Names.Exports.$sinsert_$sgo3 @ a
                                                         sc7
                                                         sc6
                                                         sc5
                                                         (Data.Map.Internal.Bin
                                                            @ Language.PureScript.Names.Ident
                                                            @ a
                                                            sc
                                                            sc1
                                                            sc2
                                                            sc3
                                                            sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo13 @ a
                                                   sc9
                                                   sc8
                                                   sc7
                                                   sc6
                                                   sc5
                                                   (Data.Map.Internal.Bin
                                                      @ (Language.PureScript.Names.ProperName
                                                           'Language.PureScript.Names.TypeName)
                                                      @ a
                                                      sc
                                                      sc1
                                                      sc2
                                                      sc3
                                                      sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.TypeOpName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.TypeOpName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.TypeOpName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.TypeOpName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo1 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.OpName
                                                          'Language.PureScript.Names.TypeOpName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo1
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ClassName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ClassName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo2 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.ClassName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo2
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.KindName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.KindName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.KindName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.KindName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo3 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo3
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.ValueOpName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.ValueOpName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.ValueOpName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.ValueOpName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo4 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.OpName
                                                          'Language.PureScript.Names.ValueOpName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo4
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$wpoly_go130" [0] forall @ a
                             (sc :: GHC.Prim.Int#)
                             (sc1 :: Language.PureScript.Names.Ident)
                             (sc2 :: a)
                             (sc3 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                             (sc4 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                             (sc5 :: Language.PureScript.Names.Ident)
  Language.PureScript.Sugar.Names.Exports.$wpoly_go13 @ a
                                                      sc5
                                                      (Data.Map.Internal.Bin
                                                         @ Language.PureScript.Names.Ident
                                                         @ a
                                                         sc
                                                         sc1
                                                         sc2
                                                         sc3
                                                         sc4)
  = Language.PureScript.Sugar.Names.Exports.$s$wsplit_$s$wpoly_go2
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
"SC:poly_go130" forall @ a
                       (sc :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                       (sc1 :: Data.Text.Internal.Text)
  Language.PureScript.Sugar.Names.Exports.$slookup9 @ a
                                                    (Language.PureScript.Names.Ident sc1)
                                                    sc
  = Language.PureScript.Sugar.Names.Exports.$slookup_$spoly_go2
      @ a
      sc
      sc1
"SC:poly_go131" forall @ a
                       (sc :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                       (sc1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                       (sc2 :: GHC.Integer.Type.Integer)
  Language.PureScript.Sugar.Names.Exports.$slookup9 @ a
                                                    (Language.PureScript.Names.GenIdent sc1 sc2)
                                                    sc
  = Language.PureScript.Sugar.Names.Exports.$slookup_$spoly_go1
      @ a
      sc
      sc1
      sc2
"SC:poly_go132" forall @ a
                       (sc :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
  Language.PureScript.Sugar.Names.Exports.$slookup9 @ a
                                                    Language.PureScript.Names.UnusedIdent
                                                    sc
  = Language.PureScript.Sugar.Names.Exports.$slookup_$spoly_go13
      @ a
      sc
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (OpName
                                                        'TypeOpName) _" [orphan] forall @ a
                                                                                                                                                      ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                  (Language.PureScript.Names.OpName
                                                                                                                                                                     'Language.PureScript.Names.TypeOpName))
  Data.Map.Internal.union @ (Language.PureScript.Names.OpName
                               'Language.PureScript.Names.TypeOpName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion4 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (OpName
                                                        'ValueOpName) _" [orphan] forall @ a
                                                                                                                                                       ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                   (Language.PureScript.Names.OpName
                                                                                                                                                                      'Language.PureScript.Names.ValueOpName))
  Data.Map.Internal.union @ (Language.PureScript.Names.OpName
                               'Language.PureScript.Names.ValueOpName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion1 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (ProperName
                                                        'ClassName) _" [orphan] forall @ a
                                                                                                                                                         ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                     (Language.PureScript.Names.ProperName
                                                                                                                                                                        'Language.PureScript.Names.ClassName))
  Data.Map.Internal.union @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion3 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (ProperName
                                                        'KindName) _" [orphan] forall @ a
                                                                                                                                                        ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                       'Language.PureScript.Names.KindName))
  Data.Map.Internal.union @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.KindName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (ProperName
                                                        'TypeName) _" [orphan] forall @ a
                                                                                                                                                        ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                       'Language.PureScript.Names.TypeName))
  Data.Map.Internal.union @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.TypeName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion5 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ Ident _" [orphan] forall @ a
                                                                               ($dOrd :: GHC.Classes.Ord
                                                                                           Language.PureScript.Names.Ident)
  Data.Map.Internal.union @ Language.PureScript.Names.Ident @ a $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion2 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

