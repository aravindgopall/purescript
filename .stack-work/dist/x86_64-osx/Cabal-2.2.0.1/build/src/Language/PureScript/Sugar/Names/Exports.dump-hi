
==================== FINAL INTERFACE ====================
2019-01-24 14:15:49.916315 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Sugar.Names.Exports 8043
  interface hash: d54775b4969ea26308858a334f31311d
  ABI hash: 3b5132341ad10275003b4520ddf27177
  export-list hash: 963dc8947b023a3f9cb46aca0031de3b
  orphan hash: 412fbb06fba94d6550194633395a2172
  flag hash: 2aa58a824a1f725c94ffb0d8a8803a3b
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Sugar.Names.Exports.findExportable
  Language.PureScript.Sugar.Names.Exports.resolveExports
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Pretty
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Pretty.Types Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 safe-0.3.17
                      scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0
                      syb-0.7 tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  mtl-2.2.2:Control.Monad.Error.Class df146c18e27154b8df4c8637c59fd61b
import  -/  mtl-2.2.2:Control.Monad.Writer.Class 69f540e019eada69892c26d267276458
import  -/  Language.PureScript.AST e89b59f8e201961eafd3ff905a683659
  exports: be73d3bb7d4ebe5df082453f6d572075
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  DataDeclaration 2fcba6ad709595ed3c4d0926de54bc2c
  Declaration e92f6ee78a22c0eadc3566d7d1f48d5b
  DeclarationRef 1ef988d2f8db98f35f578bde9282f468
  DuplicateExportRef 2bc416d714a3132513c65fb115834354
  ErrorInModule fa705731a479914ad1b2d8aff2d06ff6
  ExternDataDeclaration 45e3d2e61e8f85403449183876d3af2f
  ExternDeclaration 180e172298441327dfef1022795a10e0
  ExternKindDeclaration 88852d174ecb6f9a3f22350e4bed5723
  Module 305128e30e200d34d712365aa2d509df
  Module 3342e00ee072addfd009ee61e87fb865
  ModuleRef 2ff9e8ed233e41ffb08c38dcae5865c0
  TypeClassDeclaration 19936abcaf3693a6825ccbc13b2590dc
  TypeDeclaration 28394461dbd073cca9cdbd263dbb4335
  TypeDeclarationData 3e894c7cbf790244173310e6e620d669
  TypeFixityDeclaration 5a4e2ba83bf57ee4021fdafe70b4eb9a
  TypeRef 7b2aa9fe81ad40f64c659855da835def
  TypeSynonymDeclaration 1cfe9af195a40456074b96ff0ca4519c
  UnknownExport c747030be48721fffbd54032523877f2
  UnknownExportDataConstructor 73b7f8a07075315e950e2247042eafab
  ValueDeclaration 3d506e6b33aef3e239802bd27220a2e5
  ValueFixityDeclaration 6da09cca72fc0dd8bafa2b8ed78d033e
  declRefSourceSpan 9d093733881fe15ce20b105d529f0011
  declSourceSpan 56c2d6f201f67f106a4f2e1dc3f0bb49
  getKindRef e3282980e675c7ad2175d21e599edc5c
  getTypeClassRef ea53048ed8eefd170e41dcd88fa96d29
  getTypeOpRef f544549c7044502c660701544ec93b94
  getTypeRef 49d73504ee072e8c2fbd37f35c16fbff
  getValueOpRef 47a2050f95b57da4a8d94869a8fe7a30
  getValueRef 1fbe007758d53e3ecefa02005d694679
  valdeclIdent dc3fe29a39c3efd97807e85c8c5dc302
  valdeclSourceAnn dc3fe29a39c3efd97807e85c8c5dc302
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  exports: 8e61484c4664eceb943d9fc4820c721b
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  addHint 4d7c0f041e7397261babf0b1c1669b2a
  errorMessage' d5b3fcc13faf321f693b39ae31b8bd13
  rethrow 3f15f6976fa85d5a6c226df5a731c52a
  rethrowWithPosition fdf5a24f58598d5459d72d8baaae797c
  warnAndRethrow 09f641606a5fc3036a7fc4bb9c410020
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  ConstructorName 84054a8bbbe827ba2ce7da83056a95ee
  DctorName 058beae22056ca37fdd3776575b08a7a
  Ident bad3562aa6138b6192713ac281080869
  IdentName f85afb00b35a2b992fb8ad7cbb2f9711
  KiName 3648c75d7b729914a2a52509b0a9365e
  KindName 7782d66ce60bd67282cf566485701e07
  ModName bdc8f8682bdb984467bbbfa35cbd8589
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  Name d04047edf96c18708b7b5f72cb565394
  OpName 9af301165f72160425c5e0dde6525338
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  TyClassName e53bd54ac0d1b704756a477849dbd836
  TyName 6bd149eabdb95c312f9b6bf9d9f06c67
  TyOpName 440dd328b811fbf1c8a081bffcb8593d
  TypeName 40ce511c66a72431b4e87351210f7b03
  TypeOpName db73fc39fef75f034a0b4a8074947dd9
  ValOpName c1457b90b10104e4d37147e7648f89b9
  ValueOpName 11964a7dc7a3029edbea30fc5b4578c2
  disqualifyFor a577cc297e2d6839098678ededd6031a
  isQualifiedWith 8f37d555d49f68d6076bf50c183e125a
  isUnqualified fe642671cf4a0414b402b54fe03875ad
import  -/  Language.PureScript.Sugar.Names.Common 538351743e85be7db44e544875b4b685
  exports: b9dd0b70b2737f33a5e246dc38bf81f2
  warnDuplicateRefs ab70a84efdf40bb5fc8e5a425359f4c7
import  -/  Language.PureScript.Sugar.Names.Env 97518f893bef0c5e5749cfa9e4ca9265
  exports: 1be6fa0858c130408a65d60cd8c577b4
  Env 2b6b2822bde15bda4afeb3aa3ef04e79
  Exports 7c4ca55fcb65d59830554b5419ec17fa
  Exports d2107d9c7383e14684c4687121fab2f3
  ImportRecord 06c97ba5c09e065ef1b4ac69ccbfcc9e
  Imports 330f296cc3ed68256ee5fc6aa457fa42
  Internal 95970204504af9a9b00df23aa81f4a8a
  ReExport 7a1c524feec6021602fdf79bfc2cfd1a
  checkImportConflicts b8b504c1ae9bea5df4104ea2ebc0fe56
  envModuleExports 0d5d48eab36db83ce390a5704336cf59
  exportKind 8a86116703c3ee1a1b90d87b56002a3c
  exportType 7d053351478d4679e444221e6298f408
  exportTypeClass 2a9715e3960df1bc9e6975fe60b29f66
  exportTypeOp 52ec70cdf0f0918897e7d96ea2278eeb
  exportValue ebc17237d7e7718d6b49a597f01d2402
  exportValueOp 57efbdcf438547d7665b6fde2a57f7f6
  exportedKinds d2107d9c7383e14684c4687121fab2f3
  exportedTypeClasses d2107d9c7383e14684c4687121fab2f3
  exportedTypeOps d2107d9c7383e14684c4687121fab2f3
  exportedTypes d2107d9c7383e14684c4687121fab2f3
  exportedValueOps d2107d9c7383e14684c4687121fab2f3
  exportedValues d2107d9c7383e14684c4687121fab2f3
  importName 06c97ba5c09e065ef1b4ac69ccbfcc9e
  importedDataConstructors 330f296cc3ed68256ee5fc6aa457fa42
  importedKinds 330f296cc3ed68256ee5fc6aa457fa42
  importedModules 330f296cc3ed68256ee5fc6aa457fa42
  importedTypeClasses 330f296cc3ed68256ee5fc6aa457fa42
  importedTypeOps 330f296cc3ed68256ee5fc6aa457fa42
  importedTypes 330f296cc3ed68256ee5fc6aa457fa42
  importedValueOps 330f296cc3ed68256ee5fc6aa457fa42
  importedValues 330f296cc3ed68256ee5fc6aa457fa42
  nullExports 54e7bb7b24a36dc04ed7c8d05f8e56af
f37467eeec5a52e26c3bfdcd2d38dfd0
  $s$fFoldableSet_$celem_go3 ::
    Language.PureScript.Names.ModuleName
    -> Data.Set.Internal.Set Language.PureScript.Names.ModuleName
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
727e94f335e15c03aa1a781e48effb21
  $s$wsplit_$s$wpoly_go1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.ValueOpName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
93108f511de41c1e169afa89d8f051f7
  $s$wsplit_$s$wpoly_go13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.KindName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
779bba7f3f08efcc0c42ed07a2a214e4
  $s$wsplit_$s$wpoly_go2 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.Ident
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Language.PureScript.Names.Ident
    -> (# Data.Map.Internal.Map Language.PureScript.Names.Ident a,
          Data.Map.Internal.Map Language.PureScript.Names.Ident a #)
  {- Arity: 6, Strictness: <L,A><S,U><L,U><L,U><L,U><S,U> -}
9ddcb71a972dc29d2f431c35b3678d11
  $s$wsplit_$s$wpoly_go3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ClassName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
20806de820a174b838b10ebbd5cbb59d
  $s$wsplit_$s$wpoly_go4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.OpName
               'Language.PureScript.Names.TypeOpName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.TypeOpName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.OpName
               'Language.PureScript.Names.TypeOpName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
f897eba58da079c880b38b040ef388b5
  $s$wsplit_$s$wpoly_go5 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName :: *)) =>
       (# Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName)
            a,
          Data.Map.Internal.Map
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName)
            a #)
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,A> -}
79a3bd07b8238091ed2e8fe9d16b446f
  $sinsertR_$sgo2 ::
    Language.PureScript.Names.Ident
    -> Language.PureScript.Names.Ident
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
c77efe4dd22bcd4a211dfcb075c25957
  $sinsert_$s$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.Ident
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> a
    -> Language.PureScript.Names.Ident
    -> Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
  {- Arity: 8,
     Strictness: <L,U><S,U><L,U><L,U><L,U><L,U><S,1*U><L,U> -}
7574b3b22fddf2eb17bf7d30a9926473
  $sinsert_$s$w$sgo1 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
225b268a0aac7800abf66f2ad7625753
  $sinsert_$s$w$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
0415f19b96ced87221899ef497c9bbb5
  $sinsert_$s$w$sgo2 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
1b72ae77a0355e9f2c54f8f36bea2726
  $sinsert_$s$w$sgo3 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
b2b2692afb09ce92d5adf18274b7331d
  $sinsert_$s$w$sgo4 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> a
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
  {- Arity: 10,
     Strictness: <L,U><S(SSS),1*U(U,U,U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U> -}
4588b755d19df76079bd0a4266700e3d
  $sinsert_$sgo3 ::
    Language.PureScript.Names.Ident
    -> Language.PureScript.Names.Ident
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
7eb90c24ca7a12be4c91c6cca6a0b1a9
  $slookup1 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
5f95a5deb4ba8c99f4f8a21fc4a3dace
  $slookup9 ::
    Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
0cf0140396b08382e6276e92febf2e79
  $slookup_$spoly_go1 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> GHC.Integer.Type.Integer
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,U> -}
b3f0ff845302061e7651f2d9fe1928ac
  $slookup_$spoly_go13 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> GHC.Base.Maybe a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2f1982244acc61866e2ce5303fb798a4
  $slookup_$spoly_go2 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Text.Internal.Text -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U,U)> -}
d5d36ba79a8b005ee2a0114d2148074a
  $sunion ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
a362a568e316f033820016f6047b97d9
  $sunion1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.ValueOpName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
59887a65c838d0d2cf4416e7723aa379
  $sunion2 ::
    Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
f54d48d67aadefff1212eb783927791c
  $sunion3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ClassName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
e157c2610719b1fd0142d83ea094ba7d
  $sunion4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.OpName
         'Language.PureScript.Names.TypeOpName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
41cb1080461eb628a2865d1fb821610a
  $sunion5 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName)
      a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
e265ae4f663011523a64198e22a344ab
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Sugar.Names.Exports.$trModule3
                   Language.PureScript.Sugar.Names.Exports.$trModule1) -}
6acf8bb351952a41074d50a1b4cb039a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Sugar.Names.Exports.$trModule2) -}
ad1535e703da4c6dd85e3efc131e9c2b
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Sugar.Names.Exports"#) -}
7b2619e42bd6c434deb2ec953e947efc
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Sugar.Names.Exports.$trModule4) -}
d3e29777dc1a7ce1b8b0a9b6f27edb29
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
79a7c15a5965899a8c9e4a290f55bbfb
  $w$sgo1 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.TypeOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
251ef68da908619b3018c1fa8ae9a1d4
  $w$sgo13 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
55de32caee8dcd2351e172da112d49cd
  $w$sgo2 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ClassName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
28a9ccd78a4b5eebd486f46d19b14dfb
  $w$sgo3 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.KindName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
ba8191d70a3c93956e3ae6290f26c852
  $w$sgo4 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.ValueOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
27d88c8f61c148337681de5443bcd08b
  $w$sgo5 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.KindName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
fb49430e9afea01c7b15edbec39cafef
  $w$sgo6 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.ValueOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
9f91acaeb907b7682fc4c7358a523cdb
  $w$sgo7 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.ClassName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
843c0bd53f8dbfe75f6830e4c44c1582
  $w$sgo8 ::
    Language.PureScript.Names.OpName
      'Language.PureScript.Names.TypeOpName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
c81fae738d5121c0df8ab5a2c1dd8377
  $w$sgo9 ::
    Language.PureScript.Names.ProperName
      'Language.PureScript.Names.TypeName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
255f06d840a16c859e581c758d32e6dd
  $wfindExportable ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    Language.PureScript.Names.ModuleName
    -> [Language.PureScript.AST.Declarations.Declaration]
    -> m Language.PureScript.Sugar.Names.Env.Exports
  {- Arity: 3,
     Strictness: <S(LLC(C(S))),U(U(U(A,C(U),A,A,A,A),C(C1(U)),C(C1(U)),U,A),C(U),C(C1(U)))><L,U><L,1*U>,
     Inline: [0] -}
aad59a5046fbbe179c9fb0e27e1350dc
  $wpoly_go1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
bb9d7c1a632f82f04bc8380b0116b33b
  $wpoly_go13 ::
    Language.PureScript.Names.Ident
    -> Data.Map.Internal.Map Language.PureScript.Names.Ident a
    -> (# Data.Map.Internal.Map Language.PureScript.Names.Ident a,
          Data.Map.Internal.Map Language.PureScript.Names.Ident a #)
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
10105561c57c617b149d9fe0bb89ccb3
  $wpoly_go2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.TypeOpName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
daae01d286db73f8c82ca75e41827302
  $wpoly_go3 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ClassName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
c52c499c77fdde2ffdf5d1935bf02f82
  $wpoly_go4 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
ddfcb3e380dc502a9a0a672d17c7060a
  $wpoly_go5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.OpName
            'Language.PureScript.Names.ValueOpName)
         a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
9fe8257cce9f55b140e936d7fcf948f3
  findExportable ::
    Control.Monad.Error.Class.MonadError
      Language.PureScript.Errors.MultipleErrors m =>
    Language.PureScript.AST.Declarations.Module
    -> m Language.PureScript.Sugar.Names.Env.Exports
  {- Arity: 2,
     Strictness: <S(LLC(C(S))),U(U(U(A,C(U),A,A,A,A),C(C1(U)),C(C1(U)),U,A),C(U),C(C1(U)))><S,1*U(A,A,U,1*U,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Error.Class.MonadError
                           Language.PureScript.Errors.MultipleErrors m)
                   (w1 :: Language.PureScript.AST.Declarations.Module) ->
                 case w1 of ww { Language.PureScript.AST.Declarations.Module ww1 ww2 ww3 ww4 ww5 ->
                 Language.PureScript.Sugar.Names.Exports.$wfindExportable
                   @ m
                   w
                   ww3
                   ww4 }) -}
ed6efddb04666d77046e856244878825
  resolveExports ::
    (Control.Monad.Error.Class.MonadError
       Language.PureScript.Errors.MultipleErrors m,
     Control.Monad.Writer.Class.MonadWriter
       Language.PureScript.Errors.MultipleErrors m) =>
    Language.PureScript.Sugar.Names.Env.Env
    -> Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.Sugar.Names.Env.Imports
    -> Language.PureScript.Sugar.Names.Env.Exports
    -> [Language.PureScript.AST.Declarations.DeclarationRef]
    -> m Language.PureScript.Sugar.Names.Env.Exports
  {- Arity: 2,
     Strictness: <L,U(U(U(1*U(1*C1(C(U)),C(C1(U))),C(U),A,C(C1(C1(U))),C(C1(U)),A),C(C1(U)),C(C1(U)),U,A),C(U),C(C1(U)))><L,U(A,U(U(A,C(U),A,A,C(C1(U)),A),C(C1(U)),A,C(U),A),A,C(U),A,C(U))> -}
"SC:$sgo130" forall @ a
                    (sc :: GHC.Prim.Int#)
                    (sc1 :: Language.PureScript.Names.Ident)
                    (sc2 :: a)
                    (sc3 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                    (sc4 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                    (sc5 :: a)
                    (sc6 :: Language.PureScript.Names.Ident)
                    (sc7 :: Language.PureScript.Names.Ident)
  Language.PureScript.Sugar.Names.Exports.$sinsert_$sgo3 @ a
                                                         sc7
                                                         sc6
                                                         sc5
                                                         (Data.Map.Internal.Bin
                                                            @ Language.PureScript.Names.Ident
                                                            @ a
                                                            sc
                                                            sc1
                                                            sc2
                                                            sc3
                                                            sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.TypeName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.TypeName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo13 @ a
                                                   sc9
                                                   sc8
                                                   sc7
                                                   sc6
                                                   sc5
                                                   (Data.Map.Internal.Bin
                                                      @ (Language.PureScript.Names.ProperName
                                                           'Language.PureScript.Names.TypeName)
                                                      @ a
                                                      sc
                                                      sc1
                                                      sc2
                                                      sc3
                                                      sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.TypeOpName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.TypeOpName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.TypeOpName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.TypeOpName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo1 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.OpName
                                                          'Language.PureScript.Names.TypeOpName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo1
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ClassName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ClassName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.ClassName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo2 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.ClassName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo2
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.KindName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.KindName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.KindName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.ProperName
                                    'Language.PureScript.Names.KindName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo3 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo3
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.ValueOpName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.ValueOpName)
                                    a)
                          (sc4 :: Data.Map.Internal.Map
                                    (Language.PureScript.Names.OpName
                                       'Language.PureScript.Names.ValueOpName)
                                    a)
                          (sc5 :: a)
                          (sc6 :: GHC.Prim.Int#)
                          (sc7 :: GHC.Prim.Int#)
                          (sc8 :: GHC.Prim.ByteArray#)
                          (sc9 :: Language.PureScript.Names.OpName
                                    'Language.PureScript.Names.ValueOpName)
  Language.PureScript.Sugar.Names.Exports.$w$sgo4 @ a
                                                  sc9
                                                  sc8
                                                  sc7
                                                  sc6
                                                  sc5
                                                  (Data.Map.Internal.Bin
                                                     @ (Language.PureScript.Names.OpName
                                                          'Language.PureScript.Names.ValueOpName)
                                                     @ a
                                                     sc
                                                     sc1
                                                     sc2
                                                     sc3
                                                     sc4)
  = Language.PureScript.Sugar.Names.Exports.$sinsert_$s$w$sgo4
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
"SC:$wpoly_go130" [0] forall @ a
                             (sc :: GHC.Prim.Int#)
                             (sc1 :: Language.PureScript.Names.Ident)
                             (sc2 :: a)
                             (sc3 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                             (sc4 :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                             (sc5 :: Language.PureScript.Names.Ident)
  Language.PureScript.Sugar.Names.Exports.$wpoly_go13 @ a
                                                      sc5
                                                      (Data.Map.Internal.Bin
                                                         @ Language.PureScript.Names.Ident
                                                         @ a
                                                         sc
                                                         sc1
                                                         sc2
                                                         sc3
                                                         sc4)
  = Language.PureScript.Sugar.Names.Exports.$s$wsplit_$s$wpoly_go2
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
"SC:poly_go130" forall @ a
                       (sc :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                       (sc1 :: Data.Text.Internal.Text)
  Language.PureScript.Sugar.Names.Exports.$slookup9 @ a
                                                    (Language.PureScript.Names.Ident sc1)
                                                    sc
  = Language.PureScript.Sugar.Names.Exports.$slookup_$spoly_go2
      @ a
      sc
      sc1
"SC:poly_go131" forall @ a
                       (sc :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
                       (sc1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                       (sc2 :: GHC.Integer.Type.Integer)
  Language.PureScript.Sugar.Names.Exports.$slookup9 @ a
                                                    (Language.PureScript.Names.GenIdent sc1 sc2)
                                                    sc
  = Language.PureScript.Sugar.Names.Exports.$slookup_$spoly_go1
      @ a
      sc
      sc1
      sc2
"SC:poly_go132" forall @ a
                       (sc :: Data.Map.Internal.Map Language.PureScript.Names.Ident a)
  Language.PureScript.Sugar.Names.Exports.$slookup9 @ a
                                                    Language.PureScript.Names.UnusedIdent
                                                    sc
  = Language.PureScript.Sugar.Names.Exports.$slookup_$spoly_go13
      @ a
      sc
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (OpName
                                                        'TypeOpName) _" [orphan] forall @ a
                                                                                                                                                      ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                  (Language.PureScript.Names.OpName
                                                                                                                                                                     'Language.PureScript.Names.TypeOpName))
  Data.Map.Internal.union @ (Language.PureScript.Names.OpName
                               'Language.PureScript.Names.TypeOpName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion4 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (OpName
                                                        'ValueOpName) _" [orphan] forall @ a
                                                                                                                                                       ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                   (Language.PureScript.Names.OpName
                                                                                                                                                                      'Language.PureScript.Names.ValueOpName))
  Data.Map.Internal.union @ (Language.PureScript.Names.OpName
                               'Language.PureScript.Names.ValueOpName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion1 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (ProperName
                                                        'ClassName) _" [orphan] forall @ a
                                                                                                                                                         ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                     (Language.PureScript.Names.ProperName
                                                                                                                                                                        'Language.PureScript.Names.ClassName))
  Data.Map.Internal.union @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.ClassName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion3 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (ProperName
                                                        'KindName) _" [orphan] forall @ a
                                                                                                                                                        ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                       'Language.PureScript.Names.KindName))
  Data.Map.Internal.union @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.KindName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ (ProperName
                                                        'TypeName) _" [orphan] forall @ a
                                                                                                                                                        ($dOrd :: GHC.Classes.Ord
                                                                                                                                                                    (Language.PureScript.Names.ProperName
                                                                                                                                                                       'Language.PureScript.Names.TypeName))
  Data.Map.Internal.union @ (Language.PureScript.Names.ProperName
                               'Language.PureScript.Names.TypeName)
                          @ a
                          $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion5 @ a
"SPEC/Language.PureScript.Sugar.Names.Exports union @ Ident _" [orphan] forall @ a
                                                                               ($dOrd :: GHC.Classes.Ord
                                                                                           Language.PureScript.Names.Ident)
  Data.Map.Internal.union @ Language.PureScript.Names.Ident @ a $dOrd
  = Language.PureScript.Sugar.Names.Exports.$sunion2 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

