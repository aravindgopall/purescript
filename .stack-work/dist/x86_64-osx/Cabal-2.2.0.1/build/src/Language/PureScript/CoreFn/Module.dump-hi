
==================== FINAL INTERFACE ====================
2019-01-24 14:13:38.316242 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.CoreFn.Module 8043
  interface hash: 71eaf78a8095b98b17e10f7d2522ac6f
  ABI hash: 9dd7adb25f29cf9fbaca42c3a9ee6567
  export-list hash: 3d05313c837659e5151156c4645f3ed4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 354630b2248d720ba62df5ccf315f8dd
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.CoreFn.Module.Module{Language.PureScript.CoreFn.Module.Module moduleComments moduleDecls moduleExports moduleForeign moduleImports moduleName modulePath moduleSourceSpan}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST.Literals
                     Language.PureScript.AST.SourcePos Language.PureScript.Comments
                     Language.PureScript.CoreFn.Binders Language.PureScript.CoreFn.Expr
                     Language.PureScript.Names Language.PureScript.PSString
package dependencies: aeson-1.3.1.1 array-0.5.2.0
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      mtl-2.2.2 pretty-1.1.3.6 primitive-0.6.3.0 random-1.1
                      scientific-0.3.6.2 tagged-0.8.5 template-haskell-2.13.0.0
                      text-1.2.3.0 th-abstraction-0.2.8.0 time-1.8.0.2
                      time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  exports: a1e32a05596348684f99f9072c553e2b
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Comments 1a682522a2f855328ca87bb68705794c
  exports: 9921c985b3279420b3b7a2b7ccc8b32e
  Comment 2e827a5b834f92cc9beef533348585fa
import  -/  Language.PureScript.CoreFn.Expr fc76100f222fb80b0ed958c173fcf851
  exports: 46aca17cf6e6b6ff6130ffc5fc5adc10
  Bind 22c7241ad0e882392beaf38a652acec4
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  Ident bad3562aa6138b6192713ac281080869
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
b29880c812af4e08648f58735ebf94f4
  $fShowModule ::
    GHC.Show.Show a =>
    GHC.Show.Show (Language.PureScript.CoreFn.Module.Module a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Language.PureScript.CoreFn.Module.Module a)
                  (Language.PureScript.CoreFn.Module.$fShowModule_$cshowsPrec @ a v)
                  (Language.PureScript.CoreFn.Module.$fShowModule_$cshow @ a v)
                  (Language.PureScript.CoreFn.Module.$fShowModule_$cshowList
                     @ a
                     v) -}
34fd2bfaf03537e0d26eb665da05bf22
  $fShowModule1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b29880c812af4e08648f58735ebf94f4
  $fShowModule_$cshow ::
    GHC.Show.Show a =>
    Language.PureScript.CoreFn.Module.Module a -> GHC.Base.String
  {- Arity: 2,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U(1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))),1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x :: Language.PureScript.CoreFn.Module.Module a) ->
                 Language.PureScript.CoreFn.Module.$fShowModule_$cshowsPrec
                   @ a
                   $dShow
                   Language.PureScript.CoreFn.Module.$fShowModule1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b29880c812af4e08648f58735ebf94f4
  $fShowModule_$cshowList ::
    GHC.Show.Show a =>
    [Language.PureScript.CoreFn.Module.Module a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Language.PureScript.CoreFn.Module.Module a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.CoreFn.Module.Module a)
                   (Language.PureScript.CoreFn.Module.$fShowModule_$cshowsPrec
                      @ a
                      $dShow
                      Language.PureScript.CoreFn.Module.$fShowModule1)
                   ls
                   s) -}
b29880c812af4e08648f58735ebf94f4
  $fShowModule_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int
    -> Language.PureScript.CoreFn.Module.Module a -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(C(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U(1*U(1*U,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U))),1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U> -}
d5efb0dcf6007fd5b0b4027c09e7cd39
  $tc'Module :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9510117700680294862##
                   12215736230269621122##
                   Language.PureScript.CoreFn.Module.$trModule
                   Language.PureScript.CoreFn.Module.$tc'Module2
                   1#
                   Language.PureScript.CoreFn.Module.$tc'Module1) -}
822da12527f822a683d32e8121b344bb
  $tc'Module1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c8d680069df341be1022127a524b3172
  $tc'Module2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.CoreFn.Module.$tc'Module3) -}
cd6149d9b4210915bf08175902faad53
  $tc'Module3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Module"#) -}
4c46954ba36bcaa70a20dab3581d1de8
  $tcModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8564668843662657021##
                   12010259138939871568##
                   Language.PureScript.CoreFn.Module.$trModule
                   Language.PureScript.CoreFn.Module.$tcModule1
                   0#
                   GHC.Types.krep$*Arr*) -}
80ef4ca3ea6fad4e7cb9d92aa2937b13
  $tcModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.CoreFn.Module.$tcModule2) -}
a269fcdd3d21b8f34795113f366d4719
  $tcModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Module"#) -}
62388b6afd9501d2276860ded59fa463
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.CoreFn.Module.$trModule3
                   Language.PureScript.CoreFn.Module.$trModule1) -}
e88a7036cefe7e55956de1099e3b3110
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.CoreFn.Module.$trModule2) -}
d5e7ec80077ee378cc5a6c73631e0c3c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.CoreFn.Module"#) -}
76aaa6232666c157b0f152ece5efcb51
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.CoreFn.Module.$trModule4) -}
4b6a1b87bafc8ffca5e3a03b36a55dd3
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
b29880c812af4e08648f58735ebf94f4
  data Module a
    = Module {moduleSourceSpan :: Language.PureScript.AST.SourcePos.SourceSpan,
              moduleComments :: [Language.PureScript.Comments.Comment],
              moduleName :: Language.PureScript.Names.ModuleName,
              modulePath :: GHC.IO.FilePath,
              moduleImports :: [(a, Language.PureScript.Names.ModuleName)],
              moduleExports :: [Language.PureScript.Names.Ident],
              moduleForeign :: [Language.PureScript.Names.Ident],
              moduleDecls :: [Language.PureScript.CoreFn.Expr.Bind a]}
b29880c812af4e08648f58735ebf94f4
  moduleComments ::
    Language.PureScript.CoreFn.Module.Module a
    -> [Language.PureScript.Comments.Comment]
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLL),1*U(A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds2 }) -}
b29880c812af4e08648f58735ebf94f4
  moduleDecls ::
    Language.PureScript.CoreFn.Module.Module a
    -> [Language.PureScript.CoreFn.Expr.Bind a]
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds8 }) -}
b29880c812af4e08648f58735ebf94f4
  moduleExports ::
    Language.PureScript.CoreFn.Module.Module a
    -> [Language.PureScript.Names.Ident]
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLL),1*U(A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds6 }) -}
b29880c812af4e08648f58735ebf94f4
  moduleForeign ::
    Language.PureScript.CoreFn.Module.Module a
    -> [Language.PureScript.Names.Ident]
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSL),1*U(A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds7 }) -}
b29880c812af4e08648f58735ebf94f4
  moduleImports ::
    Language.PureScript.CoreFn.Module.Module a
    -> [(a, Language.PureScript.Names.ModuleName)]
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLL),1*U(A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds5 }) -}
b29880c812af4e08648f58735ebf94f4
  moduleName ::
    Language.PureScript.CoreFn.Module.Module a
    -> Language.PureScript.Names.ModuleName
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLL),1*U(A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds3 }) -}
b29880c812af4e08648f58735ebf94f4
  modulePath ::
    Language.PureScript.CoreFn.Module.Module a -> GHC.IO.FilePath
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLL),1*U(A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds4 }) -}
b29880c812af4e08648f58735ebf94f4
  moduleSourceSpan ::
    Language.PureScript.CoreFn.Module.Module a
    -> Language.PureScript.AST.SourcePos.SourceSpan
  RecSel Left Language.PureScript.CoreFn.Module.Module
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U(U,U,U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.CoreFn.Module.Module a) ->
                 case ds of wild { Language.PureScript.CoreFn.Module.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds1 }) -}
instance GHC.Show.Show [Language.PureScript.CoreFn.Module.Module]
  = Language.PureScript.CoreFn.Module.$fShowModule
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

