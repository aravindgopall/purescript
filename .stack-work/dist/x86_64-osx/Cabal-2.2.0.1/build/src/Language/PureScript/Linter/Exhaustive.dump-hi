
==================== FINAL INTERFACE ====================
2019-01-24 14:16:07.835633 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Linter.Exhaustive 8043
  interface hash: f250f991c0082b300d6eba7728cdd52a
  ABI hash: f6aaa8e4d9ec2d8a242b2dd8f821dad8
  export-list hash: b3ae228380805d2a5c7495d0d575b1e6
  orphan hash: fc5f3c8940fbd35afe39a149e998bcc3
  flag hash: 14472b647fa7c417d91c58225e422ddf
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Linter.Exhaustive.checkExhaustiveExpr
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Names
                     Language.PureScript.PSString Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Pretty
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Pretty.Types Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 language-javascript-0.6.0.11
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      parsec-3.1.13.0 pattern-arrows-0.0.2 pretty-1.1.3.6
                      primitive-0.6.3.0 protolude-0.2.2 random-1.1 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: colour-2.3.4:Data.Colour syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Applicative 55d9b3a7491623b0362290e162d67308
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Function 6e6aae9442025aeeb92a909c1bbc3fca
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  mtl-2.2.2:Control.Monad.Writer.Class 69f540e019eada69892c26d267276458
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.List 3a80368167450d7a4360ebf1ea443345
import  -/  Control.Monad.Supply.Class 4b0577d8897e2d48cd4fc324f0e8c355
  exports: 9b5454b78bf2751cecd07ba41d8b4d51
  MonadSupply 6fd5e162006451a17cf4a7ae2eb71bd2
  fresh be25d0ae173e5fe4a403c67bc9aa3a21
  freshName 3b42bd990d5e852928ea9f3f20a8c018
import  -/  Language.PureScript.AST.Binders 482af52ec934a93b1ca6ec424fbe30f2
  exports: 21ca217e42d8560f3b797ca3690c6ebc
  Binder c96edaac3b5fcb24a174f6f4b3f084d4
  ConstructorBinder 82c410a4d9e21c325ba3e1527c50daff
  LiteralBinder 0a5559e7d3aabf0cf9c897b797edff85
  NamedBinder 0800b3be0f9ce7a64f901e627e87a982
  NullBinder d9d32ade0d56992460bb4b700e4464a4
  PositionedBinder a6b770e5a8f88247c6ef23a04722a775
  TypedBinder 69e3490135b9eb76e3f2c68250002721
  VarBinder 2e20c3df0430901107dc9b8bd4a6015c
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  exports: ca3189140688cddb12d34cdf2c0663e4
  Abs dae9a514c0c54a50406a57cd533f800a
  Accessor 75238d8cd32188d181bffb473f6c4802
  App ae4e12e545757da5fb62189548835120
  BindingGroupDeclaration fe3c1705a7a0108b856351d712879737
  Case dbf8d0b5ac1a603149b8bb1459575de0
  CaseAlternative 8464f1c9f0c33f15833817399a071704
  CaseAlternative e92f6ee78a22c0eadc3566d7d1f48d5b
  ConditionGuard de13c04599b5971ac3f21a1186c6e658
  Declaration e92f6ee78a22c0eadc3566d7d1f48d5b
  ErrorInValueDeclaration b4d5773974cb3c247524eed712a032a5
  Expr e92f6ee78a22c0eadc3566d7d1f48d5b
  FromLet bc7f79cdfc21eeb3e926d750f1216f83
  Guard e92f6ee78a22c0eadc3566d7d1f48d5b
  GuardedExpr 811952f37a620b8d78cc4a6176d99a2c
  GuardedExpr e92f6ee78a22c0eadc3566d7d1f48d5b
  IfThenElse 8071f8c4795174e5283a3ecdaa8b3c8f
  IncompleteExhaustivityCheck a94c2403060b3cddff039c4fb5ac6a3d
  Let 5843430a3e31a1977aadcfb94efa8312
  Literal bdcf4b137a448fe7c2ed57fe33a72cd3
  MkUnguarded d9deae30ea78016a4bdb453d9978bfa3
  ObjectUpdate 14b4ffe7d1b68ac321d3f2c2a27a17eb
  OverlappingPattern 43b904c51414e626de65130b2baec4ff
  PatternGuard a27d707167917ad112543851031e65f9
  PositionedValue b90293950702fd6b659d7cd86d309f72
  TypeClassDictionaryConstructorApp f15387264e84e75b0e5ed1f08eacb958
  TypedValue 0acc3ace791a36484dcda3706df33cef
  UnaryMinus 00e8f54110f0049331236b115b108a07
  ValueDecl 97b38919d86cd9182cb8d86b6f4ae734
  Var 5fd1e80d993ab2f76a4e002bbbfc9990
  caseAlternativeBinders e92f6ee78a22c0eadc3566d7d1f48d5b
  caseAlternativeResult e92f6ee78a22c0eadc3566d7d1f48d5b
  isTrueExpr 68fdb6c54a1f333df017643f6dac7699
import  -/  Language.PureScript.AST.Literals da2ec269f063125450b272321f85468a
  exports: ab5af4e7482c5a8cbf79fdfd52ee94e2
  ArrayLiteral 7cbd15adda8a5ed2a81035be22e2eae2
  BooleanLiteral 98d9c7b89f9a5dcc4796fae1c45898e6
  ObjectLiteral d17d3a090fe8a89f303c679b0a417ae9
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  SourceSpan 1e0cf2bd3ea18f97a2ff152297f09219
import  -/  Language.PureScript.Constants 69f48af5637c1cbbd07a6f85918359c3
  exports: 9c458e31ccbc9e07ff15471cf48a55ee
  Partial 78fd25ce055392a0b1d7b9f219d96bdd
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Environment 467b25d81b890e1aaabe28d0f09d192d
  exports: a0cb6cb8c78c56365f58c9f88d1fe000
  DataDeclType 7eb61fe78108d98d82e39145869b2402
  DataType a076ec28146acfb660613d56f06f5e88
  Environment 7eb61fe78108d98d82e39145869b2402
  Private fa142db41a2d9e82cee092dfbb31a494
  TypeKind 713362c52c19b15de0cab368ddfda667
  dataConstructors 7eb61fe78108d98d82e39145869b2402
  tyFunction 72bada10fd7f408ce623a31c14e8cefb
  types 7eb61fe78108d98d82e39145869b2402
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  exports: 8e61484c4664eceb943d9fc4820c721b
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  addHint 4d7c0f041e7397261babf0b1c1669b2a
  errorMessage' d5b3fcc13faf321f693b39ae31b8bd13
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  exports: fe71635ad7964c0d620fb0685614a050
  SourceKind 4cdf50d4b2444221832ca704f3a0c468
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ConstructorName 84054a8bbbe827ba2ce7da83056a95ee
  Ident 71f167265716f619863a793fa311e198
  Ident bad3562aa6138b6192713ac281080869
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  TypeName 40ce511c66a72431b4e87351210f7b03
  UnusedIdent 57c338f8a1023bf312d293d7cd04b9e5
  qualify 7fee779c1e743466991e1770cf2b48ba
  runProperName a7268334e0b909381550b9329cb80fcc
  showQualified 5ab4b15825b0e65e211bc57f19d57784
import  -/  Language.PureScript.Pretty.Values e943ed88680ef50d4ac1596480de3b7e
  exports: 1fff6f457e116a808075e2583d525839
  prettyPrintBinderAtom b8b024f903da0d3fd9cef56b83529716
import  -/  Language.PureScript.Traversals e97764d7972cc6ba421a6be0a3ce6bda
  exports: cbb821b2ee7c6d00cdf62285e1dbe432
  sndM c93ef73e127a3a54c4cd1e5e2194b237
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  exports: 229bb7528146da886cffbefad5822e19
  ConstraintData a03b6e4fc3480a75148b1f5fe52f06d0
  PartialConstraintData edcc19957e9ee1ea6ea4032f01c28d44
  SourceType 0ac818517c14fedd280ef5885ae0cdc3
  srcConstrainedType 93e2834ceea7e6ad31bf7cc2ab2ec1f3
  srcConstraint 1b178a4d4c2b2691cc958960cbde0185
  srcForAll 1cb1e346db3d6a180b7d8a4625185294
  srcTypeApp 12cd55eb1b1b79c16fa2d346fb7f9cdb
  srcTypeVar 48385e53396d525a164ce8b1126142da
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
55e3f63a2bd8188993af18f8a7530d02
  $s$fEq[] :: GHC.Classes.Eq [Language.PureScript.AST.Binders.Binder]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.AST.Binders.Binder]
                  (GHC.Classes.$fEq[]_$c==
                     @ Language.PureScript.AST.Binders.Binder
                     Language.PureScript.AST.Binders.$fEqBinder)
                  Language.PureScript.Linter.Exhaustive.$s$fEq[]_$s$fEq[]_$c/= -}
dc86164a539851a0a95895c0280fec1b
  $s$fEq[]_$s$fEq[]_$c/= ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fEqBinder
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7e35b9f4fbd2d6df3f0baf66e49c9cb5
  $s$fOrd[] ::
    GHC.Classes.Ord [Language.PureScript.AST.Binders.Binder]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.PureScript.AST.Binders.Binder]
                  Language.PureScript.Linter.Exhaustive.$s$fEq[]
                  (GHC.Classes.$fOrd[]_$ccompare
                     @ Language.PureScript.AST.Binders.Binder
                     Language.PureScript.AST.Binders.$fOrdBinder)
                  (\ (x :: [Language.PureScript.AST.Binders.Binder])
                     (y :: [Language.PureScript.AST.Binders.Binder]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Language.PureScript.AST.Binders.Binder
                          Language.PureScript.AST.Binders.$fOrdBinder
                          x
                          y of wild {
                     DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True })
                  (\ (x :: [Language.PureScript.AST.Binders.Binder])
                     (y :: [Language.PureScript.AST.Binders.Binder]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Language.PureScript.AST.Binders.Binder
                          Language.PureScript.AST.Binders.$fOrdBinder
                          x
                          y of wild {
                     DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False })
                  (\ (x :: [Language.PureScript.AST.Binders.Binder])
                     (y :: [Language.PureScript.AST.Binders.Binder]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Language.PureScript.AST.Binders.Binder
                          Language.PureScript.AST.Binders.$fOrdBinder
                          x
                          y of wild {
                     DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True })
                  (\ (x :: [Language.PureScript.AST.Binders.Binder])
                     (y :: [Language.PureScript.AST.Binders.Binder]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Language.PureScript.AST.Binders.Binder
                          Language.PureScript.AST.Binders.$fOrdBinder
                          x
                          y of wild {
                     DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False })
                  (\ (x :: [Language.PureScript.AST.Binders.Binder])
                     (y :: [Language.PureScript.AST.Binders.Binder]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Language.PureScript.AST.Binders.Binder
                          Language.PureScript.AST.Binders.$fOrdBinder
                          x
                          y of wild {
                     DEFAULT -> y GHC.Types.GT -> x })
                  (\ (x :: [Language.PureScript.AST.Binders.Binder])
                     (y :: [Language.PureScript.AST.Binders.Binder]) ->
                   case GHC.Classes.$fOrd[]_$ccompare
                          @ Language.PureScript.AST.Binders.Binder
                          Language.PureScript.AST.Binders.$fOrdBinder
                          x
                          y of wild {
                     DEFAULT -> x GHC.Types.GT -> y }) -}
5dd6c6ee711db7a4055af453de65cdf1
  $s$fOrd[]_$c< ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fOrdBinder
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
91b3a19fa30c4227ec3eeeb0b94699b0
  $s$fOrd[]_$c<= ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fOrdBinder
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
940f1aaecd689f50ea049ec0c30f4a23
  $s$fOrd[]_$c> ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fOrdBinder
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
69baa207c90361acda2283b1a9fdbca4
  $s$fOrd[]_$c>= ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fOrdBinder
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
db0d6ecd08c7a58d0607323b3ceab6d9
  $s$fOrd[]_$cmax ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fOrdBinder
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
6b2d9d2ce75a5eefad768159c74f0587
  $s$fOrd[]_$cmin ::
    [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder]
    -> [Language.PureScript.AST.Binders.Binder]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Language.PureScript.AST.Binders.Binder])
                   (y :: [Language.PureScript.AST.Binders.Binder]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Language.PureScript.AST.Binders.Binder
                        Language.PureScript.AST.Binders.$fOrdBinder
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
672d7da7ab256f1bc59b831350560210
  $slookup_$s$wpoly_go1 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U,U)> -}
fad77b16da6cfabb3278d7ec7a0535a8
  $slookup_$s$wpoly_go13 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      a
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
f41b9b490e8215a7f39848965a858d10
  $slookup_$s$wpoly_go2 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.ConstructorName))
      a
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName :: *)) =>
       GHC.Base.Maybe a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U> -}
85623f525c142f6adb587958c29121cb
  $slookup_$s$wpoly_go3 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       Language.PureScript.Environment.TypeKind)
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.TypeName
    -> Language.PureScript.Names.ModuleName
    -> GHC.Base.Maybe
         (Language.PureScript.Kinds.SourceKind,
          Language.PureScript.Environment.TypeKind)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U,U,U)><L,U> -}
a98f65ff68b2eec508e119b428d9bdeb
  $slookup_$s$wpoly_go4 ::
    Data.Map.Internal.Map
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.TypeName))
      (Language.PureScript.Kinds.Kind
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment]),
       Language.PureScript.Environment.TypeKind)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ((Data.Text.Internal.Text :: *)
        ~R# (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.TypeName :: *)) =>
       Language.PureScript.Names.ModuleName
       -> GHC.Base.Maybe
            (Language.PureScript.Kinds.SourceKind,
             Language.PureScript.Environment.TypeKind)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U> -}
ca20f6d4aefcddfa960d2f9b507233af
  $tc'Incomplete :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10194201980267288974##
                   10536250156076183190##
                   Language.PureScript.Linter.Exhaustive.$trModule
                   Language.PureScript.Linter.Exhaustive.$tc'Incomplete2
                   0#
                   Language.PureScript.Linter.Exhaustive.$tc'Incomplete1) -}
b8d9ccc0b5e1e333bf56f995b9cf9a57
  $tc'Incomplete1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
7773cf6f25d9b8ee0c74b846f28a63c7
  $tc'Incomplete2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Exhaustive.$tc'Incomplete3) -}
1a7764a3b9c20ac5c0f02fb35d715ab5
  $tc'Incomplete3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Incomplete"#) -}
4f00027898d6e5819ea25ab15108484e
  $tc'Unknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13065390462977056335##
                   7024446191808468271##
                   Language.PureScript.Linter.Exhaustive.$trModule
                   Language.PureScript.Linter.Exhaustive.$tc'Unknown1
                   0#
                   Language.PureScript.Linter.Exhaustive.$tc'Incomplete1) -}
bc2d9b3c8b294dc0720484b9f0be602d
  $tc'Unknown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Exhaustive.$tc'Unknown2) -}
a665764a1a40eedb6d547526390fc8e9
  $tc'Unknown2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Unknown"#) -}
e88db7205239337183ae86a2aade4401
  $tcRedundancyError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2164438227905901871##
                   7396213714506117765##
                   Language.PureScript.Linter.Exhaustive.$trModule
                   Language.PureScript.Linter.Exhaustive.$tcRedundancyError1
                   0#
                   GHC.Types.krep$*) -}
12c3e3d25a65381f492897646ef848ec
  $tcRedundancyError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Exhaustive.$tcRedundancyError2) -}
57bf495a1fbbe23946498b6bab5f5066
  $tcRedundancyError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RedundancyError"#) -}
4f1007bf06c9cc02788207520211002b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Linter.Exhaustive.$trModule3
                   Language.PureScript.Linter.Exhaustive.$trModule1) -}
1180e069cdc7c425fca10fac665d7ffb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Exhaustive.$trModule2) -}
ecdcdf40e578aded4ac5d4db8076edc6
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Linter.Exhaustive"#) -}
a9e1e8120c30b4e5bda97d550ad1d502
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Linter.Exhaustive.$trModule4) -}
84b759f547bfefb3bc1b3737d8e63c02
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
61d154e220e9bbe2a7942f6c36e60adc
  $wpoly_go13 ::
    GHC.Base.Maybe Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ProperName
         'Language.PureScript.Names.ConstructorName
    -> Data.Map.Internal.Map
         (Language.PureScript.Names.Qualified
            (Language.PureScript.Names.ProperName
               'Language.PureScript.Names.ConstructorName))
         a
    -> GHC.Base.Maybe a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,1*U(U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.Maybe Language.PureScript.Names.ModuleName)
                   (ww1 :: Language.PureScript.Names.ProperName
                             'Language.PureScript.Names.ConstructorName)
                   (w :: Data.Map.Internal.Map
                           (Language.PureScript.Names.Qualified
                              (Language.PureScript.Names.ProperName
                                 'Language.PureScript.Names.ConstructorName))
                           a) ->
                 case w of wild {
                   Data.Map.Internal.Bin ipv ipv1 ipv2 ipv3 ipv4
                   -> case ipv1 of ww3 { Language.PureScript.Names.Qualified ww4 ww5 ->
                      case ww of wild1 {
                        GHC.Base.Nothing
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing
                             -> case ww1
                                       `cast`
                                     (Language.PureScript.Names.N:ProperName[0]
                                          <'Language.PureScript.Names.ConstructorName>_P) of ww2 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                                case ww5
                                       `cast`
                                     (Language.PureScript.Names.N:ProperName[0]
                                          <'Language.PureScript.Names.ConstructorName>_P) of ww9 { Data.Text.Internal.Text ww10 ww11 ww12 ->
                                case Data.Text.$w$ccompare ww6 ww7 ww8 ww10 ww11 ww12 of wild3 {
                                  GHC.Types.LT
                                  -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go2
                                       @ a
                                       ipv3
                                       ww6
                                       ww7
                                       ww8
                                       @~ (Sym (Language.PureScript.Names.N:ProperName[0]
                                                    <'Language.PureScript.Names.ConstructorName>_P))
                                  GHC.Types.EQ -> GHC.Base.Just @ a ipv2
                                  GHC.Types.GT
                                  -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go2
                                       @ a
                                       ipv4
                                       ww6
                                       ww7
                                       ww8
                                       @~ (Sym (Language.PureScript.Names.N:ProperName[0]
                                                    <'Language.PureScript.Names.ConstructorName>_P)) } } }
                             GHC.Base.Just ipv7
                             -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go1
                                  @ a
                                  ipv3
                                  ww1 }
                        GHC.Base.Just a2
                        -> case ww4 of wild2 {
                             GHC.Base.Nothing
                             -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go13
                                  @ a
                                  ipv4
                                  ww1
                                  a2
                             GHC.Base.Just b1
                             -> case GHC.Classes.$fOrd[]_$ccompare
                                       @ (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.Namespace)
                                       (Language.PureScript.Names.$fOrdProperName
                                          @ 'Language.PureScript.Names.Namespace)
                                       a2 `cast` (Language.PureScript.Names.N:ModuleName[0])
                                       b1
                                         `cast`
                                       (Language.PureScript.Names.N:ModuleName[0]) of wild3 {
                                  GHC.Types.LT
                                  -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go13
                                       @ a
                                       ipv3
                                       ww1
                                       a2
                                  GHC.Types.EQ
                                  -> case ww1
                                            `cast`
                                          (Language.PureScript.Names.N:ProperName[0]
                                               <'Language.PureScript.Names.ConstructorName>_P) of ww2 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                                     case ww5
                                            `cast`
                                          (Language.PureScript.Names.N:ProperName[0]
                                               <'Language.PureScript.Names.ConstructorName>_P) of ww9 { Data.Text.Internal.Text ww10 ww11 ww12 ->
                                     case Data.Text.$w$ccompare
                                            ww6
                                            ww7
                                            ww8
                                            ww10
                                            ww11
                                            ww12 of wild4 {
                                       GHC.Types.LT
                                       -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go13
                                            @ a
                                            ipv3
                                            ww2
                                              `cast`
                                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                                      <'Language.PureScript.Names.ConstructorName>_P))
                                            a2
                                       GHC.Types.EQ -> GHC.Base.Just @ a ipv2
                                       GHC.Types.GT
                                       -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go13
                                            @ a
                                            ipv4
                                            ww2
                                              `cast`
                                            (Sym (Language.PureScript.Names.N:ProperName[0]
                                                      <'Language.PureScript.Names.ConstructorName>_P))
                                            a2 } } }
                                  GHC.Types.GT
                                  -> Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go13
                                       @ a
                                       ipv4
                                       ww1
                                       a2 } } } }
                   Data.Map.Internal.Tip -> GHC.Base.Nothing @ a }) -}
4c93b745e049b80ee637203ee990b537
  data RedundancyError = Incomplete | Unknown
bc79420f3b17224164857ac6363c4130
  checkExhaustiveExpr ::
    (Control.Monad.Writer.Class.MonadWriter
       Language.PureScript.Errors.MultipleErrors m,
     Control.Monad.Supply.Class.MonadSupply m) =>
    Language.PureScript.AST.SourcePos.SourceSpan
    -> Language.PureScript.Environment.Environment
    -> Language.PureScript.Names.ModuleName
    -> Language.PureScript.AST.Declarations.Expr
    -> m Language.PureScript.AST.Declarations.Expr
  {- Arity: 6,
     Strictness: <L,U(A,U(1*U(1*U(C(C1(U)),A),C(U),C(C1(U)),C(C1(C1(U))),A,A),C(C1(U)),C(C1(U)),C(U),A),A,C(U),A,C(U))><L,U(U(U(U(C(C1(U)),A),A,A,A,A,A),A,A,A,A),U,A)><L,U><L,U(A,U,U,A,A,A,A)><L,U><S,1*U> -}
"SC:$wpoly_go130" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                      a)
                             (sc1 :: Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName)
  Language.PureScript.Linter.Exhaustive.$wpoly_go13 @ a
                                                    (GHC.Base.Nothing
                                                       @ Language.PureScript.Names.ModuleName)
                                                    sc1
                                                    sc
  = Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go1
      @ a
      sc
      sc1
"SC:$wpoly_go131" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                      a)
                             (sc1 :: Language.PureScript.Names.ProperName
                                       'Language.PureScript.Names.ConstructorName)
                             (sc2 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Linter.Exhaustive.$wpoly_go13 @ a
                                                    (GHC.Base.Just
                                                       @ Language.PureScript.Names.ModuleName
                                                       sc2)
                                                    sc1
                                                    sc
  = Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go13
      @ a
      sc
      sc1
      sc2
"SC:$wpoly_go132" [0] forall @ a
                             (sc :: Data.Map.Internal.Map
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.ConstructorName))
                                      a)
                             (sc1 :: GHC.Prim.ByteArray#)
                             (sc2 :: GHC.Prim.Int#)
                             (sc3 :: GHC.Prim.Int#)
                             (sg :: (Data.Text.Internal.Text :: *)
                                    ~R# (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.ConstructorName :: *))
  Language.PureScript.Linter.Exhaustive.$wpoly_go13 @ a
                                                    (GHC.Base.Nothing
                                                       @ Language.PureScript.Names.ModuleName)
                                                    (Data.Text.Internal.Text sc1 sc2 sc3) `cast` sg
                                                    sc
  = Language.PureScript.Linter.Exhaustive.$slookup_$s$wpoly_go2
      @ a
      sc
      sc1
      sc2
      sc3
      @~ sg
"SPEC/Language.PureScript.Linter.Exhaustive $fEq[] @ Binder" [orphan] forall (v :: GHC.Classes.Eq
                                                                                     Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fEq[] @ Language.PureScript.AST.Binders.Binder v
  = Language.PureScript.Linter.Exhaustive.$s$fEq[]
"SPEC/Language.PureScript.Linter.Exhaustive $fEq[]_$c/= @ Binder" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                             Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fEq[]_$c/= @ Language.PureScript.AST.Binders.Binder
                          $dEq
  = Language.PureScript.Linter.Exhaustive.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[] @ Binder" [orphan] forall (v :: GHC.Classes.Ord
                                                                                      Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[] @ Language.PureScript.AST.Binders.Binder v
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[]_$c< @ Binder" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                              Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[]_$c< @ Language.PureScript.AST.Binders.Binder
                          $dOrd
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]_$c<
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[]_$c<= @ Binder" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                               Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[]_$c<= @ Language.PureScript.AST.Binders.Binder
                           $dOrd
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]_$c<=
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[]_$c> @ Binder" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                              Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[]_$c> @ Language.PureScript.AST.Binders.Binder
                          $dOrd
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]_$c>
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[]_$c>= @ Binder" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                               Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[]_$c>= @ Language.PureScript.AST.Binders.Binder
                           $dOrd
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]_$c>=
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[]_$cmax @ Binder" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                                Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[]_$cmax @ Language.PureScript.AST.Binders.Binder
                            $dOrd
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]_$cmax
"SPEC/Language.PureScript.Linter.Exhaustive $fOrd[]_$cmin @ Binder" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                                                Language.PureScript.AST.Binders.Binder)
  GHC.Classes.$fOrd[]_$cmin @ Language.PureScript.AST.Binders.Binder
                            $dOrd
  = Language.PureScript.Linter.Exhaustive.$s$fOrd[]_$cmin
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

