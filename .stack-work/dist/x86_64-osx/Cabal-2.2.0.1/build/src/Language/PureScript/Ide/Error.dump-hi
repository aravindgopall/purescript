
==================== FINAL INTERFACE ====================
2019-01-24 14:17:00.163117 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Error 8043
  interface hash: 1ab8ad8acb3bb8051a0cd77b4e8448af
  ABI hash: b6eb0f8da112a6cbb4342061d1afef05
  export-list hash: 618489d4d27b48ee8032da6edee10f0b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5ca2b6297314332f988f1cde11325eb2
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Ide.Error.prettyPrintTypeSingleLine
  Language.PureScript.Ide.Error.IdeError{Language.PureScript.Ide.Error.GeneralError Language.PureScript.Ide.Error.ModuleFileNotFound Language.PureScript.Ide.Error.ModuleNotFound Language.PureScript.Ide.Error.NotFound Language.PureScript.Ide.Error.ParseError Language.PureScript.Ide.Error.RebuildError}
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Errors Language.PureScript.Errors.JSON
                     Language.PureScript.Externs Language.PureScript.Ide.Types
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Linter Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 ansi-terminal-0.8.0.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.4.5.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Ide.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types 80d8929e36e8070f3ae205ac2577d043
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  parsec-3.1.13.0:Text.Parsec.Error 5c35aa426bd1cd52bcab90d9a1e3ce4c
import  -/  protolude-0.2.2:Protolude 2c2d16096c8a60f59f646a3b93b0eb7b
import  -/  protolude-0.2.2:Protolude.List 3a80368167450d7a4360ebf1ea443345
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
import  -/  Language.PureScript.AST.Declarations 586bc75044e8737d02875208d17d4395
  ErrorMessage b0470a74191782e72607e7c5b87318de
  HoleInferredType 785c100e33c3249a5b102046be9d34f6
  TSAfter 3632e66d118941cae7ca81a4c9abccf6
  tsAfterIdentifiers f66c915ceaf19a8b40bffcd6eb7d5cc6
  tsAfterRecordFields f66c915ceaf19a8b40bffcd6eb7d5cc6
import  -/  Language.PureScript.Errors 3c1ad933587510f8b20a8c9ec2e86ce9
  Error 9d57b5eea8edab35a0c18a3e8782325c
  MultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
  runMultipleErrors e1ef6a17348ccfe3ef65185d3c5f9026
import  -/  Language.PureScript.Errors.JSON dd4b902f2e772e21e16fc115c7544009
  exports: 1c2e11de4e9f5d383b0185c64dbff5f4
  toJSONError a108a802575c5558581debcce2c07b5d
import  -/  Language.PureScript.Ide.Types 4bb81e9de3788f7f63a68a23e190eb73
  exports: e5ee4d37ef25d4dfedd36ea1d435a17a
  Completion 8516aef71676dd56642f7ff0d91a2145
  ModuleIdent 1c3e4fd0dbf40b15e17f651377822ef5
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  runModuleName 58b788b37f600c0f34fa85241d7748ad
import  -/  Language.PureScript.Pretty.Types 1303ea05006a6ec61edb2f109218248a
  prettyPrintLabel 11a28b259161844f1d8d17a50499925b
  prettyPrintTypeWithUnicode f466b66a099fc0f20ff2c59e7d8098b7
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  Type d5fc19231e8a71936895da17eade4f5b
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  unordered-containers-0.2.9.0:Data.HashMap.Base aa3368c2691ac85cecf0d74a4bea8e4d
import  -/  unordered-containers-0.2.9.0:Data.HashMap.Lazy b562aae920b9d0cccc6d42264ed86aa4
347304649e024d1c6990f4b438ecc115
  $fShowIdeError ::
    GHC.Show.Show Language.PureScript.Ide.Error.IdeError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Ide.Error.IdeError
                  Language.PureScript.Ide.Error.$fShowIdeError_$cshowsPrec
                  Language.PureScript.Ide.Error.$fShowIdeError_$cshow
                  Language.PureScript.Ide.Error.$fShowIdeError_$cshowList -}
347304649e024d1c6990f4b438ecc115
  $fShowIdeError1 ::
    Language.PureScript.Ide.Error.IdeError -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Ide.Error.IdeError)
                   (w1 :: GHC.Base.String) ->
                 Language.PureScript.Ide.Error.$w$cshowsPrec 0# w w1) -}
fc5fa466318c10bd3f2e384a17e8706b
  $fShowIdeError2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
347304649e024d1c6990f4b438ecc115
  $fShowIdeError_$cshow ::
    Language.PureScript.Ide.Error.IdeError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Ide.Error.IdeError) ->
                 Language.PureScript.Ide.Error.$fShowIdeError_$cshowsPrec
                   Language.PureScript.Ide.Error.$fShowIdeError2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
347304649e024d1c6990f4b438ecc115
  $fShowIdeError_$cshowList ::
    [Language.PureScript.Ide.Error.IdeError] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Ide.Error.IdeError])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Ide.Error.IdeError
                   Language.PureScript.Ide.Error.$fShowIdeError1
                   ls
                   s) -}
347304649e024d1c6990f4b438ecc115
  $fShowIdeError_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Ide.Error.IdeError -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Ide.Error.IdeError)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Ide.Error.$w$cshowsPrec ww1 w1 w2 }) -}
347304649e024d1c6990f4b438ecc115
  $fToJSONIdeError ::
    Data.Aeson.Types.ToJSON.ToJSON
      Language.PureScript.Ide.Error.IdeError
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Ide.Error.IdeError
                  Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoJSON
                  Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoEncoding
                  Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoJSONList
                  Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoEncodingList -}
347304649e024d1c6990f4b438ecc115
  $fToJSONIdeError_$ctoEncoding ::
    Language.PureScript.Ide.Error.IdeError
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.Ide.Error.IdeError) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoJSON x))
                  `cast`
                (<Language.PureScript.Ide.Error.IdeError>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
347304649e024d1c6990f4b438ecc115
  $fToJSONIdeError_$ctoEncodingList ::
    [Language.PureScript.Ide.Error.IdeError]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Ide.Error.IdeError
                   Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoEncoding) -}
347304649e024d1c6990f4b438ecc115
  $fToJSONIdeError_$ctoJSON ::
    Language.PureScript.Ide.Error.IdeError
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1 -}
347304649e024d1c6990f4b438ecc115
  $fToJSONIdeError_$ctoJSONList ::
    [Language.PureScript.Ide.Error.IdeError]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Ide.Error.IdeError]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Ide.Error.IdeError
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Ide.Error.IdeError
                                     c
                                     Language.PureScript.Ide.Error.$fToJSONIdeError_$ctoJSON)
                                  n1
                                  x)))))) -}
4196a9d303ee11bb14352e91a8f378a1
  $sinsert_$s$wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.SmallArray#
         (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><L,U><L,U><S,U> -}
5c174b99be4a3ae75d3b2d5c84d8e8b8
  $tc'GeneralError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12522733626707492266##
                   3438999115561861608##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tc'GeneralError2
                   0#
                   Language.PureScript.Ide.Error.$tc'GeneralError1) -}
15f920ed27abca7f45d71215bf717c6c
  $tc'GeneralError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b3d4c5fda2c50421ec091447dde51883
  $tc'GeneralError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tc'GeneralError3) -}
407bb6ef67a1de4e05bc0f30ec1b3673
  $tc'GeneralError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GeneralError"#) -}
6b62f8a7e071cd98ab349c773d7c304f
  $tc'ModuleFileNotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12353254228620463235##
                   3878796696286209896##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tc'ModuleFileNotFound1
                   0#
                   Language.PureScript.Ide.Error.$tc'GeneralError1) -}
8cc82764ca13b63951713f84f4b0f7c2
  $tc'ModuleFileNotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tc'ModuleFileNotFound2) -}
c9ebbc8b7bf8acc16ed26c3c6922533a
  $tc'ModuleFileNotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ModuleFileNotFound"#) -}
669309ffc7a81cfa7157dbeb3e4ee82d
  $tc'ModuleNotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9257450862538844177##
                   1605917933184937831##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tc'ModuleNotFound1
                   0#
                   Language.PureScript.Ide.Error.$tc'GeneralError1) -}
c9d6c6920d2a6fa950e4f5a10b3edfc9
  $tc'ModuleNotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tc'ModuleNotFound2) -}
ae0e348d42a80226f44777d97173aac4
  $tc'ModuleNotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ModuleNotFound"#) -}
98fda9ed0b52b4d20d916cbde363b038
  $tc'NotFound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15306152710479935652##
                   18056939125619718141##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tc'NotFound1
                   0#
                   Language.PureScript.Ide.Error.$tc'GeneralError1) -}
e2f34492d243457f986c388667b8b03a
  $tc'NotFound1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tc'NotFound2) -}
b133834e41790fce6777d28f86e9b7a8
  $tc'NotFound2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NotFound"#) -}
149affbf30f240adbda4f65781bd844f
  $tc'ParseError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7445418280268093025##
                   14813752997558167635##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tc'ParseError2
                   0#
                   Language.PureScript.Ide.Error.$tc'ParseError1) -}
3716802bbeab79b5a00960821b5df36b
  $tc'ParseError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c13549ffcb0c029d46a8bc3fef448a64
  $tc'ParseError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tc'ParseError3) -}
fbebc79ea1894479cc615ee3a159d173
  $tc'ParseError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ParseError"#) -}
56a7ac77318bc135ae39259a9426b06e
  $tc'RebuildError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3155073423747398646##
                   5732124676719855892##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tc'RebuildError2
                   0#
                   Language.PureScript.Ide.Error.$tc'RebuildError1) -}
75afe8d3be6834837bc973d5e4d1108a
  $tc'RebuildError1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
55a399f9838b42a5c432854afa7a8116
  $tc'RebuildError2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tc'RebuildError3) -}
c5a23ffe4ea99f841c21d33d70321ce1
  $tc'RebuildError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RebuildError"#) -}
3fa13776fc2c44121080b2a5197e0613
  $tcIdeError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2747895358630376962##
                   12757510915801441791##
                   Language.PureScript.Ide.Error.$trModule
                   Language.PureScript.Ide.Error.$tcIdeError1
                   0#
                   GHC.Types.krep$*) -}
6faae8faea17b126080fb63d042c3005
  $tcIdeError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$tcIdeError2) -}
6acb1df7fac73b8c9d7cd23fa3acc8b7
  $tcIdeError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("IdeError"#) -}
075e509b9946fd9d4bf794471b56b843
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Ide.Error.$trModule3
                   Language.PureScript.Ide.Error.$trModule1) -}
484d69ae94ce080a448d1d50c3e843b8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$trModule2) -}
de1f9f60f5ad979846af8f015491bbdb
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Ide.Error"#) -}
0c19db532b791d165081fc1e3d65f695
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Ide.Error.$trModule4) -}
8d2e69bd71dc699855b9dd513501ab32
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
347304649e024d1c6990f4b438ecc115
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Language.PureScript.Ide.Error.IdeError
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
c223256bbd38433a8a5fac95aff7b9ee
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Array.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> Data.HashMap.Array.Array
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><S,U><S,U><S,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: Data.HashMap.Array.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 let {
                   exit :: v
                           -> Data.HashMap.Array.Array#
                                (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                           -> GHC.Prim.Int#
                           -> Data.Text.Internal.Text
                           -> v
                           -> Data.HashMap.Array.Array
                                (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     <join 5> {- Arity: 5, Strictness: <L,U><S,U><S,U><L,U><L,U> -}
                   = \ (w3 :: v)[OneShot]
                       (ww3 :: Data.HashMap.Array.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))[OneShot]
                       (ww4 :: GHC.Prim.Int#)[OneShot]
                       (k2 :: Data.Text.Internal.Text)[OneShot]
                       (y :: v)[OneShot] ->
                     case GHC.Magic.runRW#
                            @ ('GHC.Types.TupleRep
                                 '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                            @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Data.HashMap.Array.Array
                                   (Data.HashMap.Base.Leaf Data.Text.Internal.Text v) #)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.thawSmallArray#
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                    @ GHC.Prim.RealWorld
                                    ww3
                                    0#
                                    (GHC.Prim.sizeofSmallArray#
                                       @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                       ww3)
                                    s1 of ds2 { (#,#) ipv4 ipv5 ->
                             case GHC.Prim.writeSmallArray#
                                    @ GHC.Prim.RealWorld
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                    ipv5
                                    ww4
                                    (Data.HashMap.Base.L
                                       @ Data.Text.Internal.Text
                                       @ v
                                       k2
                                       (w k2 w3 y))
                                    ipv4 of s' { DEFAULT ->
                             case GHC.Prim.unsafeFreezeSmallArray#
                                    @ GHC.Prim.RealWorld
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                    ipv5
                                    s' of ds3 { (#,#) ipv6 ipv7 ->
                             (# ipv6,
                                Data.HashMap.Array.Array
                                  @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                  ipv7 #) } } }) of ds2 { (#,#) ipv4 ipv5 ->
                     ipv5 }
                 } in
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> Data.HashMap.Array.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> Data.HashMap.Array.Array
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     <join 7> {- Arity: 7,
                                 Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww5 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww6 :: Data.HashMap.Array.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww7 :: GHC.Prim.Int#)
                       (ww8 :: GHC.Prim.Int#) ->
                     case GHC.Prim.>=# ww7 ww8 of lwild {
                       DEFAULT
                       -> case GHC.Prim.indexSmallArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww6
                                 ww7 of ds1 { Unit# ipv3 ->
                          case ipv3 of wild { Data.HashMap.Base.L kx y ->
                          case kx of wild1 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.==# ww5 dt5 of lwild1 {
                            DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                            1#
                            -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.ByteArray#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.Word#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww5)
                                      GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                               case GHC.Prim.narrow32Int# ds3 of wild2 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                                 0#
                                 -> exit
                                      w3
                                      ww6
                                      ww7
                                      (Data.Text.Internal.Text ww3 ww4 ww5)
                                      y } } } } } }
                       1#
                       -> case GHC.Magic.runRW#
                                 @ ('GHC.Types.TupleRep
                                      '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                 @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.HashMap.Array.Array
                                        (Data.HashMap.Base.Leaf Data.Text.Internal.Text v) #)
                                 (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.newSmallArray#
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         @ GHC.Prim.RealWorld
                                         (GHC.Prim.+# ww8 1#)
                                         (Data.HashMap.Array.undefinedElem
                                            @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                         s1 of ds { (#,#) ipv3 ipv4 ->
                                  case GHC.Prim.copySmallArray#
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         @ GHC.Prim.RealWorld
                                         ww6
                                         0#
                                         ipv4
                                         0#
                                         ww8
                                         ipv3 of s2 { DEFAULT ->
                                  case GHC.Prim.writeSmallArray#
                                         @ GHC.Prim.RealWorld
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         ipv4
                                         ww8
                                         (Data.HashMap.Base.L
                                            @ Data.Text.Internal.Text
                                            @ v
                                            (Data.Text.Internal.Text ww3 ww4 ww5)
                                            w3)
                                         s2 of s' { DEFAULT ->
                                  case GHC.Prim.unsafeFreezeSmallArray#
                                         @ GHC.Prim.RealWorld
                                         @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                         ipv4
                                         s' of ds2 { (#,#) ipv5 ipv6 ->
                                  (# ipv5,
                                     Data.HashMap.Array.Array
                                       @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                       ipv6 #) } } } }) of ds1 { (#,#) ipv3 ipv4 ->
                          ipv4 } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofSmallArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
1a28f4b216d780a12664d09e07cc2d83
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
b6851d79d17ebb1d91ecf2c3b3a3e720
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 7, Strictness: <S,U><L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
347304649e024d1c6990f4b438ecc115
  data IdeError
    = GeneralError Data.Text.Internal.Text
    | NotFound Data.Text.Internal.Text
    | ModuleNotFound Language.PureScript.Ide.Types.ModuleIdent
    | ModuleFileNotFound Language.PureScript.Ide.Types.ModuleIdent
    | ParseError Text.Parsec.Error.ParseError Data.Text.Internal.Text
    | RebuildError Language.PureScript.Errors.MultipleErrors
bb416f1287f34931eb661b96b50eefcf
  prettyPrintTypeSingleLine ::
    Language.PureScript.Types.Type a -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode
                        @ a
                        x of dt { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Language.PureScript.Ide.Error.$wouter
                           ipv1
                           4#
                           dt
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case GHC.Base.map
                        @ Data.Text.Internal.Text
                        @ Data.Text.Internal.Text
                        Data.Text.strip
                        (Data.Text.$wlines ww1 ww2 ww3) of wild {
                   [] -> Language.PureScript.Ide.Error.prettyPrintTypeSingleLine1
                   : x1 xs
                   -> Data.Text.concat
                        (GHC.Types.:
                           @ Data.Text.Internal.Text
                           x1
                           (Language.PureScript.Ide.Error.prettyPrintTypeSingleLine_go1
                              xs)) } } } }) -}
547f8f935179a009f8887654d102721a
  prettyPrintTypeSingleLine1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.concat
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
1e9c2bb1144c4e0dbdf058860cec1ef3
  prettyPrintTypeSingleLine_go1 ::
    [Data.Text.Internal.Text] -> [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,1*U> -}
instance GHC.Show.Show [Language.PureScript.Ide.Error.IdeError]
  = Language.PureScript.Ide.Error.$fShowIdeError
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Ide.Error.IdeError]
  = Language.PureScript.Ide.Error.$fToJSONIdeError
"SC:$wpoly_go10" [0] forall @ v
                            (sc :: GHC.Prim.Word#)
                            (sc1 :: GHC.Prim.SmallArray#
                                      (Data.HashMap.Base.HashMap Data.Text.Internal.Text v))
                            (sc2 :: GHC.Prim.Int#)
                            (sc3 :: v)
                            (sc4 :: GHC.Prim.Int#)
                            (sc5 :: GHC.Prim.Int#)
                            (sc6 :: GHC.Prim.ByteArray#)
                            (sc7 :: GHC.Prim.Word#)
  Language.PureScript.Ide.Error.$wpoly_go1 @ v
                                           sc7
                                           sc6
                                           sc5
                                           sc4
                                           sc3
                                           sc2
                                           (Data.HashMap.Base.BitmapIndexed
                                              @ Data.Text.Internal.Text
                                              @ v
                                              sc
                                              sc1)
  = Language.PureScript.Ide.Error.$sinsert_$s$wpoly_go1
      @ v
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

