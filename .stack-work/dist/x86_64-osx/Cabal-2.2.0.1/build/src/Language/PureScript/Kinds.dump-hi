
==================== FINAL INTERFACE ====================
2019-01-24 14:13:36.401909 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds [family instance module] 8043
  interface hash: 159c9d2f82e7a678c8a923fc51d1ba21
  ABI hash: e26b9cf8211f7e72bb44fdd3faed066e
  export-list hash: fe71635ad7964c0d620fb0685614a050
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f735dc297da5641e71a52d73652597dd
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Kinds.annForKind
  Language.PureScript.Kinds.compareKind
  Language.PureScript.Kinds.eqKind
  Language.PureScript.Kinds.everythingOnKinds
  Language.PureScript.Kinds.everywhereOnKinds
  Language.PureScript.Kinds.everywhereOnKindsM
  Language.PureScript.Kinds.getAnnForKind
  Language.PureScript.Kinds.kindFromJSON
  Language.PureScript.Kinds.kindToJSON
  Language.PureScript.Kinds.setAnnForKind
  Language.PureScript.Kinds.srcFunKind
  Language.PureScript.Kinds.srcKUnknown
  Language.PureScript.Kinds.srcNamedKind
  Language.PureScript.Kinds.srcRow
  Language.PureScript.Kinds.Kind{Language.PureScript.Kinds.FunKind Language.PureScript.Kinds.KUnknown Language.PureScript.Kinds.NamedKind Language.PureScript.Kinds.Row}
  Language.PureScript.Kinds.SourceKind
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST.SourcePos
                     Language.PureScript.Comments Language.PureScript.Names
package dependencies: aeson-1.3.1.1 array-0.5.2.0
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      microlens-0.4.9.1 microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.3.0 random-1.1 scientific-0.3.6.2
                      tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types 80d8929e36e8070f3ae205ac2577d043
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  base-4.11.1.0:Control.Applicative 55d9b3a7491623b0362290e162d67308
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  microlens-0.4.9.1:Lens.Micro 962434009a31a5b07a9c325f04604c4d
import  -/  microlens-0.4.9.1:Lens.Micro.Type 60377ed102f710af0bf94059aa466f74
import  -/  microlens-platform-0.3.10:Lens.Micro.Platform 0a8b1a3c754e3254d224cc9602b42f64
import  -/  Language.PureScript.AST.SourcePos 63acacac5b7be73d04e5be0047a9a89a
  exports: a1e32a05596348684f99f9072c553e2b
  NullSourceAnn 5a0bced03127a02790cb165450e72c45
  SourceAnn f5708ed135df009dfa0254486771ef74
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  KindName 7782d66ce60bd67282cf566485701e07
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
5e0361ee324aa435f4976ea2eac1777d
  $fEqKind :: GHC.Classes.Eq (Language.PureScript.Kinds.Kind a)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Language.PureScript.Kinds.Kind a)
                  (Language.PureScript.Kinds.eqKind @ a @ a)
                  (Language.PureScript.Kinds.$fEqKind_$c/= @ a) -}
5e0361ee324aa435f4976ea2eac1777d
  $fEqKind_$c/= ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.eqKind @ a @ a x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind ::
    Data.Foldable.Foldable Language.PureScript.Kinds.Kind
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fFoldableKind_$cfold
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldr
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldr'
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldl
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldl'
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldr1
                  Language.PureScript.Kinds.$fFoldableKind_$cfoldl1
                  Language.PureScript.Kinds.$fFoldableKind_$ctoList
                  Language.PureScript.Kinds.$fFoldableKind_$cnull
                  Language.PureScript.Kinds.$fFoldableKind_$clength
                  Language.PureScript.Kinds.$fFoldableKind6
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Classes.Eq a>_R
                   ->_R <a>_R
                   ->_R <Language.PureScript.Kinds.Kind a>_R
                   ->_R Data.Semigroup.Internal.N:Any[0])
                  Language.PureScript.Kinds.$fFoldableKind_$cmaximum
                  Language.PureScript.Kinds.$fFoldableKind_$cminimum
                  Language.PureScript.Kinds.$fFoldableKind3
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Num.Num a>_R
                   ->_R <Language.PureScript.Kinds.Kind a>_R
                   ->_R Data.Semigroup.Internal.N:Sum[0] <a>_R)
                  Language.PureScript.Kinds.$fFoldableKind1
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Num.Num a>_R
                   ->_R <Language.PureScript.Kinds.Kind a>_R
                   ->_R Data.Semigroup.Internal.N:Product[0] <a>_R) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind1 ::
    GHC.Num.Num a =>
    Language.PureScript.Kinds.Kind a
    -> Data.Semigroup.Internal.Product a
  {- Arity: 1, Strictness: <L,U(A,A,U,A,A,A,C(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) ->
                 Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                   @ (Data.Semigroup.Internal.Product a)
                   @ a
                   (Data.Semigroup.Internal.$fMonoidProduct @ a $dNum)
                   (Language.PureScript.Kinds.$fFoldableKind2 @ a)
                     `cast`
                   (<a>_R ->_R Sym (Data.Semigroup.Internal.N:Product[0] <a>_R))) -}
027b49ca6ffc42224fec2f59c464c867
  $fFoldableKind10 :: a
  {- Strictness: x -}
ac06b0d402bf29eb3d91dc2f871a8cb0
  $fFoldableKind2 :: a -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True) (\ @ a (v :: a) -> v) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind3 ::
    GHC.Num.Num a =>
    Language.PureScript.Kinds.Kind a -> Data.Semigroup.Internal.Sum a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U,A,C(C1(U)),A,A,A,C(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) ->
                 Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                   @ (Data.Semigroup.Internal.Sum a)
                   @ a
                   (Data.Semigroup.Internal.$fMonoidSum @ a $dNum)
                   (Language.PureScript.Kinds.$fFoldableKind2 @ a)
                     `cast`
                   (<a>_R ->_R Sym (Data.Semigroup.Internal.N:Sum[0] <a>_R))) -}
3bdcd4c24b66a607b9e19bdf8bd0cd9f
  $fFoldableKind4 :: a
  {- Strictness: x -}
e7f9b5fa6a0a3fc74051bcc331a3beef
  $fFoldableKind5 :: a
  {- Strictness: x -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind6 ::
    GHC.Classes.Eq a =>
    a
    -> Language.PureScript.Kinds.Kind a -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(1*C1(C(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dEq :: GHC.Classes.Eq a) (eta :: a) ->
                 Language.PureScript.Kinds.$fFoldableKind_$s$cfoldMap
                   @ a
                   (GHC.Classes.== @ a $dEq eta)
                     `cast`
                   (<a>_R ->_R Sym (Data.Semigroup.Internal.N:Any[0]))) -}
b094198f358328efaad3385b190790d6
  $fFoldableKind7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
31ae3a393cef3eee32b5a5cb94c40c9e
  $fFoldableKind8 ::
    a
    -> (GHC.Types.Int -> GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><C(S),1*C1(U(U))><S,1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (x :: a)
                   (k :: GHC.Types.Int -> GHC.Types.Int)
                   (z2 :: GHC.Types.Int) ->
                 case z2 of wild { GHC.Types.I# x1 ->
                 k (GHC.Types.I# (GHC.Prim.+# x1 1#)) }) -}
0fbdfa6b6997d657d5058e9c36a35c87
  $fFoldableKind9 :: a
  {- Strictness: x -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfold ::
    GHC.Base.Monoid m => Language.PureScript.Kinds.Kind m -> m
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(A,A,C(C1(U)),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ m ($dMonoid :: GHC.Base.Monoid m) ->
                 Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                   @ m
                   @ m
                   $dMonoid
                   (GHC.Base.id @ m)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldMap ::
    GHC.Base.Monoid m =>
    (a -> m) -> Language.PureScript.Kinds.Kind a -> m
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,C(C1(U)),A)><L,C(U)><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldl ::
    (b -> a -> b) -> b -> Language.PureScript.Kinds.Kind a -> b
  {- Arity: 3, Strictness: <L,C(C1(U))><L,U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ b
                   @ a
                   (f :: b -> a -> b)
                   (z2 :: b)
                   (t1 :: Language.PureScript.Kinds.Kind a) ->
                 (Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                    @ (Data.Semigroup.Internal.Dual (Data.Semigroup.Internal.Endo b))
                    @ a
                    (Language.PureScript.Kinds.$fFoldableKind_$dMonoid @ b)
                    (\ (x :: a) (y :: b) -> f y x)
                      `cast`
                    (<a>_R
                     ->_R Sym (Data.Semigroup.Internal.N:Dual[0]
                                   (Data.Semigroup.Internal.N:Endo[0] <b>_R)))
                    t1)
                   `cast`
                 (Data.Semigroup.Internal.N:Dual[0]
                      (Data.Semigroup.Internal.N:Endo[0] <b>_R))
                   z2) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldl' ::
    (b -> a -> b) -> b -> Language.PureScript.Kinds.Kind a -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U><S,1*U>,
     Unfolding: (\ @ b
                   @ a
                   (f :: b -> a -> b)
                   (z0 :: b)
                   (xs :: Language.PureScript.Kinds.Kind a) ->
                 Language.PureScript.Kinds.$fFoldableKind_$cfoldr
                   @ a
                   @ (b -> b)
                   (\ (x :: a) (k :: b -> b)[OneShot] (z2 :: b) ->
                    case f z2 x of vx { DEFAULT -> k vx })
                   (GHC.Base.id @ b)
                   xs
                   z0) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldl1 ::
    (a -> a -> a) -> Language.PureScript.Kinds.Kind a -> a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ a
                   (f :: a -> a -> a)
                   (xs :: Language.PureScript.Kinds.Kind a) ->
                 case (Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                         @ (Data.Semigroup.Internal.Dual
                              (Data.Semigroup.Internal.Endo (GHC.Base.Maybe a)))
                         @ a
                         (Language.PureScript.Kinds.$fFoldableKind_$dMonoid
                            @ (GHC.Base.Maybe a))
                         (\ (x :: a) (y :: GHC.Base.Maybe a) ->
                          GHC.Base.Just
                            @ a
                            (case y of wild {
                               GHC.Base.Nothing -> x GHC.Base.Just x1 -> f x1 x }))
                           `cast`
                         (<a>_R
                          ->_R Sym (Data.Semigroup.Internal.N:Dual[0]
                                        (Data.Semigroup.Internal.N:Endo[0] <GHC.Base.Maybe a>_R)))
                         xs)
                        `cast`
                      (Data.Semigroup.Internal.N:Dual[0]
                           (Data.Semigroup.Internal.N:Endo[0] <GHC.Base.Maybe a>_R))
                        (GHC.Base.Nothing @ a) of wild {
                   GHC.Base.Nothing -> Language.PureScript.Kinds.$fFoldableKind9 @ a
                   GHC.Base.Just v -> v }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldr ::
    (a -> b -> b) -> b -> Language.PureScript.Kinds.Kind a -> b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),C(C1(U))><L,U><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldr' ::
    (a -> b -> b) -> b -> Language.PureScript.Kinds.Kind a -> b
  {- Arity: 3, Strictness: <L,C(C1(U))><L,U><S,1*U>,
     Unfolding: (\ @ a
                   @ b
                   (f :: a -> b -> b)
                   (z0 :: b)
                   (xs :: Language.PureScript.Kinds.Kind a) ->
                 (Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                    @ (Data.Semigroup.Internal.Dual
                         (Data.Semigroup.Internal.Endo (b -> b)))
                    @ a
                    (Language.PureScript.Kinds.$fFoldableKind_$dMonoid @ (b -> b))
                    (\ (x :: a) (y :: b -> b) (z2 :: b) ->
                     case f x z2 of vx { DEFAULT -> y vx })
                      `cast`
                    (<a>_R
                     ->_R Sym (Data.Semigroup.Internal.N:Dual[0]
                                   (Data.Semigroup.Internal.N:Endo[0] <b -> b>_R)))
                    xs)
                   `cast`
                 (Data.Semigroup.Internal.N:Dual[0]
                      (Data.Semigroup.Internal.N:Endo[0] <b -> b>_R))
                   (GHC.Base.id @ b)
                   z0) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cfoldr1 ::
    (a -> a -> a) -> Language.PureScript.Kinds.Kind a -> a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ a
                   (f :: a -> a -> a)
                   (xs :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.$fFoldableKind_$cfoldr
                        @ a
                        @ (GHC.Base.Maybe a)
                        (\ (x :: a) (m :: GHC.Base.Maybe a)[OneShot] ->
                         GHC.Base.Just
                           @ a
                           (case m of wild {
                              GHC.Base.Nothing -> x GHC.Base.Just y -> f x y }))
                        (GHC.Base.Nothing @ a)
                        xs of wild {
                   GHC.Base.Nothing -> Language.PureScript.Kinds.$fFoldableKind10 @ a
                   GHC.Base.Just v -> v }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$clength ::
    Language.PureScript.Kinds.Kind a -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (xs :: Language.PureScript.Kinds.Kind a) ->
                 Language.PureScript.Kinds.$fFoldableKind_$cfoldr
                   @ a
                   @ (GHC.Types.Int -> GHC.Types.Int)
                   (Language.PureScript.Kinds.$fFoldableKind8 @ a)
                   (GHC.Base.id @ GHC.Types.Int)
                   xs
                   Language.PureScript.Kinds.$fFoldableKind7) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cmaximum ::
    GHC.Classes.Ord a => Language.PureScript.Kinds.Kind a -> a
  {- Arity: 1, Strictness: <L,U(A,A,A,A,A,C(C1(U)),A,A)>,
     Unfolding: (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   g :: GHC.Base.Monoid (Data.Functor.Utils.Max a)
                   = Data.Functor.Utils.$fMonoidMax @ a $dOrd
                 } in
                 \ (x :: Language.PureScript.Kinds.Kind a) ->
                 case (Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                         @ (Data.Functor.Utils.Max a)
                         @ a
                         g
                         (GHC.Base.Just @ a)
                           `cast`
                         (<a>_R ->_R Sym (Data.Functor.Utils.N:Max[0]) <a>_N)
                         x)
                        `cast`
                      (Data.Functor.Utils.N:Max[0] <a>_N) of wild {
                   GHC.Base.Nothing -> Language.PureScript.Kinds.$fFoldableKind5 @ a
                   GHC.Base.Just v -> v }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cminimum ::
    GHC.Classes.Ord a => Language.PureScript.Kinds.Kind a -> a
  {- Arity: 1, Strictness: <L,U(A,A,A,C(C1(U)),A,A,A,A)>,
     Unfolding: (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   g :: GHC.Base.Monoid (Data.Functor.Utils.Min a)
                   = Data.Functor.Utils.$fMonoidMin @ a $dOrd
                 } in
                 \ (x :: Language.PureScript.Kinds.Kind a) ->
                 case (Language.PureScript.Kinds.$fFoldableKind_$cfoldMap
                         @ (Data.Functor.Utils.Min a)
                         @ a
                         g
                         (GHC.Base.Just @ a)
                           `cast`
                         (<a>_R ->_R Sym (Data.Functor.Utils.N:Min[0]) <a>_N)
                         x)
                        `cast`
                      (Data.Functor.Utils.N:Min[0] <a>_N) of wild {
                   GHC.Base.Nothing -> Language.PureScript.Kinds.$fFoldableKind4 @ a
                   GHC.Base.Just v -> v }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$cnull ::
    Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Kinds.Kind a) ->
                 case ds of wild { DEFAULT -> GHC.Types.False }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$ctoList :: Language.PureScript.Kinds.Kind a -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a (t1 :: Language.PureScript.Kinds.Kind a) ->
                 GHC.Base.build
                   @ a
                   (\ @ b (c :: a -> b -> b)[OneShot] (n :: b)[OneShot] ->
                    Language.PureScript.Kinds.$fFoldableKind_$cfoldr
                      @ a
                      @ b
                      c
                      n
                      t1)) -}
b5501e31f8cd8772bf3ca93c1d9d02cf
  $fFoldableKind_$dMonoid ::
    GHC.Base.Monoid
      (Data.Semigroup.Internal.Dual (Data.Semigroup.Internal.Endo b))
  {- Unfolding: (\ @ b ->
                 Data.Semigroup.Internal.$fMonoidDual
                   @ (Data.Semigroup.Internal.Endo b)
                   (Data.Semigroup.Internal.$fMonoidEndo @ b)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFoldableKind_$s$cfoldMap ::
    (a -> Data.Semigroup.Internal.Any)
    -> Language.PureScript.Kinds.Kind a -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),C(U)><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind ::
    Data.Aeson.Types.FromJSON.FromJSON a =>
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Kinds.Kind a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C1(C1(U)))),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: Data.Aeson.Types.FromJSON.FromJSON a).
                  @ (Language.PureScript.Kinds.Kind a)
                  (Language.PureScript.Kinds.$fFromJSONKind_$cparseJSON @ a v)
                  (Language.PureScript.Kinds.$fFromJSONKind_$cparseJSONList @ a v) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind0 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Kinds.Kind ())
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Kinds.Kind ())
                  Language.PureScript.Kinds.$fFromJSONKind0_$cparseJSON
                  Language.PureScript.Kinds.$fFromJSONKind0_$cparseJSONList -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind0_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Kinds.Kind ())
  {- Arity: 1,
     Unfolding: (Language.PureScript.Kinds.kindFromJSON
                   @ ()
                   Language.PureScript.Kinds.$fFromJSONKind8
                     `cast`
                   (Sym (Data.Aeson.Types.Internal.N:Parser[0] <()>_R))
                   Data.Aeson.Types.FromJSON.$fFromJSON()_$cparseJSON) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind0_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind ()]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg2 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Kinds.$fFromJSONKind7
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Kinds.$fFromJSONKind6
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Kinds.$fFromJSONKind5
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Kinds.Kind ()] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg2)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Kinds.Kind ()]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Kinds.$fFromJSONKind0_go 0# ($wgo 0#) } }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind0_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind ()]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind1 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Kinds.Kind
         Language.PureScript.AST.SourcePos.SourceAnn)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Kinds.Kind
                       Language.PureScript.AST.SourcePos.SourceAnn)
                  Language.PureScript.Kinds.$fFromJSONKind1_$cparseJSON
                  Language.PureScript.Kinds.$fFromJSONKind1_$cparseJSONList -}
831631645097d109734e7c48b50a1cda
  $fFromJSONKind10 ::
    Data.Aeson.Types.Internal.Array
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
  {- Arity: 1, Strictness: <S(SSS),1*U(U,1*U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Aeson.Types.Internal.Array) ->
                 case w of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                 Language.PureScript.Kinds.$w$cparseJSON ww1 ww2 ww3 }) -}
2a48b30fb4b252361453cb4705f196ef
  $fFromJSONKind11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Kinds.$fFromJSONKind12) -}
ae28ffd4d24c16337505a5be7e1cc42f
  $fFromJSONKind12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" into a tuple of length 2"#) -}
6b2b9e79215cc13b4449ba43ae71a5d3
  $fFromJSONKind13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cannot unpack array of length "#) -}
1c44a5905fcad9c08970abdf6b505705
  $fFromJSONKind14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Kinds.$fFromJSONKind15) -}
9414c7466c0360ccfd2c6ebde469fbe0
  $fFromJSONKind15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("(a, b)"#) -}
2c7fc2022c8d174503a029880f199ef6
  $fFromJSONKind16 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success
         Language.PureScript.AST.SourcePos.SourceAnn f4 r
    -> f4 r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (3, True, True)
                (\ @ f4 :: * -> *
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (ks :: Data.Aeson.Types.Internal.Success
                            Language.PureScript.AST.SourcePos.SourceAnn f4 r) ->
                 ks Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind1_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn)
  {- Arity: 1,
     Unfolding: (Language.PureScript.Kinds.kindFromJSON
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.Kinds.$fFromJSONKind16
                     `cast`
                   (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                             <Language.PureScript.AST.SourcePos.SourceAnn>_R))
                   Language.PureScript.Kinds.$fFromJSONKind9) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind1_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg2 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Kinds.$fFromJSONKind7
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Kinds.$fFromJSONKind6
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Kinds.$fFromJSONKind5
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Kinds.Kind
                                      Language.PureScript.AST.SourcePos.SourceAnn]
                                   f4
                                   r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg2)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Kinds.Kind
                                    Language.PureScript.AST.SourcePos.SourceAnn]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Kinds.$fFromJSONKind1_go 0# ($wgo 0#) } }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind1_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind
            Language.PureScript.AST.SourcePos.SourceAnn]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
f20d15e169fdb58a6f1d9adc95c51956
  $fFromJSONKind1_pathElem16 ::
    Data.Aeson.Types.Internal.JSONPathElement
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Aeson.Types.Internal.Index 0#) -}
f6642d7a7f3d76f85ffd7a560f6a4888
  $fFromJSONKind1_pathElem17 ::
    Data.Aeson.Types.Internal.JSONPathElement
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Aeson.Types.Internal.Index 1#) -}
6fbbb9f84d04c5fd84c5856bf2f826be
  $fFromJSONKind2 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success a f4 r
    -> f4 r
  {- Arity: 3, Strictness: <L,1*U><C(C(S)),1*C1(C1(U))><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ f4 :: * -> *
                   @ r
                   (path :: Data.Aeson.Types.Internal.JSONPath)
                   (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (_ks :: Data.Aeson.Types.Internal.Success a f4 r) ->
                 kf
                   (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                   Language.PureScript.Kinds.$fFromJSONKind_msg) -}
b09e8d60534f21b5fbdf0eb5d5d272ad
  $fFromJSONKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Invalid annotation"#) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind4 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success
         [Language.PureScript.Kinds.Kind a] f4 r
    -> f4 r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   @ f4 :: * -> *
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (ks :: Data.Aeson.Types.Internal.Success
                            [Language.PureScript.Kinds.Kind a] f4 r) ->
                 ks (GHC.Types.[] @ (Language.PureScript.Kinds.Kind a))) -}
e5658bc4c96ac8ce3380a801f351e345
  $fFromJSONKind5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
5b88cd28ac00d649edcbe04ebe861617
  $fFromJSONKind6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
08bdd4d6d38b6ee3a6588556012fd44c
  $fFromJSONKind7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
79b1fb8ef54f50f3c88b10441433c214
  $fFromJSONKind8 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f4 r
    -> Data.Aeson.Types.Internal.Success () f4 r
    -> f4 r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (3, True, True)
                (\ @ f4 :: * -> *
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f4 r)
                   (ks :: Data.Aeson.Types.Internal.Success () f4 r) ->
                 ks GHC.Tuple.()) -}
5d0b741f0ebf7841f2d53c6532d3b982
  $fFromJSONKind9 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.FromJSON.withArray
                   @ (Language.PureScript.AST.SourcePos.SourceSpan,
                      [Language.PureScript.Comments.Comment])
                   Language.PureScript.Kinds.$fFromJSONKind14
                   Language.PureScript.Kinds.$fFromJSONKind10) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind_$cparseJSON ::
    Data.Aeson.Types.FromJSON.FromJSON a =>
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Kinds.Kind a)
  {- Arity: 2, Strictness: <L,1*U(1*C(C1(C1(C1(U)))),A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON a)
                   (eta :: Data.Aeson.Types.Internal.Value) ->
                 Language.PureScript.Kinds.kindFromJSON
                   @ a
                   (Language.PureScript.Kinds.$fFromJSONKind2 @ a)
                     `cast`
                   (Sym (Data.Aeson.Types.Internal.N:Parser[0] <a>_R))
                   (Data.Aeson.Types.FromJSON.parseJSON @ a $dFromJSON)
                   eta) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFromJSONKind_$cparseJSONList ::
    Data.Aeson.Types.FromJSON.FromJSON a =>
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind a]
  {- Arity: 2, Strictness: <L,1*U(1*C(C1(C1(C1(U)))),A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON a)
                   (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg2 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Kinds.$fFromJSONKind7
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Kinds.$fFromJSONKind6
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Kinds.$fFromJSONKind5
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Kinds.Kind a] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg2)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Kinds.Kind a]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      let {
                        lvl54 :: Data.Aeson.Types.Internal.Value
                                 -> Data.Aeson.Types.Internal.Parser a
                        = Data.Aeson.Types.FromJSON.parseJSON @ a $dFromJSON
                      } in
                      letrec {
                        go :: GHC.Prim.Int#
                              -> [Data.Aeson.Types.Internal.Value]
                              -> Data.Aeson.Types.Internal.Parser
                                   [Language.PureScript.Kinds.Kind a]
                          {- Arity: 2, Strictness: <L,U><S,1*U> -}
                        = \ (x :: GHC.Prim.Int#)
                            (eta :: [Data.Aeson.Types.Internal.Value]) ->
                          case eta of wild2 {
                            []
                            -> (Language.PureScript.Kinds.$fFromJSONKind4 @ a)
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <[Language.PureScript.Kinds.Kind a]>_R))
                            : y ys
                            -> let {
                                 p1 :: Data.Aeson.Types.Internal.Parser
                                         (Language.PureScript.Kinds.Kind a)
                                 = Language.PureScript.Kinds.kindFromJSON
                                     @ a
                                     (Language.PureScript.Kinds.$fFromJSONKind2 @ a)
                                       `cast`
                                     (Sym (Data.Aeson.Types.Internal.N:Parser[0] <a>_R))
                                     lvl54
                                     y
                               } in
                               let {
                                 pathElem2 :: Data.Aeson.Types.Internal.JSONPathElement
                                 = Data.Aeson.Types.Internal.Index x
                               } in
                               let {
                                 ys1 :: Data.Aeson.Types.Internal.Parser
                                          [Language.PureScript.Kinds.Kind a]
                                 = case x of wild3 {
                                     DEFAULT -> go (GHC.Prim.+# wild3 1#) ys
                                     9223372036854775807#
                                     -> (Language.PureScript.Kinds.$fFromJSONKind4 @ a)
                                          `cast`
                                        (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                  <[Language.PureScript.Kinds.Kind a]>_R)) }
                               } in
                               (\ @ f1 :: * -> *
                                  @ r
                                  (eta1 :: Data.Aeson.Types.Internal.JSONPath)
                                  (eta2 :: Data.Aeson.Types.Internal.Failure f1 r)
                                  (eta3 :: Data.Aeson.Types.Internal.Success
                                             [Language.PureScript.Kinds.Kind a] f1 r) ->
                                p1
                                  `cast`
                                (Data.Aeson.Types.Internal.N:Parser[0]
                                     <Language.PureScript.Kinds.Kind a>_R)
                                  @ f1
                                  @ r
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.JSONPathElement
                                     pathElem2
                                     eta1)
                                  eta2
                                  (\ (a3 :: Language.PureScript.Kinds.Kind a) ->
                                   ys1
                                     `cast`
                                   (Data.Aeson.Types.Internal.N:Parser[0]
                                        <[Language.PureScript.Kinds.Kind a]>_R)
                                     @ f1
                                     @ r
                                     eta1
                                     eta2
                                     (\ (a4 :: [Language.PureScript.Kinds.Kind a]) ->
                                      eta3
                                        (GHC.Types.: @ (Language.PureScript.Kinds.Kind a) a3 a4))))
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <[Language.PureScript.Kinds.Kind a]>_R)) }
                      } in
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      go 0# ($wgo 0#) } }) -}
86089738f828069a7fa93a71492d3a6b
  $fFromJSONKind_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.PureScript.Kinds.$fFromJSONKind3) -}
5e0361ee324aa435f4976ea2eac1777d
  $fFunctorKind :: GHC.Base.Functor Language.PureScript.Kinds.Kind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fFunctorKind_$cfmap
                  Language.PureScript.Kinds.$fFunctorKind_$c<$ -}
5e0361ee324aa435f4976ea2eac1777d
  $fFunctorKind_$c<$ ::
    a
    -> Language.PureScript.Kinds.Kind b
    -> Language.PureScript.Kinds.Kind a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fFunctorKind_$cfmap ::
    (a -> b)
    -> Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fGenericKind ::
    GHC.Generics.Generic (Language.PureScript.Kinds.Kind a)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Language.PureScript.Kinds.Kind a)
                  (Language.PureScript.Kinds.$fGenericKind1 @ a)
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Kinds.Kind a>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Kind"
                                     "Language.PureScript.Kinds"
                                     "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                     'GHC.Types.False>_P
                                  <(GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R a)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Int))
                                    GHC.Generics.:+: GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "Row"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1 GHC.Generics.R a)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (Language.PureScript.Kinds.Kind
                                                                                 a))))
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "FunKind"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1 GHC.Generics.R a)
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               'GHC.Base.Nothing
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (Language.PureScript.Kinds.Kind
                                                                                  a))
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                'GHC.Base.Nothing
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (Language.PureScript.Kinds.Kind
                                                                                                   a))))
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "NamedKind"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        (GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R a)
                                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                                            GHC.Generics.S
                                                                                            ('GHC.Generics.MetaSel
                                                                                               'GHC.Base.Nothing
                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                               'GHC.Generics.DecidedLazy)
                                                                                            (GHC.Generics.K1
                                                                                               GHC.Generics.R
                                                                                               (Language.PureScript.Names.Qualified
                                                                                                  (Language.PureScript.Names.ProperName
                                                                                                     'Language.PureScript.Names.KindName)))))>_R) ; Sub (Sym (Language.PureScript.Kinds.Rep_Kind[0]
                                                                                                                                                                  <a>_N))) <x>_N)
                  (Language.PureScript.Kinds.$fGenericKind_$cto @ a) -}
5e0361ee324aa435f4976ea2eac1777d
  $fGenericKind1 ::
    Language.PureScript.Kinds.Kind a
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R a)
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Language.PureScript.Kinds.Kind a))))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R a)
             GHC.Generics.:*: (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    'GHC.Base.Nothing
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R (Language.PureScript.Kinds.Kind a))
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     (Language.PureScript.Kinds.Kind a))))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Language.PureScript.Names.Qualified
                                                       (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a @ x (x1 :: Language.PureScript.Kinds.Kind a) ->
                 case x1 of wild {
                   Language.PureScript.Kinds.KUnknown g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Kinds.Kind
                                                                        a))))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     (Language.PureScript.Kinds.Kind a))
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      (Language.PureScript.Kinds.Kind
                                                                         a))))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Names.Qualified
                                                                        (Language.PureScript.Names.ProperName
                                                                           'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (Language.PureScript.Kinds.Kind a))))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                              @ x
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <a>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R a>_R) <x>_N)
                              g2
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <GHC.Types.Int>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Types.Int>_R) <x>_N))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Types.Int)>_R) <x>_N))
                   Language.PureScript.Kinds.Row g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Kinds.Kind
                                                                        a))))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     (Language.PureScript.Kinds.Kind a))
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      (Language.PureScript.Kinds.Kind
                                                                         a))))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Names.Qualified
                                                                        (Language.PureScript.Names.ProperName
                                                                           'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (Language.PureScript.Kinds.Kind a))))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R (Language.PureScript.Kinds.Kind a)))
                              @ x
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <a>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R a>_R) <x>_N)
                              g2
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Language.PureScript.Kinds.Kind a>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (Language.PureScript.Kinds.Kind
                                                                a)>_R) <x>_N))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Row" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            (Language.PureScript.Kinds.Kind
                                                               a))>_R) <x>_N))
                   Language.PureScript.Kinds.FunKind g1 g2 g3
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Kinds.Kind
                                                                        a))))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     (Language.PureScript.Kinds.Kind a))
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      (Language.PureScript.Kinds.Kind
                                                                         a))))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Names.Qualified
                                                                        (Language.PureScript.Names.ProperName
                                                                           'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R
                                                        (Language.PureScript.Kinds.Kind a))
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         (Language.PureScript.Kinds.Kind
                                                                            a)))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (Language.PureScript.Names.Qualified
                                                          (Language.PureScript.Names.ProperName
                                                             'Language.PureScript.Names.KindName)))))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R (Language.PureScript.Kinds.Kind a))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (Language.PureScript.Kinds.Kind a)))
                              @ x
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <a>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R a>_R) <x>_N)
                              (GHC.Generics.:*:
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R (Language.PureScript.Kinds.Kind a)))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R (Language.PureScript.Kinds.Kind a)))
                                 @ x
                                 g2
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Kinds.Kind a>_R
                                           <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                             <*>_N
                                                             <GHC.Generics.S>_P
                                                             <'GHC.Generics.MetaSel
                                                                'GHC.Base.Nothing
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy>_P
                                                             <GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (Language.PureScript.Kinds.Kind
                                                                   a)>_R) <x>_N)
                                 g3
                                   `cast`
                                 (Sym (GHC.Generics.N:K1[0]
                                           <*>_N
                                           <GHC.Generics.R>_P
                                           <Language.PureScript.Kinds.Kind a>_R
                                           <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                             <*>_N
                                                             <GHC.Generics.S>_P
                                                             <'GHC.Generics.MetaSel
                                                                'GHC.Base.Nothing
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy>_P
                                                             <GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (Language.PureScript.Kinds.Kind
                                                                   a)>_R) <x>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (Language.PureScript.Kinds.Kind a))
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (Language.PureScript.Kinds.Kind
                                                                                 a)))>_R) <x>_N))
                   Language.PureScript.Kinds.NamedKind g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Kinds.Kind
                                                                        a))))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R a)
                              GHC.Generics.:*: (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     'GHC.Base.Nothing
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     (Language.PureScript.Kinds.Kind a))
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      'GHC.Base.Nothing
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      (Language.PureScript.Kinds.Kind
                                                                         a))))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R a)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     'GHC.Base.Nothing
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (Language.PureScript.Names.Qualified
                                                                        (Language.PureScript.Names.ProperName
                                                                           'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R
                                                        (Language.PureScript.Kinds.Kind a))
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         (Language.PureScript.Kinds.Kind
                                                                            a)))))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (Language.PureScript.Names.Qualified
                                                          (Language.PureScript.Names.ProperName
                                                             'Language.PureScript.Names.KindName)))))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R a))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.KindName))))
                              @ x
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <a>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R a>_R) <x>_N)
                              g2
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Language.PureScript.Names.Qualified
                                           (Language.PureScript.Names.ProperName
                                              'Language.PureScript.Names.KindName)>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (Language.PureScript.Names.Qualified
                                                                (Language.PureScript.Names.ProperName
                                                                   'Language.PureScript.Names.KindName))>_R) <x>_N))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.KindName)))>_R) <x>_N)) }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fGenericKind_$cto ::
    GHC.Generics.Rep (Language.PureScript.Kinds.Kind a) x
    -> Language.PureScript.Kinds.Kind a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a
                   @ x
                   (ds :: GHC.Generics.Rep (Language.PureScript.Kinds.Kind a) x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Kinds.Rep_Kind[0]
                                 <a>_N) ; GHC.Generics.N:M1[0]
                                              <*>_N
                                              <GHC.Generics.D>_P
                                              <'GHC.Generics.MetaData
                                                 "Kind"
                                                 "Language.PureScript.Kinds"
                                                 "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
                                                 'GHC.Types.False>_P
                                              <(GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "KUnknown"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1 GHC.Generics.R a)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         GHC.Types.Int))
                                                GHC.Generics.:+: GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "Row"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R a)
                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                       GHC.Generics.S
                                                                                       ('GHC.Generics.MetaSel
                                                                                          'GHC.Base.Nothing
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          (Language.PureScript.Kinds.Kind
                                                                                             a))))
                                               GHC.Generics.:+: (GHC.Generics.M1
                                                                   GHC.Generics.C
                                                                   ('GHC.Generics.MetaCons
                                                                      "FunKind"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   (GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R a)
                                                                    GHC.Generics.:*: (GHC.Generics.M1
                                                                                        GHC.Generics.S
                                                                                        ('GHC.Generics.MetaSel
                                                                                           'GHC.Base.Nothing
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.K1
                                                                                           GHC.Generics.R
                                                                                           (Language.PureScript.Kinds.Kind
                                                                                              a))
                                                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                                                         GHC.Generics.S
                                                                                                         ('GHC.Generics.MetaSel
                                                                                                            'GHC.Base.Nothing
                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                         (GHC.Generics.K1
                                                                                                            GHC.Generics.R
                                                                                                            (Language.PureScript.Kinds.Kind
                                                                                                               a))))
                                                                 GHC.Generics.:+: GHC.Generics.M1
                                                                                    GHC.Generics.C
                                                                                    ('GHC.Generics.MetaCons
                                                                                       "NamedKind"
                                                                                       'GHC.Generics.PrefixI
                                                                                       'GHC.Types.False)
                                                                                    (GHC.Generics.M1
                                                                                       GHC.Generics.S
                                                                                       ('GHC.Generics.MetaSel
                                                                                          'GHC.Base.Nothing
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          a)
                                                                                     GHC.Generics.:*: GHC.Generics.M1
                                                                                                        GHC.Generics.S
                                                                                                        ('GHC.Generics.MetaSel
                                                                                                           'GHC.Base.Nothing
                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                        (GHC.Generics.K1
                                                                                                           GHC.Generics.R
                                                                                                           (Language.PureScript.Names.Qualified
                                                                                                              (Language.PureScript.Names.ProperName
                                                                                                                 'Language.PureScript.Names.KindName)))))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Types.Int)>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Language.PureScript.Kinds.KUnknown
                             @ a
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1 GHC.Generics.R a>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <a>_R
                                                                                   <x>_P)
                             ds4
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                 <*>_N
                                                                                 <GHC.Generics.R>_P
                                                                                 <GHC.Types.Int>_R
                                                                                 <x>_P) }
                        GHC.Generics.R1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Row" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            (Language.PureScript.Kinds.Kind
                                                               a))>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Language.PureScript.Kinds.Row
                             @ a
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1 GHC.Generics.R a>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <a>_R
                                                                                   <x>_P)
                             ds4
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     (Language.PureScript.Kinds.Kind
                                        a)>_R <x>_N ; GHC.Generics.N:K1[0]
                                                          <*>_N
                                                          <GHC.Generics.R>_P
                                                          <Language.PureScript.Kinds.Kind a>_R
                                                          <x>_P) } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (Language.PureScript.Kinds.Kind a))
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (Language.PureScript.Kinds.Kind
                                                                                 a)))>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           case ds4 of wild3 { GHC.Generics.:*: ds5 ds6 ->
                           Language.PureScript.Kinds.FunKind
                             @ a
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1 GHC.Generics.R a>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <a>_R
                                                                                   <x>_P)
                             ds5
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     (Language.PureScript.Kinds.Kind
                                        a)>_R <x>_N ; GHC.Generics.N:K1[0]
                                                          <*>_N
                                                          <GHC.Generics.R>_P
                                                          <Language.PureScript.Kinds.Kind a>_R
                                                          <x>_P)
                             ds6
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     (Language.PureScript.Kinds.Kind
                                        a)>_R <x>_N ; GHC.Generics.N:K1[0]
                                                          <*>_N
                                                          <GHC.Generics.R>_P
                                                          <Language.PureScript.Kinds.Kind a>_R
                                                          <x>_P) } }
                        GHC.Generics.R1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R a)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            (Language.PureScript.Names.Qualified
                                                               (Language.PureScript.Names.ProperName
                                                                  'Language.PureScript.Names.KindName)))>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Language.PureScript.Kinds.NamedKind
                             @ a
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1 GHC.Generics.R a>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <a>_R
                                                                                   <x>_P)
                             ds4
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     (Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.KindName))>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                                <*>_N
                                                                                                <GHC.Generics.R>_P
                                                                                                <Language.PureScript.Names.Qualified
                                                                                                   (Language.PureScript.Names.ProperName
                                                                                                      'Language.PureScript.Names.KindName)>_R
                                                                                                <x>_P) } } }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fNFDataKind ::
    Control.DeepSeq.NFData a =>
    Control.DeepSeq.NFData (Language.PureScript.Kinds.Kind a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),C(H)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Language.PureScript.Kinds.$fNFDataKind_$crnf
                  `cast`
                (forall (a :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R Sym (Control.DeepSeq.N:NFData[0]
                               <Language.PureScript.Kinds.Kind a>_N)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fNFDataKind_$crnf ::
    Control.DeepSeq.NFData a => Language.PureScript.Kinds.Kind a -> ()
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),C(H)><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind :: GHC.Classes.Ord (Language.PureScript.Kinds.Kind a)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Language.PureScript.Kinds.Kind a)
                  (Language.PureScript.Kinds.$fEqKind @ a)
                  (Language.PureScript.Kinds.compareKind @ a @ a)
                  (Language.PureScript.Kinds.$fOrdKind_$c< @ a)
                  (Language.PureScript.Kinds.$fOrdKind_$c<= @ a)
                  (Language.PureScript.Kinds.$fOrdKind_$c> @ a)
                  (Language.PureScript.Kinds.$fOrdKind_$c>= @ a)
                  (Language.PureScript.Kinds.$fOrdKind_$cmax @ a)
                  (Language.PureScript.Kinds.$fOrdKind_$cmin @ a) -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind_$c< ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.compareKind @ a @ a x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind_$c<= ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.compareKind @ a @ a x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind_$c> ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.compareKind @ a @ a x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind_$c>= ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.compareKind @ a @ a x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind_$cmax ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.compareKind @ a @ a x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fOrdKind_$cmin ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (x :: Language.PureScript.Kinds.Kind a)
                   (y :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.compareKind @ a @ a x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fShowKind ::
    GHC.Show.Show a => GHC.Show.Show (Language.PureScript.Kinds.Kind a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Language.PureScript.Kinds.Kind a)
                  (Language.PureScript.Kinds.$fShowKind_$cshowsPrec @ a v)
                  (Language.PureScript.Kinds.$fShowKind_$cshow @ a v)
                  (Language.PureScript.Kinds.$fShowKind_$cshowList @ a v) -}
5e0361ee324aa435f4976ea2eac1777d
  $fShowKind_$cshow ::
    GHC.Show.Show a =>
    Language.PureScript.Kinds.Kind a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x :: Language.PureScript.Kinds.Kind a) ->
                 Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                   @ a
                   $dShow
                   Language.PureScript.Kinds.$fFoldableKind7
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fShowKind_$cshowList ::
    GHC.Show.Show a =>
    [Language.PureScript.Kinds.Kind a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Language.PureScript.Kinds.Kind a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Language.PureScript.Kinds.Kind a)
                   (Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                      @ a
                      $dShow
                      Language.PureScript.Kinds.$fFoldableKind7)
                   ls
                   s) -}
5e0361ee324aa435f4976ea2eac1777d
  $fShowKind_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Language.PureScript.Kinds.Kind a -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,U(C(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Language.PureScript.Kinds.Kind a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Kinds.$w$cshowsPrec @ a w ww1 w2 }) -}
5e0361ee324aa435f4976ea2eac1777d
  $fToJSONKind ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Data.Aeson.Types.ToJSON.ToJSON (Language.PureScript.Kinds.Kind a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(U),A,A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: Data.Aeson.Types.ToJSON.ToJSON a).
                  @ (Language.PureScript.Kinds.Kind a)
                  (Language.PureScript.Kinds.$fToJSONKind_$ctoJSON @ a v)
                  (Language.PureScript.Kinds.$fToJSONKind_$ctoEncoding @ a v)
                  (Language.PureScript.Kinds.$fToJSONKind_$ctoJSONList @ a v)
                  (Language.PureScript.Kinds.$fToJSONKind_$ctoEncodingList @ a v) -}
5e0361ee324aa435f4976ea2eac1777d
  $fToJSONKind_$ctoEncoding ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Kinds.Kind a
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 2, Strictness: <S(C(S)LLL),1*U(1*C(U),A,A,A)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a
                   ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (x :: Language.PureScript.Kinds.Kind a) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Kinds.kindToJSON
                      @ a
                      (Data.Aeson.Types.ToJSON.toJSON @ a $dToJSON)
                      x))
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Aeson.Types.ToJSON.ToJSON a>_R
                 ->_R <Language.PureScript.Kinds.Kind a>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fToJSONKind_$ctoEncodingList ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    [Language.PureScript.Kinds.Kind a]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 2, Strictness: <L,1*U(1*C(U),A,A,A)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a) ->
                 Data.Aeson.Encoding.Internal.list
                   @ (Language.PureScript.Kinds.Kind a)
                   (Language.PureScript.Kinds.$fToJSONKind_$ctoEncoding
                      @ a
                      $dToJSON)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fToJSONKind_$ctoJSON ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    Language.PureScript.Kinds.Kind a -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <S(C(S)LLL),1*U(1*C(U),A,A,A)><S,1*U>m1,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a)
                   (eta :: Language.PureScript.Kinds.Kind a) ->
                 Language.PureScript.Kinds.kindToJSON
                   @ a
                   (Data.Aeson.Types.ToJSON.toJSON @ a $dToJSON)
                   eta) -}
5e0361ee324aa435f4976ea2eac1777d
  $fToJSONKind_$ctoJSONList ::
    Data.Aeson.Types.ToJSON.ToJSON a =>
    [Language.PureScript.Kinds.Kind a]
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U(C(U),A,A,A)><S,1*U>m2,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, False)
                (\ @ a ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON a) ->
                 let {
                   f1 :: Language.PureScript.Kinds.Kind a
                         -> Data.Aeson.Types.Internal.Value
                     {- Arity: 1 -}
                   = Language.PureScript.Kinds.$fToJSONKind_$ctoJSON @ a $dToJSON
                 } in
                 \ (x :: [Language.PureScript.Kinds.Kind a]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ (Language.PureScript.Kinds.Kind a)
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ (Language.PureScript.Kinds.Kind a)
                                     c
                                     f1)
                                  n1
                                  x)))))) -}
5e0361ee324aa435f4976ea2eac1777d
  $fTraversableKind ::
    Data.Traversable.Traversable Language.PureScript.Kinds.Kind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fFunctorKind
                  Language.PureScript.Kinds.$fFoldableKind
                  Language.PureScript.Kinds.$fTraversableKind_$ctraverse
                  Language.PureScript.Kinds.$fTraversableKind_$csequenceA
                  Language.PureScript.Kinds.$fTraversableKind_$cmapM
                  Language.PureScript.Kinds.$fTraversableKind_$csequence -}
5e0361ee324aa435f4976ea2eac1777d
  $fTraversableKind_$cmapM ::
    GHC.Base.Monad m =>
    (a -> m b)
    -> Language.PureScript.Kinds.Kind a
    -> m (Language.PureScript.Kinds.Kind b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U(C(C1(U)),A),A,C(C1(U)),C(C1(C1(U))),A,A),A,A,A,A)><L,C(U)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ m :: * -> * @ a @ b ($dMonad :: GHC.Base.Monad m) ->
                 Language.PureScript.Kinds.$fTraversableKind_$ctraverse
                   @ m
                   @ a
                   @ b
                   (GHC.Base.$p1Monad @ m $dMonad)) -}
5e0361ee324aa435f4976ea2eac1777d
  $fTraversableKind_$csequence ::
    GHC.Base.Monad m =>
    Language.PureScript.Kinds.Kind (m a)
    -> m (Language.PureScript.Kinds.Kind a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U(C(C1(U)),A),A,C(C1(U)),C(C1(C1(U))),A,A),A,A,A,A)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ m :: * -> * @ a ($dMonad :: GHC.Base.Monad m) ->
                 Language.PureScript.Kinds.$fTraversableKind_$ctraverse
                   @ m
                   @ (m a)
                   @ a
                   (GHC.Base.$p1Monad @ m $dMonad)
                   (GHC.Base.id @ (m a))) -}
5e0361ee324aa435f4976ea2eac1777d
  $fTraversableKind_$csequenceA ::
    GHC.Base.Applicative f =>
    Language.PureScript.Kinds.Kind (f a)
    -> f (Language.PureScript.Kinds.Kind a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(C1(U))),A,A)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ f :: * -> * @ a ($dApplicative :: GHC.Base.Applicative f) ->
                 Language.PureScript.Kinds.$fTraversableKind_$ctraverse
                   @ f
                   @ (f a)
                   @ a
                   $dApplicative
                   (GHC.Base.id @ (f a))) -}
5e0361ee324aa435f4976ea2eac1777d
  $fTraversableKind_$ctraverse ::
    GHC.Base.Applicative f =>
    (a -> f b)
    -> Language.PureScript.Kinds.Kind a
    -> f (Language.PureScript.Kinds.Kind b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(C1(U))),A,A)><L,C(U)><S,1*U> -}
2849bef485315909707c47dde0583761
  $tc'FunKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13228540529796885681##
                   3982539884005972426##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'FunKind2
                   1#
                   Language.PureScript.Kinds.$tc'FunKind1) -}
067c2b114ac96b3e84a0653a056c2ee0
  $tc'FunKind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
10b39bb70e6f09c8b7d451b51d7398ad
  $tc'FunKind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'FunKind3) -}
7d27bde50192843d62e924240cc288d5
  $tc'FunKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FunKind"#) -}
17025da2edc2e740b980ce6136ce1024
  $tc'KUnknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2394953000008856898##
                   10271858696513557986##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'KUnknown2
                   1#
                   Language.PureScript.Kinds.$tc'KUnknown1) -}
4368af2120f4d6331ed98a665e1ce189
  $tc'KUnknown1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
875c29a1ae79c1961ee71653fb2a2d50
  $tc'KUnknown2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'KUnknown3) -}
daa2ec699a75d81afaadc7ef3bae0a09
  $tc'KUnknown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'KUnknown"#) -}
1f90500ef774dae897aebb9aded3958e
  $tc'NamedKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8089854262116543424##
                   2234408172965672990##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'NamedKind2
                   1#
                   Language.PureScript.Kinds.$tc'NamedKind1) -}
8961b407722615c024d43c72a96d942d
  $tc'NamedKind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6aab18ca39cf609273b9975fb2ee332a
  $tc'NamedKind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'NamedKind3) -}
20704bac2ba9eae201fdd7a6814d7830
  $tc'NamedKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NamedKind"#) -}
9840533a3e787afd73f18a646ade7fb7
  $tc'Row :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8726093569185448803##
                   11407016954120344403##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'Row2
                   1#
                   Language.PureScript.Kinds.$tc'Row1) -}
3ef0cf468b13dfb18a12ee1c3da48f98
  $tc'Row1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6ad6b05bebdfa9652a1f15c9faf49a67
  $tc'Row2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'Row3) -}
dc30de1416387acd5ee0de2adad7263f
  $tc'Row3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Row"#) -}
d03f12eec0571070d78126c807275613
  $tcKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10955746331611533084##
                   17908893383600497243##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tcKind1
                   0#
                   GHC.Types.krep$*Arr*) -}
229019909d1a2873644f003c31614c2b
  $tcKind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tcKind2) -}
16de278dc274c362e2bd984413a1bf8d
  $tcKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Kind"#) -}
f85035537dac5bf3138d483ff12529ba
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Kinds.$trModule3
                   Language.PureScript.Kinds.$trModule1) -}
7087fee8e720141b7fd84d6c8fb1ca6d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$trModule2) -}
0317245bb79668e128455d42d665035a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Kinds"#) -}
f943016e7f2ec64c5e24dd83e48aa6ab
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$trModule4) -}
48749e096f84455e1ce0a890869214b2
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
77a7aabacf16e45d380a6e1a4ec4eb7a
  $w$cparseJSON ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.AST.SourcePos.SourceSpan,
          [Language.PureScript.Comments.Comment])
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Array# Data.Aeson.Types.Internal.Value) ->
                 case ww1 of wild {
                   DEFAULT
                   -> let {
                        msg2 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Kinds.$fFromJSONKind13
                            (case GHC.Show.$wshowSignedInt
                                    0#
                                    wild
                                    (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                             GHC.Base.++_$s++
                               @ GHC.Types.Char
                               Language.PureScript.Kinds.$fFromJSONKind11
                               ww5
                               ww6 })
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   (Language.PureScript.AST.SourcePos.SourceSpan,
                                    [Language.PureScript.Comments.Comment])
                                   f4
                                   r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg2)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <(Language.PureScript.AST.SourcePos.SourceSpan,
                                  [Language.PureScript.Comments.Comment])>_R))
                   2#
                   -> let {
                        p :: Data.Aeson.Types.Internal.Parser
                               Language.PureScript.AST.SourcePos.SourceSpan
                        = case GHC.Prim.indexArray#
                                 @ Data.Aeson.Types.Internal.Value
                                 ww2
                                 ww of ds3 { Unit# ipv ->
                          case ipv of wild1 {
                            DEFAULT
                            -> let {
                                 msg2 :: GHC.Base.String
                                 = GHC.CString.unpackAppendCString#
                                     Data.Aeson.Types.FromJSON.typeMismatch4
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan2
                                        (GHC.CString.unpackAppendCString#
                                           Data.Aeson.Types.FromJSON.typeMismatch3
                                           (case wild1 of wild2 {
                                              Data.Aeson.Types.Internal.Array ds
                                              -> Data.Aeson.Types.FromJSON.typeMismatch1
                                              Data.Aeson.Types.Internal.String ds
                                              -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                              Data.Aeson.Types.Internal.Number ds
                                              -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                              Data.Aeson.Types.Internal.Bool ds
                                              -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                              Data.Aeson.Types.Internal.Null
                                              -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                               } in
                               (\ @ f4 :: * -> *
                                  @ r
                                  (path :: Data.Aeson.Types.Internal.JSONPath)
                                  (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                                  (_ks :: Data.Aeson.Types.Internal.Success
                                            Language.PureScript.AST.SourcePos.SourceSpan
                                            f4
                                            r)[OneShot] ->
                                kf
                                  (GHC.List.reverse
                                     @ Data.Aeson.Types.Internal.JSONPathElement
                                     path)
                                  msg2)
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <Language.PureScript.AST.SourcePos.SourceSpan>_R))
                            Data.Aeson.Types.Internal.Object obj
                            -> Language.PureScript.AST.SourcePos.$fFromJSONSourceSpan1 obj } }
                      } in
                      let {
                        p1 :: Data.Aeson.Types.Internal.Parser
                                [Language.PureScript.Comments.Comment]
                        = case GHC.Prim.indexArray#
                                 @ Data.Aeson.Types.Internal.Value
                                 ww2
                                 (GHC.Prim.+# ww 1#) of ds3 { Unit# ipv ->
                          Language.PureScript.Comments.$fFromJSONComment_$cparseJSONList
                            ipv }
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  (Language.PureScript.AST.SourcePos.SourceSpan,
                                   [Language.PureScript.Comments.Comment])
                                  f4
                                  r) ->
                       let {
                         lvl54 :: [Data.Aeson.Types.Internal.JSONPathElement]
                         = GHC.Types.:
                             @ Data.Aeson.Types.Internal.JSONPathElement
                             Language.PureScript.Kinds.$fFromJSONKind1_pathElem17
                             path
                       } in
                       p `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <Language.PureScript.AST.SourcePos.SourceSpan>_R)
                         @ f4
                         @ r
                         (GHC.Types.:
                            @ Data.Aeson.Types.Internal.JSONPathElement
                            Language.PureScript.Kinds.$fFromJSONKind1_pathElem16
                            path)
                         kf
                         (\ (a2 :: Language.PureScript.AST.SourcePos.SourceSpan) ->
                          p1
                            `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <[Language.PureScript.Comments.Comment]>_R)
                            @ f4
                            @ r
                            lvl54
                            kf
                            (\ (a3 :: [Language.PureScript.Comments.Comment]) -> ks (a2, a3))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <(Language.PureScript.AST.SourcePos.SourceSpan,
                                  [Language.PureScript.Comments.Comment])>_R)) }) -}
5e0361ee324aa435f4976ea2eac1777d
  $w$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> Language.PureScript.Kinds.Kind a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,U><S,1*U>,
     Inline: [0] -}
5e0361ee324aa435f4976ea2eac1777d
  $wkindToJSON ::
    (a -> Data.Aeson.Types.Internal.Value)
    -> Language.PureScript.Kinds.Kind a
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <C(S),C(U)><S,1*U>, Inline: [0] -}
5e0361ee324aa435f4976ea2eac1777d
  data Kind a
    = KUnknown a GHC.Types.Int
    | Row a (Language.PureScript.Kinds.Kind a)
    | FunKind a
              (Language.PureScript.Kinds.Kind a)
              (Language.PureScript.Kinds.Kind a)
    | NamedKind a
                (Language.PureScript.Names.Qualified
                   (Language.PureScript.Names.ProperName
                      'Language.PureScript.Names.KindName))
5e0361ee324aa435f4976ea2eac1777d
  axiom Language.PureScript.Kinds.Rep_Kind::
      GHC.Generics.Rep (Language.PureScript.Kinds.Kind a)
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Kind"
               "Language.PureScript.Kinds"
               "purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                (GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      'GHC.Base.Nothing
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 a)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 a)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (Language.PureScript.Kinds.Kind a))))
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 a)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         'GHC.Base.Nothing
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (Language.PureScript.Kinds.Kind a))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          'GHC.Base.Nothing
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (Language.PureScript.Kinds.Kind
                                                                             a))))
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NamedKind"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 a)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         'GHC.Base.Nothing
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         (Language.PureScript.Names.Qualified
                                                                            (Language.PureScript.Names.ProperName
                                                                               'Language.PureScript.Names.KindName))))))
4cdf50d4b2444221832ca704f3a0c468
  type SourceKind =
    Language.PureScript.Kinds.Kind
      Language.PureScript.AST.SourcePos.SourceAnn
e3a7676341e31e58805bcd6f3e8e6acc
  annForKind ::
    Lens.Micro.Type.Lens' (Language.PureScript.Kinds.Kind a) a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ a
                   @ f :: * -> *
                   ($dFunctor :: GHC.Base.Functor f)
                   (k :: a -> f a)
                   (ds :: Language.PureScript.Kinds.Kind a) ->
                 case ds of wild {
                   Language.PureScript.Kinds.KUnknown a1 b
                   -> GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ a
                        @ (Language.PureScript.Kinds.Kind a)
                        (\ (z2 :: a) -> Language.PureScript.Kinds.KUnknown @ a z2 b)
                        (k a1)
                   Language.PureScript.Kinds.Row a1 b
                   -> GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ a
                        @ (Language.PureScript.Kinds.Kind a)
                        (\ (z2 :: a) -> Language.PureScript.Kinds.Row @ a z2 b)
                        (k a1)
                   Language.PureScript.Kinds.FunKind a1 b c
                   -> GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ a
                        @ (Language.PureScript.Kinds.Kind a)
                        (\ (z2 :: a) -> Language.PureScript.Kinds.FunKind @ a z2 b c)
                        (k a1)
                   Language.PureScript.Kinds.NamedKind a1 b
                   -> GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ a
                        @ (Language.PureScript.Kinds.Kind a)
                        (\ (z2 :: a) -> Language.PureScript.Kinds.NamedKind @ a z2 b)
                        (k a1) }) -}
1d58b401bb4dc68691bd63a9157caab7
  annForKind_$sannForKind ::
    (a -> Data.Functor.Identity.Identity a)
    -> Language.PureScript.Kinds.Kind a
    -> Data.Functor.Identity.Identity
         (Language.PureScript.Kinds.Kind a)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ a
                   (k :: a -> Data.Functor.Identity.Identity a)
                   (ds :: Language.PureScript.Kinds.Kind a) ->
                 case ds of wild {
                   Language.PureScript.Kinds.KUnknown a1 b
                   -> (Language.PureScript.Kinds.KUnknown
                         @ a
                         (k a1) `cast` (Data.Functor.Identity.N:Identity[0] <a>_R)
                         b)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Language.PureScript.Kinds.Kind a>_R))
                   Language.PureScript.Kinds.Row a1 b
                   -> (Language.PureScript.Kinds.Row
                         @ a
                         (k a1) `cast` (Data.Functor.Identity.N:Identity[0] <a>_R)
                         b)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Language.PureScript.Kinds.Kind a>_R))
                   Language.PureScript.Kinds.FunKind a1 b c
                   -> (Language.PureScript.Kinds.FunKind
                         @ a
                         (k a1) `cast` (Data.Functor.Identity.N:Identity[0] <a>_R)
                         b
                         c)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Language.PureScript.Kinds.Kind a>_R))
                   Language.PureScript.Kinds.NamedKind a1 b
                   -> (Language.PureScript.Kinds.NamedKind
                         @ a
                         (k a1) `cast` (Data.Functor.Identity.N:Identity[0] <a>_R)
                         b)
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <Language.PureScript.Kinds.Kind a>_R)) }) -}
5e0361ee324aa435f4976ea2eac1777d
  compareKind ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind b -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  eqKind ::
    Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind b -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
e49fbe6d9350dcb19145206a5c3386c0
  everythingOnKinds ::
    (r -> r -> r)
    -> (Language.PureScript.Kinds.Kind a -> r)
    -> Language.PureScript.Kinds.Kind a
    -> r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(C1(U))><L,C(U)><S,1*U>,
     Unfolding: (\ @ r
                   @ a
                   (<>. :: r -> r -> r)
                   (f :: Language.PureScript.Kinds.Kind a -> r)
                   (eta :: Language.PureScript.Kinds.Kind a) ->
                 letrec {
                   go :: Language.PureScript.Kinds.Kind a -> r
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (k :: Language.PureScript.Kinds.Kind a) ->
                     case k of wild {
                       DEFAULT -> f wild
                       Language.PureScript.Kinds.Row ds k1 -> <>. (f wild) (go k1)
                       Language.PureScript.Kinds.FunKind ds k1 k2
                       -> <>. (<>. (f wild) (go k1)) (go k2) }
                 } in
                 go eta) -}
0db9640821e57464de880b06c846ce0b
  everywhereOnKinds ::
    (Language.PureScript.Kinds.Kind a
     -> Language.PureScript.Kinds.Kind a)
    -> Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),C(U)><S,1*U>,
     Unfolding: (\ @ a
                   (f :: Language.PureScript.Kinds.Kind a
                         -> Language.PureScript.Kinds.Kind a)
                   (eta :: Language.PureScript.Kinds.Kind a) ->
                 letrec {
                   go :: Language.PureScript.Kinds.Kind a
                         -> Language.PureScript.Kinds.Kind a
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: Language.PureScript.Kinds.Kind a) ->
                     case ds of wild {
                       DEFAULT -> f wild
                       Language.PureScript.Kinds.Row ann k1
                       -> f (Language.PureScript.Kinds.Row @ a ann (go k1))
                       Language.PureScript.Kinds.FunKind ann k1 k2
                       -> f (Language.PureScript.Kinds.FunKind @ a ann (go k1) (go k2)) }
                 } in
                 go eta) -}
ff21b2e3cdf5ffd79b2d8bb43dd752d9
  everywhereOnKindsM ::
    GHC.Base.Monad m =>
    (Language.PureScript.Kinds.Kind a
     -> m (Language.PureScript.Kinds.Kind a))
    -> Language.PureScript.Kinds.Kind a
    -> m (Language.PureScript.Kinds.Kind a)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(1*U(1*U(C(C1(U)),A),A,C(C1(U)),A,A,A),C(C1(U)),A,A,A)><L,U><S,1*U>,
     Unfolding: (\ @ m :: * -> *
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (eta :: Language.PureScript.Kinds.Kind a
                           -> m (Language.PureScript.Kinds.Kind a))
                   (eta1 :: Language.PureScript.Kinds.Kind a) ->
                 let {
                   $dApplicative :: GHC.Base.Applicative m
                   = GHC.Base.$p1Monad @ m $dMonad
                 } in
                 let {
                   $dFunctor :: GHC.Base.Functor m
                   = GHC.Base.$p1Applicative @ m $dApplicative
                 } in
                 letrec {
                   go :: Language.PureScript.Kinds.Kind a
                         -> m (Language.PureScript.Kinds.Kind a)
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: Language.PureScript.Kinds.Kind a) ->
                     case ds of wild {
                       DEFAULT -> eta wild
                       Language.PureScript.Kinds.Row ann k1
                       -> GHC.Base.>>=
                            @ m
                            $dMonad
                            @ (Language.PureScript.Kinds.Kind a)
                            @ (Language.PureScript.Kinds.Kind a)
                            (GHC.Base.fmap
                               @ m
                               $dFunctor
                               @ (Language.PureScript.Kinds.Kind a)
                               @ (Language.PureScript.Kinds.Kind a)
                               (Language.PureScript.Kinds.Row @ a ann)
                               (go k1))
                            eta
                       Language.PureScript.Kinds.FunKind ann k1 k2
                       -> GHC.Base.>>=
                            @ m
                            $dMonad
                            @ (Language.PureScript.Kinds.Kind a)
                            @ (Language.PureScript.Kinds.Kind a)
                            (GHC.Base.<*>
                               @ m
                               $dApplicative
                               @ (Language.PureScript.Kinds.Kind a)
                               @ (Language.PureScript.Kinds.Kind a)
                               (GHC.Base.fmap
                                  @ m
                                  $dFunctor
                                  @ (Language.PureScript.Kinds.Kind a)
                                  @ (Language.PureScript.Kinds.Kind a
                                     -> Language.PureScript.Kinds.Kind a)
                                  (Language.PureScript.Kinds.FunKind @ a ann)
                                  (go k1))
                               (go k2))
                            eta }
                 } in
                 go eta1) -}
98cc6af73ea765845ca69d24bc284a28
  getAnnForKind :: Language.PureScript.Kinds.Kind a -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Kinds.getAnnForKind1
                  `cast`
                (forall (a :: <*>_N).
                 <Language.PureScript.Kinds.Kind a>_R
                 ->_R Data.Functor.Const.N:Const[0]
                          <*>_N <a>_R <Language.PureScript.Kinds.Kind a>_P) -}
86d4e8066c9091b5c35e117e937f6304
  getAnnForKind1 ::
    Language.PureScript.Kinds.Kind a
    -> Data.Functor.Const.Const a (Language.PureScript.Kinds.Kind a)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Language.PureScript.Kinds.Kind a) ->
                 case ds of wild {
                   Language.PureScript.Kinds.KUnknown a1 b
                   -> a1
                        `cast`
                      (Sym (Data.Functor.Const.N:Const[0]
                                <*>_N <a>_R <Language.PureScript.Kinds.Kind a>_P))
                   Language.PureScript.Kinds.Row a1 b
                   -> a1
                        `cast`
                      (Sym (Data.Functor.Const.N:Const[0]
                                <*>_N <a>_R <Language.PureScript.Kinds.Kind a>_P))
                   Language.PureScript.Kinds.FunKind a1 b c
                   -> a1
                        `cast`
                      (Sym (Data.Functor.Const.N:Const[0]
                                <*>_N <a>_R <Language.PureScript.Kinds.Kind a>_P))
                   Language.PureScript.Kinds.NamedKind a1 b
                   -> a1
                        `cast`
                      (Sym (Data.Functor.Const.N:Const[0]
                                <*>_N <a>_R <Language.PureScript.Kinds.Kind a>_P)) }) -}
5e0361ee324aa435f4976ea2eac1777d
  kindFromJSON ::
    Data.Aeson.Types.Internal.Parser a
    -> (Data.Aeson.Types.Internal.Value
        -> Data.Aeson.Types.Internal.Parser a)
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Language.PureScript.Kinds.Kind a)
  {- Arity: 3,
     Strictness: <L,C(C1(C1(U)))><L,C(C1(C1(C1(U))))><S,1*U> -}
5e0361ee324aa435f4976ea2eac1777d
  kindToJSON ::
    (a -> Data.Aeson.Types.Internal.Value)
    -> Language.PureScript.Kinds.Kind a
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <C(S),C(U)><S,1*U>m1, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: a -> Data.Aeson.Types.Internal.Value)
                   (w1 :: Language.PureScript.Kinds.Kind a) ->
                 case Language.PureScript.Kinds.$wkindToJSON
                        @ a
                        w
                        w1 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
61dc2bebe4a9133b428c8f05b3230f13
  setAnnForKind ::
    a
    -> Language.PureScript.Kinds.Kind a
    -> Language.PureScript.Kinds.Kind a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a ->
                 Lens.Micro.set
                   @ (Language.PureScript.Kinds.Kind a)
                   @ (Language.PureScript.Kinds.Kind a)
                   @ a
                   @ a
                   (Language.PureScript.Kinds.annForKind_$sannForKind @ a)) -}
9e2cf5e34a2c589bb5cada75a2f38b79
  srcFunKind ::
    Language.PureScript.Kinds.SourceKind
    -> Language.PureScript.Kinds.SourceKind
    -> Language.PureScript.Kinds.SourceKind
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Language.PureScript.Kinds.FunKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
89c5e97542ab36b2511d37dba25a8368
  srcKUnknown ::
    GHC.Types.Int -> Language.PureScript.Kinds.SourceKind
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Language.PureScript.Kinds.KUnknown
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
f3a7c60c38f578fee1b72858ab8b3755
  srcNamedKind ::
    Language.PureScript.Names.Qualified
      (Language.PureScript.Names.ProperName
         'Language.PureScript.Names.KindName)
    -> Language.PureScript.Kinds.SourceKind
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Language.PureScript.Kinds.NamedKind
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
bd805c78c3eccfd5c91313c6adb73ba4
  srcRow ::
    Language.PureScript.Kinds.SourceKind
    -> Language.PureScript.Kinds.SourceKind
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Language.PureScript.Kinds.Row
                   @ Language.PureScript.AST.SourcePos.SourceAnn
                   Language.PureScript.AST.SourcePos.$bNullSourceAnn) -}
instance GHC.Classes.Eq [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fEqKind
instance Data.Foldable.Foldable [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fFoldableKind
instance [overlapping] Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fFromJSONKind
instance [overlapping] Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fFromJSONKind0
instance [overlapping] Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fFromJSONKind1
instance GHC.Base.Functor [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fFunctorKind
instance GHC.Generics.Generic [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fGenericKind
instance Control.DeepSeq.NFData [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fNFDataKind
instance GHC.Classes.Ord [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fOrdKind
instance GHC.Show.Show [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fShowKind
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fToJSONKind
instance Data.Traversable.Traversable [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fTraversableKind
family instance GHC.Generics.Rep [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.Rep_Kind
"SPEC $cfoldMap @ Any _" forall @ a
                                ($dMonoid :: GHC.Base.Monoid Data.Semigroup.Internal.Any)
  Language.PureScript.Kinds.$fFoldableKind_$cfoldMap @ Data.Semigroup.Internal.Any
                                                     @ a
                                                     $dMonoid
  = Language.PureScript.Kinds.$fFoldableKind_$s$cfoldMap @ a
"SPEC annForKind _ @ Identity" forall @ a
                                      ($dFunctor :: GHC.Base.Functor Data.Functor.Identity.Identity)
  Language.PureScript.Kinds.annForKind @ a
                                       @ Data.Functor.Identity.Identity
                                       $dFunctor
  = Language.PureScript.Kinds.annForKind_$sannForKind @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

