
==================== FINAL INTERFACE ====================
2018-11-30 19:26:17.149236 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds [family instance module] 8043
  interface hash: 00ead1dcffeb5426de03010aa5a48f34
  ABI hash: bf1fc2fd18b06658330fcf93fe50e737
  export-list hash: 2c2448e43e622d2466a59b9cd8f4db91
  orphan hash: 2f144c29ce292bdbfdb8fd12dc0943f0
  flag hash: 4ebcce6d18a0f87d1e176e401bb022d3
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Kinds.everythingOnKinds
  Language.PureScript.Kinds.everywhereOnKinds
  Language.PureScript.Kinds.everywhereOnKindsM
  Language.PureScript.Kinds.kindFromJSON
  Language.PureScript.Kinds.Kind{Language.PureScript.Kinds.FunKind Language.PureScript.Kinds.KUnknown Language.PureScript.Kinds.NamedKind Language.PureScript.Kinds.Row}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.Constants
                     Language.PureScript.Names Language.PureScript.PSString
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      array-0.5.2.0 attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4
                      binary-0.8.5.1 bytestring-0.10.8.2 containers-0.5.11.0
                      deepseq-1.4.3.0 dlist-0.8.0.4 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      mtl-2.2.2 pretty-1.1.3.6 primitive-0.6.3.0 random-1.1
                      scientific-0.3.6.2 tagged-0.8.5 template-haskell-2.13.0.0
                      text-1.2.3.0 th-abstraction-0.2.8.0 time-1.8.0.2
                      time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson 108dfb08de41cf77aad4693ac1dc3d44
import  -/  aeson-1.3.1.1:Data.Aeson.Types.FromJSON 1ea0c919856f0d29f12e53cd074d532c
import  -/  aeson-1.3.1.1:Data.Aeson.Types.Internal df76c21edff000f9355bfb6fb0dbf3e6
import  -/  aeson-1.3.1.1:Data.Aeson.Types.ToJSON 587c7d8b9444e85253d7faf5f824f568
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors ff0e80615ece0f0dd064c946f929132c
import  -/  aeson-better-errors-0.9.1.0:Data.Aeson.BetterErrors.Internal 066898b2dd92d5d1cfd1d0f21692c75d
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Generics 4d1469b3e29804a05a1be33d11accff6
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  deepseq-1.4.3.0:Control.DeepSeq 171f1f567c47ef82860df4ad686d11b1
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Language.PureScript.Constants d290cccb0db8657cab5f1253ab0da1ee
  exports: cd83a0f5b6591e5c66c598e34359260d
  prim 48b048c216cc1c04ce512572fd809a92
  symbol b3e315dfc840415af5029bb88d09778d
  typ d8456deef0e987ab34ac0f04f316fb63
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  exports: f7f3503d20957194bda83c16bb5f1288
  KindName 681d490d18bc7da009f3503010a994f8
  ModuleName 0cb2c8b6c90c347a41315bf0e0fd925c
  ProperName 9eb330c84db102abf2d0f2652fe4a144
  ProperName 29f101e190cc99df85623423972e606f
  Qualified d600a7f01c8203cf5504999de99c923c
  Qualified 5a70062bbdf29e6dc659ad8bf5326b50
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
3e1e213eb647453235d33b0d1b36ec59
  $fEqKind :: GHC.Classes.Eq Language.PureScript.Kinds.Kind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fEqKind_$c==
                  Language.PureScript.Kinds.$fEqKind_$c/= -}
3e1e213eb647453235d33b0d1b36ec59
  $fEqKind_$c/= ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fEqKind_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fEqKind_$c== ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
3e1e213eb647453235d33b0d1b36ec59
  $fFromJSONKind ::
    Data.Aeson.Types.FromJSON.FromJSON Language.PureScript.Kinds.Kind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fFromJSONKind_$cparseJSON
                  Language.PureScript.Kinds.$fFromJSONKind_$cparseJSONList -}
eb241f74a45671cef522635349ccbd3c
  $fFromJSONKind1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
12e88acd1226d9ae5a6c06040ce8942b
  $fFromJSONKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
040489c026d634bafe403879d8aa3754
  $fFromJSONKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
3e1e213eb647453235d33b0d1b36ec59
  $fFromJSONKind4 ::
    Data.Aeson.BetterErrors.Internal.ParseReader
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            (Data.Aeson.BetterErrors.Internal.ParseError
               Data.Text.Internal.Text)
            Language.PureScript.Kinds.Kind)
  {- Arity: 1, Strictness: <L,U(U,U)> -}
3e1e213eb647453235d33b0d1b36ec59
  $fFromJSONKind_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Language.PureScript.Kinds.Kind
  {- Arity: 1,
     Unfolding: (Data.Aeson.BetterErrors.Internal.toAesonParser
                   @ Data.Text.Internal.Text
                   @ Language.PureScript.Kinds.Kind
                   (GHC.Base.id @ Data.Text.Internal.Text)
                   Language.PureScript.Kinds.$fFromJSONKind4
                     `cast`
                   ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                     ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                   <Data.Aeson.BetterErrors.Internal.ParseError
                                      Data.Text.Internal.Text>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <Language.PureScript.Kinds.Kind>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                    <*>_N
                                                                                    <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                    <Control.Monad.Trans.Except.ExceptT
                                                                                       (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                          Data.Text.Internal.Text)
                                                                                       Data.Functor.Identity.Identity>_R
                                                                                    <Language.PureScript.Kinds.Kind>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                   <Data.Text.Internal.Text>_N
                                                                                                                                   <Data.Functor.Identity.Identity>_R) <Language.PureScript.Kinds.Kind>_N))) -}
3e1e213eb647453235d33b0d1b36ec59
  $fFromJSONKind_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg19 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Language.PureScript.Kinds.$fFromJSONKind3
                            (GHC.CString.unpackAppendCString#
                               Language.PureScript.Kinds.$fFromJSONKind2
                               (GHC.CString.unpackAppendCString#
                                  Language.PureScript.Kinds.$fFromJSONKind1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f7 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Language.PureScript.Kinds.Kind] f7 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg19)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Language.PureScript.Kinds.Kind]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Language.PureScript.Kinds.$fFromJSONKind_go 0# ($wgo 0#) } }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fFromJSONKind_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser
         [Language.PureScript.Kinds.Kind]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
3e1e213eb647453235d33b0d1b36ec59
  $fGenericKind ::
    GHC.Generics.Generic Language.PureScript.Kinds.Kind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fGenericKind1
                    `cast`
                  (forall (x :: <*>_N).
                   <Language.PureScript.Kinds.Kind>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Kind"
                                     "Language.PureScript.Kinds"
                                     "purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"
                                     'GHC.Types.False>_P
                                  <(GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            'GHC.Base.Nothing
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                                    GHC.Generics.:+: GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "Row"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Language.PureScript.Kinds.Kind)))
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "FunKind"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Language.PureScript.Kinds.Kind)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Language.PureScript.Kinds.Kind))
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "NamedKind"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        (GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              'GHC.Base.Nothing
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (Language.PureScript.Names.Qualified
                                                                                 (Language.PureScript.Names.ProperName
                                                                                    'Language.PureScript.Names.KindName)))))>_R) ; Sub (Sym (Language.PureScript.Kinds.Rep_Kind[0]))) <x>_N)
                  Language.PureScript.Kinds.$fGenericKind_$cto -}
3e1e213eb647453235d33b0d1b36ec59
  $fGenericKind1 ::
    Language.PureScript.Kinds.Kind
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  'GHC.Base.Nothing
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R
                                   (Language.PureScript.Names.Qualified
                                      (Language.PureScript.Names.ProperName
                                         'Language.PureScript.Names.KindName)))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x (x1 :: Language.PureScript.Kinds.Kind) ->
                 case x1 of wild {
                   Language.PureScript.Kinds.KUnknown g1
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Language.PureScript.Names.Qualified
                                                       (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)))
                           @ x
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <GHC.Types.Int>_R
                                     <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           GHC.Types.Int>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                        <*>_N
                                                                                        <GHC.Generics.C>_P
                                                                                        <'GHC.Generics.MetaCons
                                                                                           "KUnknown"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False>_P
                                                                                        <GHC.Generics.M1
                                                                                           GHC.Generics.S
                                                                                           ('GHC.Generics.MetaSel
                                                                                              'GHC.Base.Nothing
                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                              'GHC.Generics.DecidedLazy)
                                                                                           (GHC.Generics.K1
                                                                                              GHC.Generics.R
                                                                                              GHC.Types.Int)>_R)) <x>_N))
                   Language.PureScript.Kinds.Row g1
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Language.PureScript.Names.Qualified
                                                       (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)))
                           @ x
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Kinds.Kind>_R
                                     <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           Language.PureScript.Kinds.Kind>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                         <*>_N
                                                                                                         <GHC.Generics.C>_P
                                                                                                         <'GHC.Generics.MetaCons
                                                                                                            "Row"
                                                                                                            'GHC.Generics.PrefixI
                                                                                                            'GHC.Types.False>_P
                                                                                                         <GHC.Generics.M1
                                                                                                            GHC.Generics.S
                                                                                                            ('GHC.Generics.MetaSel
                                                                                                               'GHC.Base.Nothing
                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                            (GHC.Generics.K1
                                                                                                               GHC.Generics.R
                                                                                                               Language.PureScript.Kinds.Kind)>_R)) <x>_N))
                   Language.PureScript.Kinds.FunKind g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Language.PureScript.Names.Qualified
                                                       (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Kinds.Kind)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.KindName)))))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind))
                              @ x
                              g1
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Language.PureScript.Kinds.Kind>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Language.PureScript.Kinds.Kind>_R) <x>_N)
                              g2
                                `cast`
                              (Sym (GHC.Generics.N:K1[0]
                                        <*>_N
                                        <GHC.Generics.R>_P
                                        <Language.PureScript.Kinds.Kind>_R
                                        <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.S>_P
                                                          <'GHC.Generics.MetaSel
                                                             'GHC.Base.Nothing
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy>_P
                                                          <GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Language.PureScript.Kinds.Kind>_R) <x>_N))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R Language.PureScript.Kinds.Kind)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Language.PureScript.Kinds.Kind)>_R) <x>_N))
                   Language.PureScript.Kinds.NamedKind g1
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   'GHC.Base.Nothing
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R Language.PureScript.Kinds.Kind))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    'GHC.Base.Nothing
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (Language.PureScript.Names.Qualified
                                                       (Language.PureScript.Names.ProperName
                                                          'Language.PureScript.Names.KindName)))))
                        @ x
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R Language.PureScript.Kinds.Kind)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       'GHC.Base.Nothing
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Language.PureScript.Kinds.Kind)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      'GHC.Base.Nothing
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      (Language.PureScript.Names.Qualified
                                         (Language.PureScript.Names.ProperName
                                            'Language.PureScript.Names.KindName)))))
                           @ x
                           g1
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N
                                     <GHC.Generics.R>_P
                                     <Language.PureScript.Names.Qualified
                                        (Language.PureScript.Names.ProperName
                                           'Language.PureScript.Names.KindName)>_R
                                     <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                                        <*>_N
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           'GHC.Base.Nothing
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           (Language.PureScript.Names.Qualified
                                                              (Language.PureScript.Names.ProperName
                                                                 'Language.PureScript.Names.KindName))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                      <*>_N
                                                                                                                      <GHC.Generics.C>_P
                                                                                                                      <'GHC.Generics.MetaCons
                                                                                                                         "NamedKind"
                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                         'GHC.Types.False>_P
                                                                                                                      <GHC.Generics.M1
                                                                                                                         GHC.Generics.S
                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                            'GHC.Base.Nothing
                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                         (GHC.Generics.K1
                                                                                                                            GHC.Generics.R
                                                                                                                            (Language.PureScript.Names.Qualified
                                                                                                                               (Language.PureScript.Names.ProperName
                                                                                                                                  'Language.PureScript.Names.KindName)))>_R)) <x>_N)) }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fGenericKind_$cto ::
    GHC.Generics.Rep Language.PureScript.Kinds.Kind x
    -> Language.PureScript.Kinds.Kind
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x
                   (ds :: GHC.Generics.Rep Language.PureScript.Kinds.Kind x) ->
                 case ds
                        `cast`
                      ((Sub (Language.PureScript.Kinds.Rep_Kind[0]) ; GHC.Generics.N:M1[0]
                                                                          <*>_N
                                                                          <GHC.Generics.D>_P
                                                                          <'GHC.Generics.MetaData
                                                                             "Kind"
                                                                             "Language.PureScript.Kinds"
                                                                             "purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"
                                                                             'GHC.Types.False>_P
                                                                          <(GHC.Generics.M1
                                                                              GHC.Generics.C
                                                                              ('GHC.Generics.MetaCons
                                                                                 "KUnknown"
                                                                                 'GHC.Generics.PrefixI
                                                                                 'GHC.Types.False)
                                                                              (GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    'GHC.Base.Nothing
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    GHC.Types.Int))
                                                                            GHC.Generics.:+: GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "Row"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.False)
                                                                                               (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     'GHC.Base.Nothing
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Language.PureScript.Kinds.Kind)))
                                                                           GHC.Generics.:+: (GHC.Generics.M1
                                                                                               GHC.Generics.C
                                                                                               ('GHC.Generics.MetaCons
                                                                                                  "FunKind"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.False)
                                                                                               (GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     'GHC.Base.Nothing
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     Language.PureScript.Kinds.Kind)
                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      Language.PureScript.Kinds.Kind))
                                                                                             GHC.Generics.:+: GHC.Generics.M1
                                                                                                                GHC.Generics.C
                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                   "NamedKind"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.False)
                                                                                                                (GHC.Generics.M1
                                                                                                                   GHC.Generics.S
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      'GHC.Base.Nothing
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.K1
                                                                                                                      GHC.Generics.R
                                                                                                                      (Language.PureScript.Names.Qualified
                                                                                                                         (Language.PureScript.Names.ProperName
                                                                                                                            'Language.PureScript.Names.KindName)))))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> Language.PureScript.Kinds.KUnknown
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R GHC.Types.Int)>_R ; GHC.Generics.N:M1[0]
                                                                                <*>_N
                                                                                <GHC.Generics.S>_P
                                                                                <'GHC.Generics.MetaSel
                                                                                   'GHC.Base.Nothing
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy>_P
                                                                                <GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Types.Int>_R) <x>_N ; GHC.Generics.N:K1[0]
                                                                                                                 <*>_N
                                                                                                                 <GHC.Generics.R>_P
                                                                                                                 <GHC.Types.Int>_R
                                                                                                                 <x>_P)
                        GHC.Generics.R1 ds2
                        -> Language.PureScript.Kinds.Row
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "Row" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         Language.PureScript.Kinds.Kind)>_R ; GHC.Generics.N:M1[0]
                                                                                  <*>_N
                                                                                  <GHC.Generics.S>_P
                                                                                  <'GHC.Generics.MetaSel
                                                                                     'GHC.Base.Nothing
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy>_P
                                                                                  <GHC.Generics.K1
                                                                                     GHC.Generics.R
                                                                                     Language.PureScript.Kinds.Kind>_R) <x>_N ; GHC.Generics.N:K1[0]
                                                                                                                                    <*>_N
                                                                                                                                    <GHC.Generics.R>_P
                                                                                                                                    <Language.PureScript.Kinds.Kind>_R
                                                                                                                                    <x>_P) }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Base.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R Language.PureScript.Kinds.Kind)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            'GHC.Base.Nothing
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Language.PureScript.Kinds.Kind)>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Language.PureScript.Kinds.FunKind
                             ds3
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Language.PureScript.Kinds.Kind>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <Language.PureScript.Kinds.Kind>_R
                                                                                   <x>_P)
                             ds4
                               `cast`
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     'GHC.Base.Nothing
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R
                                     Language.PureScript.Kinds.Kind>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                                   <*>_N
                                                                                   <GHC.Generics.R>_P
                                                                                   <Language.PureScript.Kinds.Kind>_R
                                                                                   <x>_P) }
                        GHC.Generics.R1 ds2
                        -> Language.PureScript.Kinds.NamedKind
                             ds2
                               `cast`
                             ((GHC.Generics.N:M1[0]
                                   <*>_N
                                   <GHC.Generics.C>_P
                                   <'GHC.Generics.MetaCons
                                      "NamedKind" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         'GHC.Base.Nothing
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R
                                         (Language.PureScript.Names.Qualified
                                            (Language.PureScript.Names.ProperName
                                               'Language.PureScript.Names.KindName)))>_R ; GHC.Generics.N:M1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.S>_P
                                                                                               <'GHC.Generics.MetaSel
                                                                                                  'GHC.Base.Nothing
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy>_P
                                                                                               <GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  (Language.PureScript.Names.Qualified
                                                                                                     (Language.PureScript.Names.ProperName
                                                                                                        'Language.PureScript.Names.KindName))>_R) <x>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                              <*>_N
                                                                                                                                                              <GHC.Generics.R>_P
                                                                                                                                                              <Language.PureScript.Names.Qualified
                                                                                                                                                                 (Language.PureScript.Names.ProperName
                                                                                                                                                                    'Language.PureScript.Names.KindName)>_R
                                                                                                                                                              <x>_P) } }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fNFDataKind ::
    Control.DeepSeq.NFData Language.PureScript.Kinds.Kind
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.PureScript.Kinds.$fNFDataKind_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0]
                          <Language.PureScript.Kinds.Kind>_N)) -}
3e1e213eb647453235d33b0d1b36ec59
  $fNFDataKind_$crnf :: Language.PureScript.Kinds.Kind -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind :: GHC.Classes.Ord Language.PureScript.Kinds.Kind
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fEqKind
                  Language.PureScript.Kinds.$fOrdKind_$ccompare
                  Language.PureScript.Kinds.$fOrdKind_$c<
                  Language.PureScript.Kinds.$fOrdKind_$c<=
                  Language.PureScript.Kinds.$fOrdKind_$c>
                  Language.PureScript.Kinds.$fOrdKind_$c>=
                  Language.PureScript.Kinds.$fOrdKind_$cmax
                  Language.PureScript.Kinds.$fOrdKind_$cmin -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$c< ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fOrdKind_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$c<= ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fOrdKind_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$c> ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fOrdKind_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$c>= ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fOrdKind_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$ccompare ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$cmax ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> Language.PureScript.Kinds.Kind
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fOrdKind_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fOrdKind_$cmin ::
    Language.PureScript.Kinds.Kind
    -> Language.PureScript.Kinds.Kind -> Language.PureScript.Kinds.Kind
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind)
                   (y :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$fOrdKind_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fShowKind :: GHC.Show.Show Language.PureScript.Kinds.Kind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                  Language.PureScript.Kinds.$fShowKind_$cshow
                  Language.PureScript.Kinds.$fShowKind_$cshowList -}
3e1e213eb647453235d33b0d1b36ec59
  $fShowKind1 :: Language.PureScript.Kinds.Kind -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: Language.PureScript.Kinds.Kind) ->
                 Language.PureScript.Kinds.$w$cshowsPrec 0# w) -}
3f90a548ade4de210d07c245d46279bc
  $fShowKind2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
3e1e213eb647453235d33b0d1b36ec59
  $fShowKind_$cshow ::
    Language.PureScript.Kinds.Kind -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Kinds.Kind) ->
                 Language.PureScript.Kinds.$fShowKind_$cshowsPrec
                   Language.PureScript.Kinds.$fShowKind2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3e1e213eb647453235d33b0d1b36ec59
  $fShowKind_$cshowList ::
    [Language.PureScript.Kinds.Kind] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Kinds.Kind])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Kinds.Kind
                   Language.PureScript.Kinds.$fShowKind1
                   ls
                   s) -}
3e1e213eb647453235d33b0d1b36ec59
  $fShowKind_$cshowsPrec ::
    GHC.Types.Int -> Language.PureScript.Kinds.Kind -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Language.PureScript.Kinds.Kind) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Language.PureScript.Kinds.$w$cshowsPrec ww1 w1 }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fToJSONKind ::
    Data.Aeson.Types.ToJSON.ToJSON Language.PureScript.Kinds.Kind
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Kinds.Kind
                  Language.PureScript.Kinds.$fToJSONKind_$ctoJSON
                  Language.PureScript.Kinds.$fToJSONKind_$ctoEncoding
                  Language.PureScript.Kinds.$fToJSONKind_$ctoJSONList
                  Language.PureScript.Kinds.$fToJSONKind_$ctoEncodingList -}
3e1e213eb647453235d33b0d1b36ec59
  $fToJSONKind_$ctoEncoding ::
    Language.PureScript.Kinds.Kind
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Language.PureScript.Kinds.Kind) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Language.PureScript.Kinds.$fToJSONKind_$ctoJSON x))
                  `cast`
                (<Language.PureScript.Kinds.Kind>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
3e1e213eb647453235d33b0d1b36ec59
  $fToJSONKind_$ctoEncodingList ::
    [Language.PureScript.Kinds.Kind]
    -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Language.PureScript.Kinds.Kind
                   Language.PureScript.Kinds.$fToJSONKind_$ctoEncoding) -}
3e1e213eb647453235d33b0d1b36ec59
  $fToJSONKind_$ctoJSON ::
    Language.PureScript.Kinds.Kind -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.PureScript.Kinds.Kind) ->
                 case Language.PureScript.Kinds.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
3e1e213eb647453235d33b0d1b36ec59
  $fToJSONKind_$ctoJSONList ::
    [Language.PureScript.Kinds.Kind] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Language.PureScript.Kinds.Kind]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Language.PureScript.Kinds.Kind
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Language.PureScript.Kinds.Kind
                                     c
                                     Language.PureScript.Kinds.$fToJSONKind_$ctoJSON)
                                  n1
                                  x)))))) -}
cabdaaca12311b1cc6d4a268352e77f5
  $s$fFromJSONQualified ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Language.PureScript.Names.Qualified
         (Language.PureScript.Names.ProperName
            'Language.PureScript.Names.KindName))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.PureScript.Names.Qualified
                       (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.KindName))
                  (Language.PureScript.Names.$fFromJSONQualified_$cparseJSON
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.KindName)
                     (Language.PureScript.Names.$fFromJSONProperName
                        @ 'Language.PureScript.Names.KindName))
                  (Language.PureScript.Names.$fFromJSONQualified_$cparseJSONList
                     @ (Language.PureScript.Names.ProperName
                          'Language.PureScript.Names.KindName)
                     (Language.PureScript.Names.$fFromJSONProperName
                        @ 'Language.PureScript.Names.KindName)) -}
7222cc56edb211cc15393c63c0e30733
  $tc'FunKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14229333301170528756##
                   10781007391777896711##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'FunKind2
                   0#
                   Language.PureScript.Kinds.$tc'FunKind1) -}
f4f8573c6a818714cd0308de46a2afba
  $tc'FunKind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4c4f5b1a1ee586a24007c25e92de7640
  $tc'FunKind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'FunKind3) -}
18ed9a377dda9934626248c174c0bb43
  $tc'FunKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FunKind"#) -}
d55656a4ca60fde4b0591f2b47c68f3a
  $tc'KUnknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8230490345900244777##
                   18323778351516848793##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'KUnknown2
                   0#
                   Language.PureScript.Kinds.$tc'KUnknown1) -}
7f4e2b2485ad36d82ab41ab143ea51f0
  $tc'KUnknown1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
07ee8a189d21249700e31461f1a12e8c
  $tc'KUnknown2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'KUnknown3) -}
125475b5576f6f458c1012287ee47eb5
  $tc'KUnknown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'KUnknown"#) -}
46f1da97ecf3e17511499c01f69f983c
  $tc'NamedKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8322750577139508335##
                   1155004275353484289##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'NamedKind2
                   0#
                   Language.PureScript.Kinds.$tc'NamedKind1) -}
6f551f21285e6d63fe6b0ad2cf396a8d
  $tc'NamedKind1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a8560de195cd7153b8db0ceef668cb49
  $tc'NamedKind2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'NamedKind3) -}
4afd4f414742967f656e35bd5dbeca68
  $tc'NamedKind3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NamedKind"#) -}
3a33da8fd9fc45ac259c4f0588a727ef
  $tc'Row :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9359578709353160181##
                   5147766825021833160##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tc'Row2
                   0#
                   Language.PureScript.Kinds.$tc'Row1) -}
2bfcf3abfdd1ced39b72738b352ac0f5
  $tc'Row1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
aa05330f3d920d3abf529f499722f878
  $tc'Row2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tc'Row3) -}
a956ec01b37974996223797af2ad502a
  $tc'Row3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Row"#) -}
8fb4e4eb1fa2090029c8563266eeea5e
  $tcKind :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12243275414788725023##
                   2343972145107965667##
                   Language.PureScript.Kinds.$trModule
                   Language.PureScript.Kinds.$tcKind1
                   0#
                   GHC.Types.krep$*) -}
6c8ee3e335d9a2f941eced07fda2c811
  $tcKind1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$tcKind2) -}
12470e546e07adf2a2d2e5d3d396c0ac
  $tcKind2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Kind"#) -}
b6d3a3da7b637349dde6b83b576c004d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Kinds.$trModule3
                   Language.PureScript.Kinds.$trModule1) -}
12e20843ba9faf2d7436a6e1d1bd99c7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$trModule2) -}
6c5cbcd0e6615980f4b223c41b7acea4
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.PureScript.Kinds"#) -}
8fd1ddd49f52e19d925554c3dfb3e68e
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Kinds.$trModule4) -}
a85a768e3492864c621befa24751e53c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
3e1e213eb647453235d33b0d1b36ec59
  $w$cshowsPrec ::
    GHC.Prim.Int# -> Language.PureScript.Kinds.Kind -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
3e1e213eb647453235d33b0d1b36ec59
  $w$ctoJSON ::
    Language.PureScript.Kinds.Kind
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
3e1e213eb647453235d33b0d1b36ec59
  data Kind
    = KUnknown GHC.Types.Int
    | Row Language.PureScript.Kinds.Kind
    | FunKind Language.PureScript.Kinds.Kind
              Language.PureScript.Kinds.Kind
    | NamedKind (Language.PureScript.Names.Qualified
                   (Language.PureScript.Names.ProperName
                      'Language.PureScript.Names.KindName))
3e1e213eb647453235d33b0d1b36ec59
  axiom Language.PureScript.Kinds.Rep_Kind::
      GHC.Generics.Rep Language.PureScript.Kinds.Kind
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Kind"
               "Language.PureScript.Kinds"
               "purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "KUnknown" 'GHC.Generics.PrefixI 'GHC.Types.False)
                (GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      'GHC.Base.Nothing
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Types.Int))
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Row" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Language.PureScript.Kinds.Kind)))
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "FunKind" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       'GHC.Base.Nothing
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Language.PureScript.Kinds.Kind)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        Language.PureScript.Kinds.Kind))
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NamedKind"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        'GHC.Base.Nothing
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (Language.PureScript.Names.Qualified
                                                           (Language.PureScript.Names.ProperName
                                                              'Language.PureScript.Names.KindName))))))
60916f8cf1bf7cb9977af534c05d06a3
  everythingOnKinds ::
    (r -> r -> r)
    -> (Language.PureScript.Kinds.Kind -> r)
    -> Language.PureScript.Kinds.Kind
    -> r
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(C1(U))><L,C(U)><S,1*U>,
     Unfolding: (\ @ r
                   (<>. :: r -> r -> r)
                   (f7 :: Language.PureScript.Kinds.Kind -> r)
                   (eta :: Language.PureScript.Kinds.Kind) ->
                 letrec {
                   go :: Language.PureScript.Kinds.Kind -> r
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (k :: Language.PureScript.Kinds.Kind) ->
                     case k of wild {
                       DEFAULT -> f7 wild
                       Language.PureScript.Kinds.Row k1 -> <>. (f7 wild) (go k1)
                       Language.PureScript.Kinds.FunKind k1 k2
                       -> <>. (<>. (f7 wild) (go k1)) (go k2) }
                 } in
                 go eta) -}
abdfacf480232ceaf468dd961fb156b5
  everywhereOnKinds ::
    (Language.PureScript.Kinds.Kind -> Language.PureScript.Kinds.Kind)
    -> Language.PureScript.Kinds.Kind -> Language.PureScript.Kinds.Kind
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),C(U)><S,1*U>,
     Unfolding: (\ (f7 :: Language.PureScript.Kinds.Kind
                          -> Language.PureScript.Kinds.Kind)
                   (eta :: Language.PureScript.Kinds.Kind) ->
                 letrec {
                   go :: Language.PureScript.Kinds.Kind
                         -> Language.PureScript.Kinds.Kind
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: Language.PureScript.Kinds.Kind) ->
                     case ds of wild {
                       DEFAULT -> f7 wild
                       Language.PureScript.Kinds.Row k1
                       -> f7 (Language.PureScript.Kinds.Row (go k1))
                       Language.PureScript.Kinds.FunKind k1 k2
                       -> f7 (Language.PureScript.Kinds.FunKind (go k1) (go k2)) }
                 } in
                 go eta) -}
118389ddd36956918c0a5e2532ce1d9c
  everywhereOnKindsM ::
    GHC.Base.Monad m =>
    (Language.PureScript.Kinds.Kind
     -> m Language.PureScript.Kinds.Kind)
    -> Language.PureScript.Kinds.Kind
    -> m Language.PureScript.Kinds.Kind
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(1*U(1*U(C(C1(U)),A),A,C(C1(U)),A,A,A),C(C1(U)),A,A,A)><L,U><S,1*U>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   (eta :: Language.PureScript.Kinds.Kind
                           -> m Language.PureScript.Kinds.Kind)
                   (eta1 :: Language.PureScript.Kinds.Kind) ->
                 let {
                   $dApplicative :: GHC.Base.Applicative m
                   = GHC.Base.$p1Monad @ m $dMonad
                 } in
                 let {
                   $dFunctor :: GHC.Base.Functor m
                   = GHC.Base.$p1Applicative @ m $dApplicative
                 } in
                 letrec {
                   go :: Language.PureScript.Kinds.Kind
                         -> m Language.PureScript.Kinds.Kind
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: Language.PureScript.Kinds.Kind) ->
                     case ds of wild {
                       DEFAULT -> eta wild
                       Language.PureScript.Kinds.Row k1
                       -> GHC.Base.>>=
                            @ m
                            $dMonad
                            @ Language.PureScript.Kinds.Kind
                            @ Language.PureScript.Kinds.Kind
                            (GHC.Base.fmap
                               @ m
                               $dFunctor
                               @ Language.PureScript.Kinds.Kind
                               @ Language.PureScript.Kinds.Kind
                               Language.PureScript.Kinds.Row
                               (go k1))
                            eta
                       Language.PureScript.Kinds.FunKind k1 k2
                       -> GHC.Base.>>=
                            @ m
                            $dMonad
                            @ Language.PureScript.Kinds.Kind
                            @ Language.PureScript.Kinds.Kind
                            (GHC.Base.<*>
                               @ m
                               $dApplicative
                               @ Language.PureScript.Kinds.Kind
                               @ Language.PureScript.Kinds.Kind
                               (GHC.Base.fmap
                                  @ m
                                  $dFunctor
                                  @ Language.PureScript.Kinds.Kind
                                  @ (Language.PureScript.Kinds.Kind
                                     -> Language.PureScript.Kinds.Kind)
                                  Language.PureScript.Kinds.FunKind
                                  (go k1))
                               (go k2))
                            eta }
                 } in
                 go eta1) -}
bd98e582ab2c7c06ee0660d1ecd392e1
  kindFromJSON ::
    Data.Aeson.BetterErrors.Internal.Parse
      Data.Text.Internal.Text Language.PureScript.Kinds.Kind
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Kinds.$fFromJSONKind4
                  `cast`
                ((<Data.Aeson.BetterErrors.Internal.ParseReader>_R
                  ->_R Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Data.Aeson.BetterErrors.Internal.ParseError
                                   Data.Text.Internal.Text>_N
                                <Data.Functor.Identity.Identity>_R
                                <Language.PureScript.Kinds.Kind>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                 <*>_N
                                                                                 <Data.Aeson.BetterErrors.Internal.ParseReader>_R
                                                                                 <Control.Monad.Trans.Except.ExceptT
                                                                                    (Data.Aeson.BetterErrors.Internal.ParseError
                                                                                       Data.Text.Internal.Text)
                                                                                    Data.Functor.Identity.Identity>_R
                                                                                 <Language.PureScript.Kinds.Kind>_N) ; Sym (Data.Aeson.BetterErrors.Internal.N:ParseT[0]
                                                                                                                                <Data.Text.Internal.Text>_N
                                                                                                                                <Data.Functor.Identity.Identity>_R) <Language.PureScript.Kinds.Kind>_N)) -}
instance GHC.Classes.Eq [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fEqKind
instance Data.Aeson.Types.FromJSON.FromJSON [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fFromJSONKind
instance GHC.Generics.Generic [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fGenericKind
instance Control.DeepSeq.NFData [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fNFDataKind
instance GHC.Classes.Ord [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fOrdKind
instance GHC.Show.Show [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fShowKind
instance Data.Aeson.Types.ToJSON.ToJSON [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.$fToJSONKind
family instance GHC.Generics.Rep [Language.PureScript.Kinds.Kind]
  = Language.PureScript.Kinds.Rep_Kind
"SPEC/Language.PureScript.Kinds $fFromJSONQualified @ (ProperName
                                                        'KindName)" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                              (Language.PureScript.Names.ProperName
                                                                                                                                                                 'Language.PureScript.Names.KindName))
  Language.PureScript.Names.$fFromJSONQualified @ (Language.PureScript.Names.ProperName
                                                     'Language.PureScript.Names.KindName)
                                                v
  = Language.PureScript.Kinds.$s$fFromJSONQualified
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

