
==================== FINAL INTERFACE ====================
2018-11-30 19:29:09.092168 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Docs.Convert.ReExports 8043
  interface hash: a0bf27f1ebf23100ed0a9b015d8cfd39
  ABI hash: 8dcf7c898fd93f51e993ddff9747d37f
  export-list hash: 3c813d9958e170ef64b22b606683c797
  orphan hash: d6d3c682ae64555f2e82831685599085
  flag hash: 3e19eedc12987b5d6a2ec604006765e7
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Docs.Convert.ReExports.updateReExports
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Docs.RenderedCode
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.RenderType
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Errors
                     Language.PureScript.Externs Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Control.Monad.Logger
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Docs.Types
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Make.Monad
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  mtl-2.2.2:Control.Monad.Reader.Class a5ac59953d953ab8532b5c11f5e8e0b0
import  -/  mtl-2.2.2:Control.Monad.State.Class acc76e93f44ac4486524db1a327e0a0a
import  -/  Language.PureScript 055283757289375c92e0f1e11d744c0e
  exports: 01fc85db00ce4cf253ba5c16e07330e5
import  -/  Language.PureScript.Crash 1bc11bf824676e9581610d0d05d26761
  internalError f3db7e23c75878c9d13888d6d114012d
import  -/  Language.PureScript.Docs.Types f3dabfa61d83d3270ed9cf5a3f1e8614
  exports: 49d03c0d410b46f9a363053ec495bd39
  ChildDeclaration 3938843d4a06107f367196729d2e760b
  ChildDeclaration 8e63d40d255dc7777120ed694edffc05
  ChildTypeClassMember d087ffdff794295523841c19891079d0
  Declaration d9b6668cba3af1eb075a8829f69a1ca7
  Declaration 8e63d40d255dc7777120ed694edffc05
  InPackage c20d45fcf12c7c706cdd677c619cd645
  Module 4b9f60ec266d7daf9641f4f125b8a703
  Module 8e63d40d255dc7777120ed694edffc05
  TypeClassDeclaration 5be1953b7a35e4eb6770f63d0b96e2c9
  ValueDeclaration 70f66188eff92dc851761c2d85481b40
  cdeclComments 8e63d40d255dc7777120ed694edffc05
  cdeclInfo 8e63d40d255dc7777120ed694edffc05
  cdeclSourceSpan 8e63d40d255dc7777120ed694edffc05
  cdeclTitle 8e63d40d255dc7777120ed694edffc05
  declChildren 8e63d40d255dc7777120ed694edffc05
  declComments 8e63d40d255dc7777120ed694edffc05
  declInfo 8e63d40d255dc7777120ed694edffc05
  declSourceSpan 8e63d40d255dc7777120ed694edffc05
  declTitle 8e63d40d255dc7777120ed694edffc05
  filterChildren 3fa9986d00d7404e1ae48650ea862622
  isDataConstructor 1e9fd837c1b6b89c564fddc4eaf13c6d
  isKind ede7092febb5d6fbfbeacc72036000fb
  isType 7fd1b0235589fa55a6118a82e35eaa36
  isTypeAlias be9cc483bba6c0d323c1e4b4eccb789c
  isTypeClass 23a8a846b3f5e3ac677c0ee0d446c9d1
  isTypeClassMember 1bcfcf44aa5b069de1bd5012030786a2
  isValue 7c73f182f9b57f7973208c4efd426bef
  isValueAlias d6ac66534bdc7503f0810c2f8a933812
  modComments 8e63d40d255dc7777120ed694edffc05
  modDeclarations 8e63d40d255dc7777120ed694edffc05
  modName 8e63d40d255dc7777120ed694edffc05
  modReExports 8e63d40d255dc7777120ed694edffc05
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  ClassName e69348bcf8c43a2174540a1d5983bfaa
  ConstructorName 9fb88e980342b224c2a4e4b58fa9fe33
  Ident ab98a56ffa88760dad1380079e8ee35a
  KindName 681d490d18bc7da009f3503010a994f8
  ModuleName 5a70062bbdf29e6dc659ad8bf5326b50
  OpName 1522672b880b192c6e05e6cf8a45712d
  ProperName 9eb330c84db102abf2d0f2652fe4a144
  ProperName 29f101e190cc99df85623423972e606f
  Qualified d600a7f01c8203cf5504999de99c923c
  TypeName da42c92f73f4f363c63ecaf77b6335b9
  TypeOpName 34023316af2b751c6196ece0b5420c6b
  ValueOpName 1d06f91abd827e7b0c072b254546708a
  disqualify 3e7b8117c7613f1d74fadc5d62b59f54
  isBuiltinModuleName 5dc7f70d89d8c2f31fb4ba7485ae62ee
  runModuleName e07c63fa3ece350e6976663ef993edbb
  runProperName 29f101e190cc99df85623423972e606f
  showIdent 5c662c2cc0373f386893e9287ea83382
  showOp 6a554085bb7bff6e6a827b374081272a
import  -/  Language.PureScript.Sugar.Names.Env 8309cd4ea5638f2e9a5f33ac20e05039
  Env 5f9e6484b1f2e8e2d5b6bfcee5f814e9
  Exports 2212f1aeac86faa420eb4b44c2cc2982
  ImportRecord 67ee13394ca9da4b4e70f1e0da141509
  ImportRecord bf5a97568e086735d3bbc97dc5ee1e68
  Imports b53ca872c8c47c3d8839f496fc15c222
  exportedKinds 2212f1aeac86faa420eb4b44c2cc2982
  exportedTypeClasses 2212f1aeac86faa420eb4b44c2cc2982
  exportedTypeOps 2212f1aeac86faa420eb4b44c2cc2982
  exportedTypes 2212f1aeac86faa420eb4b44c2cc2982
  exportedValueOps 2212f1aeac86faa420eb4b44c2cc2982
  exportedValues 2212f1aeac86faa420eb4b44c2cc2982
  importName bf5a97568e086735d3bbc97dc5ee1e68
  importedKinds b53ca872c8c47c3d8839f496fc15c222
  importedTypeClasses b53ca872c8c47c3d8839f496fc15c222
  importedTypeOps b53ca872c8c47c3d8839f496fc15c222
  importedTypes b53ca872c8c47c3d8839f496fc15c222
  importedValueOps b53ca872c8c47c3d8839f496fc15c222
  importedValues b53ca872c8c47c3d8839f496fc15c222
import  -/  Language.PureScript.Types 74562e642f5297557b3a23aac7819ad1
  ConstrainedType c2b3670e25b3b510981414df0f340e0f
  Constraint 07ef72cbe41926551b2da51008274cd5
  Constraint 93223f8afa90d0facc05a03f863dc72d
  TypeVar ac604589bba317f51f6e97fef0e84f86
  moveQuantifiersToFront 9d99c9b7d89c4a40e9fd4bead885467d
  quantify f3ac51fdc54cb9e228ed9394fffc10b7
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
import  -/  transformers-0.5.5.0:Control.Monad.Trans.Reader 42962052353a5a0f766912058b765b5d
import  -/  transformers-0.5.5.0:Control.Monad.Trans.State.Strict 04b71a3f25b12af5c8b92a12d96be4c4
c8bd5338adc79e586916ce9831f15b13
  $fMonoidTypeClassEnv ::
    GHC.Base.Monoid
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_$cmempty
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_$c<>
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_go -}
c8bd5338adc79e586916ce9831f15b13
  $fMonoidTypeClassEnv_$c<> ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U,1*U,1*U)><S,1*U(1*U,1*U,1*U)>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w1 :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case w of ww { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww1 ww2 ww3 ->
                 case w1 of ww4 { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   (GHC.Base.++
                      @ (Data.Text.Internal.Text, Language.PureScript.Types.Constraint,
                         Language.PureScript.Docs.Types.ChildDeclaration)
                      ww1
                      ww5)
                   (GHC.Base.++ @ Language.PureScript.Docs.Types.Declaration ww2 ww6)
                   (GHC.Base.++
                      @ Language.PureScript.Docs.Types.Declaration
                      ww3
                      ww7) } }) -}
c8bd5338adc79e586916ce9831f15b13
  $fMonoidTypeClassEnv_$cmempty ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Language.PureScript.Types.Constraint,
                         Language.PureScript.Docs.Types.ChildDeclaration))
                   (GHC.Types.[] @ Language.PureScript.Docs.Types.Declaration)
                   (GHC.Types.[] @ Language.PureScript.Docs.Types.Declaration)) -}
c8bd5338adc79e586916ce9831f15b13
  $fMonoidTypeClassEnv_go ::
    [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]) ->
                 case Language.PureScript.Docs.Convert.ReExports.$wgo
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   ww1
                   ww2
                   ww3 }) -}
c8bd5338adc79e586916ce9831f15b13
  $fSemigroupTypeClassEnv ::
    GHC.Base.Semigroup
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_$c<>
                  Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv_$csconcat
                  Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv_$cstimes -}
c8bd5338adc79e586916ce9831f15b13
  $fSemigroupTypeClassEnv_$csconcat ::
    GHC.Base.NonEmpty
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U,U),1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.NonEmpty
                            Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { GHC.Base.:| a1 as ->
                 Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv_go
                   a1
                   as }) -}
c8bd5338adc79e586916ce9831f15b13
  $fSemigroupTypeClassEnv_$cstimes ::
    GHC.Real.Integral b =>
    b
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, Strictness: <L,U> -}
c8bd5338adc79e586916ce9831f15b13
  $fSemigroupTypeClassEnv_go ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U,U)><S,1*U>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w1 :: [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]) ->
                 case w of ww { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww1 ww2 ww3 ->
                 case Language.PureScript.Docs.Convert.ReExports.$wgo1
                        ww1
                        ww2
                        ww3
                        w1 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   ww5
                   ww6
                   ww7 } }) -}
c8bd5338adc79e586916ce9831f15b13
  $fShowTypeClassEnv ::
    GHC.Show.Show
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshowsPrec
                  Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshow
                  Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshowList -}
c8bd5338adc79e586916ce9831f15b13
  $fShowTypeClassEnv1 ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww1 ww2 ww3 ->
                 Language.PureScript.Docs.Convert.ReExports.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   w1 }) -}
ed70ab6d77d35bb6f82ce8c6f14c2a44
  $fShowTypeClassEnv2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c8bd5338adc79e586916ce9831f15b13
  $fShowTypeClassEnv_$cshow ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshowsPrec
                   Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c8bd5338adc79e586916ce9831f15b13
  $fShowTypeClassEnv_$cshowList ::
    [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv1
                   ls
                   s) -}
c8bd5338adc79e586916ce9831f15b13
  $fShowTypeClassEnv_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww3 ww4 ww5 ->
                 Language.PureScript.Docs.Convert.ReExports.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   w2 } }) -}
b013b061b9ea60a3606ca437fa90c49c
  $s$wsplitLookup_$s$w$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Language.PureScript.Names.ModuleName
    -> (# Data.Map.Internal.Map Language.PureScript.Names.ModuleName a,
          GHC.Base.Maybe a,
          Data.Map.Internal.Map Language.PureScript.Names.ModuleName a #)
  {- Arity: 6, Strictness: <L,A><S,U><L,U><L,U><L,U><S,1*U> -}
437d1a774cfa143909dffd982fcc63de
  $sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Internal.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild4 {
                             DEFAULT
                             -> Language.PureScript.Docs.Convert.ReExports.$sfromList_$spoly_go14
                                  @ a
                                  ww5
                                  ww6
                                  ww7
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a))
                             GHC.Types.LT
                             -> Language.PureScript.Docs.Convert.ReExports.$sfromList_$s$wpoly_go13
                                  @ a
                                  ww5
                                  ww6
                                  ww7
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a))
                                  1# } } } } } } }) -}
bdeae6aa50906049e290d0d38b455c17
  $sfromListWithKey ::
    (Language.PureScript.Names.ModuleName -> a -> a -> a)
    -> [(Language.PureScript.Names.ModuleName, a)]
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 2, Strictness: <L,C(C1(C1(U)))><S,1*U>,
     Unfolding: (\ @ a
                   (f :: Language.PureScript.Names.ModuleName -> a -> a -> a)
                   (xs :: [(Language.PureScript.Names.ModuleName, a)]) ->
                 letrec {
                   go14 :: Data.Map.Internal.Map
                             Language.PureScript.Names.ModuleName a
                           -> [(Language.PureScript.Names.ModuleName, a)]
                           -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map
                               Language.PureScript.Names.ModuleName a)
                       (ds :: [(Language.PureScript.Names.ModuleName, a)]) ->
                     case ds of wild {
                       [] -> z
                       : x xs1
                       -> case x of wild1 { (,) k1 x1 ->
                          case Language.PureScript.Docs.Convert.ReExports.$sfromListWithKey_$sgo13
                                 @ a
                                 f
                                 k1
                                 x1
                                 z of z' { DEFAULT ->
                          go14 z' xs1 } } }
                 } in
                 go14
                   (Data.Map.Internal.Tip @ Language.PureScript.Names.ModuleName @ a)
                   xs) -}
62f0d669c73e39b72d61a337ef136340
  $sfromListWithKey_$sgo13 ::
    (Language.PureScript.Names.ModuleName -> a1 -> a1 -> a1)
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><S,1*U><L,U><S,1*U> -}
4a1d61a8ca3b50d532a0749462f3ae71
  $sfromList_$s$wpoly_go13 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 7, Strictness: <S,U><S,U><S,U><L,U><S,1*U><S,1*U><L,U> -}
92ca0b49ee192ed89cf74b64b77e4cfe
  $sfromList_$spoly_go14 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 6, Strictness: <S,U><S,U><S,U><L,U><S,1*U><S,1*U> -}
2e0016a6e6b2cdf03076e2c19352ccb3
  $sinsertWithR_$sgo13 ::
    (a1 -> a1 -> a1)
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(U))><S,1*U><L,U><S,1*U> -}
34ac2982a223386990aa5815ada55440
  $sinsertWith_$s$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> a
    -> Language.PureScript.Names.ModuleName
    -> (a -> a -> a)
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 8,
     Strictness: <L,U><S,U><L,U><L,U><L,U><L,U><S,1*U><L,1*C1(C1(U))> -}
f6c75381c8de25bb8486d25e4d4ba7ff
  $sinsertWith_$sgo13 ::
    (a1 -> a1 -> a1)
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(U))><S,1*U><L,U><S,1*U> -}
877b0d5963032bb9eb0564014ee5677b
  $sinsert_$sgo1 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
5f11d26900e27c4050bd033c0ce33fb3
  $slookup1 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
baf690bf5092b13de135257b82178f59
  $sunionWith ::
    (a -> a -> a)
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,1*U>, Inline: [~] -}
08ea1843c1c008e17cdaa79a7c66013d
  $tc'TypeClassEnv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17904129031607256483##
                   16766162464479057716##
                   Language.PureScript.Docs.Convert.ReExports.$trModule
                   Language.PureScript.Docs.Convert.ReExports.$tc'TypeClassEnv2
                   0#
                   Language.PureScript.Docs.Convert.ReExports.$tc'TypeClassEnv1) -}
b3e8cb265b73e021266aa0d56be94dbe
  $tc'TypeClassEnv1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
72cd0798d63b9d53a307230d078d6d96
  $tc'TypeClassEnv2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$tc'TypeClassEnv3) -}
dfbf5ad21e66bece00179ed3e009e2b0
  $tc'TypeClassEnv3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassEnv"#) -}
3f3303a519d698da6097e12e0b5a20f5
  $tcTypeClassEnv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16760133785126440803##
                   13328063749341303113##
                   Language.PureScript.Docs.Convert.ReExports.$trModule
                   Language.PureScript.Docs.Convert.ReExports.$tcTypeClassEnv1
                   0#
                   GHC.Types.krep$*) -}
cd5bdcef05b449c82664c0cdb8da450b
  $tcTypeClassEnv1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$tcTypeClassEnv2) -}
ef16c22363e3234a799c4573bf661ac3
  $tcTypeClassEnv2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeClassEnv"#) -}
9fcca6a7654756dbc98edb67e4e81b1e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Docs.Convert.ReExports.$trModule3
                   Language.PureScript.Docs.Convert.ReExports.$trModule1) -}
b1b7e5b9de68e5f1060320eecde5303e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$trModule2) -}
a7c88b53377f50c67d90469c7e986893
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Docs.Convert.ReExports"#) -}
fc305586023530546bd88f98c8e5040f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$trModule4) -}
5e710e80de097a436d67ef7ca3464add
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
3201511cb6fc45a85d2ad4ba24ba6bdc
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [(Data.Text.Internal.Text, Language.PureScript.Types.Constraint,
         Language.PureScript.Docs.Types.ChildDeclaration)]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
793319486a3b1168921e16a072fd3a47
  $w$sgo1 ::
    Data.Text.Internal.Text
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map Data.Text.Internal.Text a1
    -> Data.Map.Internal.Map Data.Text.Internal.Text a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
0923466475c6e9f879455655117d579e
  $w$sgo13 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> (# Data.Map.Internal.Map
            Language.PureScript.Names.ModuleName a1,
          GHC.Base.Maybe a1,
          Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1 #)
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
c8bd5338adc79e586916ce9831f15b13
  $wgo ::
    [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> (# [(Data.Text.Internal.Text,
            Language.PureScript.Types.Constraint,
            Language.PureScript.Docs.Types.ChildDeclaration)],
          [Language.PureScript.Docs.Types.Declaration],
          [Language.PureScript.Docs.Types.Declaration] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
c8bd5338adc79e586916ce9831f15b13
  $wgo1 ::
    [(Data.Text.Internal.Text, Language.PureScript.Types.Constraint,
      Language.PureScript.Docs.Types.ChildDeclaration)]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> (# [(Data.Text.Internal.Text,
            Language.PureScript.Types.Constraint,
            Language.PureScript.Docs.Types.ChildDeclaration)],
          [Language.PureScript.Docs.Types.Declaration],
          [Language.PureScript.Docs.Types.Declaration] #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
c4273184dd231738fbb38129bd15e052
  $wpoly_go13 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
c8bd5338adc79e586916ce9831f15b13
  data TypeClassEnv
    = TypeClassEnv {envUnhandledMembers :: [(Data.Text.Internal.Text,
                                             Language.PureScript.Types.Constraint,
                                             Language.PureScript.Docs.Types.ChildDeclaration)],
                    envValues :: [Language.PureScript.Docs.Types.Declaration],
                    envTypeClasses :: [Language.PureScript.Docs.Types.Declaration]}
c8bd5338adc79e586916ce9831f15b13
  envTypeClasses ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [Language.PureScript.Docs.Types.Declaration]
  RecSel Left Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ds1 ds2 ds3 ->
                 ds3 }) -}
c8bd5338adc79e586916ce9831f15b13
  envUnhandledMembers ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [(Data.Text.Internal.Text, Language.PureScript.Types.Constraint,
         Language.PureScript.Docs.Types.ChildDeclaration)]
  RecSel Left Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ds1 ds2 ds3 ->
                 ds1 }) -}
c8bd5338adc79e586916ce9831f15b13
  envValues ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [Language.PureScript.Docs.Types.Declaration]
  RecSel Left Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ds1 ds2 ds3 ->
                 ds2 }) -}
474108c397e0b186ab8e246a572cf05f
  updateReExports ::
    Language.PureScript.Sugar.Names.Env.Env
    -> [Language.PureScript.Names.ModuleName]
    -> (Language.PureScript.Names.ModuleName
        -> Language.PureScript.Docs.Types.InPackage
             Language.PureScript.Names.ModuleName)
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Language.PureScript.Docs.Types.Module
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Language.PureScript.Docs.Types.Module
  {- Arity: 4, Strictness: <L,U><S,1*U><L,C(U)><L,U> -}
instance GHC.Base.Monoid [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
  = Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv
instance GHC.Base.Semigroup [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
  = Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv
instance GHC.Show.Show [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
  = Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv
"SC:$sgo130" forall @ a
                    (sc :: GHC.Prim.Int#)
                    (sc1 :: Language.PureScript.Names.ModuleName)
                    (sc2 :: a)
                    (sc3 :: Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName a)
                    (sc4 :: Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName a)
                    (sc5 :: a)
                    (sc6 :: Language.PureScript.Names.ModuleName)
                    (sc7 :: a -> a -> a)
  Language.PureScript.Docs.Convert.ReExports.$sinsertWith_$sgo13 @ a
                                                                 sc7
                                                                 sc6
                                                                 sc5
                                                                 (Data.Map.Internal.Bin
                                                                    @ Language.PureScript.Names.ModuleName
                                                                    @ a
                                                                    sc
                                                                    sc1
                                                                    sc2
                                                                    sc3
                                                                    sc4)
  = Language.PureScript.Docs.Convert.ReExports.$sinsertWith_$s$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ModuleName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    Language.PureScript.Names.ModuleName a)
                          (sc4 :: Data.Map.Internal.Map
                                    Language.PureScript.Names.ModuleName a)
                          (sc5 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Convert.ReExports.$w$sgo13 @ a
                                                      sc5
                                                      (Data.Map.Internal.Bin
                                                         @ Language.PureScript.Names.ModuleName
                                                         @ a
                                                         sc
                                                         sc1
                                                         sc2
                                                         sc3
                                                         sc4)
  = Language.PureScript.Docs.Convert.ReExports.$s$wsplitLookup_$s$w$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
"SPEC/Language.PureScript.Docs.Convert.ReExports fromList @ Text _" [orphan] forall @ a
                                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                                Data.Text.Internal.Text)
  Data.Map.Internal.fromList @ Data.Text.Internal.Text @ a $dOrd
  = Language.PureScript.Docs.Convert.ReExports.$sfromList @ a
"SPEC/Language.PureScript.Docs.Convert.ReExports fromListWithKey @ ModuleName _" [orphan] forall @ a
                                                                                                 ($dOrd :: GHC.Classes.Ord
                                                                                                             Language.PureScript.Names.ModuleName)
  Data.Map.Internal.fromListWithKey @ Language.PureScript.Names.ModuleName
                                    @ a
                                    $dOrd
  = Language.PureScript.Docs.Convert.ReExports.$sfromListWithKey @ a
"SPEC/Language.PureScript.Docs.Convert.ReExports unionWith @ ModuleName _" [orphan] forall @ a
                                                                                           ($dOrd :: GHC.Classes.Ord
                                                                                                       Language.PureScript.Names.ModuleName)
  Data.Map.Internal.unionWith @ Language.PureScript.Names.ModuleName
                              @ a
                              $dOrd
  = Language.PureScript.Docs.Convert.ReExports.$sunionWith @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

