
==================== FINAL INTERFACE ====================
2019-01-24 14:17:21.988027 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.Convert.ReExports 8043
  interface hash: fe57b3eb785d42d85f9b5b81f3ce06ff
  ABI hash: 6ed046e8df57420defdcc3cb1abfb90e
  export-list hash: 9485f5888ed28a87028cb68398926974
  orphan hash: 8ce5f304bfef17119d2a4be9d2d73c76
  flag hash: 3e19eedc12987b5d6a2ec604006765e7
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Docs.Convert.ReExports.updateReExports
module dependencies: Control.Monad.Logger Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript
                     Language.PureScript.AST Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.CodeGen.JS
                     Language.PureScript.CodeGen.JS.Common
                     Language.PureScript.CodeGen.JS.Printer Language.PureScript.Comments
                     Language.PureScript.Constants Language.PureScript.CoreFn
                     Language.PureScript.CoreFn.Ann Language.PureScript.CoreFn.Binders
                     Language.PureScript.CoreFn.Desugar Language.PureScript.CoreFn.Expr
                     Language.PureScript.CoreFn.Meta Language.PureScript.CoreFn.Module
                     Language.PureScript.CoreFn.Optimizer
                     Language.PureScript.CoreFn.ToJSON
                     Language.PureScript.CoreFn.Traversals
                     Language.PureScript.CoreImp.AST
                     Language.PureScript.CoreImp.Optimizer
                     Language.PureScript.CoreImp.Optimizer.Blocks
                     Language.PureScript.CoreImp.Optimizer.Common
                     Language.PureScript.CoreImp.Optimizer.Inliner
                     Language.PureScript.CoreImp.Optimizer.MagicDo
                     Language.PureScript.CoreImp.Optimizer.TCO
                     Language.PureScript.CoreImp.Optimizer.Unused
                     Language.PureScript.Crash Language.PureScript.Docs.RenderedCode
                     Language.PureScript.Docs.RenderedCode.RenderKind
                     Language.PureScript.Docs.RenderedCode.RenderType
                     Language.PureScript.Docs.RenderedCode.Types
                     Language.PureScript.Docs.Types
                     Language.PureScript.Docs.Utils.MonoidExtras
                     Language.PureScript.Environment Language.PureScript.Errors
                     Language.PureScript.Externs Language.PureScript.Kinds
                     Language.PureScript.Label Language.PureScript.Linter
                     Language.PureScript.Linter.Exhaustive
                     Language.PureScript.Linter.Imports Language.PureScript.Make
                     Language.PureScript.Make.Actions Language.PureScript.Make.BuildPlan
                     Language.PureScript.Make.Monad
                     Language.PureScript.ModuleDependencies Language.PureScript.Names
                     Language.PureScript.Options Language.PureScript.PSString
                     Language.PureScript.Parser Language.PureScript.Parser.Common
                     Language.PureScript.Parser.Declarations
                     Language.PureScript.Parser.Kinds Language.PureScript.Parser.Lexer
                     Language.PureScript.Parser.State Language.PureScript.Parser.Types
                     Language.PureScript.Pretty Language.PureScript.Pretty.Common
                     Language.PureScript.Pretty.Kinds Language.PureScript.Pretty.Types
                     Language.PureScript.Pretty.Values
                     Language.PureScript.Publish.BoxesHelpers
                     Language.PureScript.Renamer Language.PureScript.Sugar
                     Language.PureScript.Sugar.AdoNotation
                     Language.PureScript.Sugar.BindingGroups
                     Language.PureScript.Sugar.CaseDeclarations
                     Language.PureScript.Sugar.DoNotation
                     Language.PureScript.Sugar.LetPattern
                     Language.PureScript.Sugar.Names
                     Language.PureScript.Sugar.Names.Common
                     Language.PureScript.Sugar.Names.Env
                     Language.PureScript.Sugar.Names.Exports
                     Language.PureScript.Sugar.Names.Imports
                     Language.PureScript.Sugar.ObjectWildcards
                     Language.PureScript.Sugar.Operators
                     Language.PureScript.Sugar.Operators.Binders
                     Language.PureScript.Sugar.Operators.Common
                     Language.PureScript.Sugar.Operators.Expr
                     Language.PureScript.Sugar.Operators.Types
                     Language.PureScript.Sugar.TypeClasses
                     Language.PureScript.Sugar.TypeClasses.Deriving
                     Language.PureScript.Sugar.TypeDeclarations
                     Language.PureScript.Traversals Language.PureScript.TypeChecker
                     Language.PureScript.TypeChecker.Entailment
                     Language.PureScript.TypeChecker.Kinds
                     Language.PureScript.TypeChecker.Monad
                     Language.PureScript.TypeChecker.Skolems
                     Language.PureScript.TypeChecker.Subsumption
                     Language.PureScript.TypeChecker.Synonyms
                     Language.PureScript.TypeChecker.TypeSearch
                     Language.PureScript.TypeChecker.Types
                     Language.PureScript.TypeChecker.Unify
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2
                      base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bower-json-1.0.0.1 boxes-0.1.5
                      bytestring-0.10.8.2 colour-2.3.4 containers-0.5.11.0
                      data-ordlist-0.4.7.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 lifted-base-0.2.3.12 microlens-0.4.9.1
                      microlens-ghc-0.4.9 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.10 microlens-th-0.4.2.1
                      monad-control-1.0.2.3 mtl-2.2.2 parallel-3.2.1.1 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 safe-0.3.17 scientific-0.3.6.2
                      sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances colour-2.3.4:Data.Colour
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bower-json-1.0.0.1:Web.Bower.PackageMeta.Internal
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Control.Monad.Logger
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.RenderedCode.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Docs.Types
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Make.Monad
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  mtl-2.2.2:Control.Monad.Reader.Class a5ac59953d953ab8532b5c11f5e8e0b0
import  -/  mtl-2.2.2:Control.Monad.State.Class acc76e93f44ac4486524db1a327e0a0a
import  -/  Language.PureScript 4a24ccd892adbf021daf2410ebd61e22
  exports: 139dcaa90af8ddcee6aa0492159f351d
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Docs.Types 8ff7c3b28d1548ecbdf2d5a573cc163d
  exports: b81c2b0b69c0f139e99069fb9794db69
  ChildDeclaration da36857b7ace27f106e0e32084691791
  ChildDeclaration cce819b6566f028d040fc57bb265fd8d
  ChildTypeClassMember c99514ef45785e97caa8f678f2893be0
  Constraint' d41f556fe0cc659e6458c371e15603c8
  Declaration 8d78dc6577f19e7ef0eb35e8f2e37d74
  Declaration cce819b6566f028d040fc57bb265fd8d
  InPackage 14acea96459ae0ba0727319f74cb7f69
  Module ce06b0db4015f02195d03f184e88eb90
  Module cce819b6566f028d040fc57bb265fd8d
  TypeClassDeclaration 058830b63dc57578caa5690ea9a9412c
  ValueDeclaration 88df482b8e23d1ca7c68e67d2bb84c5b
  cdeclComments cce819b6566f028d040fc57bb265fd8d
  cdeclInfo cce819b6566f028d040fc57bb265fd8d
  cdeclSourceSpan cce819b6566f028d040fc57bb265fd8d
  cdeclTitle cce819b6566f028d040fc57bb265fd8d
  declChildren cce819b6566f028d040fc57bb265fd8d
  declComments cce819b6566f028d040fc57bb265fd8d
  declInfo cce819b6566f028d040fc57bb265fd8d
  declSourceSpan cce819b6566f028d040fc57bb265fd8d
  declTitle cce819b6566f028d040fc57bb265fd8d
  filterChildren f0b70da0dd4acc7f92cbf732323127de
  isDataConstructor dcc978bafdbcada574f706d10fbd923b
  isKind 73a9703fde937bd4456a8ceabf791e13
  isType e1f59e5e40d464d92b895656c18c5b3b
  isTypeAlias 25056558d8f8d58d4199dbd25674e228
  isTypeClass 3a42547c5ebf6523f1b92cd3aa630993
  isTypeClassMember eb5c913ebc02ceef23bdf8425ab7ff0e
  isValue ab24b2a81129775127fb742f8809290e
  isValueAlias 21720d43112130effaf82cfa157dafdf
  modComments cce819b6566f028d040fc57bb265fd8d
  modDeclarations cce819b6566f028d040fc57bb265fd8d
  modName cce819b6566f028d040fc57bb265fd8d
  modReExports cce819b6566f028d040fc57bb265fd8d
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  ConstructorName 84054a8bbbe827ba2ce7da83056a95ee
  Ident bad3562aa6138b6192713ac281080869
  KindName 7782d66ce60bd67282cf566485701e07
  ModuleName 1b2ddf0c04464d2fa2588925f10c1966
  OpName 9af301165f72160425c5e0dde6525338
  ProperName f69d3801241fcb4773f1284cd28f2dee
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified b6e1bc9e7244a41d3c6149c9b5c2d6d8
  TypeName 40ce511c66a72431b4e87351210f7b03
  TypeOpName db73fc39fef75f034a0b4a8074947dd9
  ValueOpName 11964a7dc7a3029edbea30fc5b4578c2
  disqualify bf1cc3b0e6c1ffc0008a6113bf8116c0
  isBuiltinModuleName eaf9d299339def0b7cc5606f802f45a1
  runModuleName 58b788b37f600c0f34fa85241d7748ad
  runProperName a7268334e0b909381550b9329cb80fcc
  showIdent 6e8d83433e1fcc9da5f1cf76585fd968
  showOp b45e7917a51eac70fb9658fd0956a139
import  -/  Language.PureScript.Sugar.Names.Env 97518f893bef0c5e5749cfa9e4ca9265
  Env 2b6b2822bde15bda4afeb3aa3ef04e79
  Exports d2107d9c7383e14684c4687121fab2f3
  ImportRecord 5e10112f1717b877af1abe56772c155d
  ImportRecord 06c97ba5c09e065ef1b4ac69ccbfcc9e
  Imports 330f296cc3ed68256ee5fc6aa457fa42
  exportedKinds d2107d9c7383e14684c4687121fab2f3
  exportedTypeClasses d2107d9c7383e14684c4687121fab2f3
  exportedTypeOps d2107d9c7383e14684c4687121fab2f3
  exportedTypes d2107d9c7383e14684c4687121fab2f3
  exportedValueOps d2107d9c7383e14684c4687121fab2f3
  exportedValues d2107d9c7383e14684c4687121fab2f3
  importName 06c97ba5c09e065ef1b4ac69ccbfcc9e
  importedKinds 330f296cc3ed68256ee5fc6aa457fa42
  importedTypeClasses 330f296cc3ed68256ee5fc6aa457fa42
  importedTypeOps 330f296cc3ed68256ee5fc6aa457fa42
  importedTypes 330f296cc3ed68256ee5fc6aa457fa42
  importedValueOps 330f296cc3ed68256ee5fc6aa457fa42
  importedValues 330f296cc3ed68256ee5fc6aa457fa42
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  ConstrainedType 7b7b9fe5fc37a912cec5b01815c7784d
  Constraint a0b1e737f9fdb5b2f711c97dd5895f69
  TypeVar 9a7c02efa8540e6f48c3a672f3ebc8db
  moveQuantifiersToFront 6f6febea2aef649ecc311ae7a094f1e3
  quantify 9e9551d5aa515f8960715185c2613cd1
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
import  -/  transformers-0.5.5.0:Control.Monad.Trans.Reader 42962052353a5a0f766912058b765b5d
import  -/  transformers-0.5.5.0:Control.Monad.Trans.State.Strict 04b71a3f25b12af5c8b92a12d96be4c4
964a3ef8085f5050d0e5f678ecaed399
  $fMonoidTypeClassEnv ::
    GHC.Base.Monoid
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_$cmempty
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_$c<>
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_go -}
964a3ef8085f5050d0e5f678ecaed399
  $fMonoidTypeClassEnv_$c<> ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U,1*U,1*U)><S,1*U(1*U,1*U,1*U)>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w1 :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case w of ww { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww1 ww2 ww3 ->
                 case w1 of ww4 { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   (GHC.Base.++
                      @ (Data.Text.Internal.Text,
                         Language.PureScript.Docs.Types.Constraint',
                         Language.PureScript.Docs.Types.ChildDeclaration)
                      ww1
                      ww5)
                   (GHC.Base.++ @ Language.PureScript.Docs.Types.Declaration ww2 ww6)
                   (GHC.Base.++
                      @ Language.PureScript.Docs.Types.Declaration
                      ww3
                      ww7) } }) -}
964a3ef8085f5050d0e5f678ecaed399
  $fMonoidTypeClassEnv_$cmempty ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         Language.PureScript.Docs.Types.Constraint',
                         Language.PureScript.Docs.Types.ChildDeclaration))
                   (GHC.Types.[] @ Language.PureScript.Docs.Types.Declaration)
                   (GHC.Types.[] @ Language.PureScript.Docs.Types.Declaration)) -}
964a3ef8085f5050d0e5f678ecaed399
  $fMonoidTypeClassEnv_go ::
    [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]) ->
                 case Language.PureScript.Docs.Convert.ReExports.$wgo
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   ww1
                   ww2
                   ww3 }) -}
964a3ef8085f5050d0e5f678ecaed399
  $fSemigroupTypeClassEnv ::
    GHC.Base.Semigroup
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv_$c<>
                  Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv_$csconcat
                  Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv_$cstimes -}
964a3ef8085f5050d0e5f678ecaed399
  $fSemigroupTypeClassEnv_$csconcat ::
    GHC.Base.NonEmpty
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U,U),1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.NonEmpty
                            Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { GHC.Base.:| a1 as ->
                 Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv_go
                   a1
                   as }) -}
964a3ef8085f5050d0e5f678ecaed399
  $fSemigroupTypeClassEnv_$cstimes ::
    GHC.Real.Integral b =>
    b
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, Strictness: <L,U> -}
964a3ef8085f5050d0e5f678ecaed399
  $fSemigroupTypeClassEnv_go ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U,U)><S,1*U>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w1 :: [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]) ->
                 case w of ww { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww1 ww2 ww3 ->
                 case Language.PureScript.Docs.Convert.ReExports.$wgo1
                        ww1
                        ww2
                        ww3
                        w1 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   ww5
                   ww6
                   ww7 } }) -}
964a3ef8085f5050d0e5f678ecaed399
  $fShowTypeClassEnv ::
    GHC.Show.Show
      Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                  Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshowsPrec
                  Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshow
                  Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshowList -}
964a3ef8085f5050d0e5f678ecaed399
  $fShowTypeClassEnv1 ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww1 ww2 ww3 ->
                 Language.PureScript.Docs.Convert.ReExports.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   w1 }) -}
823069e04bf78610b38c4f24e284c057
  $fShowTypeClassEnv2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
964a3ef8085f5050d0e5f678ecaed399
  $fShowTypeClassEnv_$cshow ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv_$cshowsPrec
                   Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
964a3ef8085f5050d0e5f678ecaed399
  $fShowTypeClassEnv_$cshowList ::
    [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
                   Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv1
                   ls
                   s) -}
964a3ef8085f5050d0e5f678ecaed399
  $fShowTypeClassEnv_$cshowsPrec ::
    GHC.Types.Int
    -> Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ww3 ww4 ww5 ->
                 Language.PureScript.Docs.Convert.ReExports.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   w2 } }) -}
5df85d42b5e775d34ab5465cef9ed139
  $s$wsplitLookup_$s$w$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Language.PureScript.Names.ModuleName
    -> (# Data.Map.Internal.Map Language.PureScript.Names.ModuleName a,
          GHC.Base.Maybe a,
          Data.Map.Internal.Map Language.PureScript.Names.ModuleName a #)
  {- Arity: 6, Strictness: <L,A><S,U><L,U><L,U><L,U><S,1*U> -}
bf997487c075a771db755ac5f683660e
  $sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Internal.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild4 {
                             DEFAULT
                             -> Language.PureScript.Docs.Convert.ReExports.$sfromList_$spoly_go14
                                  @ a
                                  ww5
                                  ww6
                                  ww7
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a))
                             GHC.Types.LT
                             -> Language.PureScript.Docs.Convert.ReExports.$sfromList_$s$wpoly_go13
                                  @ a
                                  ww5
                                  ww6
                                  ww7
                                  ds3
                                  ipv1
                                  (Data.Map.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Internal.Tip @ Data.Text.Internal.Text @ a))
                                  1# } } } } } } }) -}
eea1d9713f22ee4344b0cdb696bdb21e
  $sfromListWithKey ::
    (Language.PureScript.Names.ModuleName -> a -> a -> a)
    -> [(Language.PureScript.Names.ModuleName, a)]
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 2, Strictness: <L,C(C1(C1(U)))><S,1*U>,
     Unfolding: (\ @ a
                   (f :: Language.PureScript.Names.ModuleName -> a -> a -> a)
                   (xs :: [(Language.PureScript.Names.ModuleName, a)]) ->
                 letrec {
                   go14 :: Data.Map.Internal.Map
                             Language.PureScript.Names.ModuleName a
                           -> [(Language.PureScript.Names.ModuleName, a)]
                           -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map
                               Language.PureScript.Names.ModuleName a)
                       (ds :: [(Language.PureScript.Names.ModuleName, a)]) ->
                     case ds of wild {
                       [] -> z
                       : x xs1
                       -> case x of wild1 { (,) k1 x1 ->
                          case Language.PureScript.Docs.Convert.ReExports.$sfromListWithKey_$sgo13
                                 @ a
                                 f
                                 k1
                                 x1
                                 z of z' { DEFAULT ->
                          go14 z' xs1 } } }
                 } in
                 go14
                   (Data.Map.Internal.Tip @ Language.PureScript.Names.ModuleName @ a)
                   xs) -}
2abeaedc6d6564923abc31e80dbd60d9
  $sfromListWithKey_$sgo13 ::
    (Language.PureScript.Names.ModuleName -> a1 -> a1 -> a1)
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><S,1*U><L,U><S,1*U> -}
6eecf163157015b85f9d3eae936c4b86
  $sfromList_$s$wpoly_go13 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 7, Strictness: <S,U><S,U><S,U><L,U><S,1*U><S,1*U><L,U> -}
30784c16de5e22617e81196ffe971400
  $sfromList_$spoly_go14 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
  {- Arity: 6, Strictness: <S,U><S,U><S,U><L,U><S,1*U><S,1*U> -}
7baf67b2fff9daa2e5e3d81aa30f28c6
  $sinsertWithR_$sgo13 ::
    (a1 -> a1 -> a1)
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(U))><S,1*U><L,U><S,1*U> -}
21b3cbb0ef5d5c26a65c1bbc29f883ca
  $sinsertWith_$s$sgo13 ::
    GHC.Prim.Int#
    -> Language.PureScript.Names.ModuleName
    -> a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> a
    -> Language.PureScript.Names.ModuleName
    -> (a -> a -> a)
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 8,
     Strictness: <L,U><S,U><L,U><L,U><L,U><L,U><S,1*U><L,1*C1(C1(U))> -}
4766387e7891a3e5c1304fe6af245e7d
  $sinsertWith_$sgo13 ::
    (a1 -> a1 -> a1)
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(U))><S,1*U><L,U><S,1*U> -}
2f14389bf582a42586fe7aad00447bd6
  $sinsert_$sgo1 ::
    Language.PureScript.Names.ModuleName
    -> Language.PureScript.Names.ModuleName
    -> a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
b6af20b056455782202eb22c43bcd5c0
  $slookup1 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
21d86bd9171476dd541f3433c07473ab
  $sunionWith ::
    (a -> a -> a)
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,1*U>, Inline: [~] -}
3339de5d378f32f8d3951c243d55aaba
  $tc'TypeClassEnv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11220873734594141198##
                   18178150857016025087##
                   Language.PureScript.Docs.Convert.ReExports.$trModule
                   Language.PureScript.Docs.Convert.ReExports.$tc'TypeClassEnv2
                   0#
                   Language.PureScript.Docs.Convert.ReExports.$tc'TypeClassEnv1) -}
936763011491abe25456ca7a4ce1582a
  $tc'TypeClassEnv1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2165b2c1145d5bc0646dcc4e457fde07
  $tc'TypeClassEnv2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$tc'TypeClassEnv3) -}
78812b1e4267d34f1ab9cf1c363f7648
  $tc'TypeClassEnv3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeClassEnv"#) -}
6f130f7972bd4daf928f6fdbcf93fdd6
  $tcTypeClassEnv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3659254408157246612##
                   219877873430776866##
                   Language.PureScript.Docs.Convert.ReExports.$trModule
                   Language.PureScript.Docs.Convert.ReExports.$tcTypeClassEnv1
                   0#
                   GHC.Types.krep$*) -}
8e5155254f85aa4f33ad0f3f08f5a7d0
  $tcTypeClassEnv1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$tcTypeClassEnv2) -}
3e4c7da2bf085095720129e2f5b97f77
  $tcTypeClassEnv2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeClassEnv"#) -}
2531d4f418b4d1da5950d880f7486d59
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Docs.Convert.ReExports.$trModule3
                   Language.PureScript.Docs.Convert.ReExports.$trModule1) -}
2dff973da6786d084fe48ec4da84e22e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$trModule2) -}
b6b163259dd504c582af8fb6df567c5d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Docs.Convert.ReExports"#) -}
6ef91ac0103f3c7079f29c44ed293d5c
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Docs.Convert.ReExports.$trModule4) -}
2b4972e87fee4782f6a47f5ca8518a40
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
7bac87a996f34d8058c5f864c75ccbc5
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [(Data.Text.Internal.Text,
         Language.PureScript.Docs.Types.Constraint',
         Language.PureScript.Docs.Types.ChildDeclaration)]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
4e214c5f552bce55fcc4d44de86aeb7a
  $w$sgo1 ::
    Data.Text.Internal.Text
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map Data.Text.Internal.Text a1
    -> Data.Map.Internal.Map Data.Text.Internal.Text a1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
849d9b50a330a5afc834ed1f048f98dc
  $w$sgo13 ::
    Language.PureScript.Names.ModuleName
    -> Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1
    -> (# Data.Map.Internal.Map
            Language.PureScript.Names.ModuleName a1,
          GHC.Base.Maybe a1,
          Data.Map.Internal.Map Language.PureScript.Names.ModuleName a1 #)
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
964a3ef8085f5050d0e5f678ecaed399
  $wgo ::
    [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> (# [(Data.Text.Internal.Text,
            Language.PureScript.Docs.Types.Constraint',
            Language.PureScript.Docs.Types.ChildDeclaration)],
          [Language.PureScript.Docs.Types.Declaration],
          [Language.PureScript.Docs.Types.Declaration] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
964a3ef8085f5050d0e5f678ecaed399
  $wgo1 ::
    [(Data.Text.Internal.Text,
      Language.PureScript.Docs.Types.Constraint',
      Language.PureScript.Docs.Types.ChildDeclaration)]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [Language.PureScript.Docs.Types.Declaration]
    -> [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
    -> (# [(Data.Text.Internal.Text,
            Language.PureScript.Docs.Types.Constraint',
            Language.PureScript.Docs.Types.ChildDeclaration)],
          [Language.PureScript.Docs.Types.Declaration],
          [Language.PureScript.Docs.Types.Declaration] #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
b3963798052a308b1cf83f441153407b
  $wpoly_go13 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Internal.Map Data.Text.Internal.Text a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
964a3ef8085f5050d0e5f678ecaed399
  data TypeClassEnv
    = TypeClassEnv {envUnhandledMembers :: [(Data.Text.Internal.Text,
                                             Language.PureScript.Docs.Types.Constraint',
                                             Language.PureScript.Docs.Types.ChildDeclaration)],
                    envValues :: [Language.PureScript.Docs.Types.Declaration],
                    envTypeClasses :: [Language.PureScript.Docs.Types.Declaration]}
964a3ef8085f5050d0e5f678ecaed399
  envTypeClasses ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [Language.PureScript.Docs.Types.Declaration]
  RecSel Left Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ds1 ds2 ds3 ->
                 ds3 }) -}
964a3ef8085f5050d0e5f678ecaed399
  envUnhandledMembers ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [(Data.Text.Internal.Text,
         Language.PureScript.Docs.Types.Constraint',
         Language.PureScript.Docs.Types.ChildDeclaration)]
  RecSel Left Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ds1 ds2 ds3 ->
                 ds1 }) -}
964a3ef8085f5050d0e5f678ecaed399
  envValues ::
    Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
    -> [Language.PureScript.Docs.Types.Declaration]
  RecSel Left Language.PureScript.Docs.Convert.ReExports.TypeClassEnv
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Language.PureScript.Docs.Convert.ReExports.TypeClassEnv) ->
                 case ds of wild { Language.PureScript.Docs.Convert.ReExports.TypeClassEnv ds1 ds2 ds3 ->
                 ds2 }) -}
cbb489a2dc8c22bfe5f07b2170045e66
  updateReExports ::
    Language.PureScript.Sugar.Names.Env.Env
    -> [Language.PureScript.Names.ModuleName]
    -> (Language.PureScript.Names.ModuleName
        -> Language.PureScript.Docs.Types.InPackage
             Language.PureScript.Names.ModuleName)
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Language.PureScript.Docs.Types.Module
    -> Data.Map.Internal.Map
         Language.PureScript.Names.ModuleName
         Language.PureScript.Docs.Types.Module
  {- Arity: 4, Strictness: <L,U><S,1*U><L,C(U)><L,U> -}
instance GHC.Base.Monoid [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
  = Language.PureScript.Docs.Convert.ReExports.$fMonoidTypeClassEnv
instance GHC.Base.Semigroup [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
  = Language.PureScript.Docs.Convert.ReExports.$fSemigroupTypeClassEnv
instance GHC.Show.Show [Language.PureScript.Docs.Convert.ReExports.TypeClassEnv]
  = Language.PureScript.Docs.Convert.ReExports.$fShowTypeClassEnv
"SC:$sgo130" forall @ a
                    (sc :: GHC.Prim.Int#)
                    (sc1 :: Language.PureScript.Names.ModuleName)
                    (sc2 :: a)
                    (sc3 :: Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName a)
                    (sc4 :: Data.Map.Internal.Map
                              Language.PureScript.Names.ModuleName a)
                    (sc5 :: a)
                    (sc6 :: Language.PureScript.Names.ModuleName)
                    (sc7 :: a -> a -> a)
  Language.PureScript.Docs.Convert.ReExports.$sinsertWith_$sgo13 @ a
                                                                 sc7
                                                                 sc6
                                                                 sc5
                                                                 (Data.Map.Internal.Bin
                                                                    @ Language.PureScript.Names.ModuleName
                                                                    @ a
                                                                    sc
                                                                    sc1
                                                                    sc2
                                                                    sc3
                                                                    sc4)
  = Language.PureScript.Docs.Convert.ReExports.$sinsertWith_$s$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
"SC:$w$sgo130" [0] forall @ a
                          (sc :: GHC.Prim.Int#)
                          (sc1 :: Language.PureScript.Names.ModuleName)
                          (sc2 :: a)
                          (sc3 :: Data.Map.Internal.Map
                                    Language.PureScript.Names.ModuleName a)
                          (sc4 :: Data.Map.Internal.Map
                                    Language.PureScript.Names.ModuleName a)
                          (sc5 :: Language.PureScript.Names.ModuleName)
  Language.PureScript.Docs.Convert.ReExports.$w$sgo13 @ a
                                                      sc5
                                                      (Data.Map.Internal.Bin
                                                         @ Language.PureScript.Names.ModuleName
                                                         @ a
                                                         sc
                                                         sc1
                                                         sc2
                                                         sc3
                                                         sc4)
  = Language.PureScript.Docs.Convert.ReExports.$s$wsplitLookup_$s$w$sgo13
      @ a
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
"SPEC/Language.PureScript.Docs.Convert.ReExports fromList @ Text _" [orphan] forall @ a
                                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                                Data.Text.Internal.Text)
  Data.Map.Internal.fromList @ Data.Text.Internal.Text @ a $dOrd
  = Language.PureScript.Docs.Convert.ReExports.$sfromList @ a
"SPEC/Language.PureScript.Docs.Convert.ReExports fromListWithKey @ ModuleName _" [orphan] forall @ a
                                                                                                 ($dOrd :: GHC.Classes.Ord
                                                                                                             Language.PureScript.Names.ModuleName)
  Data.Map.Internal.fromListWithKey @ Language.PureScript.Names.ModuleName
                                    @ a
                                    $dOrd
  = Language.PureScript.Docs.Convert.ReExports.$sfromListWithKey @ a
"SPEC/Language.PureScript.Docs.Convert.ReExports unionWith @ ModuleName _" [orphan] forall @ a
                                                                                           ($dOrd :: GHC.Classes.Ord
                                                                                                       Language.PureScript.Names.ModuleName)
  Data.Map.Internal.unionWith @ Language.PureScript.Names.ModuleName
                              @ a
                              $dOrd
  = Language.PureScript.Docs.Convert.ReExports.$sunionWith @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

