
==================== FINAL INTERFACE ====================
2018-11-30 19:26:55.301165 UTC

interface purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Pretty.Types 8043
  interface hash: 68a57a1674c44d07072d999d1236f567
  ABI hash: 55abc63b15198d7c72c92dad86c3e447
  export-list hash: b40ff76265cae147b2217367d81cb585
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0ce21d9fbfa84a7ed524d2aad564d4cd
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Pretty.Types.prettyPrintLabel
  Language.PureScript.Pretty.Types.prettyPrintObjectKey
  Language.PureScript.Pretty.Types.prettyPrintRow
  Language.PureScript.Pretty.Types.prettyPrintSuggestedType
  Language.PureScript.Pretty.Types.prettyPrintType
  Language.PureScript.Pretty.Types.prettyPrintTypeAtom
  Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode
  Language.PureScript.Pretty.Types.suggestedTypeAsBox
  Language.PureScript.Pretty.Types.typeAsBox
  Language.PureScript.Pretty.Types.typeAtomAsBox
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Names Language.PureScript.PSString
                     Language.PureScript.Parser.Lexer Language.PureScript.Parser.State
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 aeson-better-errors-0.9.1.0
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.4 binary-0.8.5.1 blaze-builder-0.4.1.0 boxes-0.1.5
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      dlist-0.8.0.4 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 mtl-2.2.2 parsec-3.1.13.0
                      pattern-arrows-0.0.2 pretty-1.1.3.6 primitive-0.6.3.0
                      protolude-0.2.2 random-1.1 scientific-0.3.6.2 sourcemap-0.1.6
                      split-0.2.3.3 stm-2.4.5.0 syb-0.7 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.0 th-abstraction-0.2.8.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 transformers-0.5.5.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Declarations
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.Operators
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.AST.SourcePos
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Environment
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Kinds
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Label
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Names
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.PSString
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  boxes-0.1.5:Text.PrettyPrint.Boxes 49de0395c02f08dbf50ec04d019c04fb
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  pattern-arrows-0.0.2:Control.PatternArrows 90def053e91ab273d69e02942232cbc5
import  -/  Language.PureScript.Crash 1bc11bf824676e9581610d0d05d26761
  exports: 8a971f39d6ef3f27956f413640cb0a24
  internalError f3db7e23c75878c9d13888d6d114012d
import  -/  Language.PureScript.Environment 31667499b7017b19998bb405474fbe93
  exports: 56b1ef0ac6132b4c113ce26a807dcfb6
  tyFunction 9783ce0b37378c763c53f9a28f7311d6
  tyRecord fcace11d48da9699cb692901edeeb943
import  -/  Language.PureScript.Kinds bf1fc2fd18b06658330fcf93fe50e737
  exports: 2c2448e43e622d2466a59b9cd8f4db91
  Kind 3e1e213eb647453235d33b0d1b36ec59
import  -/  Language.PureScript.Label ac3bc484eb8b3b2ccf228cc34cdb537c
  exports: 62e65d694c1e96c81750d9cacc93e898
  Label 6f46d05ebbc78fa0ba91a5af362adcaf
  Label 61523a5f4fc28a2f2f6f00cce17ce1bb
import  -/  Language.PureScript.Names b3bf151840f3e8f2eb61eff186432886
  exports: f7f3503d20957194bda83c16bb5f1288
  coerceProperName 9cce674374cd97d7385253445133e737
  disqualify 3e7b8117c7613f1d74fadc5d62b59f54
  runOpName 1522672b880b192c6e05e6cf8a45712d
  runProperName 29f101e190cc99df85623423972e606f
  showQualified 3c507c3595affc1e0cc61d34a906a736
import  -/  Language.PureScript.PSString 29492f728997dffadb84d1bf161f2ce4
  exports: 41608caf7cc5b51f34de641c9952ab6d
  PSString 0c2d9eac7fc8cff2b3ca27abf6053439
  decodeString 0c2d9eac7fc8cff2b3ca27abf6053439
  prettyPrintString ad1edf9d71a4049432f57a83a68437e1
import  -/  Language.PureScript.Pretty.Common 3b6e69c173d325d7c9be0bb0169f3188
  exports: 3b669d7e8560d3ed86c28ef1f72a89c4
  before 3de30d3cfa61e8605407bcad8c583891
  objectKeyRequiresQuoting ab6a45548ac547f1bf7aef65dc8ae414
import  -/  Language.PureScript.Pretty.Kinds 61520f24125a18b860156c88cb953ccd
  exports: 38cc499155a6344cfee087fd8681f3dc
  prettyPrintKind 7cb5c666396112b6de1d2e646e595fab
import  -/  Language.PureScript.Types 74562e642f5297557b3a23aac7819ad1
  exports: ae97bc75fcebc59f59c970736847a827
  BinaryNoParensType 107160e9c63cdf092e86906dc4d4938e
  ConstrainedType c2b3670e25b3b510981414df0f340e0f
  Constraint 07ef72cbe41926551b2da51008274cd5
  Constraint 93223f8afa90d0facc05a03f863dc72d
  ForAll 8e5cfabdac15777ed3387d8a0029598b
  KindedType 0c5178e2942b7d198426b0539b6f6442
  ParensInType 09530ee2adabb1c21031665aeff3fda2
  PrettyPrintForAll 253d9a7d7e1ab30ae225f74e951c3657
  PrettyPrintFunction af21ea6849a6b4a90a77a91f4e0562c7
  PrettyPrintObject f763acced04eace2d63d0962f67a3c41
  RCons c8b1a363e575e040360112548c9c1bd6
  REmpty 7b5d4ca839c026ea0c7f04daad457191
  Skolem e2f87ac818d8dc245fc6ff263c6e89ee
  TUnknown 39441d842668db3aca11ba64b9f08b2c
  Type 93223f8afa90d0facc05a03f863dc72d
  TypeApp 8aa2c93426facb8054d5caf77ff9d922
  TypeConstructor 5e1c42d22ac701f08c049fde0171d9ac
  TypeLevelString b529cbddb07085442fd8755c41cb42eb
  TypeOp ad0891db755477b54ad0870dc64917cc
  TypeVar ac604589bba317f51f6e97fef0e84f86
  TypeWildcard d993619c31ecd71f696448ee686f32f4
  everywhereOnTypes fa3aa1a1c2e07faf6471b9f2771c8368
  everywhereOnTypesTopDown 5a4058c411dd2d30405b0333fde0c8b7
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
2ec36b678fe4665b7466d178721d5573
  $tc'TypeRenderOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8344412452467052260##
                   13690384149374658413##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'TypeRenderOptions2
                   0#
                   Language.PureScript.Pretty.Types.$tc'TypeRenderOptions1) -}
99854eab9ba18d00a8af635d80467475
  $tc'TypeRenderOptions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
522b592dfbd4d8e46607b26bf5a8e0f5
  $tc'TypeRenderOptions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'TypeRenderOptions3) -}
dca6e56b7b49f9fce60d5fee885c4213
  $tc'TypeRenderOptions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeRenderOptions"#) -}
739754c8afa7d1130c83b527e5729426
  $tcTypeRenderOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3054108699826739705##
                   14668869654545858013##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tcTypeRenderOptions1
                   0#
                   GHC.Types.krep$*) -}
be86a40ceaf3102370d7f9d85ca15802
  $tcTypeRenderOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tcTypeRenderOptions2) -}
e8b697165d676f0873ba101a37e7c954
  $tcTypeRenderOptions2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeRenderOptions"#) -}
0e63571230faeffe90d68ced5f2aedc3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Pretty.Types.$trModule3
                   Language.PureScript.Pretty.Types.$trModule1) -}
35910a815e3d9f63188ce9e685d98190
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$trModule2) -}
9e45e64119cf90fedc3a87d36924ec76
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Pretty.Types"#) -}
679d083dfe268014dc5a1893ed6bbd28
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$trModule4) -}
3db2f967ccdd32e4a46174c8ab1781cc
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.1-Hd7ka7pmldWKPBJH6hcve7"#) -}
46078de878ac8520db1887f82c41f1ae
  $wgo ::
    [Data.Text.Internal.Text]
    -> Language.PureScript.Types.Type
    -> (# [Data.Text.Internal.Text], Language.PureScript.Types.Type #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
8413f21fccf83b37a535ee2d5e20eb19
  $wmatchTypeAtom ::
    GHC.Types.Bool
    -> GHC.Types.Bool
    -> Control.PatternArrows.Pattern
         () Language.PureScript.Types.Type Text.PrettyPrint.Boxes.Box
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
c2c5b189cb21e779fb84b028599c09a3
  data TypeRenderOptions
    = TypeRenderOptions {troSuggesting :: GHC.Types.Bool,
                         troUnicode :: GHC.Types.Bool}
b391c5f0b9967cb10ed34e5feb09d862
  defaultOptions ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Pretty.Types.TypeRenderOptions
                   GHC.Types.False
                   GHC.Types.False) -}
617e2a96c9c8b9dc1678fb3294e7b667
  insertPlaceholders ::
    Language.PureScript.Types.Type -> Language.PureScript.Types.Type
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Types.Type) ->
                 Language.PureScript.Types.everywhereOnTypesTopDown
                   Language.PureScript.Pretty.Types.prettyPrintSuggestedType_convertForAlls
                   (Language.PureScript.Types.everywhereOnTypes
                      Language.PureScript.Pretty.Types.prettyPrintSuggestedType_convert
                      x)) -}
ceab02993eea4e1bbd587a73dc0e5e52
  matchType ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> Control.PatternArrows.Pattern
         () Language.PureScript.Types.Type Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,U(U,U)> -}
71e2d247b7c00b68530ecf063e33557c
  prettyPrintLabel ::
    Language.PureScript.Label.Label -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (ds3 :: Language.PureScript.Label.Label) ->
                 case Language.PureScript.PSString.decodeString
                        ds3 `cast` (Language.PureScript.Label.N:Label[0]) of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.PSString.prettyPrintString
                        ds3 `cast` (Language.PureScript.Label.N:Label[0])
                   GHC.Base.Just s'
                   -> case Language.PureScript.Pretty.Common.objectKeyRequiresQuoting
                             s' of wild1 {
                        GHC.Types.False -> s'
                        GHC.Types.True
                        -> Language.PureScript.PSString.prettyPrintString
                             ds3 `cast` (Language.PureScript.Label.N:Label[0]) } }) -}
b4f7948944c82937c1d5c459db68428a
  prettyPrintObjectKey ::
    Language.PureScript.PSString.PSString -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Pretty.Types.prettyPrintLabel
                  `cast`
                (Language.PureScript.Label.N:Label[0]
                 ->_R <Data.Text.Internal.Text>_R) -}
b18421469ed9c0094b271b2bf95eca3a
  prettyPrintRow :: Language.PureScript.Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Language.PureScript.Types.Type) ->
                 case Language.PureScript.Pretty.Types.prettyPrintRow_g
                        x of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                 Data.OldList.unlines
                   (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) }) -}
a6aad77ad9c17f7f93ec5d585435f191
  prettyPrintRow1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ')'#) -}
248b5dd51439ce3296111e92ac0dfaba
  prettyPrintRow2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '('#) -}
2de9af7f7e6047e678af43f554b48c7a
  prettyPrintRowWith ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> GHC.Types.Char
    -> GHC.Types.Char
    -> Language.PureScript.Types.Type
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 3, Strictness: <L,1*U(A,1*U)><L,U><L,U> -}
2ba8f95e24333ecb89795e111f620145
  prettyPrintRow_g ::
    Language.PureScript.Types.Type -> Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.prettyPrintRowWith
                   Language.PureScript.Pretty.Types.defaultOptions
                   Language.PureScript.Pretty.Types.prettyPrintRow2
                   Language.PureScript.Pretty.Types.prettyPrintRow1) -}
fa7c2411f759337e68ac258ccfd09b39
  prettyPrintSuggestedType ::
    Language.PureScript.Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintSuggestedType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
46aefa316ed3dd0b23225c85dbd9ba19
  prettyPrintSuggestedType_convert ::
    Language.PureScript.Types.Type -> Language.PureScript.Types.Type
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds3 :: Language.PureScript.Types.Type) ->
                 case ds3 of wild {
                   DEFAULT -> wild
                   Language.PureScript.Types.TypeApp ds4 ret
                   -> case ds4 of wild1 {
                        DEFAULT
                        -> case Language.PureScript.Types.$fEqType_$c==
                                  wild1
                                  Language.PureScript.Environment.tyRecord of wild2 {
                             GHC.Types.False -> wild
                             GHC.Types.True -> Language.PureScript.Types.PrettyPrintObject ret }
                        Language.PureScript.Types.TypeApp f arg
                        -> case Language.PureScript.Types.$fEqType_$c==
                                  f
                                  Language.PureScript.Environment.tyFunction of wild2 {
                             GHC.Types.False
                             -> case Language.PureScript.Types.$fEqType_$c==
                                       wild1
                                       Language.PureScript.Environment.tyRecord of wild3 {
                                  GHC.Types.False -> wild
                                  GHC.Types.True
                                  -> Language.PureScript.Types.PrettyPrintObject ret }
                             GHC.Types.True
                             -> Language.PureScript.Types.PrettyPrintFunction arg ret } } }) -}
04aa4004b7425e2a44c689b313af200c
  prettyPrintSuggestedType_convertForAlls ::
    Language.PureScript.Types.Type -> Language.PureScript.Types.Type
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds3 :: Language.PureScript.Types.Type) ->
                 case ds3 of wild {
                   DEFAULT -> wild
                   Language.PureScript.Types.ForAll ident ty ds4
                   -> Language.PureScript.Pretty.Types.prettyPrintSuggestedType_go
                        (GHC.Types.:
                           @ Data.Text.Internal.Text
                           ident
                           (GHC.Types.[] @ Data.Text.Internal.Text))
                        ty }) -}
78e6734c343871594d703e2b54818b63
  prettyPrintSuggestedType_d :: Text.PrettyPrint.Boxes.Box
  {- Strictness: x -}
1a8811d2fa753604210fd1dd4346646d
  prettyPrintSuggestedType_go ::
    [Data.Text.Internal.Text]
    -> Language.PureScript.Types.Type -> Language.PureScript.Types.Type
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>m16,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [Data.Text.Internal.Text])
                   (w1 :: Language.PureScript.Types.Type) ->
                 case Language.PureScript.Pretty.Types.$wgo
                        w
                        w1 of ww { (#,#) ww1 ww2 ->
                 Language.PureScript.Types.PrettyPrintForAll ww1 ww2 }) -}
f03e0cd26be4d9eebd374fa1581d4919
  prettyPrintSuggestedType_p ::
    Control.PatternArrows.Pattern
      () Language.PureScript.Types.Type Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.matchType
                   Language.PureScript.Pretty.Types.suggestingOptions) -}
cc66574a7951d989b0a885f58cf82665
  prettyPrintType ::
    Language.PureScript.Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
5ca4902b387d286e29ab3530e5ce1422
  prettyPrintTypeAtom ::
    Language.PureScript.Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeAtom_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintTypeAtom_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
be849b21c4cb2f9b0812c00a7a127ef8
  prettyPrintTypeAtom_d :: Text.PrettyPrint.Boxes.Box
  {- Strictness: x -}
f78da280bb71b05dfec99b3c154c1e01
  prettyPrintTypeAtom_p ::
    Control.PatternArrows.Pattern
      () Language.PureScript.Types.Type Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.$wmatchTypeAtom
                   GHC.Types.False
                   GHC.Types.False) -}
463888e14f5071e7540b38defef0c1e3
  prettyPrintTypeWithUnicode ::
    Language.PureScript.Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
baad9030d05f19abb4fa408fa4b7cbad
  prettyPrintTypeWithUnicode1 ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Pretty.Types.TypeRenderOptions
                   GHC.Types.False
                   GHC.Types.True) -}
b45784b6d379ba81aa6a47e237bbfc03
  prettyPrintTypeWithUnicode_p ::
    Control.PatternArrows.Pattern
      () Language.PureScript.Types.Type Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.matchType
                   Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode1) -}
49a502363230c65d32874405b4badc73
  prettyPrintType_p ::
    Control.PatternArrows.Pattern
      () Language.PureScript.Types.Type Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.matchType
                   Language.PureScript.Pretty.Types.defaultOptions) -}
b656b018f55102a219ae102162964e07
  suggestedTypeAsBox ::
    Language.PureScript.Types.Type -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintSuggestedType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
1384b5906551f1bd6646ece378a2505f
  suggestingOptions ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Pretty.Types.TypeRenderOptions
                   GHC.Types.True
                   GHC.Types.False) -}
c2c5b189cb21e779fb84b028599c09a3
  troSuggesting ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> GHC.Types.Bool
  RecSel Left Language.PureScript.Pretty.Types.TypeRenderOptions
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds3 :: Language.PureScript.Pretty.Types.TypeRenderOptions) ->
                 case ds3 of wild { Language.PureScript.Pretty.Types.TypeRenderOptions ds4 ds5 ->
                 ds4 }) -}
c2c5b189cb21e779fb84b028599c09a3
  troUnicode ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> GHC.Types.Bool
  RecSel Left Language.PureScript.Pretty.Types.TypeRenderOptions
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds3 :: Language.PureScript.Pretty.Types.TypeRenderOptions) ->
                 case ds3 of wild { Language.PureScript.Pretty.Types.TypeRenderOptions ds4 ds5 ->
                 ds5 }) -}
b9289a1bb3ff026cfc8428a45c50c758
  typeAsBox ::
    Language.PureScript.Types.Type -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
090342212fcc8db36f243e485493a995
  typeAtomAsBox ::
    Language.PureScript.Types.Type -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Types.Type) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeAtom_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Types.Type>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                                                                              ()
                                                                                                              GHC.Base.Maybe>_R
                                                                                                           <Language.PureScript.Types.Type>_R
                                                                                                           <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.insertPlaceholders x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintTypeAtom_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

