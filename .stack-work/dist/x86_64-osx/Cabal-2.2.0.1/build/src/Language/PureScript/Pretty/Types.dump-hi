
==================== FINAL INTERFACE ====================
2019-01-24 14:14:14.592922 UTC

interface purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Pretty.Types 8043
  interface hash: 9c920f06e1271da615cfed5e84f32395
  ABI hash: 1303ea05006a6ec61edb2f109218248a
  export-list hash: f7263952ce0ec10cb0b028bbb35f097c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0ce21d9fbfa84a7ed524d2aad564d4cd
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.PureScript.Pretty.Types.convertPrettyPrintType
  Language.PureScript.Pretty.Types.prettyPrintLabel
  Language.PureScript.Pretty.Types.prettyPrintObjectKey
  Language.PureScript.Pretty.Types.prettyPrintRow
  Language.PureScript.Pretty.Types.prettyPrintSuggestedType
  Language.PureScript.Pretty.Types.prettyPrintType
  Language.PureScript.Pretty.Types.prettyPrintTypeAtom
  Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode
  Language.PureScript.Pretty.Types.suggestedTypeAsBox
  Language.PureScript.Pretty.Types.typeAsBox
  Language.PureScript.Pretty.Types.typeAsBox'
  Language.PureScript.Pretty.Types.typeAtomAsBox
  Language.PureScript.Pretty.Types.typeAtomAsBox'
  Language.PureScript.Pretty.Types.PrettyPrintConstraint
  Language.PureScript.Pretty.Types.PrettyPrintType{Language.PureScript.Pretty.Types.PPBinaryNoParensType Language.PureScript.Pretty.Types.PPConstrainedType Language.PureScript.Pretty.Types.PPForAll Language.PureScript.Pretty.Types.PPFunction Language.PureScript.Pretty.Types.PPKindedType Language.PureScript.Pretty.Types.PPParensInType Language.PureScript.Pretty.Types.PPRCons Language.PureScript.Pretty.Types.PPREmpty Language.PureScript.Pretty.Types.PPRecord Language.PureScript.Pretty.Types.PPSkolem Language.PureScript.Pretty.Types.PPTUnknown Language.PureScript.Pretty.Types.PPTypeApp Language.PureScript.Pretty.Types.PPTypeConstructor Language.PureScript.Pretty.Types.PPTypeLevelString Language.PureScript.Pretty.Types.PPTypeOp Language.PureScript.Pretty.Types.PPTypeVar Language.PureScript.Pretty.Types.PPTypeWildcard}
module dependencies: Control.Monad.Supply
                     Control.Monad.Supply.Class Language.PureScript.AST
                     Language.PureScript.AST.Binders
                     Language.PureScript.AST.Declarations
                     Language.PureScript.AST.Exported Language.PureScript.AST.Literals
                     Language.PureScript.AST.Operators Language.PureScript.AST.SourcePos
                     Language.PureScript.AST.Traversals Language.PureScript.Bundle
                     Language.PureScript.Comments Language.PureScript.Constants
                     Language.PureScript.Crash Language.PureScript.Environment
                     Language.PureScript.Kinds Language.PureScript.Label
                     Language.PureScript.Names Language.PureScript.PSString
                     Language.PureScript.Parser.Lexer Language.PureScript.Parser.State
                     Language.PureScript.Pretty.Common Language.PureScript.Pretty.Kinds
                     Language.PureScript.Traversals
                     Language.PureScript.TypeClassDictionaries Language.PureScript.Types
                     Paths_purescript
package dependencies: aeson-1.3.1.1 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 base-4.11.1.0 base-compat-0.10.4 binary-0.8.5.1
                      blaze-builder-0.4.1.0 boxes-0.1.5 bytestring-0.10.8.2
                      containers-0.5.11.0 deepseq-1.4.3.0 dlist-0.8.0.4 filepath-1.4.2
                      ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1
                      language-javascript-0.6.0.11 microlens-0.4.9.1 microlens-ghc-0.4.9
                      microlens-mtl-0.1.11.1 microlens-platform-0.3.10
                      microlens-th-0.4.2.1 mtl-2.2.2 parsec-3.1.13.0 pattern-arrows-0.0.2
                      pretty-1.1.3.6 primitive-0.6.3.0 protolude-0.2.2 random-1.1
                      scientific-0.3.6.2 sourcemap-0.1.6 split-0.2.3.3 stm-2.4.5.0
                      syb-0.7 tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.4
                      transformers-0.5.5.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1
orphans: syb-0.7:Data.Generics.Instances
         stm-2.4.5.0:Control.Monad.STM
         microlens-platform-0.3.10:Lens.Micro.Platform
         microlens-ghc-0.4.9:Lens.Micro.GHC
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         microlens-0.4.9.1:Lens.Micro.Internal
                         microlens-ghc-0.4.9:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.10:Lens.Micro.Platform
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Declarations
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.Operators
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.AST.SourcePos
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Comments
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Environment
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Kinds
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Label
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Names
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.PSString
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.TypeClassDictionaries
                         purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F:Language.PureScript.Types
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Arrow ce43199b5356a11ee2a8317f0ec30aee
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-compat-0.10.4:Prelude.Compat bb6796186ed35a1d09dc34362a3fc27e
import  -/  boxes-0.1.5:Text.PrettyPrint.Boxes 49de0395c02f08dbf50ec04d019c04fb
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  pattern-arrows-0.0.2:Control.PatternArrows 90def053e91ab273d69e02942232cbc5
import  -/  Language.PureScript.Crash 3dd739d57f17e8a1e9cd97afd3faf067
  exports: a9d2725f359c2d113bd38076e88ec681
  internalError d33c2a09c5cbe8e68c0bc27d1500ba1a
import  -/  Language.PureScript.Environment 467b25d81b890e1aaabe28d0f09d192d
  exports: a0cb6cb8c78c56365f58c9f88d1fe000
  tyFunction 72bada10fd7f408ce623a31c14e8cefb
  tyRecord 50710499a0d6346d3284449c5e15992d
import  -/  Language.PureScript.Kinds e26b9cf8211f7e72bb44fdd3faed066e
  exports: fe71635ad7964c0d620fb0685614a050
  Kind 5e0361ee324aa435f4976ea2eac1777d
import  -/  Language.PureScript.Label 366bbe6039761c79dbc09aaf87b5753e
  exports: 0a72b1b943ee66379d53382d0212ef7e
  Label 1f1fefa14786357467485814549b59fb
  Label 1525a534169f6ccc5a25699c70351352
import  -/  Language.PureScript.Names 00f694509122478d97b327fbbccae327
  exports: ad7ae34f85124c68e8ba1c90fb2e732f
  ClassName c5d98a635cb261f6a93bf01096d0c6ed
  OpName 9af301165f72160425c5e0dde6525338
  ProperName a7268334e0b909381550b9329cb80fcc
  Qualified 1b2ddf0c04464d2fa2588925f10c1966
  TypeName 40ce511c66a72431b4e87351210f7b03
  TypeOpName db73fc39fef75f034a0b4a8074947dd9
  coerceProperName 441cf2d4ab32b68a0b73ca234d2a628b
  disqualify bf1cc3b0e6c1ffc0008a6113bf8116c0
  runOpName 9af301165f72160425c5e0dde6525338
  runProperName a7268334e0b909381550b9329cb80fcc
  showQualified 5ab4b15825b0e65e211bc57f19d57784
import  -/  Language.PureScript.PSString 482bcd39d274b3e3efbde5749bd9d797
  exports: dedd5d31dc509736134f041863efd1d4
  PSString 96ffea2472d48cda76cc39d47ab7bb82
  decodeString 96ffea2472d48cda76cc39d47ab7bb82
  prettyPrintString b1dfb53e84049d1e3f6bb311f4e41690
import  -/  Language.PureScript.Pretty.Common 5ad137006c9d22dbc8d348caeed567b2
  exports: c21a0ba6e9877729208defe8b5d16c9a
  before 411bd3e965e2e36262e24566a3ef76eb
  objectKeyRequiresQuoting 9e23b328702b1a9ddb524479909e2948
import  -/  Language.PureScript.Pretty.Kinds 1231cbf0b1be99cf8261312fb9302146
  exports: 4fac4abed3fa8b491f4607c0483d6787
  prettyPrintKind f60a6c7beaabc8993b1df72e46c79d4c
import  -/  Language.PureScript.Types 80a51f62cb3e6c71f024289b88f07b7f
  exports: 229bb7528146da886cffbefad5822e19
  BinaryNoParensType e0f6df16f0ffaf49053e71d305a7063a
  ConstrainedType 7b7b9fe5fc37a912cec5b01815c7784d
  Constraint a0b1e737f9fdb5b2f711c97dd5895f69
  ForAll 0750974c4b3c816f0559c95f8418f903
  KindedType 7d9c2ac5dbbe89c236f431d3c9412617
  ParensInType e197aabee5513dc57789571f03a80719
  RCons baa72184843999f17a8e5f8391aabd36
  REmpty 55ca0a758aacaf511eb4882e2b81a0fc
  Skolem aef73915115b060ec7781cdd3859082f
  TUnknown 9d429c357e98c51eb9f7f00bef0a2346
  Type d5fc19231e8a71936895da17eade4f5b
  TypeApp 9dadf19674ff2d747cbba0c42dfad343
  TypeConstructor c7b7bcec494a17e684a206aeb55ef57b
  TypeLevelString 8a25ec25c9b44a7602f610ae833b697e
  TypeOp c293e95b09cf540c33c1d0b1480f5f80
  TypeVar 9a7c02efa8540e6f48c3a672f3ebc8db
  TypeWildcard e8def149f21247f8f38af9a4e50f9298
  eqType d5fc19231e8a71936895da17eade4f5b
import  -/  text-1.2.3.0:Data.Text 7daa7e6c9b39d8cc1679e5ec5c64d2be
import  -/  text-1.2.3.0:Data.Text.Internal 30a0a123f71f63b26cd34c6b24f23411
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
cad2208d2f4b3c880714f19217015572
  $tc'PPBinaryNoParensType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12837057416432990734##
                   8387961551456098168##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPBinaryNoParensType2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPBinaryNoParensType1) -}
cd40e9c6cca44fdce53e3159af46198f
  $tc'PPBinaryNoParensType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
dd5a5760946810193ac91824962272ea
  $tc'PPBinaryNoParensType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPBinaryNoParensType3) -}
b4d92f96325da160b227fe59712a0700
  $tc'PPBinaryNoParensType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPBinaryNoParensType"#) -}
301a4911b520a35878db5d1f55d40ffd
  $tc'PPConstrainedType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8414455622744295128##
                   7193184728067651773##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPConstrainedType2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPConstrainedType1) -}
0f5ae3335d80199f5f3328282c5673d5
  $tc'PPConstrainedType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3f081a52ae06524adc80e0863ab36c87
  $tc'PPConstrainedType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPConstrainedType3) -}
d74fd8371793d5b1f251ec83f3e58496
  $tc'PPConstrainedType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPConstrainedType"#) -}
592ed5176cc2e8076ad5d8d54bee5e33
  $tc'PPForAll :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4010879001090025689##
                   9476200502853389105##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPForAll2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPForAll1) -}
796ed799975f247f53cf35b297424697
  $tc'PPForAll1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3f1ca44bed600e3a83870ab3270d1157
  $tc'PPForAll2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPForAll3) -}
3b72983e513e7b8d7964c787842d8db6
  $tc'PPForAll3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPForAll"#) -}
ec074f09dd5420cdc1c2e4dc24f9e89f
  $tc'PPFunction :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16272840822655461242##
                   8120490310788160196##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPFunction2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPFunction1) -}
9f823291e72b1c12273902b94812c481
  $tc'PPFunction1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
90258cc8192ef05341ef6c2a934480f4
  $tc'PPFunction2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPFunction3) -}
4d630c50a8ffd62c70e37e7527f0dfda
  $tc'PPFunction3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPFunction"#) -}
a4f8718a1b3dc0abb848d37041a0f5df
  $tc'PPKindedType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15660021767676181940##
                   16670238227815826321##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPKindedType2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPKindedType1) -}
b4f803e9a45e4d627c78b0c3ba0808e7
  $tc'PPKindedType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9065a2c15bcd591b45405383e4a971db
  $tc'PPKindedType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPKindedType3) -}
89bce297db68b40e7ca60893e7dd0083
  $tc'PPKindedType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPKindedType"#) -}
d6c6e4f039074494a00173e4226d09bc
  $tc'PPParensInType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6682337325843581439##
                   9599424451447104784##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPParensInType2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPParensInType1) -}
6264356ae7b0a009faeeb2eae6d85d65
  $tc'PPParensInType1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7ad27bae300a414ef9d7f5dac64a0b2b
  $tc'PPParensInType2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPParensInType3) -}
8bd205752bd2e8f4a07dacac32cc212c
  $tc'PPParensInType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPParensInType"#) -}
9f68446b61f05d9a531c9a75fceb2578
  $tc'PPRCons :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11809988248133754505##
                   13479197542093393796##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPRCons2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPRCons1) -}
7603e61b8a81f53f72966d06acb53a76
  $tc'PPRCons1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
633e81454de503b839714b8aef0306f9
  $tc'PPRCons2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPRCons3) -}
a554cfbb87bffa65564000c1e73b4a63
  $tc'PPRCons3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPRCons"#) -}
ba7b3f58d7297fefe17fa0296045812c
  $tc'PPREmpty :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2431684973317952230##
                   3473683761629864344##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPREmpty2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPREmpty1) -}
c90c43e52e7f9173cf7f668e01446fcf
  $tc'PPREmpty1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
42246c41bb27da51efec10e874a583a1
  $tc'PPREmpty2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPREmpty3) -}
fc1011d83cb6f2e7de1d87d96b2c5a13
  $tc'PPREmpty3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPREmpty"#) -}
f8fa519eb681356a9a1ac762c2122f8d
  $tc'PPRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10416321629689898720##
                   2003219469041821006##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPRecord1
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPParensInType1) -}
56fe3800d0cd6021dea381c196c125d5
  $tc'PPRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPRecord2) -}
9d3748eec62f3ef944889ca7640584cb
  $tc'PPRecord2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPRecord"#) -}
057c808a569c1611a943af75740579e3
  $tc'PPSkolem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15298449316035015295##
                   5516291872993903252##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPSkolem2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPSkolem1) -}
2f6ad244a389a262c7f8295fa552966a
  $tc'PPSkolem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bfe42c72807ca7c1dc9ec095f2e84ff4
  $tc'PPSkolem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPSkolem3) -}
2556bf7ae5b69f7ac41325595e92e6b8
  $tc'PPSkolem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPSkolem"#) -}
1168f6495b2b4b47277c08e0dadd4180
  $tc'PPTUnknown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17042983300991534422##
                   4750308836471741900##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTUnknown2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPTUnknown1) -}
2cbbe48cd32fb06b1c41c86fe9d69233
  $tc'PPTUnknown1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e1fc4b2eab8b3021fb3a9a11f00b1062
  $tc'PPTUnknown2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTUnknown3) -}
d74a694c2ef63f88909f1e761b86b9eb
  $tc'PPTUnknown3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTUnknown"#) -}
a1859e1cd5125aa9a83f2277728edf36
  $tc'PPTypeApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11067054485392642133##
                   12664809451226349759##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTypeApp1
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPFunction1) -}
55b4cea8e32732368e92a25166752e31
  $tc'PPTypeApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTypeApp2) -}
e083c1bdbe1656bff58e54728a669c87
  $tc'PPTypeApp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTypeApp"#) -}
dabd08f6befadb7debe69902d695aadd
  $tc'PPTypeConstructor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17968429616247691701##
                   5511677158283474639##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTypeConstructor2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPTypeConstructor1) -}
099a086b2243befc7276370df3b524af
  $tc'PPTypeConstructor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
64d06b66a3d84386cf7b7ceee0add7a9
  $tc'PPTypeConstructor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTypeConstructor3) -}
d840f4af134ff426eaf915233e27beff
  $tc'PPTypeConstructor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTypeConstructor"#) -}
f68983a3736862cfa203a0f2539f7568
  $tc'PPTypeLevelString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6778041525575633365##
                   8179253078993003199##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTypeLevelString2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPTypeLevelString1) -}
52e935410c3fe66c513865ac8e721a8e
  $tc'PPTypeLevelString1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2aa906955aa1107a0832309ae29e75df
  $tc'PPTypeLevelString2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTypeLevelString3) -}
48d2f69d3babcd943993368bbabf82ac
  $tc'PPTypeLevelString3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTypeLevelString"#) -}
4200359bbf9dab3ca70bc433cbf5a382
  $tc'PPTypeOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14016220768205522502##
                   8848135196859757427##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTypeOp2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPTypeOp1) -}
ced594837c14c3c6e0b35c943bafef6d
  $tc'PPTypeOp1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
178c0e53ddbe228051bb47ff46b21e23
  $tc'PPTypeOp2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTypeOp3) -}
3a967005bcd6df50bab3f4bf2de02a71
  $tc'PPTypeOp3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTypeOp"#) -}
ea84f2d63fd0f287dddd859777109af5
  $tc'PPTypeVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2869892561096051337##
                   14535015682698797402##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTypeVar2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPTypeVar1) -}
e8f47583de789e0180a8cceae4856734
  $tc'PPTypeVar1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5981189b4c323cc81d422aac54073f7f
  $tc'PPTypeVar2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTypeVar3) -}
2e044c22af8c65027b19882014f0e780
  $tc'PPTypeVar3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTypeVar"#) -}
7734bf1ad4b52156d9094fc4a4df6614
  $tc'PPTypeWildcard :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12632959688534682665##
                   15433696494497957288##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'PPTypeWildcard2
                   0#
                   Language.PureScript.Pretty.Types.$tc'PPTypeWildcard1) -}
a5a83f6b249b9b2c8ebcd2b19e8f53cb
  $tc'PPTypeWildcard1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7f060a7abe9fc7e3b2a0be9938e5c599
  $tc'PPTypeWildcard2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'PPTypeWildcard3) -}
cd801b783d0e0cee8803ee028d0c17f9
  $tc'PPTypeWildcard3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PPTypeWildcard"#) -}
53b1a1347605d6d84d971d00c861223a
  $tc'TypeRenderOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15095335773356370853##
                   2787057752143265748##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tc'TypeRenderOptions2
                   0#
                   Language.PureScript.Pretty.Types.$tc'TypeRenderOptions1) -}
c816bb9b9925e88b2bd8a79704f44f05
  $tc'TypeRenderOptions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
684b4a38c659899e79626aa0bc7358e9
  $tc'TypeRenderOptions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tc'TypeRenderOptions3) -}
077ed0d1d0544d7ff1cd014ce92795d3
  $tc'TypeRenderOptions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TypeRenderOptions"#) -}
4c6097bd929bb337462287ef2ec08e79
  $tcPrettyPrintType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17540189116497115175##
                   15504248749049681459##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tcPrettyPrintType1
                   0#
                   GHC.Types.krep$*) -}
9faa30c874f02ee8ec7bfe9d8b9ef673
  $tcPrettyPrintType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tcPrettyPrintType2) -}
c7990269b6166eb33a1dca8fb320356b
  $tcPrettyPrintType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PrettyPrintType"#) -}
5bed25f6d65f9475f5d14d9add47bc67
  $tcTypeRenderOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4586838440159022408##
                   16494758897103851952##
                   Language.PureScript.Pretty.Types.$trModule
                   Language.PureScript.Pretty.Types.$tcTypeRenderOptions1
                   0#
                   GHC.Types.krep$*) -}
cb133be8622f0951474c46396edbbfd3
  $tcTypeRenderOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$tcTypeRenderOptions2) -}
d2d7b5b34e08942433158e0f6db41474
  $tcTypeRenderOptions2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TypeRenderOptions"#) -}
3d20c0025dd842a2b9fe59d2deb3e330
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.PureScript.Pretty.Types.$trModule3
                   Language.PureScript.Pretty.Types.$trModule1) -}
c395300656e8f9c56210f9c195688441
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$trModule2) -}
97c27d407958d8cccef32e77f4935bb7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Language.PureScript.Pretty.Types"#) -}
499f32c4b1dc9805f1fd1c0d121f2651
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.PureScript.Pretty.Types.$trModule4) -}
6fc50e4142bbe8a6fa7ac304998f5c5a
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("purescript-0.12.2-1jEEKvd7Qrz8R80uEP8O5F"#) -}
d1526da8906e8df0133edbfcb4333f00
  $wmatchTypeAtom ::
    GHC.Types.Bool
    -> GHC.Types.Bool
    -> Control.PatternArrows.Pattern
         ()
         Language.PureScript.Pretty.Types.PrettyPrintType
         Text.PrettyPrint.Boxes.Box
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
be5b96ca6a27eb1cc6a617fe5eeb0be5
  type PrettyPrintConstraint =
    (Language.PureScript.Names.Qualified
       (Language.PureScript.Names.ProperName
          'Language.PureScript.Names.ClassName),
     [Language.PureScript.Pretty.Types.PrettyPrintType])
be5b96ca6a27eb1cc6a617fe5eeb0be5
  data PrettyPrintType
    = PPTUnknown GHC.Types.Int
    | PPTypeVar Data.Text.Internal.Text
    | PPTypeLevelString Language.PureScript.PSString.PSString
    | PPTypeWildcard (GHC.Base.Maybe Data.Text.Internal.Text)
    | PPTypeConstructor (Language.PureScript.Names.Qualified
                           (Language.PureScript.Names.ProperName
                              'Language.PureScript.Names.TypeName))
    | PPTypeOp (Language.PureScript.Names.Qualified
                  (Language.PureScript.Names.OpName
                     'Language.PureScript.Names.TypeOpName))
    | PPSkolem Data.Text.Internal.Text GHC.Types.Int
    | PPTypeApp Language.PureScript.Pretty.Types.PrettyPrintType
                Language.PureScript.Pretty.Types.PrettyPrintType
    | PPConstrainedType Language.PureScript.Pretty.Types.PrettyPrintConstraint
                        Language.PureScript.Pretty.Types.PrettyPrintType
    | PPKindedType Language.PureScript.Pretty.Types.PrettyPrintType
                   (Language.PureScript.Kinds.Kind ())
    | PPBinaryNoParensType Language.PureScript.Pretty.Types.PrettyPrintType
                           Language.PureScript.Pretty.Types.PrettyPrintType
                           Language.PureScript.Pretty.Types.PrettyPrintType
    | PPParensInType Language.PureScript.Pretty.Types.PrettyPrintType
    | PPForAll [Data.Text.Internal.Text]
               Language.PureScript.Pretty.Types.PrettyPrintType
    | PPFunction Language.PureScript.Pretty.Types.PrettyPrintType
                 Language.PureScript.Pretty.Types.PrettyPrintType
    | PPRecord Language.PureScript.Pretty.Types.PrettyPrintType
    | PPRCons Language.PureScript.Label.Label
              Language.PureScript.Pretty.Types.PrettyPrintType
              Language.PureScript.Pretty.Types.PrettyPrintType
    | PPREmpty
ab0a87b3f794de450b30c0a90ebdbe1f
  data TypeRenderOptions
    = TypeRenderOptions {troSuggesting :: GHC.Types.Bool,
                         troUnicode :: GHC.Types.Bool}
bb96aac0adb034b415969311e7320844
  convertPrettyPrintType ::
    Language.PureScript.Types.Type a
    -> Language.PureScript.Pretty.Types.PrettyPrintType
  {- Arity: 1, Strictness: <S,1*U> -}
10519d1cd38e3f5b90fc6f18557c9534
  defaultOptions ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Pretty.Types.TypeRenderOptions
                   GHC.Types.False
                   GHC.Types.False) -}
4df0e166519d8e5b8814d1828bc2a793
  matchType ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> Control.PatternArrows.Pattern
         ()
         Language.PureScript.Pretty.Types.PrettyPrintType
         Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,U(U,U)> -}
11a28b259161844f1d8d17a50499925b
  prettyPrintLabel ::
    Language.PureScript.Label.Label -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (ds3 :: Language.PureScript.Label.Label) ->
                 case Language.PureScript.PSString.decodeString
                        ds3 `cast` (Language.PureScript.Label.N:Label[0]) of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.PSString.prettyPrintString
                        ds3 `cast` (Language.PureScript.Label.N:Label[0])
                   GHC.Base.Just s'
                   -> case s' of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                      case Language.PureScript.Parser.Lexer.$wisUnquotedKey
                             ww1
                             ww2
                             ww3 of wild1 {
                        GHC.Types.False
                        -> Language.PureScript.PSString.prettyPrintString
                             ds3 `cast` (Language.PureScript.Label.N:Label[0])
                        GHC.Types.True -> ww } } }) -}
48b27f3dfeaf5bea7d1c877cf0c7928f
  prettyPrintObjectKey ::
    Language.PureScript.PSString.PSString -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.PureScript.Pretty.Types.prettyPrintLabel
                  `cast`
                (Language.PureScript.Label.N:Label[0]
                 ->_R <Data.Text.Internal.Text>_R) -}
2b663fbe04570ace58c8178741418288
  prettyPrintRow ::
    Language.PureScript.Pretty.Types.PrettyPrintType -> GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case Language.PureScript.Pretty.Types.prettyPrintRow_g
                        x of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                 Data.OldList.unlines
                   (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) }) -}
76842e8a117168455f375ce5e70ae0e3
  prettyPrintRow1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ')'#) -}
e931edd4cec2bf8a2dce0b5a8576f129
  prettyPrintRow2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '('#) -}
3a3a947eca23a3d0aa2ac40f1b55b963
  prettyPrintRowWith ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> GHC.Types.Char
    -> GHC.Types.Char
    -> Language.PureScript.Pretty.Types.PrettyPrintType
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 3, Strictness: <L,1*U(A,1*U)><L,U><L,U> -}
5374b8e25c67c5574aa491db022dd260
  prettyPrintRow_g ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.prettyPrintRowWith
                   Language.PureScript.Pretty.Types.defaultOptions
                   Language.PureScript.Pretty.Types.prettyPrintRow2
                   Language.PureScript.Pretty.Types.prettyPrintRow1) -}
b026e64af955b0ed374a3afe7835614b
  prettyPrintSuggestedType ::
    Language.PureScript.Types.Type a -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintSuggestedType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
65e36dc70e75b4d397d19dc6d66bb007
  prettyPrintSuggestedType_d :: Text.PrettyPrint.Boxes.Box
  {- Strictness: x -}
887f8150891a62f566fbc21a7a09580a
  prettyPrintSuggestedType_p ::
    Control.PatternArrows.Pattern
      ()
      Language.PureScript.Pretty.Types.PrettyPrintType
      Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.matchType
                   Language.PureScript.Pretty.Types.suggestingOptions) -}
8c85e68e61e192deeac8b6a436f4802e
  prettyPrintType ::
    Language.PureScript.Types.Type a -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
3b838937080d8b088e45658ebe89c533
  prettyPrintTypeAtom ::
    Language.PureScript.Types.Type a -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeAtom_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintTypeAtom_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
123c651c61ade8482f28c5c0ea231ad3
  prettyPrintTypeAtom_d :: Text.PrettyPrint.Boxes.Box
  {- Strictness: x -}
4b1a256cf941df9211841ccbb5200528
  prettyPrintTypeAtom_p ::
    Control.PatternArrows.Pattern
      ()
      Language.PureScript.Pretty.Types.PrettyPrintType
      Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.$wmatchTypeAtom
                   GHC.Types.False
                   GHC.Types.False) -}
f466b66a099fc0f20ff2c59e7d8098b7
  prettyPrintTypeWithUnicode ::
    Language.PureScript.Types.Type a -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> case Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                      ret_ty GHC.Base.String
                      of {}
                   GHC.Base.Just x1
                   -> case x1 of wild1 { (,) a1 ds3 ->
                      case a1 of ww { Text.PrettyPrint.Boxes.Box ww1 ww2 ww3 ->
                      Data.OldList.unlines
                        (Text.PrettyPrint.Boxes.$wrenderBox ww1 ww2 ww3) } } }) -}
22a5ebfe55e8dd1ff2893fb3c2efc379
  prettyPrintTypeWithUnicode1 ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Pretty.Types.TypeRenderOptions
                   GHC.Types.False
                   GHC.Types.True) -}
71a0960068ecb44fd4036d9b6af7407b
  prettyPrintTypeWithUnicode_p ::
    Control.PatternArrows.Pattern
      ()
      Language.PureScript.Pretty.Types.PrettyPrintType
      Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.matchType
                   Language.PureScript.Pretty.Types.prettyPrintTypeWithUnicode1) -}
bebe1eb74c61ed6ed8ac9835c8253c62
  prettyPrintType_p ::
    Control.PatternArrows.Pattern
      ()
      Language.PureScript.Pretty.Types.PrettyPrintType
      Text.PrettyPrint.Boxes.Box
  {- Unfolding: (Language.PureScript.Pretty.Types.matchType
                   Language.PureScript.Pretty.Types.defaultOptions) -}
3c3ed20a32fa1f11ed03131a8d8774bd
  suggestedTypeAsBox ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintSuggestedType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         x)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
1de324b236bf0d3b035abc3e778c50fe
  suggestingOptions ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Language.PureScript.Pretty.Types.TypeRenderOptions
                   GHC.Types.True
                   GHC.Types.False) -}
ab0a87b3f794de450b30c0a90ebdbe1f
  troSuggesting ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> GHC.Types.Bool
  RecSel Left Language.PureScript.Pretty.Types.TypeRenderOptions
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds3 :: Language.PureScript.Pretty.Types.TypeRenderOptions) ->
                 case ds3 of wild { Language.PureScript.Pretty.Types.TypeRenderOptions ds4 ds5 ->
                 ds4 }) -}
ab0a87b3f794de450b30c0a90ebdbe1f
  troUnicode ::
    Language.PureScript.Pretty.Types.TypeRenderOptions
    -> GHC.Types.Bool
  RecSel Left Language.PureScript.Pretty.Types.TypeRenderOptions
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds3 :: Language.PureScript.Pretty.Types.TypeRenderOptions) ->
                 case ds3 of wild { Language.PureScript.Pretty.Types.TypeRenderOptions ds4 ds5 ->
                 ds5 }) -}
d61ced402e15c08e6ec6600aad86f871
  typeAsBox ::
    Language.PureScript.Types.Type a -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
a066a805677918bf4d00bd93e31faaaf
  typeAsBox' ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintType_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         x)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintSuggestedType_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
af4f19fe8aa5ece789b8debdcbf4054f
  typeAtomAsBox ::
    Language.PureScript.Types.Type a -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x :: Language.PureScript.Types.Type a) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeAtom_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         (Language.PureScript.Pretty.Types.convertPrettyPrintType @ a x))
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintTypeAtom_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
7ee565d9e013fe38f3deecd81752194c
  typeAtomAsBox' ::
    Language.PureScript.Pretty.Types.PrettyPrintType
    -> Text.PrettyPrint.Boxes.Box
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Language.PureScript.Pretty.Types.PrettyPrintType) ->
                 case (Language.PureScript.Pretty.Types.prettyPrintTypeAtom_p
                         `cast`
                       (Control.PatternArrows.N:Pattern[0]
                            <()>_N <Language.PureScript.Pretty.Types.PrettyPrintType>_N <Text.PrettyPrint.Boxes.Box>_N ; Control.Arrow.N:Kleisli[0]
                                                                                                                             <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                ()
                                                                                                                                GHC.Base.Maybe>_R
                                                                                                                             <Language.PureScript.Pretty.Types.PrettyPrintType>_R
                                                                                                                             <Text.PrettyPrint.Boxes.Box>_N)
                         x)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <()>_N <GHC.Base.Maybe>_R <Text.PrettyPrint.Boxes.Box>_N)
                        GHC.Tuple.() of wild {
                   GHC.Base.Nothing
                   -> Language.PureScript.Pretty.Types.prettyPrintTypeAtom_d
                   GHC.Base.Just x1 -> case x1 of wild1 { (,) a1 ds3 -> a1 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

